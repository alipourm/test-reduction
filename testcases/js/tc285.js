tryItOut("export *;__noSuchMethod__ = [], prototype =  /x/ ;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(let __proto__(new (('haha'.split).apply).call()) in __count__-=<x><y/></x>) {undefined;{gc()var __iterator__ = @foo; } }");
tryItOut("for(let y in [5,6,7,8]) /*infloop*/for(const __parent__ = <x><y/></x>; true;  '' ) {(0); }");
tryItOut("with({__proto__: (<x><y/></x>)()}){(<><x><y/></x></>);let setter, __proto__; }");
tryItOut(" /x/g ");
tryItOut("/*for..in*/for(var prototype =  in ~1.3.yoyo(*) || prototype = (window);) /*infloop*/for(let delete = eval(\"(__proto__);\",  /x/g )\f; <><x><y/></x></>.__lookupGetter__(\"__parent__\"); ) /*for..in*//* nogeckoex bug 349964 */ for  each(__parent__ in *) {let prototype, prop = window; }");
tryItOut("{{yield; }return [z1]; }");
tryItOut("let([__proto__, ({ __parent__: ({ __parent__: prop }) }), , ({ __count__: [, ] }), ], prop) { for(let y in []);");
tryItOut("let prototype = prop, __noSuchMethod__;");
tryItOut("{if(<><x><y\t/></x></>) {yield [,]; } else  if (*::* ?  ''  : constructor) var __count__; else {return; }gc() }");
tryItOut("/*for..in*/M:for(__parent__ in (((new Function(\"/*infloop*/for(yield {export __parent__; }; eval(\\\";\\\", <x><y/></x>); false) {__noSuchMethod__; }\")))(__parent__.prototype getter= window || __parent__ % - '' )))return false.throw(this);");
tryItOut("let prototype;export *;");
tryItOut("do while((/*\n*/#3={a:#3#}) && 0){;break ; } while(((((/a/gi)(<><x><y/></x></>) for each (x::prop in __noSuchMethod__) for (__proto__ in @foo))) <<= yield *::*) && 0);");
tryItOut("/*infloop*/for(var __noSuchMethod__; (__proto__ = <><x><y/></x></>) |  '' ; prototype(@foo, true)\f) /*infloop*/for(var __proto__ = false; <><x><y/></x></>; <x><y/></x>) {; }");
tryItOut("return function(id) { return id }; const __parent__;");
tryItOut("/*infloop*/for(([<x/>]); constructor; new RegExp()) /*infloop*/for(const __iterator__; true;  /x/ ) continue ;");
tryItOut("let (__parent__, prop = ({ prototype: __count__ }) = ({ set __iterator__(__proto__) { constructor = 4., __iterator__; } \t })) { /*infloop*/M:do {(({a1:1}));export constructor; } while(new Exception(function ([y]) { },  '' )); }");
tryItOut("/*infloop*/for((); this.zzz.zzz; (<x><y/></x> .. <x><y/></x>\n)) if( '' ) { if (@foo) export *; else {(__parent__); }}");
tryItOut("/*for..in*/for(var prop = *::* in (function ([y]) { })().__lookupGetter__(\"prototype\")) ;");
tryItOut("yield;");
tryItOut("L:if(({a2:z2})) let throw <x><y/></x>; = true, prop = null; else  if (<y><z/></y>) {yield  /x/g ;const prop = 4.; }");
tryItOut("M:if((new (1e81)(<x><y/></x>))) {( { yield [<x><y/></x>] } ).__defineSetter__ }");
tryItOut("var __proto__ = <x><y/></x>;");
tryItOut("( '' );gc()");
tryItOut("throw __proto__;");
tryItOut("throw StopIteration;/*infloop*/M:for([1,,]; prototype; false) export prototype;");
tryItOut("/*infloop*/for(let constructor = <x><y/></x>.*; __count__.prototype = arguments; new (*::*)(<y><z/></y>, <x><y/></x>)) {gc()continue L; } const __iterator__;");
tryItOut("yield window;");
tryItOut("/*infloop*/while(function  __noSuchMethod__ (__proto__) { yield null } ( '' , <x><y/></x>)){continue ; }");
tryItOut("M:if(RangeError(<>*::*</>.(((true ^= <y><z/></y>).hasOwnProperty(\"__parent__\") in [* << \tconstructor])), ((null &=  \"\" ).valueOf(\"number\")))) yield;(#3={a:#3#}).__defineSetter__ else {return; }\n");
tryItOut("try { return new Date(*); } catch(prototype) { L\f: true; }  = prop;");
tryItOut("/*infloop*/L:for(var __parent__: <x><y/></x> = new (window)(*::*); *; constructor.__proto__ = *) export *;");
tryItOut("try { var __proto__ = __count__, __proto__; } finally { return; } ");
tryItOut("with(<><ccc:ddd><ccc:ddd><ccc:ddd></ccc:ddd></ccc:ddd></ccc:ddd></>)yield;");
tryItOut("L:switch(void [,]) { case 9: break; default: break;  }");
tryItOut("/*infloop*/for(__proto__; (<><x><y/></x></> >= *::*); ) {throw 3.141592653589793;{} }");
tryItOut("/*for..in*/for(var [__parent__, __parent__] = ( for (0x99\n in __parent__.__proto__ = prop) if ()) in __iterator__.propertyIsEnumerable(\"__noSuchMethod__\")) {/*infloop*/for(__parent__ = undefined; <><x><y/></x></>; <><x><y/></x></>) {export __proto__; }return; }");
tryItOut("{throw <y><z/></y>; }");
tryItOut("if(false) {prop = 033;yield; } else  if ((<y><z/></y>)[@foo].__defineSetter__(\"__proto__\", /a/gi)) <y><z/></y>; else {export prototype;; }/*for..in*/for(var prop in this) var __parent__ = <><x><y/></x></>;");
tryItOut("if(this.zzz.zzz) M:if(![prop].map(( /x/ ).__defineSetter__)) { if (<x><y/></x> & [[1]]) const __parent__ =  '' , __proto__ = *::*;\n\nprop = 1e4;} else let prop;");
tryItOut("if((new Function).watch(\"__iterator__\", )) { if ((yield (yield arguments)\t)) {({}).hasOwnPropertybreak L; }} else M:switch((([[1]])[[1,,]])) { <x/> }");
tryItOut("if( \"\" ) { if () continue ;} else continue ;\twith(false)return;");
tryItOut("/*for..in*/for(const [__parent__,  /* Comment */undefined] = 'fafafa'.replace(/a/g, 'haha'.split) in (new Function(\"yield <x><y/></x>;\"))) { }//h\n");
tryItOut("/*infloop*/M:while(__proto__ = ({__count__ getter: new Function, prototype getter: new Function })){/*for..in*/for([prop, __parent__] = (<y><z/></y> if ({})) in  '' ) /*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in *) {yield <><x><y/></x></>;Math.sin }let constructor; }");
tryItOut("L: {function(q) { return q; } }");
tryItOut("if((__parent__.__noSuchMethod__)) { if () gc()} else export constructor;");
tryItOut("L:if(__proto__.constructor+=(this !=  '' ).eval(window >>=  /x/ )) {export __noSuchMethod__; }\f");
tryItOut("__iterator__ = prototype;");
tryItOut("/*for..in*/for(var prop = [<x><y/></x> if (false)] in (prop['__proto__']%=1e-81.constructor = *)) {return;/*for..in*/for(const __count__ in 0x99) export constructor; }");
tryItOut("if(\t__iterator__ = __proto__ = null) { if ((yield RangeError( '' , __iterator__)).valueOf(\"number\")()) if(null) {return;yield (function ([y]) { })(); }} else /*infloop*/for(<x/> ? <x/> : @foo.yoyo(null); function (__iterator__, constructor)<x><y/></x>; [<x><y/></x>].sort(0)) {yield <><x><y/></x>\f</>;break L; }\t");
tryItOut("/*for..in*/L:for(let __count__ = eval(\" \\\"\\\"  >>= prop\", (( \"\"  for each (prop in .2)))).throw(new Object(prototype = *::*,  /x/g )) in window.__noSuchMethod__ = <y><z/></y>) {export *;(({})).__defineSetter__ }");
tryItOut("{}");
tryItOut("L:do {gc() } while((true.__lookupSetter__(\"prop\")) && 0);");
tryItOut("{/*infloop*/for(var prototype = <y><z/></y>; <\f><x><y/></x></>; __noSuchMethod__) {(true);export *; }export *; }");
tryItOut("( \"\" );do continue ; while(((-0)) && 0);");
tryItOut("{if(this >= null) let __proto__, prop\n(undefined); else  if ( \"\" .__lookupSetter__(\"__noSuchMethod__\")) /*for..in*/L:for([prop, prototype] = <><x><y/></x></> in <x><y/></x>) gc() else {yield; } }");
tryItOut("return;");
tryItOut("with({__proto__: <x><y/></x>})export *;");
tryItOut("{return 1e-81;/*for..in*//* nogeckoex bug 349964 */ for  each(let prototype in <y><z/></y>) {export *;return <y><z/></y>; } }");
tryItOut("switch((new (constructor.eval((<><x><y/></x></>)[<x><y/></x>]))())) { default: case Array(eval.eval(__parent__)): break; /*for..in*/for(let [prop, prop] = <y><z/></y> in null) return;break; break; __proto__/*infloop*/do \treturn; while(window.unwatch(\"prop\")); }");
tryItOut("let (__parent__) { /*infloop*/do {{} } while('fafafa'.replace(/a/g, this) ? <><x>\t<y/></x></> : #3={a:#3#}); }");
tryItOut("/*infloop*/L:do (<><x><y/></x></>); while(<x/>); const __noSuchMethod__;");
tryItOut("<xxx>{__proto__}</xxx>");
tryItOut("/*infloop*/L:for(@foo; new (({}).__lookupGetter__)(); (__noSuchMethod__.prototype getter= ({}).hasOwnProperty)) *::*;");
tryItOut("with(5.0000000000000000000000)/*infloop*/for(var prop = window.__lookupGetter__(\"__parent__\"); ({ get prop __parent__ (function::constructor, default: break; break; (__noSuchMethod__).__defineSetter__break; ) { return <x/> } , x::prop: <y><z/></y> }); prop.prototype = this) {}");
tryItOut("/*infloop*/for(let __noSuchMethod__; function ([y]) { } !== __count__; (function  __count__ (constructor, prototype) { return window } )) ");
tryItOut("return;");
tryItOut("{yield (function ([y]) { })();switch(1e81) { case .2: gc()break; break;  } }");
tryItOut("__noSuchMethod__ = -0.prop.__iterator__ + __noSuchMethod__ = constructor = <x/>\n, (((<><x><y/></x></>)[<x><y/></x>]).isPrototypeOf(__iterator__.(new window)))");
tryItOut("while((<><x><y/></x></>) && 0){{}throw <y><z/></y>; }yield;\n\t*\ncontinue M;\n");
tryItOut("/*infloop*/M:do export constructor; while(<x/>);");
tryItOut("yield *::*;\n/*infloop*/for(var function::constructor; 5.0000000000000000000000; null) const __proto__;\n");
tryItOut("(__noSuchMethod__)\n(<x/>).watch");
tryItOut("/*for..in*/for(prop in __count__) var prop = constructor, constructor = __proto__");
tryItOut("");
tryItOut("L:if(033.__noSuchMethod__ = (function ([y]) { })()) {continue ;(3.141592653589793); } else  if (__iterator__ = prototype) {yield 1.3;export constructor; } else {(<x><y/></x>);break ; }");
tryItOut("/*for..in*/L:for(let __parent__ in @foo) ;");
tryItOut("if((__noSuchMethod__ = [11,12,13,14].map)((<><x><y/></x></> ^= <><x><y/></x></>).eval(-3/0.unwatch(\"prop\"))) = (p={}, (p.z = ([1.3]))())) /*infloop*/for(let prototype; __parent__.(__count__); (0.1 >> <><x><y/></x></>)) var __iterator__;");
tryItOut("(this)\nconstructor");
tryItOut("/*for..in*/for(let [constructor, __count__] = <x><y/></x>.watch(\"prop\", [1,2,3,4].slice).yoyo(<x><y/><\t/x>.propertyIsEnumerable(\"prop\")) in [,,]) return;");
tryItOut("/*infloop*/while\r(<y><z/></y> &= @foo)(<x><y/></x>);");
tryItOut("with({}) { this.zzz.zzz; } ");
tryItOut("/*infloop*/do var __iterator__; while((__parent__.__count__-=<><x><y/></x></>.unwatch(\"__parent__\")));");
tryItOut("M:if(((uneval( /x/ )))) {({a1:1});let __iterator__ = window, __count__ = -3/0; } else  if (__parent__ = (window != <x><y/></x>)) /*infloop*/while(__proto__ = 1.2e3)");
tryItOut("/*infloop*/do let prop, prototype; while( \"\" );");
tryItOut("/*infloop*/do throw 1e-81; while(window);");
tryItOut("switch(<x/>) { default:  }");
tryItOut("if((p={}, (p.z = <x><y/></x>.(prop))())) {null; { ; }  } else  if (this.zzz.zzz) {export *;; }");
tryItOut("throw function::__iterator__;");
tryItOut("with({}) (1 for (x in []))");
tryItOut("switch(({__noSuchMethod__: undefined})) { default: case 1: this }\nif(-3/0.yoyo(window).yoyo(prototype).hasOwnProperty(\"__parent__\")) new (#3={a:#3#})(<><x><y/></x></> && )");
tryItOut("do /*for..in*/for(__count__ = window in window) function(y) { yield y; return;; yield y; } while((('fafafa'.replace(/a/g,  /x/g [[[1]]]))) && 0);");
tryItOut("L:with(0x99)Math.sin");
tryItOut("with({}) /a/gi");
tryItOut("/*for..in*/for(let ( /x/ .__iterator__) in ((function  prototype () { throw  '' ; } )((eval(\"var __iterator__ = <x><y/></x>;\",  \"\" ))))){yield constructor; }");
tryItOut("break L\n");
tryItOut("L: {(<x><y/></x>);let prototype, __parent__; }\nif(#1#) {yield;( /x/g ).apply } else yield this;\n");
tryItOut("yield <y><z/></y>; const __proto__\n");
tryItOut("let (__parent__, ({ prototype: ({ prop: __proto__ }) }) = *::*) { /*for..in*/for(__iterator__ in (((1 for (x in [])))(constructor =  \"\" ))){yield <x><y/></x>; } }");
tryItOut("/*for..in*/for(const [__proto__, __parent__] = (this.__defineSetter__(\"__count__\", window)) <<= (null ^= <y><z/></y>).__defineSetter__(\"__proto__\", Function) in eval(\"{}\", [11,12,13,14].filter)) {throw <y><z/></y> }");
tryItOut("let (prop) { /*for..in*/for(var __iterator__ = 1e+81 in *) { } }");
tryItOut("/*infloop*/do {} while((uneval((prototype, __proto__))));");
tryItOut("M:with({__noSuchMethod__:  \"\" .__parent__ = null}){/*for..in*/for(let [__count__, __parent__ getter: gc] = <y><z/></y> in prototype) gcbreak ; }");
tryItOut("with({}) __parent__ = __proto__;");
tryItOut("M:if(0.1) {} else {gc()let constructor; }");
tryItOut("export \t*;\n3.141592653589793;\nMath.pow");
tryItOut("prop = prop;");
tryItOut("/*infloop*/while(String(1e4.unwatch(\"__noSuchMethod__\"))){({ __proto__: ({ prop: constructor, __proto__: prop }) }) } const __noSuchMethod__;");
tryItOut("var constructor, __noSuchMethod__\nM:if(function (__parent__) { return  \"\"  } (true)) {{}let __iterator__ = function::__count__, __parent__ = 3.141592653589793; } else {gc()__proto__ = this, x::constructor; } const prototype;");
tryItOut("{}");
tryItOut("/*infloop*/M:for(const constructor; __parent__ = [15,16,17,18].filter(function  __parent__ () { yield prototype.__noSuchMethod__ getter= Math.sin } , * && __parent__); (<x/>.*.__parent__)) {{const __parent__ = *::*, __iterator__;{}<y><z/></y>; }with(<x><y/></x>){return;const constructor; } }");
tryItOut("/*infloop*/for(var __parent__ = eval(\"var prop = 033;\", <x>\n<y/></x>); <y><z/></y>; <x/>) return export *;");
tryItOut("M:if(0)  else  if ((__proto__.(prototype))) export function::__noSuchMethod__; else {return true; }");
tryItOut("function () { return this } yield prototype = *;");
tryItOut("/*infloop*/for(prop; .2; __count__.__proto__ = __parent__.(false).__count__) var prototype =  /x/ , __iterator__ = __noSuchMethod__;");
tryItOut("/*infloop*/for(const prototype; 'fafafa'.replace(/a/g, (eval).call); \n[1]) export prop;");
tryItOut("/*infloop*/\fdo {return; } while(<x><y/></x>)\nexport prototype;");
tryItOut("if((null.valueOf(\"number\"))) {yield <><x><y/></x></>;yield prop; } else {const __count__ = 1e81; }");
tryItOut("let (__noSuchMethod__ = Array((this.__defineSetter__(\"prototype\", /a/gi)), (<x><y/></x>.*))) { while((null) && 0){export *; } }");
tryItOut("if(([,,].prototype = window--)) /*infloop*/M:for(<x/>; <x><y/></x>; this) {let __iterator__;<x/>; } else {throw undefined; }");
tryItOut("return (this['prototype']-=*::* ? undefined : this).throw(((uneval((-- '' )))));");
tryItOut("\n");
tryItOut("/*for..in*/for(let __noSuchMethod__ = (yield function::__count__ = [], prototype .@ true) in eval(\"new ((({__parent__: arguments }) .@*:: (undefined for (__parent__ in __parent__))).__defineSetter__)()\", [15,16,17,18].sort(([[[1]] if (arguments)]).apply, [11,12,13,14].map))) {yield;/*infloop*/for(((uneval(__parent__)));  /x/ .unwatch(\"prop\"); ((<x><y/></x>.isPrototypeOf(this)).watch(\"__count__\", 'haha'.split).__defineSetter__(\"__proto__\", gc))) break ; }");
tryItOut("/*infloop*/do {var __noSuchMethod__; } while((({ __count__: __iterator__ }) = new (1 for (x in []))(<><x><y/></x></>, .2)));");
tryItOut("L:if((this.__defineSetter__(\"constructor\", (prop).watch)))  else case 0: break; case 2: let (({ __proto__: ({ __noSuchMethod__: constructor }), __iterator__: ({ __iterator__: ({ __iterator__: __noSuchMethod__ }), constructor: ({ prop: __count__, __parent__: [] }) }) }) = (let ([, __count__, ], prop = <><x><y/></x></>) @foo ^ <x><y/></x>), ({ constructor: ({ constructor: ({ constructor: __parent__, prototype: __noSuchMethod__ }) }) }) = (__proto__ = (((void true))()))) { prototype = {}; }default: {}\n\r{}\nbreak; case [11,12,13,14].map: if( /x/g  <= [[1]]) {gc() } else  if ([z1,,].__lookupGetter__(\"prop\")) {gc() }");
tryItOut("throw StopIteration;if(<x/>) ( '' ); else  if (window) ");
tryItOut("{[1,,]; }");
tryItOut("with({}) { return undefined >>> <x/>; } ");
tryItOut("with({}) function(y) { yield y; let prototype = null;; yield y; }");
tryItOut("M:switch(((p={}, (p.z =  /x/g )()))) { default: break; case ({prototype: *::* }): var __count__ = ({a2:z2}), constructor =  /x/ ;break; break; return {};break; case prototype: function ([y]) { }case 7: do  while((__iterator__) && 0);break;  }");
tryItOut("export *");
tryItOut("{{do {yield <x/>;gc() } while((([[]] & <x><y/></x>)) && 0);with({__parent__: })return 4.; }{}\n { yield Function(yield 3.141592653589793) %= ({__noSuchMethod__:  /x/ }) }  }");
tryItOut("{yield new String(); }");
tryItOut("; const __iterator__;");
tryItOut("/*infloop*/M:for(({ __parent__: function ()\f {  } , __parent__: __count__ }) = (prototype.watch(\"__iterator__\", <x><y/></x>)); (new (({}).__lookupGetter__)( \"\" , true)); ({constructor: __noSuchMethod__})) {export *; }");
tryItOut("for(let y in [5,6,7,8]) return;");
tryItOut("with({}) { constructor = __parent__; } ");
tryItOut("if((([1,2,3,4].map).call(true, 3/0, <><x><y/></x></>)).__defineGetter__(\"prop\", ({ prototype: ({ prop: ({ __count__: __noSuchMethod__ }) }) }\f))) { if (((yield <x><y/></x>))['__parent__'] = 1e+81) L:if(__noSuchMethod__.(eval(\"yield 1e4;\", <y><z/></y>))) {export __iterator__;export __parent__; } else  if (( .(1.3.valueOf(\"number\")))) {export __noSuchMethod__; }} else if(<y><z/></y> ? (-1.unwatch(\"__parent__\")) : (this.__defineSetter__(\"__noSuchMethod__\", function(q) { return q; }))) { if ((uneval( /x/ ))) {{window; }export *; } else {if(({}.__count__ = -0)) return <><x><y/></x></>; else  if ((__parent__.__lookupSetter__(\"__iterator__\"))) {(__count__ = <y><z/></y>).applythrow <x><y/></x>; } else {let prototype; } }}\r");
tryItOut("L: {return __parent__; }");
tryItOut("/*infloop*/L:do {let(__iterator__ = (-1)) { export __parent__; } while(__iterator__ = ({__noSuchMethod__ getter: false.eval(<x><y/></x>), prototype: ({ __parent__: prototype }) = ({ prop: prototype }) }));");
tryItOut("if(([11,12,13,14].some)) prop = this, undefined; else {break ; }");
tryItOut("do <><x><y/></x></>; while((<><x><y/></x></>) && 0); const prop;");
tryItOut("this.zzz.zzz;");
tryItOut("/*infloop*/M:for(this; <><x><y/></x></>; <y><z/></y>) {gc()throw  /x/ ; }");
tryItOut("return window;");
tryItOut("L:with(<x/>){var __noSuchMethod__ = <y><z/></y>, constructor; }/*infloop*/do default: if(<y><z/></y>) {return;({}).__lookupGetter__ } else {(<><x><y/></x></>);constructor }(<x><y/></x>).__defineSetter__case (p={}, (p.z = false)()): break; __count__break; case constructor-={}: break;  while(<><x><y/></x></>.__defineSetter__(\"__parent__\", gc));");
tryItOut("export __iterator__;");
tryItOut("if(( /* Comment */<x/>)) { if (1e+81) throw #1=[#1#]; else yield;}");
tryItOut("if(<><><ccc:ddd><ccc:ddd><ccc:ddd>\f</ccc:ddd></ccc:ddd></ccc:ddd></></>) {gc()throw false; } else {(<x/>. [<><x><y/></x></>] %= new String(<x><y/></x>)  watchyield <x/>; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let __parent__ in __proto__-=(function ([y]) { })()) { }");
tryItOut("with({}) { let(__count__ = (new this >= *::*())) { __noSuchMethod__ = __noSuchMethod__; } ");
tryItOut("L:if(({prop: this.__defineGetter__(\"__noSuchMethod__\", Function) })) L: {var __iterator__, __iterator__;Math.sin } else  if (((<x><y/></x>)[ \"\" ])) {if(__count__ = <x/>) { if (new (eval(\"-1 %= prototype\", ([1,2,3,4].slice)))()) return;;} else switch(undefined) { default: {}break;  }const __parent__; } else /*infloop*/for(__iterator__ = 4.; <x><y/></x>; null) export *\n \"\" ;");
tryItOut("<bbb xmlns:ccc=\"true\"><ccc:eee></ccc:eee></bbb>\tswitch((__parent__ = (__iterator__.__proto__))) { case let (prototype = <x><y/></x>, prop = undefined) <x><y/></x>: break; default: /*infloop*/do {return; } while(<x><y/></x>);break; case 9: ;break;  }");
tryItOut("this.__defineGetter__(\"constructor\", ({}).__lookupGetter__)\n");
tryItOut("{/*infloop*/do {var prop = window;yield <x><y/></x>; } while(window); }");
tryItOut("with({__iterator__: (this.__defineSetter__(\"__parent__\", /a/gi))}){throw <><x><y/></x></>; }");
tryItOut("/*infloop*/for(let __count__; __count__.* <= __parent__ %= @foo; function::constructor.unwatch(\"__iterator__\")) ({}).hasOwnProperty\nyield <><x><y/></x></>; const constructor;\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(constructor in ([new ( \"\" )(<x/>) for each (prop in <x><y/></x>) if (4.)])) if((yield *::*)) ; else  if (<x/>) {{} } else {yield *; }");
tryItOut("for(let y in []);");
tryItOut("L:while((((new Function).call(( '' .@*), window))) && 0){(1 for (x in [])) }");
tryItOut("/*infloop*/L:for(1e81; *::*; true) {(3.141592653589793);let prototype, __count__ = this; }");
tryItOut("yield []");
tryItOut("do if('fafafa'.replace(/a/g, Math.sin)) {const prototype; } else  if (this ? *::* : @foo) {yield [1,,]; } while(((( /* Comment */__count__ = 3).yoyo(undefined.eval(<>\t<x><y/></x></>)))) && 0);");
tryItOut("/*infloop*/for(var ({ __parent__: [], prototype: prop }) = @foo; (this.__defineGetter__(\"__parent__\", function  prop (__parent__, ))); new <y><z/></y>) {(this);window; }");
tryItOut("with(this.__defineGetter__(\"constructor\", ({}).__lookupGetter__))if( \"\" ) {const __iterator__ = @foo;__iterator__ = <x><y/></x>, prototype; } else (null);");
tryItOut("__noSuchMethod__;");
tryItOut("/*infloop*/M:for(new new <x><y\t/></x>()\n; (\n(<x><y/></x>.(null)) in window ? this : <x><y/></x>).@*; (new Function)().eval((([1,2,3,4].slice)(__proto__.__iterator__ = function::__count__)))\n) {return; }");
tryItOut("yield new -3/0();");
tryItOut("with({constructor: Boolean(this, #1=[#1#])})break ;");
tryItOut("/*infloop*/for(var [] = new (function  __proto__ () { return \f /* Comment */(3.141592653589793 ? <y><z/></y>\t : 0) } )(); window ^ <><x><y/></x></>; -3/0) let(__proto__, __parent__ = <><x><y/></x></>) ((function(){export __parent__;})());");
tryItOut("/*infloop*/for(eval(\"<><x><y/></x></>\", <x/>); (@foo.__proto__); new .2.eval(<><x><y/></x></>)()) {if(*::*) { if (undefined) export *; else {throw <y><z/></y>; }} }\n");
tryItOut("/*infloop*/for(__noSuchMethod__; <><x><y/></x></>.@foo &= __iterator__; (yield __proto__-=<x><y/></x>)) export __proto__;");
tryItOut("/*for..in*/for(var __noSuchMethod__ in (((Function).call)( '' )))__proto__;");
tryItOut("if(<x><y/></x>) return;");
tryItOut("if(window.unwatch(\"function::__count__\") .@x:: ({a1:1}).__lookupGetter__(\"__iterator__\")) {yield ( /x/g  for (prop in <><x><y/></x></>)); }");
tryItOut("/*infloop*/for(var __iterator__; window; 4.) export __proto__;");
tryItOut("constructor = __proto__\n");
tryItOut("with({constructor: ((function  constructor (prop, __count__) { yield  \"\"  } ).apply).call( \"\" , ).yoyo((__parent__.valueOf(\"number\")))}){function(q) { return q; }continue ; }");
tryItOut("{export set;continue ; }");
tryItOut("/*for..in*/L:for(var prop = {(null); } in *) yield;");
tryItOut("/*for..in*/for(let [__iterator__, __count__] = (__proto__ = __noSuchMethod__) in [[1]]) {M:if( \"\" ) export prototype; else  if (__iterator__) {var __count__ = <><x><y/></x></>; } }");
tryItOut("this.zzz.zzz;/*infloop*/do {throw <y><z/></y>; } while(function(id) { return id });");
tryItOut("/*infloop*/L:while(null){{gc(); }\n/*infloop*/while(prop)'haha'.split\t }");
tryItOut("let(({ __iterator__: ({ __iterator__: __parent__ }), __iterator__: prop }) = *::* <<= (__count__ =  \"\" ), __iterator__ = <x><y/></x>.@foo) { for(let y in [5,6,7,8]) this.zzz.zzz;");
tryItOut("throw <><x><y/></x></>;");
tryItOut("/*for..in*/for([__proto__, delete] = *::* in <y><z/></y>) {continue ; }");
tryItOut("M:do prop = #3={a:#3#}, constructor = [,,z1]\n while((<><zzz>__count__.__proto__ = this.__defineGetter__(\"__proto__\", function  __proto__ (<x><y/></x>, prop) { return <><x><y/></x></> } )</zzz></>) && 0);");
tryItOut("if(yield) {yield [[1]];Math.sinL:while((<x/>) && 0){export x::constructor;'haha'.split } } else void <y><z/></y>;");
tryItOut("if((constructor = prototype)()) { if (<><x><y/></x></>(*, *::*)) /*infloop*/for(<><zzz>__count__</zzz></>; (yield <><x><y/>\f</x></>); ( \"\" [undefined])) gc() else {{(({}));yield ({a2:z2}); } }}");
tryItOut("{}\nreturn window;\n");
tryItOut("yield; const __noSuchMethod__;");
tryItOut("for(let y in [5,6,7,8]) ;\nreturn\n");
tryItOut("const __parent__\n const __count__;");
tryItOut("L:if(<x/>[__noSuchMethod__]) { if ([] = ({ __iterator__: __noSuchMethod__, __noSuchMethod__: ({ __iterator__: __count__, __noSuchMethod__: __iterator__ }) })) {{}return; } else const prop;} const __noSuchMethod__;");
tryItOut("{((function ([y]) { })());__noSuchMethod__ = __noSuchMethod__, constructor; }");
tryItOut("/*infloop*/while(([new Boolean(this)])){; }");
tryItOut("gc()");
tryItOut("for(let y in [5,6,7,8]) return;");
tryItOut("yield window;");
tryItOut("/*for..in*/M:for(var __noSuchMethod__ in ((eval)(*::*)))(<x/>);");
