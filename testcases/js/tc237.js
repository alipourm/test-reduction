tryItOut("/*for..in*/for(let [constructor, constructor] = __proto__ = __proto__() in @foo.unwatch(\"__iterator__\").prop) {/*infloop*/while(<><x><y/></x></>.__defineGetter__(\"constructor\", 5.0000000000000000000000)){}break ; }");
tryItOut("/*for..in*/for(let __count__ in [({a2:z2})].sort((true).watch)) return prop;");
tryItOut("/*infloop*/M:for(let __parent__; [1,,]--; ([] = constructor)) {var __count__ = <><x><y/></x></>, prop; }");
tryItOut("let (__noSuchMethod__) { (null); }");
tryItOut("/*for..in*/M:for(const \n '' .__count__ in ((function  window (({ prototype: [__count__, ] }), constructor)(0\n))([15,16,17,18].sort((({}).hasOwnProperty).call, (-1)))))return;");
tryItOut("var propexport *;");
tryItOut("/*infloop*/for(__parent__; *::*;  /x/ ) __parent__, prop = 0.1;");
tryItOut("{yield false; }");
tryItOut("/*infloop*/M:for( \"\" ; null; null) {(undefined); }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prototype in window) /*infloop*/L:while(([(-1)].some(Math.sin))){let __count__ = __count__,  { return true } ; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const constructor in [11,12,13,14].sort.*) (<x><y/></x>);");
tryItOut("this;");
tryItOut("");
tryItOut("M:if(\n__iterator__) { if (Number(prop)) continue ;} else (@foo);");
tryItOut("__proto__ = <x><y/></x>;");
tryItOut("{}");
tryItOut("if([,]()) { if ([[]].__iterator__) export __count__; else {}}with({constructor\t: prototype.constructor}){return; }");
tryItOut("return;");
tryItOut("if((<x><y/></x>).call(this, )) \f{ if (Iterator(({a1:1}) ? <><x><y/></x></> : <><x><y/></x></>,  /x/g .prop)) {yield @foo;return; } else {return window; }}");
tryItOut("export *;");
tryItOut("if('fafafa'.replace(/a/g, ((new Function(\"prop, prop = [1];\"))).apply)) {let __proto__ = *, __iterator__; } else {3.141592653589793; }");
tryItOut("export *\n");
tryItOut("with(window.__iterator__){evalconst prop = <><x><y/></x></>; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __proto__ in this) const __iterator__, __noSuchMethod__;");
tryItOut("do {yield <><x><y/></x></>;export prototype; } while((#1=[#1#]) && 0);");
tryItOut("/*infloop*/do {if(__iterator__) {yield 0.1;return *::*; } } while(yield *::* for each (constructor in <x><y/></x>));");
tryItOut("__iterator__ = true;");
tryItOut("/*infloop*/for(var __noSuchMethod__; (<>__proto__%=*</> >> (Boolean())); this.__defineSetter__(\"__parent__\", gc)) throw __noSuchMethod__;");
tryItOut("if(#0=undefined) { if ((<x><y/></x> || [1]++)) default: case 5:  else {let 0x99 =  '' ; }}");
tryItOut("gc()\nL: throw (-1);");
tryItOut("for(let y in [5,6,7,8]) __proto__ = __iterator__;");
tryItOut("__proto__ = this.__defineGetter__(\"__noSuchMethod__\", gc);");
tryItOut("/*for..in*/for(let __noSuchMethod__ in  {  \"\"  } ) if( /x/g ) {__count__ = {};yield __count__;  } else  if (<x><y/></x>) {{}{} } else var * = <x/>, __noSuchMethod__;");
tryItOut("L: {yield window; }");
tryItOut("with(({a1:1}) ? [15,16,17,18].sort(Math.sin, yield null) : true){if((new (this).apply(*, window))) ;/*for..in*/for(constructor = constructor(<><x><y/></x></>, <x><y/></x>).__lookupSetter__(\"__proto__\") in *) {L:if(<y><z/></y>) {return 1.3; } else  if (<x><y/></x>) {yield; } } }");
tryItOut("this.zzz.zzz;");
tryItOut("throw *::*;");
tryItOut("const yield <><x><y/></x></>; = false\nyield;");
tryItOut("let(__count__ = __count__.isPrototypeOf( /x/g )) { for(let y in [5,6,7,8]) gc()");
tryItOut("/*infloop*/for(const ({ __count__: ({ __iterator__: constructor, __count__: __count__ }), __proto__: ({ prototype: ({ __count__: , prototype: [] }), prototype: prop }) }) = new (function::__iterator__.throw(this))(({prototype;const * = <><x><y/></x></>, let =  /x/ ; }.__defineSetter__(\"prototype\", (<y><z/></y>).\f__defineSetter__) ? window : [__noSuchMethod__].some(/a/gi)).__lookupSetter__(\"constructor\")); ([15,16,17,18].sort(<y><z/></y>, x::__count__+=<y><z/></y>)); [*.hasOwnProperty(\"__noSuchMethod__\") for (__count__.__noSuchMethod__ in @foo)]) {\nM:with( '' )let set, __noSuchMethod__;\n }");
tryItOut("/*infloop*/for(__iterator__;  for each (__proto__ in j); <x><y/></x>) {throw undefined; }");
tryItOut("{}\n");
tryItOut("with({}) this.zzz.zzz;");
tryItOut("do {{export null; }var __parent__ = __count__, prop = <x/>; } while(([15,16,17,18].map({*;__parent__; }.__defineSetter__(\"__noSuchMethod__\", new Function), ([@foo = <x/>].map(/a/gi)))) && 0);");
tryItOut("L:while((<x><y/></x>.\n__proto__) && 0)if(1e+81) gc() else {return; }");
tryItOut("yield *;");
tryItOut("{ for each (__iterator__ in <x><y/></x>) for each (constructor in <x/>)continue M; }");
tryItOut("/*for..in*/for(var (prop) in window.__defineGetter__(\"__parent__\", 1.2e3).yoyo(({__parent__: undefined }))) {(__iterator__);export __proto__; }");
tryItOut("/*for..in*/L:for(prototype in ((({}).hasOwnProperty)(*[undefined])))//h\n{(undefined); }");
tryItOut("/*infloop*/while(__noSuchMethod__ = null)with([ /x/  for each (__parent__ in <><x><y/></x></>)])/*infloop*/for(const __iterator__; false; __noSuchMethod__.constructor) {{} }");
tryItOut("if('fafafa'.replace(/a/g, window)) constructor = window, constructor = 1e+81; else  if ((<x/>.__defineSetter__(\"__noSuchMethod__\", ((-0));))) {{} }");
tryItOut("{gc()break ; }");
tryItOut("let (__proto__, __parent__ =  /x/g ) { var __iterator__, prototype; }");
tryItOut("L:if(<><x><y/></x></>) { if (undefined) {prototype, prop = this;export prototype; } else (1e-81);}");
tryItOut("/*for..in*/for(let [__iterator__, __noSuchMethod__] = ([1] != this.@*) in (let (prototype) new Math.sin(<\fx><y/><///h\nx>, <ccc:ddd> </ccc:ddd>))) {continue ; }");
tryItOut("/*infloop*/for(const ({ __noSuchMethod__: ({ __count__: ({ __parent__: function::__count__ }) }), __parent__: ({ __iterator__: [, __count__, __proto__, ], __proto__: ({ __count__: __proto__ }) }) }) = (\nwindow).hasOwnProperty(\"each\"); window instanceof 0.1; (eval(\"return <><x><y/></x></>;\", (new Function(\"let __proto__;\"))))) {yield ({a2:z2}); }");
tryItOut("return 1.2e3;");
tryItOut("/*for..in*/for(const __proto__ in <x><y/></x>) {while((constructor) && 0){export __iterator__; } }");
tryItOut("/*infloop*/for(let prototype; [, ({ __proto__: ({ prototype: __iterator__ }), constructor: ({ __count__, __noSuchMethod__: [] }) }), , ({ __iterator__: [({ __proto__: __iterator__, __count__: __proto__ }), __iterator__, ({ prototype: __parent__, __iterator__: __count__ }), ] })] = __iterator__(new <y><z/></y>(<y><z/></y>)); (__noSuchMethod__ = 3.__proto__ = [,])) {(__count__.__parent__ = (<><x><y/></x></>.__proto__ =  /x/g ));{__iterator__, __proto__; } }");
tryItOut("/*infloop*/x::prop");
tryItOut("if( /x/g ) yield window;");
tryItOut("if(1e81) {return; } else export prop;");
tryItOut("/*for..in*/for(let typeof false['prototype'] in <bbb xmlns=\"<x/>\"><x><y/></x> </bbb> * (<x><y/></x>.__defineGetter__(\"prototype\", gc).throw(eval(\"/*infloop*/do {export *;return 1e+81; } while(<x><y/></x>);\", <x><y/></x>)))) {/*for..in*/for(var __count__ = <y><z/></y> in *) continue ; }");
tryItOut("L:if(this) { if (<><x><y/></x></>) var constructor = [z1,,]; else {function (__parent__) { return this } break ; }}");
tryItOut("/*for..in*/for(const prop = <><x><y/></x></> in <x/>) {export __proto__;return this; }\f");
tryItOut("for(let y in []);");
tryItOut("if(<y><z/></y>) {return [[]]; } else {;{}\t }");
tryItOut("if(__parent__ = <y><z/></y>(+new (([1,2,3,4].map).apply).call(({a2:z2}))\t.__lookupSetter__(\"__proto__\"), (({prop setter: 'haha'.split }))) >>>= '' .__defineGetter__(\"__parent__\", window)) { if (new (__proto__ = <x><y/></x>)((([1,2,3,4].map).call(<><x><y/></x></>, )), <y><z/></y>)) /*for..in*//* nogeckoex bug 349964 */L: for  each(var prototype in  /x/g ) {continue M; }} else /*for..in*/L:for((prop) in (new ((function ([y]) { })())(undefined))) yield this;");
tryItOut("if(()) {prototype;yield []; } else  if (((new (eval).apply\t(((<><x><y/></x></>)[[1,,]].__proto__ = \n__parent__.hasOwnProperty(\"__noSuchMethod__\")), <x/>.constructor = {})) ? (function ([y]) { })() : (yield <x/>))) /*infloop*/for(<><x><y/></x></>; <x>\r<y/></x>; *::*) ;");
tryItOut("/*for..in*/<zzz><y><z/></y></zzz>");
tryItOut("if(constructor+=function(id) { return id } >= true <<= *::*) ({ prop: constructor, __proto__: prototype }) = (\n \"\" ), __parent__ = (+3.141592653589793)");
tryItOut("/*infloop*/for(let ({ prototype: [, prototype] }) = prototype = <><x><y/></x></>.__proto__ = (true)(); (new (1e+81).watch(<x><y/></x>, *))();  /x/ ) throw ; const constructor;");
tryItOut("/*infloop*/do {} while(\n'fafafa'.replace(/a/g, <x><y/></x>).__proto__);");
tryItOut("if(new ((__count__.((1 for (x in [])))).__defineSetter__)((yield window), this)) {; }");
tryItOut("if([#2=<x><y/></x>]) { if (*.hasOwnProperty(\"__iterator__\")) export *;} else {<><x><y/></x></>;gc() }");
tryItOut("M:with(new ((yield; = <y><z/></y>).__defineSetter__)(new (false)(*::*, ).__lookupSetter__(\"function::__proto__\")\f)){/*for..in*/for(prototype =  /x/  in <y><z/></y>) {gc() }<x><y/></x>; }");
tryItOut("yield window;");
tryItOut("L: {export *; }");
tryItOut("/*for..in*/for(const __noSuchMethod__ in [this.__defineGetter__(\"prototype\", (<y><z/></y>).watch)]) {let (__noSuchMethod__, __iterator__) { continue L; } }");
tryItOut("/*infloop*/for(__count__; (this.__defineSetter__(\"(__parent__)\", (<x/>.prop))); eval(\"new this()\", new __count__ =  /x/g ())) yield __proto__.constructor = <x><y/></x>;");
tryItOut("yield <><x><y/></x></>;");
tryItOut("throw 3/0");
tryItOut("throw StopIteration;");
tryItOut("L:with(constructor){continue ; }");
tryItOut("switch(constructor) { case *::*: break; __noSuchMethod__ = __count__, __noSuchMethod__; }");
tryItOut("continue Mdo __noSuchMethod__ = __parent__; while((*) && 0);");
tryItOut("with({}) return;");
tryItOut("export *; const constructor;gc()\n");
tryItOut("with({x::prototype: (eval(\"033\", prototype = <xxx>{function::__proto__}</xxx>))}){if( /x/ .__lookupGetter__(\"prototype\")) { if ( /* Comment */(function ([y]) { })()) yield;} else return;return __noSuchMethod__; }");
tryItOut("let(prototype = <><x><y/></x></>, __count__) { const __noSuchMethod__ = undefined;");
tryItOut("/*for..in*/for(const __proto__ in * != [<><x><y/></x></>])  /x/ ;");
tryItOut("/*infloop*/for([({ constructor: ({ __noSuchMethod__: __noSuchMethod__, function::prototype: [__proto__, ] }) }), __iterator__, ] =  ''  == null; ((window.watch(\"__count__\", (function (constructor) { return  /x/  } ).call)) .@*:: new ( '' )(false, prop)).__parent__; (<><x><y/></x></>.eval(<x><y/></x>))) ");
tryItOut("with({}) { try { throw StopIteration; } catch(__count__) { return; }  } ");
tryItOut("with({}) yield ([1,,] *= <y><z/></y> + this); const __count__;");
tryItOut("let (__iterator__ = <x><y/></x>, __iterator__) {  }");
tryItOut("while((<x/> ^ 1.2e3.__defineSetter__(\"prop\", (eval).call)) && 0){__proto__ = *::*;yield; }");
tryItOut("yield;");
tryItOut("/*for..in*/for([__iterator__, prop] = (prop.\fconstructor =  /x/g ) in <><x><y/></x></>) {continue M;* }\t");
tryItOut("let(<xxx {__noSuchMethod__}={prototype.__count__ = window , 1e+81} />) { this.zzz.zzz;");
tryItOut("/*for..in*/L:for(var prop.setter in  /* Comment */<x><y/></x>) { }\n/*for..in*/for(let [__count__, function::prop] = (eval(\"this\", *)) in *) export prop;");
tryItOut("M:do {export __count__; } while(((<y><z/></y> ? [,,] : __noSuchMethod__.eval(__count__))) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__ in [[]]) {;gc() }");
tryItOut("let ([prototype, __proto__, ] = __iterator__%=(eval(\"[[1]]\", <y><z/></y>))) { (window); } const __count__;");
tryItOut("M:if(this) {O }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__.__proto__\f in [__count__.valueOf(\"number\")]) /*for..in*/L:for(__count__ in ((function (__noSuchMethod__) { yield 3.141592653589793 } )(#1#.yoyo(0)))){export __noSuchMethod__; }");
tryItOut("/*infloop*/for(var prop; null; ([11,12,13,14].map) ^= [[]]) return false;");
tryItOut("let (__iterator__ = [11,12,13,14].filter) { {/*infloop*/try { __parent__ = __iterator__; } finally { throw StopIteration; }  } }");
tryItOut("let <x/> =  '' ;");
tryItOut("/*for..in*/M:for(__noSuchMethod__ = (new constructor) in window.__defineSetter__(\"__count__\", eval)) {this.zzz.zzz;return; }");
tryItOut("{break M;const __noSuchMethod__; }");
tryItOut("if(this.__defineSetter__(\"__parent__\", /a/gi)--) gc()");
tryItOut("L: /*for..in*/for(const constructor in constructor) export prototype;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__((* === (* >> undefined))) in (0.1.__lookupSetter__(\"prototype\"))) [1,,];");
tryItOut("while((<x/>) && 0){return;let __parent__; }");
tryItOut("var __proto__ =  '' ;");
tryItOut("/*for..in*/for(var __iterator__ in ({a1:1})) {/*infloop*/M:for(window;  /x/g ; window) export *; }");
tryItOut("null\n");
tryItOut("{let __parent__;let __proto__ = <><x><y/></x></>, __count__; }");
tryItOut("throw <><x><y/></x></>\n/*\n*/ const constructor;");
tryItOut("/*infloop*/for(const constructor; 3.141592653589793; __proto__) {;export *; }");
tryItOut("L:while((<bbb xmlns=\"-3/0[__parent__]\">yyy</bbb>) && 0){switch(*) { default: gc() } }");
tryItOut("yield __noSuchMethod__ = prototype = <y><z/></y>;");
tryItOut("M:if(eval(\"\", __iterator__ != [1]).@foo) { if (new  /* Comment */<x/>.__defineGetter__(\"__count__\", (new Function(\"break M;\")))())) if(eval(\"export __proto__;\", <x/>)) { if ([11,12,13,14].filter) {__proto__ = prototype;yield *; } else constructor} else /*for..in*/M:for(const prop = {} in __noSuchMethod__) var __count__, __count__ = window;}");
tryItOut("/*for..in*/for(var [__parent__, constructor] = function  __noSuchMethod__ (__iterator__, prop) { return __iterator__ } ()\n in @foo(-3/0)) {/*infloop*/for(let prototype = undefined; *;  \"\" ) {export prototype; } }");
tryItOut("/*infloop*/for(function::prop; <y><z/></y>; this) (*::*);");
tryItOut("prototype = constructor;");
tryItOut("/*for..in*/for(const __proto__ = __iterator__ = (this.zzz.zzz) in (<x><y/></x> for each (prop in *))) /*for..in*//* nogeckoex bug 349964 */ for  each(__count__ in this) {export x::constructor; }");
tryItOut("export *\n const prototype;");
tryItOut("{}");
tryItOut("yield 0.1;");
tryItOut("/*for..in*/for((<x><y/></x>)(this) in ((/a/gi)((p={}, (p.z = <x><y/></x>)())))){constructor\f }");
tryItOut("{; }");
tryItOut("if(1.2e3) {return <y><z/></y>;const prototype = __count__; }");
tryItOut("L:if(new (eval)(1e-81.yoyo(window))) { if (([11,12,13,14].map)) 1e-81; else const __parent__ = __parent__, prototype;}");
tryItOut("return 1e-81 >> window;");
tryItOut("{<><x><y/></x></>;(arguments); }");
tryItOut("with({__iterator__: __parent__})\nthrow 0;\n");
tryItOut("for(let y in []);");
tryItOut("/*infloop*/do prototype: (([1,2,3,4].slice).apply(3.141592653589793)) while(*);");
tryItOut("throw __parent__;");
tryItOut("switch(window) { case false: gc() }");
tryItOut("export *; const prop;");
tryItOut("L: {<><x><y/></x></>;gc() }");
tryItOut("{throw <x><y/></x>;; }");
tryItOut("*::*\n");
tryItOut("L: do {export *;export *; } while((<x><y/></x>) && 0);");
tryItOut("yield <><x><y/></x></>.isPrototypeOf(this);");
tryItOut("return ;");
tryItOut("/*for..in*/for(__parent__ in __iterator__) {throw  /x/ ; }");
tryItOut("L:if(0) { if ( \"\" ) gc() else }");
tryItOut("switch(let (prototype = function(id) { return id }) window) { default: L: prototype;case *::* @ *::*: break; const return;;break; case 0.1 === null: case (prop.__count__):  }");
tryItOut("/*infloop*/for((3.141592653589793 ^= <x><y/></x>); (prop) = *; ([[1,,]].watch(\"__proto__\", new Function))) [1,2,3,4].slice");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(constructor in prop.__parent__ setter= Function) /*infloop*/for(let __noSuchMethod__; <x/>; eval(\"yield 1e-81;\", (#1=[null]))) {prop setter: eval\tlet __parent__; }");
tryItOut("for(let y in [5,6,7,8]) let __count__;");
tryItOut("L: var __parent__ = __noSuchMethod__;");
tryItOut("return <x/>\nconstructor");
tryItOut("while((window ? ((yield -3/0)) : (window.watch(\"constructor\", Math.pow))[<><x><y/></x></> ?  \"\"  : .2]) && 0){/*infloop*/do {} while(this in <x><y/></x>); }");
tryItOut("with({__iterator__: 033})throw *::*;");
tryItOut("if(constructor = Date(1e-81, <x/>)) gc() else  if (<x/>) yield 0; else (<><x><y/></x></>);");
tryItOut("/*infloop*/for(let (__proto__ =  /x/g ) ({a1:1}); __noSuchMethod__; 3/0++) {__proto__, prototype = __noSuchMethod__; const default: break; case 9: ; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prop in yield eval(\"<><x><y/></x></>\",  \"\" )) {export *;\n }");
tryItOut("{throw StopIteration;throw StopIteration;{gc()M:if(__noSuchMethod__) { if (<y><z/></y>)  else const  break , __iterator__;} } }");
tryItOut("yield;");
tryItOut("let constructor =  '' , __iterator__ = prop;\nthrow ({a1:1});\n");
tryItOut("M:if((__parent__ = #3={a:#3#} > ( /x/g .propertyIsEnumerable(\"__proto__\"))).__lookupSetter__(\"__noSuchMethod__\")) {function (__count__) { return  \"\"  } \f\nlet __iterator__ = true; }");
tryItOut("delete <y><z/></y> < [[1]]\n/*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__ in constructor) ");
tryItOut("for(let y in []);");
tryItOut("/*for..in*/for(const __count__ in 3.141592653589793) return;");
tryItOut("continue L;");
tryItOut("/*for..in*/for(const [__parent__, constructor] = new [15,16,17,18].map(function (prop, __noSuchMethod__) { gc() } , <><x><y/></x></>)((__count__ =  /x/g ) | (<x/>)(false, <y><z/></y>), ((@foo).call(<x><y/></x>, ))) in eval(\"__noSuchMethod__\", <><x><y/></x></>)) return;");
tryItOut("/*infloop*/do {/*for..in*/for(__count__ in <x/>) L:if(({})) { if (<x/>) <><x><y/></x></>;} else __parent__ =  ''  } while(({constructor getter: function (__iterator__) { yield __proto__: <y><z/></y> ? window : @foo } , prototype: eval(\"this\", <><x><y/></x></>) }));");
tryItOut("L:if( /x/ ) {/*for..in*/M:for(var __count__ in ((<x/>)(<x><y/></x>)/*\n*/)){L:with(<><x><y/></x></>)undefined; }; }");
tryItOut("with({}) { export prototype; } ");
tryItOut("if(let (prototype = ((<y><z/></y>)), constructor = [,,]) <><x><y/></x></> * <y><z/></y>) {export *; }let (constructor = __proto__) { yield\n }");
tryItOut("/*for..in*/for(let __parent__ = *::* in -0) {Math.pow }");
tryItOut("with(__count__ = true)with( '' )");
tryItOut("/*infloop*/while((-<><x><y/></x></>))M:do {export prototype;__proto__ = ({a1:1}); } while((false) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each([, ({ prop: \tprototype([[]].eval(this)), __parent__: constructor }), ({ __iterator__: ({ prototype: get, __count__: [, []] }) }), , ] in (__proto__( \"\" ) = ( \"\" )[[,]] for each (prop in new Math.pow(this, prototype)) )) {M:with({__count__: <x><y/></x>})continue ; }");
tryItOut("switch(~(<><x><y/></x></> .@ this).__lookupSetter__(\"prop\")) { case 5: case 8: gc() }");
tryItOut("/*infloop*/L:do {__noSuchMethod__;(* < <y><z/></y>); } while(true.__lookupSetter__(\"__noSuchMethod__\"));");
tryItOut("for(let y in []);");
tryItOut("{continue ; }");
tryItOut("/*for..in*/L:for(let __iterator__ = (prop = <><x><y/></x></>) in [11,12,13,14].some ^= (__proto__ = @foo)) {}");
tryItOut("/*infloop*/for(var prop; (__proto__); __proto__) yield window;");
tryItOut("L:if(<><>#1=[#1#]</></>) {return 1e+81;export *; }");
tryItOut("/*for..in*/for(var [prototype, constructor] = new String((function ([y]) { })()) in ~<><x><y/></x></>) {__count__ = *, __parent__ = null; }");
tryItOut("/*for..in*/for(let [__iterator__, __iterator__] = <><x><y/></x></> in  '' ) {(<x><y/></x>); }");
tryItOut("/*infloop*/M:for(__iterator__; <x><y/></x>; 1.2e3) {function  4. (constructor) { export *; }  }");
tryItOut("switch(this.zzz.zzz) { default: return;case  /x/ .eval(*).propertyIsEnumerable(\"__iterator__\"): /a/gibreak; /*for..in*/for(let prototype = <><x><y/></x></> in <x><y/></x>) {(arguments); } }");
tryItOut("/*infloop*/M:do __noSuchMethod__, __parent__ = __count__; while(__iterator__.(<x><y/></x>));");
tryItOut("/*for..in*/for(var __iterator__ = this.__defineGetter__(\"prototype\", eval) in [1,,]) {export *; }");
tryItOut("/*infloop*/for(<x/> :: this.__defineGetter__(\"prop\", Math.pow); (1 for (x in [])) > *::*; (p={}, (p.z = <x/>)()).@foo) {prototype = __proto__; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(prototype in ((window)((-1)) = Exception(__parent__))) do gc()\r while((continue L.propertyIsEnumerable(\"x::prop\")) && 0);");
tryItOut("with({__parent__: * == #1#}){const constructor; }\nbreak M;");
tryItOut("/*for..in*/for(prototype = <x><y/></x>.(*::*).prop = [true].some(gc) in constructor < <x><y/></x>) return ({a1:1});");
tryItOut("for(let y in []);");
tryItOut("let(__proto__ = 'fafafa'.replace(/a/g, ({}).__lookupGetter__)) ((function(){return [<><x><y/></x></> if (window)];})());");
tryItOut("{return #1#;(new Function(\"yield <x/>;\")) }");
tryItOut("/*for..in*/for(const __count__ in (prototype = *)) return 1.2e3;");
tryItOut("__iterator__ = ({__noSuchMethod__ setter: 1e4, __proto__: 033 @ * })");
