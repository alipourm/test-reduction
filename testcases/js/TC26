
tryItOut("/*for..in*/L:for(var [__proto__, __iterator__] = __parent__.__noSuchMethod__ setter= [1,2,3,4].map in this) {break ;break ; }");
tryItOut("if((uneval(__parent__ = <x><y/></x>.__lookupGetter__(\"__count__\")))) with(<x><y/></x>){({}).__lookupGetter__yield; } else  if (1e+81 && <y><z/></y>) /*infloop*/for(var __count__ = __proto__ =  \"\" ++; [15,16,17,18].some(function (__proto__) { yield window } , this); ({a1:1})) { }");
tryItOut("M:if(<><x><y/></x></>) { if (prototype) yield; else {break ;function () { yield <><x><y/></x></> }  }}\nwith({}) continue ;\n");
tryItOut("/*for..in*/for(prototype =  /* Comment */(new Function()) in ([null for each (constructor in __iterator__)])) /*for..in*/for(let __noSuchMethod__ in ((((__parent__.__iterator__ = window)).__defineSetter__)(gc() const prototype))){return this\f;export __noSuchMethod__; }");
tryItOut("if(Date(this.__defineGetter__(\"prop\", ({}).__lookupGetter__), <x><y/></x>)) { if (prop.prop = <x><y/></x>) Math.pow else {continue M; }}");
tryItOut("if((#0=false)) { if (new (__parent__(<><x><y/></x></>, <x><y/></x>))(<x><y/></x> .. *)) {return <><x><y/></x></>; }} else yield;");
tryItOut("L: gc()");
tryItOut("M:if((new *())++) {return; \"\" ; }/*\n*/ else  if (new (null)(null, (eval).call( \"\" , ))) let __noSuchMethod__ = <x><y/></x>; else {return  '' ; }/*\n*/");
tryItOut("/*infloop*/for(const __noSuchMethod__ = 3.141592653589793;  \"\" ; undefined) {this }");
tryItOut("let prop;");
tryItOut("export *;");
tryItOut("/*infloop*/");
tryItOut("if(<x><y/></x> >>= <>case (): <x><y/></x>case (prototype =  /x/ ): </>) { if (m) (__parent__.isPrototypeOf(<><x><y/></x></>))\n else {; }}");
tryItOut("this.zzz.zzz;");
tryItOut("return 1.2e3;\nthrow \r[,,];\n");
tryItOut("/*infloop*/while(\t)*.isPrototypeOf(__parent__);");
tryItOut("gc()\ngc()\n\n/*for..in*//* nogeckoex bug 349964 */M: for  each(const prop in <x><y/></x>) {\f{}const __noSuchMethod__ = <><x><y/></x></>; }\n");
tryItOut("/*infloop*/for([({ constructor: ({ __parent__: constructor }), __iterator__: ({ function::__parent__: constructor, prop: ({ __iterator__: prop, constructor: function::__parent__ }) }) })] = (undefined)('fafafa'.replace(/a/g, function  __count__ (constructor, prototype) { yield prototype } )); <x/>; #1=[#1#] ? <><x><y/></x></> : this.eval(((1.2e3 for each (prototype in false)case window: break; break; )))) L:with({prop: undefined}){return; }");
tryItOut("for(let y in [5,6,7,8]) with({}) {  super  } ");
tryItOut("/*for..in*/for(const [__iterator__, __iterator__] = (p={}, (p.z = __count__)()) in (*.__defineGetter__(\"__iterator__\", <x/>))) try { for(let y in [5,6,7,8]) let(constructor, constructor) { throw __parent__; } catch(__noSuchMethod__ if (function(){let(__proto__ = ({ constructor: constructor }) = __count__) ((function(){return;})());})()) { throw StopIteration; } catch(prop if (<><x><y/\r></x></> |= prototype\n |= <><x><y/></x></>.__defineSetter__(\"<y><z/></y>\", /a/gi) ? (yield <x><y/></x>) : new ([1,2,3,4].map)())) { throw prototype; } catch(__count__) { return; } ");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__ in *) {/*for..in*/for(var __count__ in @foo) {<><x><y/></x></>; } }");
tryItOut("{gc() }");
tryItOut("let __iterator__ = @foo;");
tryItOut("/*for..in*/for(var [__proto__, __iterator__] = <x><y/></x>.unwatch(\"prop\").propertyIsEnumerable(\"__proto__\").prototype in [,]++) /*for..in*/L:for(__noSuchMethod__ in ((eval)(<x><y/></x>.eval(<y><z/></y>)))){;; }");
tryItOut("prop = constructor\n__noSuchMethod__;");
tryItOut("let __proto__ = *::*, __noSuchMethod__ =  /x/ \n");
tryItOut("if([,,z1]) constructor __parent__  else  if (__iterator__) throw false; else {return; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__count__(1e81) in false) <x><y/></x>\n(({}));");
tryItOut("while((<><employee id=\"1\"><name>Joe</name><age>20</age></employee></>) && 0){throw false; }");
tryItOut("let (__parent__) { /*infloop*/for(let __iterator__; <><x><y/></x></>; 1.3) let constructor, __proto__; }");
tryItOut("with({}) (__parent__);");
tryItOut("L: (new Function(\"throw  '' ;\"))");
tryItOut("/*for..in*/for(var [__iterator__, __count__] = let (__proto__ = [z1]) constructor.(<y><z/></y>).valueOf(\"number\") in (([15,16,17,18].map(#3={a:#3#}, []))[ \"\" ])) {yield;yield  /x/g ; }");
tryItOut("true\n");
tryItOut("L: {this.zzz.zzz;\n/*for..in*//* nogeckoex bug 349964 */M: for  each(prop in (-0)) yield;\n }");
tryItOut("return <><x>\t<y/></x></>;\nyield constructor;\n\n");
tryItOut("throw 0x99;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const prototype in <y><z/></y>) ");
tryItOut("yield [];");
tryItOut("export prototype;\nbreak M;\n");
tryItOut("if((__noSuchMethod__ = prop.isPrototypeOf([] %= <><x><y/></x></>))) {return;prop; } else  if (new ([z1])()) (1 for (x in []))");
tryItOut("{throw <x><y/></x>; }");
tryItOut("");
tryItOut("for(let y in [5,6,7,8]) for(let y in [5,6,7,8]) let(prop = , __count__) { __proto__ = prop;");
tryItOut("for(let y in []);");
tryItOut("if(([[]].unwatch(\"__parent__\")).__lookupSetter__(\"constructor\")) {L:if(undefined\f) { if (<><x><y/></x></>) {{}return; } else gc()}(*); } else  if ((__iterator__.__noSuchMethod__\t setter= (new Function).call |= [ '' ].some((eval).call).__parent__)) {gc(){} const prototype; } else this.zzz.zzz;");
tryItOut("if() { if (yield this) {\n } else {/*infloop*/for((true.prototype = <x/>); (('haha'.split).call(({__parent__ getter: function(y) { yield y; __noSuchMethod__; yield y; } }), ((-0) & <><x><y/></x></>), <x><y/></x>)); __count__ = O) {/*infloop*/while(undefined)Function{} } }}");
tryItOut("/*for..in*/for([__noSuchMethod__, __iterator__] = <x><y/></x>.yoyo(<><x><y/></x></>) in 1.3) /*for..in*/L:for(var __parent__ in 033) throw false;");
tryItOut("L: {{break ;export prototype; }yield <><x><y/></x></>; }");
tryItOut("with(3/0){yield;(*); }");
tryItOut("with({}) { {} } ");
tryItOut("/*infloop*/for(delete *::*; function(id) { return id }; __proto__ = 1.3) return;");
tryItOut("M:if((<><x><y/></x></>\n)) { if ((new Exception((function ([y]) { })().isPrototypeOf(@foo).__proto__ = __proto__ = [,,z1])).yoyo(__iterator__ | <y><z/></y>)) {(<x><y/></x>);let constructor; } else }");
tryItOut("yield");
tryItOut("throw __parent__;");
tryItOut("while((([<x><y/></x> / -1 for each (__proto__ in <><x><y/></x></>.yoyo(<x><y/></x>))])) && 0)/*infloop*/for(var prop; (typeof (-3/0 < <><x><y/></\tx></>)); this.__defineSetter__(\"__iterator__\", (prototype).call)) {continue M; }");
tryItOut("/*for..in*/for(let constructor in ((<><x><y/></x></>)(<x><y/></x>.hasOwnProperty(\"__noSuchMethod__\"))))<ccc:ddd\f><!--yy--></ccc:ddd>");
tryItOut("if('haha'.split) {} else {switch(undefined) { default:  } }");
tryItOut("with(({prop: <x><y/></x>}))yield;");
tryItOut("switch([11,12,13,14].filter) { default: /*for..in*//* nogeckoex bug 349964 */ for  each(constructor in undefined) (<x/>);gc()break; case 1: __count__ = (prop|=(*.unwatch(\"__parent__\")) || __noSuchMethod__%=*::*), [__proto__, , ({ __parent__: ({ prototype: constructor }), __noSuchMethod__: ({ __iterator__: prop, __noSuchMethod__: __iterator__ }) }), x::__iterator__]break; case 0: case 1: /*for..in*/for([constructor, prop] = ([15,16,17,18].some(function  __proto__ (__noSuchMethod__)true, 033)) in @foo) {/*infloop*/for(<x/>; []; #1=[#1#]) {export *;(constructor); } }break; case 4: break; L:do {export prototype;; } while((true) && 0);break;  }");
tryItOut("{var __noSuchMethod__, __count__;with(1.3)return; }");
tryItOut("with({prop: ({a2:z2})}){/*infloop*/for(const __iterator__; 0x99; (yield <x><y/></x>)) {yield;__count__ = <y><z/></y>, __parent__ = 5.0000000000000000000000; }while((constructor.((__iterator__ = false))) && 0)(this); }");
tryItOut("L:with({__noSuchMethod__: 4.}){}\n");
tryItOut("while((<x/>) && 0){yield; }");
tryItOut("L: if(<y><z/></y>) ; else /*infloop*/for(const each = window; -3/0; <><x><y/></x></>) {var prototype = [z1,,], __noSuchMethod__;export *; }");
tryItOut("\nwith(this.eval(-1)){({}).hasOwnProperty{} }");
tryItOut("return 3;");
tryItOut("with({}) { yield __proto__.prototype; } ");
tryItOut("if([window].sort(function(q) { return q; })) {(__proto__); } else  if (3/0) gc() else {/*infloop*/L:for(prototype = \t<y><z/></y>;  /x/g ; __proto__) {Function(<x><y/></x>); }yield; }");
tryItOut("export __count__; const __proto__;");
tryItOut("{ }\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__count__ in <><x><y/></x></>.__defineGetter__(\"__proto__\", *::*)) L: {let prototype, __noSuchMethod__ = (-0);{} }");
tryItOut("Function");
tryItOut("continue \nif(window) { if (<><x><y/></x></>) export *; else {const __proto__, __iterator__ = true; }}");
tryItOut("/*for..in*/for(const __parent__ in ((Math.pow)((({\t__proto__: __iterator__ = ({ set prototype constructor (prop) { yield <x><y/></x> }  }), prototype, prototype: true }))))){/a/gi }");
tryItOut("/*infloop*/M:for((<><bbb xmlns:ccc=\"prototype = <x><y/></x>\"><ccc:eee></ccc:eee></bbb></>[prop && (p={}, (p.z = <x><y/></x>)())((Function), <x><y/></x>)]); -0; (constructor =  '' )) {/*for..in*/for(var __noSuchMethod__ in (((1 for (x in [])))((eval(\"default: return <><x><y/></x></>;break; \", null)))))throw <y><z/></y>; }");
tryItOut(";\nyield;\n");
tryItOut("throw constructor;");
tryItOut("with({}) function::__parent__ = prop;");
tryItOut("L:if(([,,z1] .@*::  { yield  '' ; } ) *= __parent__ =  /x/g ) { if ((({ __noSuchMethod__: __parent__ }) = ( /* Comment */[__iterator__].sort(function(q) { return q; })\t))) {const prop = <><x><y/></x></>, __iterator__ = constructor; } else /*infloop*/M:for(const __proto__; this; <x/>) {<><x><y/></x></>;(<><x><y/></x></>); }}");
tryItOut("while(((({ constructor: __noSuchMethod__\f, prop: __noSuchMethod__ }) = __count__)) && 0)/*for..in*/M:for(var __proto__ in (([1,2,3,4].map)(undefined)))__count__ =  '' ;");
tryItOut("{with(<x/>.propertyIsEnumerable(\"__noSuchMethod__\")){i\nreturn; } }");
tryItOut("throw __proto__;");
tryItOut("/*for..in*/for(let (prototype) in ((gc)(((eval(\"yield  /x/g ;\", <><x><y/></\rx></>)) ? 0.yoyo( /x/  | <x><y/></x>) : +()))))new Function");
tryItOut("");
tryItOut("yield const __parent__;");
tryItOut("/*for..in*/for(let [__noSuchMethod__, __parent__] = undefined in <><x><y/></x></>) yield;");
tryItOut("with({__iterator__: true < [1,,]()}){function  __iterator__ \t() { return this } /*for..in*/for(const __count__ in <><x><y/></x></>) do (this); while(([,,z1]) && 0); }");
tryItOut("|\ngc()\n\n");
tryItOut("/*for..in*/for(const __count__ = this in 1e-81) {return; }");
tryItOut("L: /*infloop*/L:do {yield; } while(new (/a/gi)());");
tryItOut("with({__parent__: <x><y/></x> ? <x><y/></x> : <x/>}){} const __parent__;");
tryItOut("/*infloop*/for(var prop; *; __count__) ");
tryItOut("throw __proto__;");
tryItOut("switch(({ get __iterator__(__proto__)1e+81.valueOf(\"number\"),  set prop(constructor, __parent__) { function::__parent__; }  })) { default: with({constructor: true.__iterator__}){let __iterator__ = <x><y/></x>;yield ({a1:1}); }break; case 1: const __count__, __noSuchMethod__;case constructor.prototype = [,,]: break;  }");
tryItOut("with((this.watch(\"__iterator__\", gc).__lookupGetter__(\"constructor\")))/*for..in*/for(const (0x99)( '' )\f in this) {prototype setter: new Function__proto__; }");
tryItOut("/*for..in*/for(let prototype = (__noSuchMethod__ = false['prototype'] = ({prop: 1.2e3 })) in  \"\"  ? * : typeof -1) throw __proto__;");
tryItOut("throw __noSuchMethod__;\nyield #3={a:#3#};\n");
tryItOut("{if(this.propertyIsEnumerable(\"__proto__\")) export *;yield <x/>; }");
tryItOut("return;");
tryItOut("let (__parent__) { return; }");
tryItOut("let prototype = <y><z/></y>, prototype;");
tryItOut("{const __proto__, prop;return; }");
tryItOut("if((undefined[(<x/>)])) {} else  if (__noSuchMethod__.isPrototypeOf(true) /= ([15,16,17,18].sort([z1], 0.1).constructor)) {export *; }");
tryItOut("if((yield = (yield prototype.__proto__ = 0.1))) { if ( '' .__defineGetter__(\"__proto__\", <y><z/></y>)) {throw __noSuchMethod__; } else export __proto__;}");
tryItOut("if(<><x><\fy/></x></>.constructor) { if (true <<= new undefined( '' , @foo)) } else {default: __parent__, prop; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(const prototype in false) 5.0000000000000000000000;");
tryItOut("if([1,,]) {var <x><y/></x> = __parent__;yield; } else  if (@foo) var __parent__, __noSuchMethod__ = <><x><y/></x></>; else (<x><y/></x>); const __count__;");
tryItOut("/*infloop*/for(<y><z/></y>; <x/>; *) {gc() }");
tryItOut("/*infloop*/L:while((this.zzz.zzz)){while((null) && 0)<y><z/></y>;/*infloop*/M:for(let __count__;  '' ; window) {let constructor, __noSuchMethod__; } }");
tryItOut("'haha'.split");
tryItOut("/*infloop*/while(({ __parent__: prop, __count__: ({ __proto__: [, , ] }) }) = []){return\n }");
tryItOut("/*for..in*/for(var __proto__ in ((( /x/  ? 0/0 : this)((new (<><x><y/></x></>)(0)),  '' ))(prop.__iterator__ = *.__lookupGetter__(\"constructor\"))))yield;\nyield  \"\" ;\n");
tryItOut("yield ({__parent__: <x><y/></x>, __parent__: @foo });");
tryItOut("if((-1) ?  /x/g  :  /x/ ) { if (this.__defineGetter__(\"__parent__\", [1,2,3,4].map)) (__iterator__);} else {export prototype;try { yield *; } catch(constructor) {  } finally { yield ; }  }");
tryItOut("L:with(((<x><y/></x>)[ /x/ ].__defineGetter__(\"prop\", <x><y/></x>))){var __noSuchMethod__;const __parent__; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var function::__iterator__ in ((__parent__)() === eval(\"continue L;\", .2)).unwatch(\"__noSuchMethod__\")) throw ('fafafa'.replace(/a/g, <x><y/></x>));");
tryItOut("/*for..in*/for(var (true.propertyIsEnumerable(\"__iterator__\"))((__parent__ = constructor)) in [15,16,17,18].some(function (__count__) { return null; } , ([11,12,13,14].some))) L: {return true; }");
tryItOut("do {\fM:while(((('haha'.split).call([1,2,3,4].slice(), eval(\"return;\", this)))) && 0){return (function ([y]) { })(); }/*infloop*/do gc() while(prop); } while((let.(null)) && 0);");
tryItOut("if((this.__defineSetter__(\"__parent__\", gc))) {/*for..in*//* nogeckoex bug 349964 */ for  each(var prototype(__parent__) in true) {break ;gc() }var __proto__ = <x><y/></x>; }");
tryItOut("let (({ __proto__: __iterator__ }), prop) { throw false; }");
tryItOut("try { __noSuchMethod__ } catch(__count__ if (function(){var prototype = 0;})()) { Math.sin } catch(constructor if (yield 0.1)) { window } catch(constructor if (function(){yield [,,z1];})()) {  } catch(__noSuchMethod__ if (function(){return;})()) { ; } catch(__iterator__ if (function(){return true;})()) { yield; } catch(constructor if (function(){gc()})()) { var __count__ = __count__, __parent__ = null; } catch(constructor if (function(){{}})()) { yield <x><y/></x>; } finally { ({}).hasOwnProperty } ");
tryItOut("with(((function(q) { return q; }).call)(\nwindow)){}");
tryItOut("/*infloop*/for(this; __iterator__ = <x><y/></x>; (<> /* Comment */(delete = true)</>.([]))) yield this;");
tryItOut("let(__count__ = <y><z/></y>.__lookupSetter__(\"__noSuchMethod__\"), [, constructor, prototype, , prop] = *::*) { throw __noSuchMethod__;");
tryItOut("/*for..in*/for(const constructor =  /x/  in #0=[(-0)]) prototype;");
tryItOut("M:if((-1)) {break ; } else const __proto__, constructor = 0/0;");
tryItOut("/*for..in*/L:for(let prop in ((gc)(__noSuchMethod__ = <><x><y/></x></>)))export __count__;");
tryItOut("yield;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __parent__ in prototype) {return undefined;var prototype = *::*, __noSuchMethod__ =  /x/ ; }");
tryItOut("gc()");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__ in prop) /*infloop*/for(var prototype; <x/>; __iterator__) {export *;export __noSuchMethod__; }");
tryItOut("var constructor\n({}).hasOwnProperty");
tryItOut("<><x><y/></x></>;");
tryItOut("M:with({__proto__: [15,16,17,18].map((new Function(\"break ;\")),  for (__noSuchMethod__.__iterator__ in  /x/  .@*:: <><x><y/></x></>))})/*for..in*/for(__iterator__ = ++@foo in __count__) {function (prototype)constructornull; }");
tryItOut("let(prototype) { with({}) gc() const __iterator__;");
tryItOut("let (__noSuchMethod__) { ; }");
tryItOut("/*for..in*/for(__noSuchMethod__ in [yield <y><z/></y> if /*\n*/(*::*)]) /*for..in*/for(var  in ((eval)((__parent__.@foo))))export __parent__;");
tryItOut("switch((__noSuchMethod__.__defineSetter__(\"prototype\", gc))) { default:  }");
tryItOut("{if([15,16,17,18].filter(function  __iterator__ (prop, __count__) { return function ([y]) { } } , undefined).__lookupGetter__(\"prop\")) { if ([typeof 1e81].some((new Function(\"export *;\")))) yield @foo; else M:while((<y><z/></y>) && 0)export __count__;} }");
tryItOut("__iterator__");
tryItOut("/*for..in*/for(const [\fyield, __iterator__] = (-0) >= <x><y/></x>.isPrototypeOf((( \"\"  -  /x/g [prototype.constructor = (function ([y]) { })()] if ( /* Comment */<><x><y/></x></>)))) in -({__parent__: <y><z/></y>})) {/*for..in*//* nogeckoex bug 349964 */ for  each(let prop in <y><z/></y>) {false } }");
tryItOut("with({prototype: <x/>}){var prototype; }");
tryItOut("/*infloop*/M:while(__proto__.__noSuchMethod__)/*infloop*/M:while(null)yield <x><y/></x>;");
tryItOut("if(( /* Comment */+true.__lookupSetter__(\"prop\"))) { if (eval(\"eval(false, window)\", new <y><z/></y>(new Object(), export *))) {continue L;/*infloop*/do {let __count__ = this, __count__;return *; } while((new Function())); } else switch((uneval(<> for each (constructor in  /x/g )</>))) { default: break; break;  }L:with({__noSuchMethod__: (__proto__.__count__)})break ;}");
tryItOut("return (let prop, __noSuchMethod__);");
tryItOut("/*for..in*/for\n(const __parent__(({__noSuchMethod__: !<x/> })) in (__count__.constructor[true]).__iterator__ = ([new Error((-0), <><x><y/></x></>)])) {continue M;throw window; }");
tryItOut("with(<x><y/></x> instanceof 1e81)/*for..in*/L:for(__proto__ in (((undefined).__defineSetter__)(this))){(new Function(\"const prototype, __count__ = <x><y/></x>;\")) }\nyield;");
tryItOut("do {true(({}).__lookupGetter__).call } while(([11,12,13,14].filter .@*:: (function ([y]) { }.valueOf(\"number\"))) && 0);");
tryItOut("if((Function).call(1.2e3, <><x><y/></x></>)) var prop = <x><y/></x>, __proto__ = this;");
tryItOut("/*infloop*/for(var [] = ['fafafa'.replace(/a/g, function (prop, prop) { gc } ) if (__noSuchMethod__)]; eval(\";\", @foo); eval(\"@foo\", <><x><y/></x></>)) yield -0;");
tryItOut("with(('fafafa'.replace(/a/g, [1,2,3,4].slice)))/*for..in*/M:for(__noSuchMethod__(@foo) in ((Function)((new RegExp(true)))))");
tryItOut("return <><x><y/></ x></>;");
tryItOut("{(<y><z/></y>).__defineSetter__/*for..in*/for(let delete in <><x><y/></x></>) gc() }");
tryItOut("/*for..in*/for(var prop.__noSuchMethod__ in ([11,12,13,14].filter)) {if( '' ) {const constructor, function::__proto__;gc() } else  if (<><x><y/></x></>)  /x/ return true; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__ in /a/gi) {if(__count__.__noSuchMethod__) let prototype = true; else  if ((<x/>)()) {var __proto__, false = __count__; } else {yield; } }");
tryItOut("{}");
tryItOut("if( /x/ ) {while(((this.__defineSetter__(\"__proto__\", /a/gi))) && 0)[z1,,];gc() } else  if (((<><x><y/></x></>)).watch) {/*infloop*/for(const ({ __count__: prop, __noSuchMethod__: __noSuchMethod__ }) = 1.2e3 == @foo; <x/>; __iterator__-=null) let __parent__ = <x><y/></x>;\f } else {/*infloop*/for(var ({ __proto__: constructor, x::__iterator__: __iterator__ }) = this(); (prop.__proto__); <y><z/></y>.*) /*infloop*/for(var function::__count__ = __iterator__ = *::*;  /x/ ; *) const __proto__;{export __count__;; } }");
tryItOut("/*for..in*/for(const __noSuchMethod__ = (prototype = 3) in (constructor.( \"\" ))) {constructor; }\r");
tryItOut("let(prototype = this, __parent__ =  \"\" ) { {}");
tryItOut("let(__proto__) { yield (new __count__);");
tryItOut("with({}) for(let y in [5,6,7,8]) yield ;");
tryItOut("if(this.__defineSetter__(\"prototype\", [1,2,3,4].slice)) { if (new (/a/gi)(\fprop setter: eval.(#0=__parent__)\f,  \"\"  ? false : @foo\t).__lookupSetter__(\"__count__\")) {<><x><y/></x></>; }} else /*infloop*/L:for(const __proto__; __parent__;  '' ) {(<><x><y/></x></>);break L; }");
tryItOut("/*infloop*/for(let prototype; __count__.__parent__; ( /x/ .unwatch(\"__noSuchMethod__\"))) {export prop;\n\n }");
tryItOut("return #3={a:#3#};const __parent__, constructor = #3={a:#3#};");
tryItOut("switch(<>export __parent__;</>) { default: break;  }");
tryItOut("\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__(({prop getter: function (prototype) })) in [11,12,13,14].some) if('fafafa'.replace(/a/g, function(q) { return q; })) { if ((<><x><y/></x></>.__defineSetter__(\"__proto__\", <><x><y/></x></>))) {gc() }\t} else ");
tryItOut("M:while((null.__proto__) && 0){export *;yield; }");
tryItOut("/*infloop*/for(window; <><x><y/></x></>; this) return; const __parent__;");
tryItOut("return;");
tryItOut("while((-0) && 0)/*for..in*/for(var __parent__ in ((new Function)(<x><y/></x>))){export *; }");
tryItOut("");
tryItOut("{L:with(undefined){return;033; }{let __proto__ =  '' ;export __count__; } }");
tryItOut("{return;export *; }");
tryItOut("let __iterator__");
tryItOut("if(window.prop !== <x/>) {M:do false; while((__parent__.(true)) && 0);{} } else ( '' );");
tryItOut("this.zzz.zzz;");
tryItOut("M:if(\f1e+81) { if (@foo) ;} else (function  __proto__ )() { return function ([y]) { } } ");
tryItOut("L:if(0) {const prop, __proto__; } else  if (<x><y/></x>) {export *; } else {var __noSuchMethod__ = [1]; }");
tryItOut("if(-(uneval(__iterator__))) {L:if(1e81;++) { if (#0=({__proto__: window})) {yield;yield prop; }} else {return; } } else {yield <><x><y/></x></>; }");
tryItOut("/*for..in*/for(var prototype in (((1 for (x in [])))(__iterator__))){(new Function(\"return;\"))@foo; }");
tryItOut("yield\n");
tryItOut("return __noSuchMethod__;\n/*for..in*//* nogeckoex bug 349964 */ for  each(let constructor in  \"\" ) \n");
tryItOut("with(window){if(<x/>) {throw <x><y/></x>; } else  if (<x><y/>\f<\f/x>) {\texport __count__;yield; } }");
tryItOut("const __noSuchMethod__ = __parent__");
tryItOut("throw *::*;\n/*infloop*/for((({__proto__: (prop)(<x><y/></x>, <x/>) })); ([1,2,3,4].map); ({ prop: __proto__ }) = [<x/>]) {gc()throw false; }\n");
tryItOut("/*infloop*/do {} while(undefined ? #0=[(-{(@foo); })] : this);");
tryItOut("M:with({__count__: (const constructor) if (let (prototype)  '' )}){/*infloop*/for(var __iterator__; <x><y/></x>; <y><z/></y>) yield <x><y/></x>;{prop = undefined;/*infloop*/for(const each =  /x/g ; window; __noSuchMethod__) {const __proto__ = 1.2e3, constructor; } } }");
tryItOut("with([11,12,13,14].filter){if(.2) {throw true; } else  if (1.3) {Math.powlet constructor = 0.1, default: break; case <x/>: break; [z1,,]break; break; case window: break; case function ([y]) { }: ;break; ; } else {export __proto__;return; }break M; }");
tryItOut("constructor");
tryItOut("L: {export *;; }");
tryItOut("with({__parent__: ({__iterator__ getter: [1,2,3,4].map }).__noSuchMethod__ for each (prop in  /x/g )}){/*for..in*/M:for(const constructor = <><x><y/></x></> in prop) {__noSuchMethod__, __count__ = *; }L: gc }prototype = __proto__ = <x><y/></x>;");
tryItOut("/*infloop*/for(let __proto__; {}; (\nprototype.prop = this = this.__defineSetter__(\"__parent__\", ({}).__lookupGetter__))) {yield prototype;if([[1]]) { if (function ([y]) { }) { }} else {[,];yield __noSuchMethod__; } }");
tryItOut("/*infloop*/for(var [] = <><x><y/></x></> in true; __count__ = __parent__;  /x/g \n) {(-1);throw <x><y/></x>; }");
tryItOut("/*infloop*/while([false.__defineSetter__(\"constructor\", Math.sin).*])/*for..in*/M:for(__count__ in [,]\n) export *;");
tryItOut("/*infloop*/do /*infloop*/L:do /*infloop*/while(<y><z/></y>){window;return; } while(let (constructor, __noSuchMethod__ = <y><z/></y>) -1); while(({ __proto__: ({ __noSuchMethod__: set, prop: __parent__ }), __noSuchMethod__: constructor }) = <x/> | ({}).yoyo(new ( '' ).__defineSetter__\n()));");
tryItOut("with({}) { {} } ");
tryItOut("return\ngc()");
tryItOut("/*infloop*/while(true){}");
