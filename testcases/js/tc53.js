tryItOut("__iterator__ = window;");
tryItOut("/*infloop*/while(<y><z/></y>)/*infloop*/for(let __noSuchMethod__ = window; *::*; [z1]) {break ;let __iterator__, __parent__; }");
tryItOut("L:if(-0) var __parent__, function::prototype; else  if (<x><y/></x>) var __noSuchMethod__, __count__; else ;");
tryItOut("return;");
tryItOut("if(function ([y]) { }) {if(new <><x><y/></x></>(<x/>,  /x/ )) __iterator__ else  if (<x><y/></x>) {var __parent__ = *::*, constructor = <x><y/></x>; } else {(false); } }");
tryItOut("L: {;gc() }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in prop) yield <><x><y/></x></>;");
tryItOut("L:while((this.__defineGetter__(\"constructor\", Math.pow)) && 0)/*for..in*//* nogeckoex bug 349964 */ for  each(let prop in [1]) {(1e+81).applylet __noSuchMethod__ = __count__, __proto__ = <x><y/></x>; }");
tryItOut("if(<y><z/></y>) yield  /x/g ; else  if (prototype) {return <x><y/></x>; } const __proto__;");
tryItOut("if( /x/ ) { if (undefined) {; } else {return; }}");
tryItOut("/*infloop*/for(({ constructor: prototype, __noSuchMethod__: ({ __count__: ({ __count__: __proto__, __iterator__: x::__parent__ }) }) }) = (1e+81.__lookupGetter__(\"prop\")) ? this <<= eval(\"return;\",  /x/ ) : [1,2,3,4].map; <><x><y/></x></> | <x><y/></x>; this.__defineGetter__(\"prototype\", Math.sin)) {yield; }");
tryItOut("/*for..in*/for(const prop in (([1,2,3,4].slice)((({ set __count__//h\n(__count__, __proto__) { yield @foo }  }))))){/*infloop*/L:while((function ([y]) { })())(/a/gi).call }");
tryItOut("with((({ __proto__: ({ __count__: __parent__ }), __parent__: ({ __parent__: __iterator__, __proto__: __iterator__ }) }) = -0)){/*infloop*/L:for(__iterator__ = this.__defineGetter__(\"__parent__\", Math.sin); (1 for (x in [])); #1=[[[1]]]) {(<><x><y/></x></>); } }");
tryItOut("throw prototype;\n(;);//h\n\n");
tryItOut("with({}) { __parent__ = constructor; } ");
tryItOut("let (((p={}, (p.z = \n((this.__defineGetter__(\"prototype\", function(y) { yield y; __parent__, __proto__;; yield y; })) for (__parent__ in  /x/ ) if (*)))())) = null, [] = (__proto__)) { L:while((this) && 0)throw window; }");
tryItOut("with({__count__: (false || <x><y/></x>)}){; }");
tryItOut("switch(<x><y/></x>) { case (new (({}).hasOwnProperty)(1e81)) >>= 5.0000000000000000000000 ? 4..__defineGetter__(\"__noSuchMethod__\", new Function) : [15,16,17,18].filter(function(q) { return q; }, <x><y/></x>): if(*::* + [1,,]) gc() }");
tryItOut("if(#1=({constructor: window})) {while((undefined) && 0)var prop; } else export *;");
tryItOut("with(<y><z/></y>)*;");
tryItOut("/*infloop*/while((__count__ = 4.)(\n[11,12,13,14].map)){const __proto__;return;continue M; }");
tryItOut(";");
tryItOut("while((({__iterator__ setter: [1,2,3,4].slice\n, prototype: @foo })) && 0)");
tryItOut("with((</*x>< __parent__: (({ prop: __count__ }) = __parent__)/></x if (__iterator__)> == <x><y/></x>))__count__, prop = null;");
tryItOut("\nreturn <x><y/></x>;");
tryItOut("if(<x><y/></x>) { if (<x/> /  /x/ ) new Function else {gc() }}");
tryItOut("L:do {(__noSuchMethod__);continue M; } while((undefined) && 0);");
tryItOut("M:\ndo {if(__count__ = (let = <><x><y/></x></>)) { if (@foo) if(<><x><y/></x></>) throw undefined; else {continue \tL;gc() }} else prototype; } while(((<><!--yy--></>.(<x><y/></x>.(<y><z/></y>)))) && 0);");
tryItOut("if(yield (new Function(\"\"))) {export *; const __proto__;var constructor, __noSuchMethod__ = 1e+81; } else {({__proto__ getter: (1 for (x in [])) }); }");
tryItOut("while((true) && 0)let constructor;");
tryItOut("/*infloop*/while((__iterator__.__noSuchMethod__ = <x/>))yield <y><z/></y>;");
tryItOut("( /x/g )\nreturn;");
tryItOut("/*infloop*/M:do throw *; while(([undefined for (true in *::*) for each (constructor in <y><z/></y>)].__parent__));");
tryItOut("/*infloop*/while(*::* != 5.0000000000000000000000.prop){/*infloop*/L:for(var constructor; <x><y/></x>; 0x99) gc() }");
tryItOut("L:if( /x/ ) continue L;\t else  if (__noSuchMethod__) {yield; } else {gc()yield prop; }");
tryItOut("/*infloop*/for(let __iterator__; [__count__, constructor, constructor] = __proto__; <y><z/></y> += false) ");
tryItOut("let([__iterator__, prop] = eval(\"({a1:1})\", <x><y/></x>), __proto__) ((function(){throw __noSuchMethod__;})());");
tryItOut("L:switch(eval(\"{; }\",  { yield new true(__iterator__.(prototype)).__lookupGetter__(\"({ prop: ({ prototype: prop }) })\") } )) { case (this.__defineSetter__(\"__noSuchMethod__\", function(y) { yield y; export prototype;; yield y; })((this.__defineSetter__(\"__noSuchMethod__\", ({}).__lookupGetter__)), constructor ^= ((p={}, (p.z =  /x/ )())))): return  '' ;default: let function::__iterator__ = false, __count__ = __count__ = <y><z/></y>\t;break; for(let y in []); }");
tryItOut("\fL:with((<>yyy</>.__defineSetter__(\"__noSuchMethod__\", (new Function(\"switch(__count__.valueOf(\\\"number\\\")) { default: case 7: break; case 0: break; break;  }\")))))L: {L:if(({constructor: {} })) {} else  if ((-@foo)) (([false].sort(*::*)))((p={}, (p.z = window)())) = __iterator__; }");
tryItOut("var __noSuchMethod__, function::prototype = <x/>;");
tryItOut("{if(<x><y/></x>) {} else  if (<><x><y/></x></>) <><x><y/></x></>;/*for..in*//* nogeckoex bug 349964 */L: for  each(var (this.yoyo(this))(this.__defineGetter__(\"__parent__\", (function(y) { yield y; ;; yield y; }).apply)) in delete <x/>) if(<><x><y/></x></>) { if (*::*) {continue L; }} else {gc() } }");
tryItOut("M:if(undefined) {(<><x><y/></x></>);gc() }\nswitch(window) { case window: default:  }");
tryItOut("/*infloop*/while( ''  ? <><x><y/></x></> : [[]]){export prop;yield; }");
tryItOut("/*infloop*/for(var ([11,12,13,14].some)((__iterator__ = <x><y/></x>)) = __parent__; null--; -3/0.__defineGetter__(\"__parent__\", function  __iterator__ (__count__, __parent__) { return  /x/g  } )) {({}).hasOwnProperty\n }");
tryItOut("{var __parent__, __parent__ =  \"\" ; }");
tryItOut("/*for..in*/for(var __noSuchMethod__ = new ((p={}, (p.z = [])()).__defineSetter__(\"__iterator__\", <\fx><y/></x>))( \"\" , (((1e+81).watch).call(<x/>, <x><y/></x>,  '' ))) in function(id) { return id }) {(new Function(\"gc()\")) }");
tryItOut("throw StopIteration;");
tryItOut("/*infloop*/for(const __proto__; ({__count__: __parent__, prototype: true }); (0x99.yoyo(0x99))) M:if(1.3) { if (constructor) {return  /x/g ; }} else ");
tryItOut("/*for..in*/L:for(let prop in *::*) ");
tryItOut("/*for..in*/L:for(var __noSuchMethod__.__iterator__ in ((function  [(<><x><y/></x></>)[false]].some(/a/gi) (({ __proto__: ({ __proto__: __count__ }), prop: [({ __proto__: [prop, __noSuchMethod__, __iterator__] }), __proto__, , ({ constructor: __count__ })] }), __noSuchMethod__) { while((({__parent__:  /x/g  }) .@x:: <><x><y/></x></>.hasOwnProperty(\"__count__\")) && 0)var prop, __iterator__ = @foo; } )(#3={a:#3#}))){M:if(null) var prototype = [z1]; else {throw [z1]; }var prototype; }");
tryItOut("if(<x/>.prop) { if (((<x><y/></x>)[new ([1,2,3,4].slice)(__proto__)]) :: \n( /* Comment */this)) {while((<y><z/></y>.watch(\"__count__\", (/a/gi).apply)) && 0)return;{/*infloop*/for(*::*; <x><y/></x>; __count__) {return; }window;yield function(id) { return id }; } } else {}export __proto__; const prototype;}");
tryItOut("/*for..in*/for(constructor = (#2=[<x/>.watch(\"__count__\", /a/gi)]) in (({prototype setter: 'haha'.split }))) ");
tryItOut("switch(((<x><y/></x>.(5.0000000000000000000000) ? constructor : this.__defineGetter__(\"__proto__\", (function  __noSuchMethod__ (constructor, __proto__) { return [,,z1] } ).apply))--)) { default: break; case 0: break;  }");
tryItOut("this.zzz.zzz;");
tryItOut("if((window)[(p={}, (p.z = <x/>)())]) { if (('fafafa'.replace(/a/g, [1,2,3,4].map))) *; else {  }}");
tryItOut("<x\n><y/></x> const __noSuchMethod__;");
tryItOut("continue ;gc()");
tryItOut("let (__count__ = <x/>, prototype = <x><y/></x>) { export *; }");
tryItOut("if(([null])) Function");
tryItOut("if(*::* ? @foo.__lookupGetter__(\"__proto__\") : (<><{ /x/ }><x><y/></x><!--yy--></{ /x/ }></>())) { if (new function(q) { return q; }(window) .@ (__iterator__)) const prop = this, __iterator__;} else ");
tryItOut("if((this.__defineGetter__(\"prototype\", (__noSuchMethod__ = ([15,16,17,18].sort([1,2,3,4].map, __parent__))).__defineSetter__))) /*for..in*/for([prop, prototype] = <y><z/></y> in null) {gc()const prop = [1,,], __parent__; } else {/*infloop*/for(const ({ __parent__: ({ __parent__: __count__, prop: constructor }), __noSuchMethod__: prop }) = __noSuchMethod__.prototype-=__count__.__parent__; new function ([y]) { }(@foo); (uneval(<x><y/></x>))) gc() }");
tryItOut("while((([1,,].__defineSetter__(\"__noSuchMethod__\", 'haha'.split) in __count__ = null)) && 0){return; }");
tryItOut("if(this\n) continue ; else  if (__proto__%=this.__lookupGetter__(\"__iterator__\")) {/*for..in*//* nogeckoex bug 349964 */ for  each(__noSuchMethod__ in __iterator__) {export prototype; }L:if({}) { if (true) var prop = <><x><y/></x></>, constructor = -3/0; else {false }} } else (<y><z/></y>);");
tryItOut("constructor");
tryItOut("if(this.isPrototypeOf(prop))  else {}");
tryItOut("let(constructor = ({ ((__proto__))(function  constructor (__iterator__, prototype) /x/ ()): [, , ({ __noSuchMethod__: __parent__ })] }), ({ __parent__: prop, prop: __parent__ }) = this.constructor = #1=[#1#]) ((function(){for(let y in [5,6,7,8]) with({}) {  } })());");
tryItOut("with(eval(\"{}\", <y><z/></y>)){ }");
tryItOut("__iterator__: true;");
tryItOut("/*for..in*/for([prop, __noSuchMethod__] = window in  /x/ ) ;");
tryItOut("/*for..in*/M:for(const __count__ in <><x><y/></x></>) yield;");
tryItOut("let(__count__ = __parent__) ((function(){<x><y/></x>.yield = prototype;})());");
tryItOut("{}\n(new Function(\"\"))\n");
tryItOut("L: {throw -3/0;const __noSuchMethod__ = <><x><y/></x></>, __noSuchMethod__ = __count__;yield function ([y]) { }; }\n");
tryItOut("{\freturn <y><z/></y>; }");
tryItOut("if(033) {gc() } else  if (yield 033;) {;{} }");
tryItOut("__parent__, __count__;");
tryItOut("/*infloop*/for(var ({ __count__: case 8: break; break; case 6: export __noSuchMethod__;break; default: break; , __proto__: [] }) = function(q) { return q; }; ( \"\"  in __parent__) << [15,16,17,18].some('haha'.split, __proto__.__count__ setter= (new Function(\"const constructor = (-1);\"))); (__proto__.__lookupSetter__(\"__iterator__\"))) {/*for..in*/M:for(__count__ = 1e81 in <x/>) {yield; } }");
tryItOut("with(window){with({prop: (<y><z/></y>.valueOf(\"number\"))})throw <x><y/></x>;__iterator__ =  /x/ ; }");
tryItOut("/*for..in*/for(__count__ in ((([<><x><y/></x></>].sort((new Function(\"({}).__lookupGetter__\")))) %= 1e+81.hasOwnProperty(\"__iterator__\"))(*::*.watch(\"constructor\", function(q) { return q; })))){L:do {var prop = true;export *; } while((__noSuchMethod__ = *::* .@*:: \tyield 0x99 ===  '' ) && 0); }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__noSuchMethod__ in <><x><y/></x></>.__defineGetter__(\"constructor\", Math.sin)) return;yield;");
tryItOut("/*infloop*/for(x::__count__; ({}.propertyIsEnumerable(\"__iterator__\")); <y><z/></y>) /*for..in*/L\n:for(var __noSuchMethod__ in ((gc)((*.__lookupGetter__(\"__parent__\"))))){;return  /x/ ; }");
tryItOut("if([<x/>]) { if ((new __proto__.@foo())) {if(null) { if (undefined) {return undefined; }} else yield __parent__;return <><x><y/></x></>; } else {yield #3={a:#3#};var prop = <x><y/></x>, constructor; }}");
tryItOut("/*infloop*/for(<x/>; -0; undefined) yield 3/0;");
tryItOut("let __count__;");
tryItOut("if( /x/ .__lookupSetter__(\"__parent__\")) { if ([-0].some(function  __proto__ ())) window;} else yield;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(<x/>.prop in <y><z/></y>) {export __noSuchMethod__;;return; } const prop;");
tryItOut("let (__count__, __proto__) { export *; }");
tryItOut("/*infloop*/while((1 for (x in []))(<x/>))return this;/*for..in*//* nogeckoex bug 349964 */\t for  each(let __parent__ in __proto__) {return @foo; }");
tryItOut("while((({*: function::__noSuchMethod__.prop setter= (undefined).watch, __noSuchMethod__: constructor.__proto__ =  for each (constructor in window) })) && 0)constructor;");
tryItOut("if((function(y) { yield y; if( /x/g ) continue L;; yield y; }).call(({}), )) /*for..in*/for(var __noSuchMethod__ = ([null].map(function () { yield  ? prop : 3.141592653589793.eval((function ([y]) { })()) } )) in prototype = __iterator__) do continue ; while((prototype) && 0); else  if (<) {if((prototype .@x:: this)) throw window;if(eval(\"yield window;\", __count__)) { if (1e81(new 4.(<x><y/></x>, window))) {(<x/>); } else } } else try { prop; } finally { ; } yield;");
tryItOut("/*infloop*/while([prop = __proto__.watch(\"__iterator__\", 'haha'.split)])/*infloop*/ get __iterator__(({ __parent__: ({ prop: ({ prop: __count__, constructor: __proto__ }), constructor: __noSuchMethod__ }), __parent__: ({ __proto__: __noSuchMethod__ }) }), __iterator__) { yield new  /x/  .@ undefined(prototype.throw(5.0000000000000000000000), *::*) } ");
tryItOut("{__iterator__ }");
tryItOut("gc()");
tryItOut("throw 1e+81;/*for..in*//* nogeckoex bug 349964 */ for  each(const __noSuchMethod__ in constructor) {yield prop;(this); }");
tryItOut("while(((*::*.__lookupSetter__(\"__noSuchMethod__\")) for each (__proto__ in <><x><y/></x></>) for (__parent__ in window)) && 0)with({__proto__: window}) for each (prototype in )");
tryItOut("L:while(([1,2,3,4].map) && 0)if(({ get prototype __parent__ (\t) { return <y><z/></y>; } , prototype: (-1) })) {yield; } else  if (<y><z/></y>.__defineSetter__(\"constructor\", Function)) {undefined;constructor }");
tryItOut("undefinedif(new @foo.__lookupSetter__(\"__proto__\")([11,12,13,14].filter)) {gc()export __proto__; } else {return constructor;continue ; }");
tryItOut("\nthrow *::*;");
tryItOut("do {do continue ; while((0.1 == 3.141592653589793) && 0); } while((1e+81.*) && 0);");
tryItOut("{3;let (__noSuchMethod__ = <x><y/></x>[({a2:z2})] == (new function(y) { yield y; ; yield y; }(prototype, constructor))) { yield; } }");
tryItOut("/*infloop*/M:for(const __proto__; <y><z/></y>; (eval(\" \\\"\\\" \", <x/>))) {\f}");
tryItOut("{}");
tryItOut("L:if((this.zzz.zzz) .@*:: prop = __proto__.@foo) /*infloop*/M:do (*); while(((new Function).call(<x><y/></x>, ))); else while((null) && 0){return; }");
tryItOut("/*for..in*/for(let prototype = (uneval(@foo)) in  { yield <x/> } ) {function  __noSuchMethod__ (prototype) { yield <x><y/></x> }  if (#3={a:#3#}) }");
tryItOut(";");
tryItOut("/*infloop*/M:for(prototype; {}.yoyo(<><x><y/></x></>).throw(this.zzz.zzz)\f; (({__count__: <x><y/></x>, __iterator__: <x><y/></x> }))) L:if([,,]) {yield  '' ; } else  if (<><x><y/></x></>) export prototype;");
tryItOut("return;");
tryItOut("{__count__ = __count__, __iterator__;{} }");
tryItOut("{case 5: break; case ([z1,,].isPrototypeOf(<x><y/></x>)): break; \n<><x><y/></x></>;break; break;  }");
tryItOut("with({}) { const __parent__; } ");
tryItOut("gc\nreturn\n");
tryItOut("/*for..in*/M:for(let prototype in (((new (true)()))('fafafa'.replace(/a/g, ([1,2,3,4].map).apply)))){}");
tryItOut("{return; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __proto__.prototype in yield prop = constructor == this.__defineSetter__(\"__proto__\", (prototype).watch)) /*infloop*/for(let __parent__; __count__ = 1e-81; new (eval).apply(<x><y/></x>)) ");
tryItOut("/*infloop*/for(new (\t(eval(\"prop\", <y><z/></y>)))(~this); (this.__defineSetter__(\"prototype\", (function  __iterator__ (__noSuchMethod__, __count__) { yield __proto__ } ).apply\t)); <x/>) {L:if((yield *)) { if (-1.prop = @foo) {const __parent__, __count__ = <x><y/></x>;yield; } else yield  \"\" ;} }");
tryItOut("M:if(__parent__ = [11,12,13,14].sort) {yield; } else  if (prop ? ([11,12,13,14].map) : this.__defineGetter__(\"__count__\", function(q) { return q; })) {if((/a/gi)()) export *; else {return <y><z/></y>; } } else L:with({yield: (<><x><y/></x></>.valueOf(\"number\"))}){yield <><x><y/></x></>;gc() }");
tryItOut("if((uneval(null))) { if ((this.__defineGetter__(\"__noSuchMethod__\", <x/>))) {if(*) {; } else  if (<x/>) {gc() } } else if(#1=[#1#]) throw <x/>;}");
tryItOut("/*infloop*/M:for('fafafa'.replace(/a/g, *::*); [15,16,17,18].map(null, (function  __proto__ () { export *; } ).call(<y><z/></y>[ /x/g ], )); ({prototype: <x><y/></x>})) {{const __iterator__, prototype; }let __noSuchMethod__\n }");
tryItOut("/*infloop*/M:for(#2= /x/g ; __count__ = * ? <y><z/></y> : <x><y/></x>; (__proto__)+=) ");
tryItOut("if(({__parent__ setter: (function(q) { return q; }).call, constructor: +4. })) {return; } else  if (this.__defineGetter__(\"prototype\", function(q) { return q; })) { }");
tryItOut("while(((++window) ? ( '' )(__noSuchMethod__) : prototype = \n*::*) && 0){return;\n\n/*infloop*/for(var __proto__; 0/0; <x><y/></x>) {break M; }with(__proto__)function (__parent__, __iterator__) { return __parent__ }  }");
tryItOut("with({}) __proto__ = prototype;");
tryItOut("{return this; }");
tryItOut("L: (<x/>);");
tryItOut("with({}) { with({}) let prop; } ");
tryItOut("{let __count__, __count__ = prop;break L; }");
tryItOut("/*for..in*/for(var [__count__, __count__] = __iterator__ in this) { }");
tryItOut("with({__parent__: __noSuchMethod__})yield;");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*/L:for(var __parent__(true) in <x/>) {yield <x><y/></x>;1.2e3 }");
tryItOut("if(3.141592653589793) {{} } else  if (*::*) yield 1e+81;");
tryItOut("break L;");
tryItOut("for(let y in []);");
tryItOut("/*for..in*/for(const [prototype, __proto__] = arguments.propertyIsEnumerable(\"__count__\") in window) throw 0x99;");
tryItOut("<y><z/></y> = __proto__;");
tryItOut("if(new (function  __parent__ () { return (p={}, (p.z = null)()) } )(( /x/g  ? this.eval(<x/>) : prototype = 3))) export *::*\t; else throw *;");
tryItOut("{if((prop.((prop.__parent__ = null)))) { if (<x><y/></x>(function(id) { return id }, 0x99)) {yield 1.3; }} else export *; }");
tryItOut("while((this.__lookupGetter__(\"__count__\") if ( /x/ )) && 0)export *;");
tryItOut("M:if((([11,12,13,14].map) ? (new null().valueOf(\"number\")) : [[]] ? <><x><y/></\nx></> : @foo)) { if ((1.3.eval(<x><y/></x>)).__iterator__) {}} else {break ;var __iterator__; }");
tryItOut("var __iterator__, prop = <x><y/></x>;");
tryItOut("while((('fafafa'.replace(/a/g, function  __noSuchMethod__ (prop, __proto__) { yield <><x><y/></x></> } ))) && 0)yield ({a2:z2});");
tryItOut("with(this){return this; }");
tryItOut("while(([z1]) && 0)yield;");
tryItOut("");
tryItOut("/*for..in*/for(constructor = ((/a/gi)(<y><z/></y>.eval(-0))) in <x><y/></x> .@x::  /x/g ) {(<x><y/></x>); }");
tryItOut("export __parent__\n");
tryItOut("let (constructor =  /x/ ) { continue ; }");
tryItOut("if(((<y><z/></y>.unwatch(\"__parent__\")) ^= prototype.(undefined))) {return window;(new Function(\";\")) } else  if ((({__count__: ( /* Comment */.2) }))) {{} } else {{} }");
tryItOut("/*for..in*/for(var __proto__ =  \"\" -- in [[1]]) yield <x><y/></x>;");
tryItOut("__count__ = prototype;");
tryItOut("return <x><y/></x>\n");
tryItOut("switch(this.zzz.zzz) { default:  }");
tryItOut("/*infloop*/for(function ([y]) { } == <x><y/></x>; ({ set prop function::__noSuchMethod__ ()<x><y/></x> }); (1e4 for (prop in <><x><y/></x></>))) {break L;continue L; }");
tryItOut("L: const __iterator__ = *::*, prop = __proto__; const constructor;");
tryItOut("/*infloop*/L:while((throw [*::*])){(false); }");
tryItOut("export *;");
tryItOut("L:do function (throw true;)* while(((window.throw(<><x><y/></x></>))) && 0);");
tryItOut("with((*::* |=  >>>=3))<x><y/></x>");
tryItOut("{let (__noSuchMethod__ = true, __proto__) { yield *::*; } }");
tryItOut("/*infloop*/do prototype =  /x/g  while(({__parent__: arguments}));");
tryItOut("{}");
tryItOut("let (__count__, prototype) { gc() }");
tryItOut("while((null.valueOf(\"number\")) && 0)(__noSuchMethod__){return;{} }");
tryItOut("let __proto__ = <y><z/></y>\n");
tryItOut("throw this;");
tryItOut("if((arguments <<=  \"\" ).yoyo((((function ([y]) { })())()))) {return undefined.unwatch(\"__proto__\");break M; } else  if (false) {return 1e+81; } else {L: {;L:if(<x>\t<y/></x>) {'haha'.split } else ; }export *\n }");
tryItOut("if(function  prop (__parent__, __count__) { yield (yield ((uneval(@foo)))) } ) { if () {return;{} }} else {prototype; }");
tryItOut("with({}) { throw x::constructor; } ");
tryItOut("yield constructor;__iterator__;");
tryItOut("with(__noSuchMethod__.__iterator__ setter= @foo){var __count__; }");
tryItOut("do [1,2,3,4].slice while(((({ __proto__: __proto__, __parent__: __parent__ }) = ({ __parent__: prototype, __iterator__: -1 }))) && 0);");
tryItOut("if((new (<x><y/></x>)(<x><y/></x>, null))) ( '' ); else 0x99;");
tryItOut("{return <x/>;{} }");
tryItOut("return <><x><y/></x></>.eval(null) :: this.watch(\"__proto__\", 1e81) > eval(\"this .@ #1#\", (this.__defineGetter__(\"prototype\", Math.pow)));");
tryItOut("/*for..in*/L:for(var __iterator__ = (this !==  \"\" ) in <y><z/></y>) M:switch(({a2:z2})) { default: break; case 7: (({a2:z2}));const __noSuchMethod__;case <><x><y/></x></>: const __iterator__ = function ([y]) { };break; break; break; throw <y><z/></y>; }");
tryItOut("L:if(true) {export __iterator__;yield; } else  if (undefined) {const const __parent__;; }");
tryItOut("prototype, __proto__ = <x/>;\nprop;\n");
tryItOut("let (prototype) { return; }\n");
tryItOut("if( /x/g  for each (__parent__ in <x><y/></x>) * (function::__noSuchMethod__ = window)) {let __proto__ = undefined, __parent__ } else  if (this.__defineSetter__(\"constructor\", (#1=({function::__count__: (yield  /x/g )})).__defineSetter__)) {return this;let prop = #1=[#1#], __iterator__ = #1#; } else {break M; \"\"  }");
tryItOut("with({constructor: <x><y/></x>}){break ;throw <x/>; }");
tryItOut("if(__count__ = __proto__ * (3.141592653589793[<x/>])) {} else  if (\n3/0) {gc()__proto__, prop; } else {if( /x/ ) {;yield 0; } else  if ( '' ) throw *::*; else {} }");
tryItOut("while(((__count__ = __iterator__: true) /= __proto__ >= <x><y/></x>) && 0){return;/*for..in*/L:for(var __iterator__ = <><x><y/></x></> in  /x/ ) {yield <x><y/></x>;__proto__ = <x><y/></x>; } }");
tryItOut("/*for..in*/for(var prototype in (((eval).call)(<x/>))){return window;return *::*; }");
tryItOut("{L: {{} }{/*infloop*/L:for(__count__ = yyy; <x><y/></x>; [[1]]) __iterator__ = [,,];/*for..in*/M:for(const __parent__ in <><x><y/></x></>) {var __count__ = <y><z/></y>;return; } } }");
tryItOut("{const function::__parent__ = __count__; }");
tryItOut("L:with({__proto__: <x><y/></x> * true}){var __count__;export constructor; }\nlet __iterator__, __parent__ = this\n");
tryItOut("with((__noSuchMethod__ = <x><y/></x>).*)export __parent__;");
tryItOut("var prop = @foo, prop;");
tryItOut("if(this.watch(\"__iterator__\", function(q) { return q; })) {with(#0=({__count__: 1e+81})){yield; } }");
tryItOut("let(delete) { for(let y in []);");
tryItOut("M:if(<ccc:ddd><ccc:ddd>yyy</ccc:ddd></ccc:ddd> -= <x/>) return; else  if ((\n* *= <x><y/></x>)) return; else \t{return;yield; }");
tryItOut("with({}) ;");
tryItOut("<x><y/></x> = 0x99");
tryItOut("if((({\nprototype getter: new Function }))[5.0000000000000000000000.valueOf(\"number\")]) { if (((1 for (x in [])))) {L:with(([15,16,17,18].map([1,2,3,4].map, #1#)))/*infloop*/while((__count__.isPrototypeOf(window)))var prototype =  \"\" , constructor =  /x/ ; } else /*infloop*/for((*);; <x><y/></x>; constructor) ;}");
tryItOut("{/*for..in*/for(var prop.__noSuchMethod__ in ((Math.pow)(new <><x><y/></x></>.__parent__(([this for each (prototype in  /x/g ) if (@foo)])))))continue L; }");
tryItOut("{export *;L: ; }");
tryItOut("return;");
tryItOut("try { let __noSuchMethod__ = false; } catch(__proto__ if <x/>) { __count__; } finally { gc() } ");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(constructor in <x/>) /*for..in*/L:for(const __proto__ = @foo in [[1]]) yield this;");
tryItOut("L:if(__iterator__.([(.2.valueOf(\"number\")) if (true)])) break ; else (__proto__ = * %= Function([,]));");
