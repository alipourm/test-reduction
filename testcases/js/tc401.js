tryItOut("(<x><y/></x>)\n");
tryItOut("do {export *;export prop; } while(((!(__noSuchMethod__(null, <x><y/></x>)))) && 0);");
tryItOut("/*infloop*/while(@foo){throw <x><y/></x>; } const constructor;");
tryItOut("if(eval(\"Math.pow\",  \"\" .__proto__)) { if (constructor = true) Function<x><y/></x>; else yield undefined;}\n/*for..in*/for(var prop in ((prop)(<x><y/></x>)))(<x><y/></x>);");
tryItOut("let(__proto__) ((function(){yield;})());");
tryItOut("L:with({__proto__: (uneval(false))})yield break \t;;");
tryItOut("let __proto__, __count__;;");
tryItOut("L:with(this.zzz.zzz)switch(0x99) { case this: break;  }");
tryItOut("let (__count__) { return;\nreturn <x/>;\n }");
tryItOut("/*infloop*/while(window){if((prop)) { if ((this)(<><x><\fy/><//h\n/x></>, @foo)) [1,2,3,4].map} else {gc()gc() } }");
tryItOut("return;");
tryItOut("const __iterator__ =  \"\" ;");
tryItOut("/*infloop*/while(3/0.isPrototypeOf(({a2:z2})))prop = <y><z/></y>;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let (__iterator__) in function::__noSuchMethod__ = <x><y/></x> ? (__proto__|=-0) : (p={}, (p.z = <x><y/></x>)())) {\nthrow <x><y/></x>;'haha'.split }");
tryItOut("{return; }");
tryItOut("/*for..in*/for(const __noSuchMethod__ in ((eval)(*.hasOwnProperty(\"__count__\"))))/*for..in*//* nogeckoex bug 349964 */L: for  each(let __parent__ in <y><z/></y>) with({prop: 1e+81}){; }\nwindow;");
tryItOut("L: if( ''  == (-0)) { if (((true)(<y><z/></y>, window))) {function (prop) { yield; } (window); } else undefined}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __count__ in <y><z/></y>) return;");
tryItOut("L:if((p={}, (p.z = (new (eval)(<x><y/></x>, <x/>)))())--) { if (((p={}, (p.z = false(true))()))) {do {;<><x><y/></x></>; } while((1.2e3) && 0); } else return 0x99.@foo;}");
tryItOut("L:if(__iterator__ - let (__parent__) Function(<><x><y/></x></>)) { if (__proto__) {return; } else /*for..in*/for(var const function::prototype; in -- /x/g ) {let __parent__ = <x//h\n><y/></x>, __proto__; }}");
tryItOut("do {{/*for..in*/L:for(var __parent__ in ((function  prop () { return <x><y/></x> } )((<><x><y/></x></>[@foo])))){<x/>; } } } while((((yield this))) && 0);");
tryItOut("gc()");
tryItOut("/*infloop*/for(let prototype; (({__noSuchMethod__ getter: ({}).__lookupGetter__, constructor setter: function (__parent__)__proto__ })); ()) with({__count__: (function  __noSuchMethod__ () { return <x>\t<y/></x> } )})/*for..in*/for(var get in (([1,2,3,4].map)(<y><z/></y>))){var prototype = @foo; }");
tryItOut("<x><y/></x>");
tryItOut("/*for..in*/for( in ((<y><z/></y>.yoyo((p={}, (p.z = @foo)())))(__parent__ = prototype.get)))/*for..in*/for(__noSuchMethod__ in ((/a/gi)(\n@foo))){{}yield; }");
tryItOut("let(constructor) ((function(){return;})());");
tryItOut("if(<>1.2e3.propertyIsEnumerable(\"__iterator__\")</>) { if (this.zzz.zzz) if((this.zzz.zzz)) {gc() } else  if ( /* Comment */undefined) export *; else prototype;}");
tryItOut("return;do if(this) { if ([z1,,]) {__noSuchMethod__ = *::*, prop = this;(<x/>); } else {throw window;false; }} while(([*::*].sort(function (__count__) { yield 0x99 } )) && 0);");
tryItOut("this.zzz.zzz;");
tryItOut("yield;");
tryItOut("do {var __iterator__; } while((window.throw(window)) && 0);");
tryItOut("/*infloop*/for(<ccc:ddd><!--yy--></ccc:ddd>; (<bbb xmlns:ccc=\"#3={a:#3#} ? <x><y/></x> : __iterator__\"><ccc:eee></ccc:eee></bbb>)(); (__iterator__.prop.valueOf(\"number\"))(__proto__.__iterator__ = __iterator__ = <y><z/></y>.hasOwnProperty(\"__parent__\"), (function  __noSuchMethod__ (__noSuchMethod__) { return __count__ } )((__noSuchMethod__), <y><z/></y>))/*\n*/) L:if(prototype) [1,2,3,4].map else  if ((<y><z/></y>)) {return <x><y/></x>; }");
tryItOut("/*for..in*/for(let prop in function(y) { yield y; const __proto__ =  /x/ , constructor;; yield y; }) __iterator__;export prop;");
tryItOut("/*for..in*/for(let \f__proto__ =  \"\"  in eval(\" /x/g .__lookupGetter__(\\\"__proto__\\\")\", __iterator__ = 1e81 |= <><x><y/></x></>)) {(1 for (x in [])) const prototype }");
tryItOut("/*infloop*/do {throw <x/>;; } while(({a2:z2}));");
tryItOut("/*for..in*/for(constructor in (*.watch(\"__count__\", gc))) {M:if([,,z1]) gc() }");
tryItOut("if(__count__ = prop) { if (#2=033) continue ; else __count__}");
tryItOut("/*for..in*/M:for(var [__proto__, __parent__] = prototype = (__noSuchMethod__ = window) in ((uneval((false.__lookupSetter__(\"__proto__\")))))) {/*for..in*/for(const __parent__.__iterator__ in *::*) let (({ prototype: prototype, __noSuchMethod__: __proto__ }), __count__ = *::*) { throw 3; } }");
tryItOut("if( /x/g ) { if (__proto__.throw( '' )) let __proto__ = @foo;} else gc()");
tryItOut("switch(<y><z/></y>) { default:  }");
tryItOut("/*for..in*/L:for([constructor, __iterator__] = ([~@foo].filter(({}).hasOwnProperty)) in this.zzz.zzz) {}\n/*infloop*/L:while((constructor = null)){L:if(function(q) { return q; }) { if ([z1,,]) export prototype;} else { '' export *; } }\n");
tryItOut("let(prop = (<x><y/></x>).call(null, (-0), undefined), prop) { let(__noSuchMethod__ = null, function::constructor = *::*) ((function(){gc()})());");
tryItOut("throw StopIteration;");
tryItOut("for(let y in [5,6,7,8]) yield;");
tryItOut("M:if([prototype].sort(function(q) { return q; })) {export prop;return [z1,,]; } else  if (prototype = (eval(\"return  '' ;\", <><x><y/></x></>))) {throw window;gc() } else {switch(*) { case 1: continue ;break;  }/*infloop*/for(const prototype; new (function  __iterator__ () { return [z1] } ).call( /x/g ,  \"\" ); this >>>=window) {033;{} } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(const __iterator__ in ((<x><y/></x>)[undefined])) {export prototype;/*infloop*/while(false){gc()throw  /x/g ; } }");
tryItOut("/*for..in*/for(var __count__ = [11,12,13,14].map in new (Math.pow)().watch(\"__noSuchMethod__\", (new Function(\"{}\"))) !== this) {with({}) { __count__+= \"\"  < this['__iterator__'] }  }");
tryItOut("M:with({__proto__: (new <x/>)}){*;prop;\nthrow true;\n }");
tryItOut("{/*infloop*/while(([@foo.@*].sort(__noSuchMethod__.prototype)))/*for..in*/for(const prototype in ((@foo)((p={}, (p.z =  /x/g )())))) }");
tryItOut("if((yield 1.3 >= <x/>)) {export *;const __noSuchMethod__ = null, __proto__ = true; } else  if (({__count__ setter: [1,2,3,4].map,  set __noSuchMethod__()null })) if(<><x><y/></x></>) { if (*::*) {const prop = <y><z/></y>; }} else prop setter: ( /x/g ).watch else {prop = <x/>;return; }");
tryItOut("for(let y in []);");
tryItOut("L:with({__count__: [11,12,13,14].map}){throw this; }");
tryItOut("/*infloop*/do continue ; while(null);");
tryItOut("yyy");
tryItOut("__parent__ = __noSuchMethod__;");
tryItOut("return;");
tryItOut("export *;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let (<><x><y/></x></> *= function::constructor).prototype in prop for (__proto__ in  /x/ )\n) if((this if (true))) with({__proto__: <x><y/></x>}){prototype;(<x><y/></x>); } else  if ((prop = \n \"\" )) {return; } else {L:if([[]]) continue ; }");
tryItOut("/*\n*/L:do <xxx>{__noSuchMethod__}</xxx>; while((<x/> >= <x/>) && 0);");
tryItOut("let(__count__ = <x/>) ((function(){export __iterator__;})());");
tryItOut("if(<y><z/></y>) yield this; else  if (( /x/g  &= __count__) -= #3={a:#3#}) ; else {break M; }");
tryItOut("/*infloop*/for(let __parent__; false; 1e-81.@foo) {return <><x><y/></x></>; }");
tryItOut("return 0.1\nFunction");
tryItOut("for(let y in []);");
tryItOut("with({\nset: function(id) { return id } != window}){yield <x><y/></x>; }");
tryItOut("var constructor;/*for..in*/for(const [__iterator__, __count__] = __noSuchMethod__ = __count__ in <x><y/></x>) {export prop;export *; }");
tryItOut("/*infloop*/do /*for..in*/for(__parent__ in (([1,2,3,4].slice)(*::*))){ '' ; } while(\t3/0\f << [1]);");
tryItOut("L: {<><x><y/></x></>; }");
tryItOut("/*for..in*/for(var ({ __noSuchMethod__: __parent__ }) in (({constructor:  /* Comment */(p={}, (p.z =  \"\" ,  /x/ )())--, __count__ setter: function(y) { yield y; let (prop) { M:switch( /x/g ) { case __iterator__: 'haha'.split } }\nswitch(<y><z/></y>) { default: break; return;break; case __noSuchMethod__: __proto__ = <x/>;break; case __parent__: prop, prop = 1e+81;break; ;break; return  '' ;const __iterator__ = <x><y/></x>, constructor = this;break;  }; yield y; } }))) {let (prop, prototype = <y><z/></y>) { /*infloop*/for(window;  /x/ ; 1e4) return; }L:if( \"\" .isPrototypeOf( /x/g )) {return 0/0; } else  if (window\n) {var <x><y/></x> = <y><z/></y>, __parent__;throw *::*; } }");
tryItOut("M:with((function(y) { yield y; ++; yield y; })((function  __iterator__ ()__noSuchMethod__)(<x><y/></x> @  /x/g , __count__), <employee id=\"1\"><name>Joe</name><age>20</age></employee>)){L:while((((function(id) { return id } <<= @foo)(({})[5.0000000000000000000000], (-0)))) && 0)/*infloop*/for(const __iterator__; this; <x><y/></x>) export *; }");
tryItOut(" const prototype;");
tryItOut("/*for..in*/L:for(prototype in ([11,12,13,14].map)) {const __proto__ = this; }yield;");
tryItOut("if((({__parent__: ( /x/ )[ \"\" ] }))) { if ((this.__defineGetter__(\"delete\", function(y) { yield y; {}; yield y; }))) \tswitch(*) { case 4: break;  } else {yield; }}");
tryItOut("var constructor = [,,z1];\nreturn undefined;\n");
tryItOut("/*for..in*/for(let __proto__ = this.__defineSetter__(\"constructor\", (window).watch) in [11,12,13,14].map) gc()");
tryItOut("let(constructor, prototype = __parent__) ((function(){for(let y in []);})());");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const [, ({ __count__: ({ __noSuchMethod__: prototype }), prototype: ({ __iterator__: [] }) }), __count__, __parent__, ] in <x/>) {if((+1.2e3 += )) { if (null !== *::*) let __count__ =  /x/ \nyield  /x/ ;} else {export *; } }");
tryItOut("(prototype);");
tryItOut("with({prop: [@foo(1.3).unwatch(\"__iterator__\")]})return;");
tryItOut("/*for..in*/for(__iterator__ = ((yield  /x/ ).unwatch(\"__count__\")) in (({ __iterator__: __count__ }) = let (__parent__ = <x><y/></x>, prop) this)) {; }");
tryItOut("/*infloop*/do {L:if(({})) let __parent__; } while(<><>Object(this.hasOwnProperty(\"__proto__\"))</></>);");
tryItOut("switch([11,12,13,14].filter.@*) { case ({}) , (* if (getter\t)): var constructor;case <x><y/></x> for (constructor in <><x><y/></x></>): default: break; export *;case 4: continue L;break; case 5: export *;case __noSuchMethod__ =  \"\" : case 9: {var __count__, __noSuchMethod__;var prop, prototype; } }");
tryItOut("let (undefined = window, __proto__) { if(\fyield <><x><y/></x></>) return; else  if ((__count__.constructor setter= function  __noSuchMethod__ (constructor, __count__)*)) return; else *::*; const constructor; }");
tryItOut("{export __iterator__; }");
tryItOut("{/*infloop*/for(let prototype; *; __proto__) __count__, __parent__ = undefined; }");
tryItOut("if(<x><y/></x>) {yield;break M; } else {export __count__;@foo; }");
tryItOut("prototype = ();");
tryItOut("/*for..in*/for(__proto__ in true) {let __iterator__ = <x><y/></x>;; }");
tryItOut("/*for..in*/for(let [__parent__, __noSuchMethod__] = (@foo instanceof [z1][[null for (constructor in -3/0)try { let prop; } catch(__noSuchMethod__ if (function(){gc()})()) { prototype; } finally { return *::*; } ]]) for each (__parent__ in 0x99) for each (__iterator__ in this)<!--yy--> in 3/0 & <x><y/></x>) {__iterator__ }");
tryItOut("L:switch((function ([y]) { })().propertyIsEnumerable(\"prop\")) { default: if(__iterator__) yield <><x><y/></x></>;break; case 8: .2;({}); }\n");
tryItOut("while((Date()) && 0){ }");
tryItOut("/*for..in*/L:for(const __parent__ in  \"\" ) let __count__;");
tryItOut("/*for..in*/for(const prop in ((gc)(0.1))){}");
tryItOut("if(1e81) {<x><y/></x>; } else {({a1:1});return *::*; }");
tryItOut("/*for..in*/for(const prototype = @foo in  /x/g ) {export __noSuchMethod__;constructor; }");
tryItOut("/*infloop*/while(window)this;");
tryItOut("L:switch(<x><y/></x>) { case null: while(( '' ) && 0){let __parent__;const prop = <x><y/></x>, __parent__ =  /x/g ; }break; /*\n*/ }");
tryItOut("([z1,,]); const prop;");
tryItOut("L:do {export __parent__; } while((this) && 0);");
tryItOut("/*infloop*/for(let __iterator__; <><x><y/></x></>; window) {const __noSuchMethod__;; }");
tryItOut("{ }");
tryItOut("/*for..in*/for(let [yield, prototype] = (prop .@*:: @foo) in [[]]) {{} }");
tryItOut("with({}) return;");
tryItOut("with({}) { return; } ");
tryItOut("{yield *; const prop\n }");
tryItOut("prototype = prototype;");
tryItOut("with({prop: (<x><y/></x>.unwatch(\"prototype\"))}){yield; }");
tryItOut("M:switch(const __parent__ = true) { case <y><z/></y>.throw(4.): {}break;  }");
tryItOut("yield [[1]];");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __proto__ = (({}) / __parent__ >> (#2=[<><x><y/></x></>])) in 1e+81) E");
tryItOut("{export prototype; }");
tryItOut("if(( /* Comment */prop)) { if (__iterator__.prop) {{(<x/>);export *; } }} else switch(null\n) { default: yield <><x><y/></x></>;break; //h\n }");
tryItOut(";");
tryItOut("L:if(__noSuchMethod__) { if (#2=[((('haha'.split).call) || ((window)[undefined]))]) constructor['__count__']} else L: {yield gc(); }");
tryItOut("{}");
tryItOut("if(undefined) { if ([z1].__lookupGetter__(\"__iterator__\")) {return 0.1;return window; }} else {break ;export __noSuchMethod__; }");
tryItOut("if( /x/g ) {export *; }");
tryItOut("for(let y in []);");
tryItOut("L: L:with( ''  += [z1]){prop; }");
tryItOut("throw prop;");
tryItOut("{;\reval }");
tryItOut("with(window)return;");
tryItOut("{if((<y><z/></y>)[-0]) {<y><z/></y>; } else  if (__proto__ = this) export __proto__; }");
tryItOut("/*infloop*/\tM:for(var __proto__ = <x><y/></x>; 1.3; *::*) {gc() }");
tryItOut("M:do {/*infloop*/for(const constructor =  /x/g ;  '' ; *::*) {yield #3={a:#3#}; } } while((function(q) { return q; }(__noSuchMethod__: (__parent__)())) && 0);");
tryItOut("/*for..in*/for((function ([y]) { })()((-1), @foo).prototype in ((this).watch *= undefined(({}) %= <><x><y/></x></>))) {gc() }");
tryItOut("new Function\n/*infloop*/for(var constructor; <x/>.__lookupSetter__(\"__count__\"); (this(#3={a:#3#}, <y><z/></y>))) M:while((<x/>) && 0){}\n");
tryItOut("M:if(null) /*infloop*/for(<bbb xmlns=\"__iterator__\"><bbb xmlns:ccc=\"0x99.propertyIsEnumerable(\"__parent__\")\"><ccc:eee></ccc:eee></bbb>yyy</bbb>; yield __iterator__.(window); new Error(<><x><y/></x></>)) null;");
tryItOut("{export __iterator__;return; }");
tryItOut("/*infloop*/for((<><x><y/></x></>.yoyo(<y><z/></y>)); false; ('fafafa'.replace(/a/g, /a/gi))) return  /x/ ;");
tryItOut("while((this.valueOf(\"number\")) && 0){export *;continue M; }");
tryItOut("yield this;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const function(y) { yield y; export __iterator__;; yield y; } in this) __parent__;");
tryItOut("if() with(#1#,  /x/g ){let /a/gi = [1,,];; } else  if (constructor.prop setter= 'haha'.split) {<><x><y/></x></>;if(<y><z/></y>) \f{;return; } else  if ( \"\" ) yield __noSuchMethod__; } else __iterator__ = ({a2:z2}), __proto__ =  \"\" ;");
tryItOut("L:with({__noSuchMethod__: [[]].__lookupGetter__(\"__parent__\")}){{;throw <y><z/></y>; }{} }");
tryItOut("with({__iterator__: __count__.constructor.unwatch(\"constructor\")}){throw <><></></>;const prop = __noSuchMethod__; }");
tryItOut("switch(prop = ([[]])(function ([y]) { } << *::*++, constructor[<x><y/></x>])) { default: yield (#1#.prototype);break;  }");
tryItOut("return 3.141592653589793;");
tryItOut("try { yield __proto__; } catch(__parent__) { yield 1e4; } ");
tryItOut("L:do {;export *; } while(({}) && 0);");
tryItOut("switch(<><x><y/></x></>.yoyo( '' )) { case 3: export *;break; default: return *::*;break; case <x><y/></x>.((function ([y]) { })()): break; case __parent__ = true: break M;break;  }");
tryItOut("throw StopIteration;");
tryItOut("{let (constructor = this) { gc() } }");
tryItOut("if( /* Comment */<><x><y/></x></>) {__iterator__ } else break L;");
tryItOut("/*for..in*/for(var __noSuchMethod__ = (-<y><z/></y>.prototype .@x:: (prop.__proto__ = *)) in ({ __proto__: [, ({ __parent__: __proto__ })] }).__count__.__count__) {switch(<{__iterator__}><ccc:ddd><ccc:ddd></ccc:ddd></ccc:ddd></{__iterator__}>.((__iterator__ = 0x99))) { default: return;let(__parent__ = *, __iterator__) { export prototype;break; export prop;case constructor = <x/>: break; case 3 >> -3/0.yoyo((0x99.*)): break;  }while((<x><y/></x>) && 0)\f }");
tryItOut("/*for..in*/M:for(let __parent__ = <x><y/></x> in  /x/ ) {window;yield; }\nif(__count__ &=  /x/ .prototype) {prototype; } else {}\n");
tryItOut("L: true");
tryItOut("if(prop = ({})) {return;return #1#; } else  if (eval(\"L:\\fif(<><x><y/></x></>) <x><y/></x>; else { }\", this.__defineSetter__(\"prototype\", /a/gi)).prototype) continue ;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __proto__ in this) {033;; }");
tryItOut("if([<x/>]) throw <><x><y/></x></>; else  if (this ? *::* : false) [1]; else {yield;export *; }");
tryItOut("/*for..in*/for(let __parent__ = (new constructor, __proto__) for each (prototype in  \"\" )__iterator__ = ((-1).__parent__) in ) gc()");
tryItOut("/*for..in*/for( in 5.0000000000000000000000) yield;");
tryItOut("/*for..in*/for(const __proto__ = <x><y/></x>.@*.isPrototypeOf(function(y) { yield y; let __noSuchMethod__, __noSuchMethod__;; yield y; }(__iterator__, *)).propertyIsEnumerable(\"__proto__\") in null.watch(\"__parent__\", [1,2,3,4].map)) {var __proto__ = false;return this; }");
tryItOut("this.zzz.zzz;");
tryItOut("/*for..in*/for(constructor in __noSuchMethod__.(prop++)) if((this.__defineGetter__(\"prop\", function  __proto__ (__noSuchMethod__, __iterator__) { yield *::* } ))) {yield; } else  if (__iterator__.__proto__) export __noSuchMethod__;");
tryItOut("if((-1).hasOwnProperty(\"__noSuchMethod__\")) { if (033.valueOf(\"number\")) {yield __proto__; }} else /*infloop*/do throw false; while(this);");
tryItOut("let(__count__ = ({a1:1}), constructor) { with({}) return <><x><y/></x></>;");
tryItOut("L: {let (({ __count__: __parent__ }), __count__) { /*for..in*/M:for([constructor, __proto__] = <y><z/></y> in 0) {eval }\n }/*infloop*/do {__noSuchMethod__ } while(function  __proto__ (__parent__, prototype) { yield 3 } ().propertyIsEnumerable(\"constructor\")); }\f");
tryItOut("/*infloop*/\rdo (); while(false++);");
tryItOut("M:if(-[[]].__defineGetter__(\"prop\", function(q) { return q; })) { if (#1=({__iterator__: yield prop})) {/*for..in*/for\r(constructor in ((function(q) { return q; })(false)))\f{(({}).hasOwnProperty).call } const constructor;/*infloop*/for(let constructor; (<x><y/></x> , 0.1).__noSuchMethod__; [((uneval(window)))].some(this)) {gc()continue ; } } else {if((prop =  /x/ )) prop = <><x><y/></x></>; else return; }}");
tryItOut("export *;");
tryItOut("/*infloop*/M:for((Function)(__iterator__ = ({ __count__: __proto__ })); (function(y) { yield y; return __proto__;; yield y; }() :: prop); yield window(@foo, function::prototype)) continue M\n");
tryItOut("return;\n/*infloop*/do continue M; while();\n");
tryItOut("/*infloop*/for(let __proto__; true;  /x/g ) {;; }");
tryItOut("/*for..in*/M:for(let [prototype, __iterator__] = (eval(\"-prop\", new Number())) in ((true for each (__proto__ in undefined)<xxx {prop}={true} />))) /*infloop*/while(<x><y/></x>){const constructor, __noSuchMethod__ = .2; }");
tryItOut("/*for..in*/M:for(var __parent__ in #1#) ( /x/ );export __noSuchMethod__;");
tryItOut("constructor");
tryItOut("/*for..in*/L:for(const __count__ = ({__proto__ getter: (new Function(\"var prototype = prop, __iterator__ = <><x><y/></x></>;\")), __proto__: this.__defineGetter__(\"__proto__\", (1 for (x in []))) }) in (let (__parent__ = <x><y/></x>) __proto__ = <><x><y/></x></>)) /*infloop*/for(var __noSuchMethod__; new __count__-=<y><z/></y>(); eval(\"@foo\", prototype) <= (\n '' )) export *;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__proto__ in <xxx {__iterator__}={<x><y/></x>} />) {/*for..in*/for(let [__iterator__, __iterator__] = @foo ? __noSuchMethod__ : this in undefined) { } }");
tryItOut("M:if( '' ) { if (0.1) const prop, __parent__;} else {; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let ({ __parent__: __noSuchMethod__, __parent__: prototype }) in (prop).__defineSetter__( { yield undefined } )) {yield; }");
tryItOut("Function const \t__noSuchMethod__;");
tryItOut("/*for..in*/for(__proto__ in true) __count__ = __iterator__.__iterator__");
tryItOut("with({constructor: __parent__.__proto__}){{gc()throw *::*; } }");
tryItOut("");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let constructor(+ /x/ ) in ({})) return  \"\" ;");
tryItOut("throw StopIteration\n__parent__ = <x><y/></x>, constructor;, prop;\nprop = undefined;\n\n");
tryItOut("{export prop;let __count__; }");
tryItOut("<y><z/></y>");
tryItOut("gc()");
tryItOut("if(\f(null ? let (prop = <x/>) window : ((uneval(-0))))) /*infloop*/for(constructor = @foo;  \"\" ;  \"\" ) {;export __proto__; } else {yield  /x/g ; }do M:if(prototype) { if (this) __iterator__ = <><x><y/></x></>;} else export __noSuchMethod__; while((<y><z/></y>) && 0);");
tryItOut("let __proto__ = this,  \"\"  = <x/>;");
tryItOut("with( /x/g ) /x/ ;\nlet(prop, <><x><y/></x></> = undefined, __parent__) { export *;\n");
tryItOut("/*infloop*/while(<y><z/></y>)gc()");
tryItOut("switch(this.__defineSetter__(\"__parent__\", (new Function(\"var __iterator__;\")))) {  set prop __iterator__ ([, ]) { return (__proto__ =  /x/ ) }  }");
tryItOut("M:if([[]].unwatch(\"constructor\")) ; else  if (eval(\"<x><y/></x>\", <x><y/></x>)) <><x><y/></x></>");
tryItOut("{yield; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(let __noSuchMethod__ in constructor.__noSuchMethod__) /*infloop*/M:for([__proto__, , , ] = undefined%='fafafa'.replace(/a/g, Function);  \"\"  > <y><z/></y>; ([, ] = ({ __noSuchMethod__: __parent__ }))) { }");
tryItOut("export *;");
tryItOut("let(__iterator__) ((function(){prototype = prop;})());");
tryItOut("L:if(*) {yield;yield  '' ; } else return;");
tryItOut("/*infloop*/L:for(({ each: [, ], __proto__: [, , ] }) = <x><y/></x>.__defineGetter__(\"__parent__\", Math.sin).__defineSetter__(\"__proto__\",  '' ); __proto__.prototype = (<x><y/></x>)[<><x><y/></x></>]; <y><z/></y>.unwatch(\"__parent__\")) throw StopIteration;");
tryItOut("L:if(<x><y/></x>) (undefined); else  if ( '' ) {; }");
tryItOut("/*for..in*/for(__proto__.(<y><z/></y>)['prototype\f'] in ((gc)((\n({} :: null) , <><x><y/></x></> <<=  \"\" )))){with({prototype: undefined})yield <y><z/></y>;yield <x/>; }");
tryItOut("with({}) { for(let y in [5,6,7,8]) let(__noSuchMethod__) { this.zzz.zzz; } ");
tryItOut("M:while((__proto__) && 0){yield;const __proto__, ; }");
tryItOut("if(@foo.__lookupSetter__(\"prop\")) { if (<x><y/></x>.propertyIsEnumerable(\"__parent__\")) export *;} else {function(y) { yield y; window;; yield y; }return; }");
tryItOut("\nvar prop = 1e-81;\r\n{(<><x><y/></x></>); }\n");
tryItOut("if((p={}, (p.z =  '' )())) {/*infloop*/for(window;; [15,16,17,18].some((<><x><y/></x></>).watch, <><x><y/></x></>); (uneval(<x><y/></x>))) yield  /x/g ;yield  '' ; } else  if ([[1]]) switch( '' ) { case 7: break; break; default: break; case 8: break; 'haha'.splitbreak; return <><x><y/></x></>;<x/>;break; {}let prototype, __count__ = 1.3; }");
tryItOut("{{if(((constructor)(3/0))) { if (this.__noSuchMethod__ = <><x><y/></x></>) true; else {throw window;throw <x><y/></x>; }} } }");
