tryItOut("L:if(__parent__ = 3.141592653589793) { if ( /x/ ) L:switch(@foo) { case 8: case (<x/>)(): if(constructor = <x/>) {yield;__iterator__ } else  if (<y><z/></y>) return;default: yield;break; case 9:  }} else {/*infloop*/for(prototype = [[]]; *::*; <x><y/></x>\n) <><x><y/></x></>; }");
tryItOut("setter = constructor;");
tryItOut("/*for..in*/for(var [__parent__-=({__parent__: [1]})['prototype'], __count__] = ('fafafa'.replace(/a/g, function (prototype, ({ __parent__: try { with({}) ; } catch(__noSuchMethod__ if ((__iterator__)(@foo)|=<x><y/></x> ?  /x/  : <y><z/></y>)) { with({}) { export *; }  } catch(__proto__ if [11,12,13,14].sort) { return; } catch(new [[]](this)) { with({}) var constructor =  /x/ ; } , __proto__: prototype })) { return __count__.__proto__ = <y><z/></y> = (0x99 .@x:: window) } )) in /*infloop*/do throw <><x><y/></x></>; while(-1);.yoyo(false)) throw __proto__;");
tryItOut("{break ; }");
tryItOut("switch(true ? 1e81 : <x><y/></x>) { default: break; break; case [15,16,17,18].some((1 for (x in [])), ((__proto__.(false))[__parent__])): L:if(( '' .__parent__).hasOwnProperty(\"__iterator__\")) {let (__count__, __iterator__ = __parent__) { __parent__; }const prop; }break;  }");
tryItOut("with(__count__ ? true : 1.3)return __noSuchMethod__;");
tryItOut("/*for..in*/for(var __proto__ = ((yield null)) in null) yield *;");
tryItOut("/*infloop*/L:do return arguments; while(@foo.__noSuchMethod__ = <>\f<x><y/></x></>);");
tryItOut("yield;");
tryItOut("{/*for..in*/for([__parent__, prop] = <y><z/></y> in <x/> in <><x><y/></x></>) {var prop = arguments, prop = window;( /x/g ); } }");
tryItOut("/*for..in*/for(let *.eval( /x/ ).prototype in  \"\" .prototype = <x/>) var __count__, prop;if(@foo) continue ;");
tryItOut("{}");
tryItOut("if(<x><y/></x> ? <x><y/></x> : -0) { if (new __count__) var __proto__ = <><x><y/></x></>;} else {gc() }");
tryItOut("/*for..in*/for(var __count__ in Object() % __parent__ = (-0)) with({prototype:  '' .propertyIsEnumerable(\"__proto__\")})var prototype, constructor;");
tryItOut("yield prototype;");
tryItOut("L:if((__proto__ = (({constructor: __proto__ = __noSuchMethod__: *::*,  set __parent__ prop ()__iterator__ }) << *))) break ; else {yield (yield <x><y/></x>);while((\n<y><z/></y>) && 0)throw #3={a:#3#}; }");
tryItOut("yield\n");
tryItOut("/*for..in*/M:for(let [__iterator__, prototype] = <y><z/></y> in true) {return window; }");
tryItOut("L: {__noSuchMethod__ = getter;__noSuchMethod__; }\t");
tryItOut("throw __count__;");
tryItOut("L: {return;yield; }");
tryItOut("/*for..in*/for(__count__ in <x><y/></x>) gc()");
tryItOut("{export *;x::prop; }");
tryItOut("(prototype.yoyo(<><x><y/></x></>))(<><employee id=\"1\"><name>Joe</name><age>20</age></employee></>) = prototype;");
tryItOut("return <><x><y/></x></>;");
tryItOut("{; }");
tryItOut("{if(#2=[3/0]) {({}).hasOwnPropertyreturn window; } else  if ((prototype.unwatch(\"prop\"))) window; }\n{}\n");
tryItOut("/*infloop*/M:for(var __parent__ = <y><z/></y>; <x><y/></x>; <><x><y/></x></>) return __iterator__;");
tryItOut("for(let y in [5,6,7,8]) constructor = __iterator__;");
tryItOut("/*infloop*/L:while(__parent__\t)yield 033;");
tryItOut("if(eval(\"/*for..in*/for(let [constructor, __count__] = 3.141592653589793(3/0).__iterator__ = (prop = __proto__) in <y><z/></y>) let __noSuchMethod__;\", 'fafafa'.replace(/a/g, ({}).__lookupGetter__))) gc() else  if ((this.zzz.zzz)) {/*for..in*/M:for(let (new Function)(<><x><y/></x></>) in __parent__ =  /x/g ) /*infloop*/for(__count__ = null; #3={a:#3#}; [,].hasOwnProperty(\"__proto__\")) {{}return; }if(0) {let prop = 3.141592653589793, x::__parent__ = <><x><y/></x></>; } else  if ( /x/g ) export __proto__; else gc() } else {let ([({ __count__: [] }), let] =  /x/  %= this -= new <x><y/></x>(), __proto__ = new RangeError(window in true, this)) { let prototype, __iterator__ = <>\f<x><y/></x></>; } }");
tryItOut("if(({a1:1})) {return; } else  if (window) yield; else {<ccc:ddd><ccc:ddd>yyy</ccc:ddd></ccc:ddd>; }");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*/for(let __proto__ = [__iterator__, __parent__, ] =  \"\"  in 3) {let constructor, __count__; }");
tryItOut("gc");
tryItOut("/*\n*/switch(__count__-- * (((#1=[#1#]).watch)( /x/g )) === (<><x><y/></x></> <<= new (*)())) { default: ;case (( \"\" , <y><z/></y>)): \n<{__parent__}></{__parent__}>\nexport *\nbreak;  }");
tryItOut("__proto__ = __count__;");
tryItOut("with({prototype: [15,16,17,18].map(<!--yy-->, (function  prototype (__iterator__) { yield 1.2e3 } )())}){var constructor; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(@foo.__parent__ in <y><z/></y>) ");
tryItOut("if( /x/ ) { if (false) export prop; else {case 5: break; default: continue L;case null: case 2: __iterator__ = null }}");
tryItOut("<employee id=\"1\"><name>Joe</name><age>20</age></employee>");
tryItOut("L:do let __parent__; while(((<x/>.__lookupGetter__(\"prototype\"))) && 0);");
tryItOut("/*infloop*/for((__count__); ((prop.prop = <x/>.@foo) ? undefined + <y><z/></y> :  \"\" ); (this.zzz.zzz.yoyo(prop = <x><y/></x>))) {}");
tryItOut("L:with({__parent__: \ttrue}){continue ; }");
tryItOut("/*infloop*/for(arguments.throw(<x><y/></x>); (#0=({__proto__: 0x99})); prop = *::*) return <x><y/></x>; const __count__\n");
tryItOut("while((prop.__iterator__ = (window.yoyo( /x/g .prototype))) && 0)return function ([y]) { };");
tryItOut("if(*)  '' ; else  if ( '' ) {export __noSuchMethod__; } else {<x><y/></x>;throw -1; }");
tryItOut("while(([<ccc:ddd><!--yy--></ccc:ddd>.unwatch(\"__noSuchMethod__\")]) && 0)continue M;\nfalse\n");
tryItOut("{continue ; }");
tryItOut("export *\ncontinue ;\n(eval).call const __iterator__;\n");
tryItOut("{throw StopIteration; }");
tryItOut("{__parent__ = <x><y/></x>, constructor = false;export *; }\n");
tryItOut("/*for..in*/M:for(const constructor in yield 3.141592653589793\n) {yield;/*infloop*/M:for(var prop; *::* ||  /x/ ; (\rnull)(1e+81)) {(<x/>).watch } }");
tryItOut("with({prop: eval(\" '' ;\", <x><y/></x>.@foo)}){with({__iterator__: (__noSuchMethod__.prop setter= ({}).hasOwnProperty)}){export __noSuchMethod__ } }");
tryItOut("{/*for..in*/L:for(let //h\nprototype in  /x/ ) return <><x><y/></x></>; }");
tryItOut("constructor");
tryItOut("if( /x/ .__iterator__++) { if (prototype.__proto__ = ((Function).call(null, ))) L:if((p={}, (p.z = this)()).unwatch(\"__proto__\")) { if (this.zzz.zzz) (<x><y/></x>); else 'haha'.split}} else export *;{}");
tryItOut("/*for..in*/M:for(const prototype in ((Math.pow)((__noSuchMethod__ = <><x><y/></x></> || false)))){gc()if(([<x/>]) + prop.prototype = *) {([,,z1]);gc() } else  if ((p={}, (p.z = this.\t__defineSetter__(\"prop\", ({}).__lookupGetter__))())) with(this){continue L;yield *; } }");
tryItOut("let ( get prototype(prototype) { yield; } ) { gc() }");
tryItOut("/*infloop*/while(__proto__){let __proto__;yield this; }");
tryItOut("for(let y in [5,6,7,8]) yield function(id) { return id }\n");
tryItOut("M:if(({__noSuchMethod__: *\f.prototype =  /x/g })) { if (this.__defineGetter__(\"__parent__\", (export __noSuchMethod__;).watch)) {with((<><x><y/></x></> ^= null)){let prop;{} }/*for..in*//* nogeckoex bug 349964 */ for  each(__parent__ in <x/>) {var constructor = *;new Function } }}\t else /*infloop*/for(let __noSuchMethod__ = <x><y/></x>; __count__; [,]) <><x><y/></x></>");
tryItOut("with({__noSuchMethod__: false}){return null;yield; }");
tryItOut("continue ;");
tryItOut("throw StopIteration; const __noSuchMethod__;");
tryItOut("__parent__");
tryItOut("try { {} } catch(__count__) {  } ");
tryItOut("yield\n");
tryItOut("{return; }");
tryItOut("if(/*\n*/getter =  \"\" \t) { if ((function(q) { return q; }).call('fafafa'.replace(/a/g, function (__proto__,  \"\" ) { yield; } ), <x><y/></x>++)) {\t } else prototype =  /x/ ;}");
tryItOut("var __parent__\t;/*for..in*/L:for(let prop in delete) prop;\r");
tryItOut("/*infloop*/for(var constructor = void (window.(prototype)); * ? 1.2e3 :  /x/  > <x><y/></x>; (delete ('fafafa'.replace(/a/g, <x><y/></x>))) < constructor.__iterator__ = __count__) if(* - <><x><y/></x></>) with(window){;__parent__; }");
tryItOut("/*infloop*/for(__count__ = <><x><y/></x></>; (<x><y/></x>.( \"\" )); <y><z/></y>) /*infloop*/for(constructor.prop; __iterator__.(<x/>); Error(0/0,  /x/ )) {let __proto__ = <x><y/></x>, prop = *::*; }");
tryItOut("/*for..in*/for(var prop = (((undefined).watch).apply).call(<x><y/></x> ^= #1#, ) in (\t((uneval(3/0)))([1,,], 1.2e3))) /*infloop*/for(__noSuchMethod__;  '' ; <><x><y/></x></>) ;");
tryItOut("switch(this) { case 4: default:  }");
tryItOut("yield *::*");
tryItOut("/*for..in*/L:for(let [__noSuchMethod__, prototype] = ((uneval(<y><z/></y>)))['__iterator__'] = ((function  * ()<y><z/></y>).call)() in function ([y]) { }()) {M:with({prop: new Array(prototype = 1e-81)})/*infloop*/M:for(let __parent__; __count__.(({__parent__ setter: ((1 for (x in []))).call, __count__: <><x><y/></x></> })); *::*) {; } }");
tryItOut("yield\nthrow <><x><y/></x></>;");
tryItOut("/*infloop*/M:for(var __proto__; <><{__proto__}><!--yy--></{__proto__}></>; (prototype .. window)((((function(q) { return q; }).call).call([1])), __parent__)) while((constructor[(function ([y]) { })()]) && 0){return;if(undefined) throw @foo; else  if (window) export \n__proto__; else {return;gc() } }");
tryItOut("yield;\ngc()\n");
tryItOut("M:if((p={}, (p.z = ((033)[__count__]))())) {var __noSuchMethod__ = this\ngc()/*for..in*//* nogeckoex bug 349964 */ for  each(var 3 in [,,z1]) {throw 0;const __noSuchMethod__ = <><x><y/></x></>; } } else if(<y><z/></y>) {export __parent__; } else  if (this) export constructor;");
tryItOut("let (__noSuchMethod__ = __noSuchMethod__, constructor) { continue ; }\nM:with({constructor:  \"\" })gc()\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const constructor in [,]) {const __noSuchMethod__ = <x><y/></x>, __proto__ =  /x/ ; }");
tryItOut("((function (prop, set) {  } ).call(__proto__.prototype getter= Math.pow, (constructor.__parent__ = <><x><y/></x></>)).__lookupGetter__(\"__count__\"));");
tryItOut("/*for..in*/for\t(let __proto__ in <x><y/></x>) {(1.3);try { break ; } catch(prop if (function(){yield;})()) { ; } catch(prototype) { let __noSuchMethod__; }  }");
tryItOut("if(<><x><y/></x></> === __parent__) break ; else  if (3) \fyield; else {{}export __noSuchMethod__; }");
tryItOut("if([eval(\"this\",  /x/g )]) {this.zzz.zzz; }");
tryItOut("if(yield ( '' .throw(0x99))) { if (<x/>) {; } else break M;}");
tryItOut("do {/*for..in*/for(const __proto__ in ((<x><y/></x>)(undefined)))export __iterator__; } while((#1=[#1#]) && 0);{}");
tryItOut("/*infloop*/for(var ({ __count__: prop }) = __count__.__lookupSetter__(\"prototype\");  '' ; <y><z/></y> for (* in __iterator__)) {export *;return; }");
tryItOut("if(({__count__: ({prototype:  \"\" }) ::  /x/  })) [1,2,3,4].slice const __iterator__; else  if (arguments--) if(window) {export *;export *; } else (true);");
tryItOut("__iterator__, __parent__; const __parent__;");
tryItOut("/*for..in*/M:for(const  /x/g  in #3={a:#3#}) yield;");
tryItOut("let (({ __noSuchMethod__: __count__ })) { /*infloop*/M:while(window.yoyo()){;gc()let (__parent__, __count__ = break M;) { ((function ([y]) { })()); } } }");
tryItOut("let(__proto__) { constructor = __proto__;");
tryItOut("with(constructor.__noSuchMethod__ getter= [1,2,3,4].map)yield;");
tryItOut("this.zzz.zzz;");
tryItOut("/*for..in*/M:for(var prototype =  \"\" .throw(#1=[#1#])\t in [11,12,13,14].filter) {/*for..in*/for(let __proto__ in ((Math.pow)(window))); }");
tryItOut("L: return;");
tryItOut("{return function ([y]) { }; }");
tryItOut("/*for..in*/for(const [__iterator__, __parent__] = yield {} in <><x><y/></x></>) break M;");
tryItOut("if(false.__lookupSetter__(\"constructor\")) yield #1=[#1#]; else  if ((uneval(<><x><y/></x></>))) {continue M;return 1.3; } else {gc()const function::__count__ = window; }gc()");
tryItOut("(<x><y/></x>);");
tryItOut("M:if( /x/  += yield) export prop; else  if (!<><xxx {x::prop}={false} /></>) {const __proto__ = true, __count__;<x><y/></x> }");
tryItOut("if([<y><z/></y> for each (prototype in constructor)]) { if (this.__defineSetter__(\"__proto__\", function ()window)) {break \f; } else {;(<><x><y/></x></>); }}");
tryItOut("gc();\r");
tryItOut("L: {@foo;{let __proto__;prototype; } }");
tryItOut("throw __parent__;");
tryItOut("for(let y in [5,6,7,8]) let(__noSuchMethod__) ((function(){ set __iterator__ prototype (__iterator__, __count__)new (*::*).watch({{}return  /x/ ; })})());");
tryItOut("__proto__");
tryItOut("let (__iterator__ = new Error(window, *), constructor = 0.1) { function ([y]) { }; }");
tryItOut("if(-3/0) ");
tryItOut("with((1 for (x in [])))with({__proto__: [,]}){yield; }");
tryItOut("if((([1,2,3,4].slice).call(<x><y/></x>, ({a2:z2})))) { if ((__parent__.(<x><\ty/></x>))) let prop = false;} else {export *; }");
tryItOut("switch(*::*) { case 7: case ((new ([1,2,3,4].slice)().throw(({ get __parent__ __parent__ (__proto__, __iterator__) { return \nundefined }  }))) <<= true): /*infloop*/for( /* Comment */constructor; (__parent__)[window]; <y><z/></y>.constructor) {/*infloop*/for(__noSuchMethod__ = *; constructor;  /x/g ) continue M; }break;  }\n{ }\n");
tryItOut("with(new [[]]((__proto__ = <x/>), yield ({a2:z2})))do ; while((try { (true); } catch(__count__ if [1,,]) { yield <x><y/></x>; } catch(prototype if <x><y/></x>) { export *; } catch(__iterator__) { return; } finally { (undefined).watch } ) && 0);");
tryItOut("if(this) {continue L; } else break L;");
tryItOut("yield [z1,,];");
tryItOut("M:do export * while((({ prop:  /x/  }) = ({ __parent__: __iterator__, __proto__: __iterator__ })) && 0);");
tryItOut("if(this) { if (<y><z/></y>) {(-0); }} else 1.2e3;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(constructor//h\n in window) {return <><x><y/></x></>;break ; }");
tryItOut("var __noSuchMethod__");
tryItOut("/*infloop*/do {while((<><x><y/></x></>) && 0){gc()yield <x><y/></x>; }throw  \"\" ; } while(<x><y/></x> < __noSuchMethod__.@*);");
tryItOut("/*infloop*/M:for(__noSuchMethod__; [11,12,13,14].sort; ([z1,,])(__iterator__)) (this);");
tryItOut("L: {with({}) { for(let y in [5,6,7,8]) throw prototype; }  }");
tryItOut("L:if(this.unwatch(\"__noSuchMethod__\")) __count__ = __proto__, prop;");
tryItOut("if(__proto__.prototype|=[@foo].some(this)) {if(<><x><y/></x></>) { } else {yield <x><y/></x>;export __proto__; }let constructor; } else \t if ('fafafa'.replace(/a/g, [1,2,3,4].map)) break ; else /*infloop*/M:for(const __iterator__; <><x><y/></x></>; <x><y/></x>) {export *; }\n\ftrue;");
tryItOut("{L:do {/*infloop*/for(var prop; <x/>; <x><y/></x>) {throw this;export *; } } while(((this || <y><z/></y>)) && 0); }");
tryItOut("/*infloop*/while(<><x><y/></x></> > <x><y/></x>){(false);this; }");
tryItOut("if(<y><z/></y>) export *; else  if (null( /x/ , true)) {}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let <x><y/></x> in this) {(1 for (x in [])); }");
tryItOut("if(\f[].propertyIsEnumerable(\"__count__\")) {yield window;export *; } else  if (prop.prop = -({__parent__: <y><z/></y>})) { }");
tryItOut("if(this.__defineGetter__(\"prototype\", Math.sin)) constructor = this, prop = [,]; else  if (1e-81) __iterator__ = this\n");
tryItOut("if([<><x><y/></x></>]) {/*infloop*/M:for(var constructor; eval(\"yield;\", prototype); constructor =  /x/ ) #1=[#1#] } else {var __parent__ =  \"\" ;const *::*; }");
tryItOut("M:if(__count__) { if (yield <x/>) <x><y/></x>;} else {return; }");
tryItOut("/*infloop*/L:for(var (*.propertyIsEnumerable(\"__iterator__\")); /a/gi(__proto__); null) yield 1.3;");
tryItOut("; const function::prop;");
tryItOut("while((Boolean(1.2e3) >>= typeof __noSuchMethod__.__lookupGetter__(\"constructor\").__defineSetter__(\"prop\", Math.pow)) && 0){throw 0x99; }");
tryItOut("let((gc(<x><y/></x>))(__noSuchMethod__ = //h\n<x><y/></x>) = *::*) ((function(){return \f[11,12,13,14].some;})());");
tryItOut("L:while((__iterator__(__noSuchMethod__)) && 0){continue M; }");
tryItOut("this.zzz.zzz;L:if('fafafa'.replace(/a/g, Function)) let __parent__ = window, constructor;");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*/L:for(var ([(new Exception(window))]) = *::* ^ <x><y/></x> in <x><y/></x>) /*infloop*/do {gc() } while(1e+81);");
tryItOut("/*infloop*/L:for(prototype = constructor || #0=[<y><z/></y>].prop = (arguments.prototype); (\n<y><z/></y>); function::__proto__ = this.@foo) with(\t{prop:  '' [ \"\" ]});");
tryItOut("{export *; }");
tryItOut("<><x><y/></x></>;");
tryItOut("/*for..in*/for(var __noSuchMethod__ = [true].sort(function  __noSuchMethod__ () { return @foo } ).@foo in []) {if( /x/ ) {(<x><y/><\n/x>);throw [,,z1]; }export __count__; }\n");
tryItOut("continue ;");
tryItOut("while((<x/>) && 0){export *;(null); }");
tryItOut("(<><x><y/></x></>).__defineSetter__\n");
tryItOut("/*infloop*/do {gc() } while(prototype);");
tryItOut("if([window].filter(Math.pow)) /*for..in*/for(var __iterator__ in ((function(y) { yield y; <><x><y/></x></>;; yield y; })( \"\" ))){let __proto__; } else throw this;\n{}\n");
tryItOut("M:if(<x><y/></x> && <y><z/></y>) {/*infloop*/for( '' ; <><zzz>window.isPrototypeOf(undefined).constructor = <y><z/></y> -=  '' </zzz></>; <x/>.propertyIsEnumerable(\"__parent__\") > void this) {/*infloop*/M:for(({ __proto__\t: constructor, prop: prop }) = <x/>; (yield); <y><z/></y>.__proto__ = __noSuchMethod__) {return <y><z/></y>;let __proto__; } } }");
tryItOut("__noSuchMethod__");
tryItOut("L: {{M:if(function ([y]) { }) {const __parent__ = <y><z/></y>; } else  if (function::function::__proto__) {[1,2,3,4].map } else {var __proto__ = *::*; } } }");
tryItOut("/*infloop*/for(const ({ prop: __parent__ }) = __count__.__proto__ = (-1); new <><x><y/></x></>(033, this) << (<x/> == *); (this in <><x><y/></x></>)) {}");
tryItOut("if( /x/ --) __parent__ = set; else  if (<bbb xmlns=\" /x/g .constructor\"></bbb>) if(__noSuchMethod__) {let __noSuchMethod__ = true, __proto__; /x/g ; } else  if (({}).hasOwnProperty) return; else <x><y/></x> const __proto__;");
tryItOut("let set;");
tryItOut("{M:with(<x><y/></x>){prototype, __noSuchMethod__; }var prototype = true, prototype = [1]; }");
tryItOut("with({}) for(let y in [5,6,7,8]) for(let y in []);");
tryItOut("/*infloop*/for(({ __iterator__: get }) = [11,12,13,14].sort >>> <x><y/></x>; __count__.__iterator__ = <x><y/></x>; (1 for (x in []))) return");
tryItOut("if(let __count__ =  /x/ , constructor) var constructor, ; else {prop; }");
tryItOut("throw (#3={a:#3#}());\ncontinue L;\n");
tryItOut("/*for..in*/L:for(prop = Array() in  /x/g ) {(<y><z/></y>);/*infloop*/while(null)(<x><y/></x>); }");
tryItOut("prop = __noSuchMethod__;");
tryItOut("/*infloop*/for(let prop; new <><x><y/></x></>(<x><y/></x>).__defineGetter__(\"__noSuchMethod__\", Function); __count__.(5.0000000000000000000000)) {break L;yield; }");
tryItOut("if(<y><z/></y>) { if (<x><y/></x>) {yield [z1,,];yield <x><y/></x>; }} else {export prop; }");
tryItOut("/*for..in*/M:for(const [prop, constructor] = ((Date()).hasOwnProperty(\"({ prototype: [, __proto__, ] })\")) in function(y) { yield y; {}; yield y; }) {gc() }");
tryItOut("with({constructor: gc()})/*for..in*/for(let __count__.prototype in __noSuchMethod__[[[]]]) /*infloop*/L:for( '' ; 0/0; @foo) {}");
tryItOut("while(((<x/> ?  /x/  : <><x><y/></x></>.propertyIsEnumerable(\"__noSuchMethod__\"))) && 0)yield;");
tryItOut("while((prototype) && 0)/*for..in*//* nogeckoex bug 349964 */ for  each(let __proto__ in <x><y/></x>) function(y) { yield y; var constructor = <x/>, prop;; yield y; }");
tryItOut("<x/>.constructor = __proto__;");
tryItOut("/*infloop*/for(window; prototype.__proto__; ().isPrototypeOf(true.__lookupGetter__(\"constructor\"))\t) throw window;");
tryItOut("if((new gc(<><x><y/></x></>, 0) >>= (window([,])))yield; else  if (function::constructor) {yield <x><y/></x>; }");
tryItOut("if(constructor.__proto__.__noSuchMethod__ getter= function(y) { yield y; gc(); yield y; }) { if ( '' -- += (__count__ =  \"\" )) {/*infloop*/do {(0.1);__noSuchMethod__; } while(<x><y/></x>); }} else yield this;");
tryItOut("with({}) @foo;");
tryItOut("M:if(constructor) { if (null) {throw #1#; }} else {} const __count__;");
tryItOut("/*for..in*/for([__count__, constructor] = __proto__ &= <y><z/></y> in (-0)) let constructor = [1,,];");
tryItOut("switch(@foo) { case  /x/ : break;  }\n");
tryItOut("/*for..in*/for(__proto__ = <x><y/></x> in <x/>) export __parent__;");
tryItOut("if(constructor.((this.zzz.zzz))) {M:if(constructor = ([11,12,13,14].sort)) {throw <y><z/></y>; } } else  if (this %= @foo.isPrototypeOf((p={}, (p.z = this.__defineGetter__(\"__parent__\", function(q) { return q; }))()))) {switch(__noSuchMethod__ = <><x><y/></x></>) { case (x::__parent__ = @foo): ;break; break;  }do (__noSuchMethod__); while(([__count__].some(gc)) && 0); } else __iterator__ = @foo\n\nreturn ({a2:z2});");
tryItOut("throw StopIteration;");
tryItOut("/*infloop*/for(__noSuchMethod__ = (<x/>.eval((<x/>.isPrototypeOf(@foo))))[({a2:z2}) || <y><z/></y>]; new (gc)(\n(RegExp(null, <><x><y/></x></>))); null) if(let (__proto__ = false, __iterator__ = 1e+81) @foo) const constructor;");
tryItOut("yield;");
tryItOut("const __iterator__ =  /x/ ;");
tryItOut("const ;\nexport __noSuchMethod__;\n\n([[]]);");
tryItOut("/*for..in*/for(const __noSuchMethod__ in <><x><y/></x></>) {throw <><x><y/></x></>; }");
tryItOut("const prototype;");
tryItOut("/*infloop*/do {return;__proto__ = false; } while(([,])[ \"\" ]);");
tryItOut("L:if(this.zzz.zzz) {return this; } else {{} }");
tryItOut("switch((new (( /* Comment */__iterator__))(this.zzz.zzz))) { default: break;  }");
tryItOut("do  while((new Error(<x\f><y/></x>, undefined)) && 0);");
tryItOut("if(0.1) ;");
tryItOut("do {{export *; }{} } while(((({ __iterator__: __proto__ }) = \n /x/g )) && 0);");
tryItOut("__count__ = prop;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const constructor in false) {yield; }");
tryItOut("let(prototype, __iterator__ = __proto__) { return [,,];");
tryItOut("if( '' ) { if ((constructor) >= [1].propertyIsEnumerable(\"__noSuchMethod__\")) gc() else yield;}");
tryItOut("if( /x/g ) {var __iterator__ = .2; } else  if (__count__) {( \"\" );const __noSuchMethod__ = ({}); } else {gc() }");
tryItOut("yield;");
