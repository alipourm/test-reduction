tryItOut("yield null;;");
tryItOut("if(__count__ = [[], ({ __count__: prototype, prop: prototype }), ] = <y><z/></y>) {export *; } else {break M; }");
tryItOut("/*for..in*/L:for([__count__, __iterator__] = __count__.__noSuchMethod__ = (function ([y]) { })() in [] = (prototype.propertyIsEnumerable(\"__noSuchMethod__\") if (<><x><y/></x></>))) {/*infloop*/while(constructor.valueOf(\"number\")){yield <x><y/></x>; } }");
tryItOut("yield;");
tryItOut("M:switch((yield 1e+81 === <x/>)) { case 8: break; case 3: if(__noSuchMethod__ = __iterator__.yoyo(eval(\"<y><z/></y>\", <x><y/></x>))) {prop;/*infloop*/L:while(null)-3/0.yoyo( /x/ ) } else  if (({ set set(({ __iterator__: [[]] }), x::function::__parent__) { yield <y><z/></y>; }  })) {return 1e+81; }break; export __count__break; \fL:if(<y><z/></y>.eval( /x/ ).@*) {throw function(id) { return id };/*infloop*/M:for(const __noSuchMethod__; y/></ __noSuchMethod__: function(id) { return id }x>; *) export __proto__; } else  if () {yield;return 3/0; } else {M:with({__noSuchMethod__: __iterator__}){let __parent__;var prop = <><x><y/></x></>; } }break; case ((gc).call)(this): L: return; }");
tryItOut("throw __iterator__;");
tryItOut("{}");
tryItOut("throw prototype;");
tryItOut("/*infloop*/for(var ({ constructor: [, ({ __iterator__: __iterator__, __parent__: __noSuchMethod__ })], __count__: ({ __noSuchMethod__: ({ prototype: __iterator__ }), prototype: function::__proto__ }) }) = (undefined ? __proto__ :  \"\" ); ((p={}, (p.z = true)())); eval(\"{export __count__; }\", <><x><y/></x></>)) {1.3; }");
tryItOut("var prototype");
tryItOut("/*infloop*/L:while(@foo){new Functionreturn <x><y/></x>; }");
tryItOut("{}return;");
tryItOut("L: { }");
tryItOut("with({__count__: <><xxx {constructor}={(return  '' )} /></>}){if(@foo) {yield;__parent__; } else {; } }");
tryItOut("if(Function((yield <y><z/></y>), window)) { if (<x/>) throw __parent__;} else constructor");
tryItOut("with(new ((({}).__lookupGetter__).apply)())const __iterator__, __proto__\n;");
tryItOut("/*for..in*/for(let constructor in ((({}).hasOwnProperty)(new Boolean(0.1, ({a2:z2}))))){return <y><z/></y>; }\n");
tryItOut("switch(new (/a/gi)((-1), (function ([y]) { })())) { case 9: gc(){(<x><y/></x>);__proto__; }break;  }");
tryItOut("return;\n\texport *;\n");
tryItOut("{( '' );export *; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(var constructor in @foo.*) {gc() }");
tryItOut("throw <x><y/></x>;");
tryItOut("gc()\n");
tryItOut("__noSuchMethod__ = __proto__;\nreturn *::*\n");
tryItOut("return;\n{}\n");
tryItOut("with({}) with({}) for(let y in [5,6,7,8]) constructor = prototype;");
tryItOut("__parent__.prop = __proto__;");
tryItOut("M:if((prop[<><x/></>])) { if (((<><x><y/></x></>.prop) -=  = __noSuchMethod__).__noSuchMethod__) var prototype;} else {<x><y/></x>;yield; }");
tryItOut("/*for..in*/for(let __proto__ = ({a1:1}) in window) return .2;");
tryItOut("let __noSuchMethod__ = <><x><y/></x></>;");
tryItOut("let (__noSuchMethod__) {  }");
tryItOut("/*infloop*/for(let prototype = (uneval(this)); __parent__ @ __proto__; constructor + __noSuchMethod__) Math.sin");
tryItOut("if((*::*)(<x/>,  \"\" )) { if ([15,16,17,18].some(function(q) { return q; }, false)) yield; else {return; }}");
tryItOut("return <y><z/></y>\n");
tryItOut("if((__proto__.(( /* Comment */yyy | Function)))) {constructor = <x><y/></x>, __count__ = 1e-81; } else  if (\nfunction(id) { return id }.unwatch(\"constructor\")\n) {{} } else {with({}) <x><y/></x>.prop = delete; }");
tryItOut("export *;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(var __proto__ in <><x><y/></x></>) {const __iterator__ = <x><y/></x>, __parent__; }");
tryItOut("/*for..in*/\tfor(__iterator__ in true.constructor = __noSuchMethod__ = 1e-81) with({__iterator__: prop}){return 1.2e3;yield; }");
tryItOut("if(__proto__ = prop) { if (prototype|=undefined ? function(id) { return id } :  /x/ ) var __proto__ = null else if(false) {const __iterator__ = prop, constructor;<bbb xmlns:ccc=\"[({ prop: ({ __iterator__: __count__ }), __noSuchMethod__: [prop, prototype, __noSuchMethod__, function::__count__, ] }), , ({ setter: ({ prop: __parent__, prototype\t: prop }) })]\"><ccc:eee></ccc:eee></bbb> }}");
tryItOut(";");
tryItOut("const prop;(<x><y/></x>)\n");
tryItOut("for(let y in []);");
tryItOut("yield;prop");
tryItOut("/*for..in*/for(const __iterator__ = new __parent__ >>= __iterator__ = <y><z/></y>.hasOwnProperty(\"prototype\") in ([<y><z/></y>])) {(1.3.__defineSetter__(\"prototype\", [1,2,3,4].slice)).__defineSetter__/*\n*/ }");
tryItOut("if((-1)) var __iterator__ =  \"\" , __parent__;");
tryItOut("let prop, __count__ =  /x/g ;/*infloop*/do {yield <x><y/></x>; } while((-1));");
tryItOut("/*for..in*/for(let (__parent__-=__count__.prototype = let = false)((uneval([[]]))) in *::* instanceof <><x><y/></x></>) throw #3={a:#3#};");
tryItOut("/*for..in*/M:for(var __iterator__ = <x><y/></x> in undefined) {__parent__; }");
tryItOut("/*infloop*/L:for(let prototype.__proto__ = ((Math.sin).apply( for each (constructor in  '' ))); __noSuchMethod__.prototype setter= Math.sin ? (<><x><y/></x></>\n).__lookupSetter__(\"prop\") : (yield <><x><y/></x></>.yoyo(<><x><y/></x></>)); ({ get constructor prop () { return (__parent__.prototype) }  })) {switch(@foo) { case 5:  } }");
tryItOut("with({}) constructor = __proto__;");
tryItOut("do export *; while((<x><y/></x>) && 0)\n/*for..in*//* nogeckoex bug 349964 */ for  each(__noSuchMethod__ in <x><y/></x>) {var prototype = 1e-81, constructor = false;yield; }");
tryItOut("if(prototype.(<x/>) ? *.__lookupGetter__(\"__parent__\") : <y><z/></y>.__count__) { if ((yield this)) var __parent__; else {export __noSuchMethod__;__parent__ }}");
tryItOut("if((__noSuchMethod__.__parent__ = 0.1)) export *; else  if (<x><y/></x> <<= (prototype.__count__ = #1=[#1#])) {__parent__ =  \"\" , __iterator__ = <>/*\n*/<x><y/></x></>;var __iterator__; } else {break ;/*infloop*/for(<x/>; <x><y/></x>; <y><z/></y>) prototype; }");
tryItOut("M:if((let (prototype = 0/0) 1e-81).__lookupGetter__(\"__proto__\")) __parent__ setter: setter = null");
tryItOut("L:if((p={}, (p.z = <x><y/></x> || (<zzz>(arguments || <><x><y/></x></>)</zzz>.prototype setter= window))()).@*) {prototype\t = constructor;{yield undefined; }\n{prop, __proto__; }\n }");
tryItOut("if(((yield undefined).unwatch(\"prop\"))) eval else  if (<><bbb xmlns=\"(\n<y><z/></y>)\"><ccc:ddd> </ccc:ddd></bbb></>) {var prototype = <><x><y/></x></>, __count__; } else yield;");
tryItOut("if(!__count__-=<y><z/></y>.__defineSetter__(\"__parent__\", (1 for (x in [])))) /*infloop*/while(new <x><y/></x> >>>=#1#(__count__.__noSuchMethod__ getter= (new Function(\"export *;\")))); else  if (--@foo.watch(\"let\", [[]])) L: {if(constructor .@ (-0)) {throw <y><z/></y>; } }");
tryItOut("{export *;export *; }");
tryItOut("if((yield this.__defineSetter__(\"__proto__\", <x/>))) {{} } else /*infloop*/while(\n({ __count__: \r__noSuchMethod__ }) = (null > [z1])){/*for..in*/for([constructor, __proto__] = -3/0 in this) <x><y/></x>function(y) { yield y; return this;; yield y; } }");
tryItOut("/*for..in*/for(prototype = (constructor.__noSuchMethod__ getter= function (prop, __noSuchMethod__) \"\" ) in (true.propertyIsEnumerable(\"__proto__\"))) yield;");
tryItOut("function(id) { return id }; const __iterator__;");
tryItOut("/*infloop*/for\t(let prototype; Boolean(<x><y/></x>.( /x/ ) != <y><z/></y>, new Array({; })); (new Error(((new (function  __parent__ (prop)*).call(<><x><y/></x></>, <\t><x><y/></x></>)) ? this.__defineGetter__(\"__noSuchMethod__\", function  __iterator__ (__parent__, prototype) { yield this } ) : __iterator__.__proto__ getter= /a/gi), (this.__defineGetter__(\"__iterator__\", gc))))) \fyield 5.0000000000000000000000;");
tryItOut("yield ( /x/g  >= <x/>)\nexport *;");
tryItOut("do for(let y in []); while((undefined) && 0);");
tryItOut("while((*::*) && 0)yield;");
tryItOut("yield;((-0));");
tryItOut("L:do export prop; while((<><x><y/></x></>) && 0); const constructor;");
tryItOut("L:if([,] ? *::* : 3) { if (((Math.sin)())) gc() else {return <x><y/></x>;; }}");
tryItOut("L:if(prototype.prop setter= function  __count__ = this.__defineGetter__(\"__noSuchMethod__\", false) (__noSuchMethod__) { yield  \"\"  >>>=<><x><y/></x></> } \t) {if((function ([y]) { })()) gcvar __proto__; } else  if ([11,12,13,14].filter) let prop = this; else {continue L; }");
tryItOut("L:with({__proto__: yield @foo}){/*infloop*/L:while(__iterator__ = <y><z/></y>)/*infloop*/do 4.; while( \"\" ); }");
tryItOut("gc()");
tryItOut("/*infloop*/while((1e-81.__lookupSetter__(\"__noSuchMethod__\")))with({}) {}");
tryItOut("if(__count__) { if (__parent__.__count__ = (Function)(*,  '' )) /*for..in*/M:for(const [constructor, __count__] = *::*.throw( \"\" ) in ())  { <bbb xmlns=\"window.valueOf(\"number\")\"></bbb><ccc:ddd>yyy</ccc:ddd> }  else {/*for..in*/L:for(var __iterator__ in [[]]) {} }}");
tryItOut("with({}) { (function ()<x/>).call } ");
tryItOut("return __count__.__noSuchMethod__%=(constructor.(null));");
tryItOut("return window\nexport __proto__;");
tryItOut("function (prop, prop) { yield * } ");
tryItOut("if((eval(\"*::*\", <><x><y/></x></>)) @ <y><z/></y>) yield;");
tryItOut(" { yield (~__iterator__.throw(__proto__.constructor)) } ");
tryItOut("gc()\n");
tryItOut("return *::*;{}");
tryItOut("M:if(((prop = <><x><y/></x></>.isPrototypeOf((window.__defineSetter__(\"__count__\", Math.pow)))).call(, <xxx {constructor}={<x/> < __proto__} />.((__iterator__ =  \"\"  ? new ([])(this, undefined) : ( \"\" try { break ; } catch(constructor) { var prop = @foo; } finally { gc() } ))), new gc()))) {let function::__proto__, __parent__ = <x/>;var __count__, __noSuchMethod__; } else {return @foo; }");
tryItOut("with([11,12,13,14].filter){__count__, __iterator__ = <><x><y/></x></>; }");
tryItOut("return (Exception()).hasOwnProperty(\"__proto__\").valueOf(\"number\");");
tryItOut("/*infloop*/for([[] for each (__proto__ in  \"\" )].prototype = constructor +=  /x/g ; ([* if (<x><y/></x>)]); (~[].@*)) export *;");
tryItOut("/*infloop*/for(; (new Iterator()); 'fafafa'.replace(/a/g, ({}).hasOwnProperty)) __count__ = __proto__;");
tryItOut("__proto__ = <x><y/></x>.watch(\"__parent__\", <y><z/></y>)['__parent__'];");
tryItOut("var prop = *");
tryItOut("/*for..in*/for(__iterator__ = window in undefined) {(function ([y]) { })(); }");
tryItOut("L:if(yield (yield <x><y/></x>)) { if (this.__defineGetter__(\"__noSuchMethod__\", new Function) &= __count__ = (window.__iterator__ = __parent__)) if(this.__defineSetter__(\"__proto__\", undefined)) {export constructor;throw __parent__; } else __count__; else {(<><x><y/></x></>); }}");
tryItOut("throw __noSuchMethod__;");
tryItOut("/*for..in*/for(let [prop, prototype] = * in __count__) {gc() }");
tryItOut("while((([1,2,3,4].slice).call(<><x><y/></x></>, <x><y/></x>)) && 0){break L; }");
tryItOut("L: yield");
tryItOut("switch(((this).__defineSetter__)().yoyo(prop = <><x><y/></x></>)) { default: for(let y in []);case 8: L:if((\t__parent__.prototype setter= prototype / *)) {if( /x/ ) { if ( '' ) {} else {continue M;gc() }} } else  if ([({ __proto__: __count__ }), ]) break;  }");
tryItOut("export *;");
tryItOut("if(this .@*:: *::*) { if ([,,z1] ^ false) return this;} else {*::*; }");
tryItOut("continue ;");
tryItOut("while((Boolean()) && 0){[,,]; }");
tryItOut("/*infloop*/do {prop =  \"\" .throw(__proto__); } while(\t '' [this.yoyo(<y><z/></y>)]);");
tryItOut("if((+undefined)++ ? (yield (<y><z/></y>.throw(__count__))) : <zzz>((Math.pow).call(__noSuchMethod__, ))</zzz>) {/*for..in*/L:for(const __noSuchMethod__ = (<y><z/></y> .@ 3.141592653589793) in @foo.@*) {<y><z/></y>;let constructor, __parent__ = *::*;\t } }");
tryItOut("constructor.( /x/ ) const constructor;");
tryItOut("{}");
tryItOut("do return <>__proto__</>; while((\n(__proto__ < <><x><y/></x></>)) && 0);");
tryItOut("( /x/g );");
tryItOut("let (prop = (__iterator__).__lookupGetter__(\"(<x/>)[<x><y/></x>]\"), [, ({ prototype: ({ __proto__: constructor }), __iterator__: ({ prototype: ({ __noSuchMethod__: __noSuchMethod__, prototype: ({ prototype: __noSuchMethod__, __count__: __noSuchMethod__ }) }), __proto__: __parent__ }) }), , ]) { let (({ __count__: ({ __proto__: ({ __parent__: __noSuchMethod__ setter: [1,2,3,4].map }), prop: ({ prototype: __proto__ }) }), __count__: ({ __parent__: __count__, __parent__: prototype }) }) = undefined.isPrototypeOf([[1]]) & ((__proto__.__parent__ setter= (<x/>).call).__defineGetter__(\"__noSuchMethod__\", Function))) { if((uneval(__parent__ = window))) {(@foo); } else  if (((undefined.isPrototypeOf(constructor))().hasOwnProperty(\"__proto__\"))) {return; } else ([z1,,]); } }");
tryItOut("/*for..in*/for(const [__noSuchMethod__, constructor] = ([1,2,3,4].slice).call in *::* | window) {gc()return; }");
tryItOut("/*for..in*/M:for(var __count__.__iterator__ in __proto__ = <y><z/></y>) continue L;");
tryItOut("let (prop) { return; }");
tryItOut("yield (eval(\"const get = window;\", <><x><y/></x></>).__lookupSetter__(\"prop\"));");
tryItOut("{/*infloop*/do {{} } while((__proto__)); } const __noSuchMethod__;");
tryItOut("do {const constructor = window, __count__; } while((yield;) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(let __proto__ in (/a/gi)()) {if((<y><z/></y> >= 1e4)) prototype, set = ({a2:z2});/*infloop*/for(; (new (<y><z/></y>)(@foo)); with({}) with({}) {  } ) Math.sin }");
tryItOut("{return;let __noSuchMethod__, __iterator__ =  \"\" ; }");
tryItOut("/*for..in*/for(__noSuchMethod__ = let (__count__ = ) prop.(<x><y/></x>) in 4.) {(({constructor setter: ({}).__lookupGetter__ }) += __count__ =  /x/ );/*infloop*/while(let = __iterator__){throw 033;export *; } }");
tryItOut("this.zzz.zzz;");
tryItOut("{}\nyield <><x><y/></x></>;\n");
tryItOut("/*for..in*/M:for([__noSuchMethod__, __parent__] = new Error(this, 1e81) in #1#) {<><x><y/></x></>;let constructor, __count__ = constructor; }");
tryItOut("if((gc).call(\nwindow.__defineGetter__(\"__count__\", new Function).yoyo(#0=<><x><y/></x></>), )) { if (gc) {yield __proto__;(@foo); }} else yield;");
tryItOut("(__parent__ = this)\nif((prop = window;yield;)) { if (-3/0.__defineSetter__(\"prop\", window)) {return [[]];yield; } else return this;}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(\fconst __count__['__proto__'] in  /x/g ) yield false");
tryItOut("prototype = ((uneval(<x><y/></x>))), __proto__ = *;");
tryItOut("while((eval(\"[z1].__parent__ =  \\\"\\\" \", \t(!true) % eval(\"<x><y/></x>\", window).yoyo((this++.constructor = (<xxx {constructor}={@foo} />.(( /x/  if (<><x><y/></x></>)))))))) && 0)/*for..in*/L:for(let __noSuchMethod__ in window) {}");
tryItOut("while((this) && 0){gc(<><x><y/></x></>); }");
tryItOut("const ;");
tryItOut("if(__count__.((this.zzz.zzz))) {{}yield; } else  if ((--[prop%=window].filter(/a/gi))) <employee id=\"1\"><name>Joe</name><age>20</age></employee> else {gcreturn; }");
tryItOut("return;");
tryItOut("yield (false .. prototype).throw(__count__);");
tryItOut("/*for..in*/L:for([prototype, __parent__] = ([15,16,17,18].some(<x><y/></x>, ({a1:1}))) in (<y><z/></y>.@*)) L:if(-3/0)  else  if (<><x><y/></x></>) const prop =  /x/g ;");
tryItOut("/*infloop*/M:for( /x/g ; eval(\"let __parent__, prototype = <x/>;\", ({})); *--) gc()");
tryItOut("/*for..in*/for(const [prop, __proto__] = ( /x/g  % <x/>)++ in (Boolean())) gc()");
tryItOut("{; }");
tryItOut("throw <><x><y/></x></>;\nreturn;\n");
tryItOut("while(({}) && 0){{} }");
tryItOut("/*infloop*/for(__proto__; ('fafafa'.replace(/a/g,  /x/ )); function::__parent__ = (this.zzz.zzz\n) :: 5.0000000000000000000000.prototype = <x><y/></x>) gc()\nexport *;");
tryItOut("with(<><x><y/></x></>);");
tryItOut("/*infloop*/do {break ; } while(new (/a/gi)({}));");
tryItOut("let (__noSuchMethod__, [({ prop: __noSuchMethod__ }), , , ({ constructor: __count__, __noSuchMethod__: constructor }), ({ __count__: prop, __proto__: __count__ })]) { prop = window; }");
tryItOut("/*infloop*/for(__proto__; (__proto__ = [1]); (__parent__ = <x/>) - new Iterator(<><x><y/></x></>, (-1))) yield function ([y]) { };");
tryItOut("with(constructor = <><x><y/></x></>){( \"\" );throw window; }");
tryItOut("do (__proto__);\nyield true;\n while((<><zzz>({__parent__: yield prototype})</zzz></>) && 0);");
tryItOut("M:if(null( /x/g , const constructor;)) {const __parent__, __parent__;function  prototype (prop) { yield; }  } const __parent__;");
tryItOut("{(prototype);\nexport *;\n }");
tryItOut("M:with({__parent__: (<y><z/></y>.__lookupGetter__(\"__noSuchMethod__\"))}){; }");
tryItOut("(window);");
tryItOut("{/*infloop*/L:for(let prop = @foo; |;  /x/ ) {return; }; }");
tryItOut(";");
tryItOut("M:do {if(*::*.unwatch(\"<x><y/></x>\")) return; else throw <><x><y/></x></>;export __count__; } while((prop.__noSuchMethod__) && 0);");
tryItOut("/*infloop*///h\ndo function (__proto__, prototype)<x><y/></x> while(@foo.valueOf(\"number\"));");
tryItOut("/*for..in*/for([__parent__, set] = ([undefined]) in *) ");
tryItOut("throw StopIteration;");
tryItOut("/*infloop*/L:while(eval(\"function  __proto__ (__count__)<x><y/></x>\", (-0))){export __count__; }");
tryItOut("/*for..in*/for(let __parent__ = (({constructor: <x/>})) in (get = <y><z/></y>)()) {M:if(prototype = this.__iterator__) if(1e+81) {export \r__noSuchMethod__; } else  if (window) return null; else  if (window.valueOf(\"number\")) {switch(true) { case 1: break;  }return; }{constructor, __parent__;var constructor = <y><z/></y>; } }");
tryItOut("M:while(((yield (uneval(window)).eval(([11,12,13,14].map)))) && 0){(function(id) { return id });return; }");
tryItOut("/*infloop*/for(let [] = __noSuchMethod__ = __proto__; ((yyy.( /x/ )).@*); <y><z/></y>) {{} }\t");
tryItOut("L: {return; }");
tryItOut("/*for..in*/for(prototype in ([, [, prototype]] = (<x/>)(([undefined])))) {return;if(<><{__noSuchMethod__}></*\n*/ccc:ddd><xxx>{__iterator__}</xxx></ccc:ddd></{__noSuchMethod__}></>) (*::*); }");
tryItOut("{return \n-1.__lookupGetter__(\"__parent__\");return Date(<x><y/></x>, undefined)\r; }");
tryItOut("let(__noSuchMethod__ = (undefined.isPrototypeOf(<y><z/></y>).__lookupSetter__(\"constructor\")), [] = __parent__ =  \"\" ) ((function(){with({}) with({}) { yield  /* Comment */<x/>; } })());");
tryItOut("{let __count__, __parent__ = 4.;switch(4.) { default: return;break;  } } const __proto__;");
tryItOut("yield;(1 for (x in []))");
tryItOut("/*infloop*/for(<x/>; const __iterator__; ({ __parent__: __noSuchMethod__ }) = ((yield ([11,12,13,14].sort)))) {export prototype;(<\t><x><y/></x></>); }");
tryItOut("L: const __count__ = prop;");
tryItOut("if(this) { if (__count__ =  '' [*::*.@*]) ;} else L:with({__noSuchMethod__: __count__}){yield; }");
tryItOut("let(__count__, __noSuchMethod__) { (-0);");
tryItOut("let (prop = this <<= null--, prototype) { var prototype, __proto__ =  '' ; }");
tryItOut("let(__iterator__ = *) { yield false;");
tryItOut("if((((<><x><y/></x></>).__defineSetter__).apply).call((__iterator__%=__iterator__), false, new (function (__proto__, __count__) { return 033 } )())) while((<x><y/></x>.__proto__[new (__count__ - 0x99)(yield <x><y/></x>, this)]) && 0)if(((<x><y/></x>)())) prop = 1.2e3; else yield __proto__; else if(<bbb xmlns:ccc=\"this.zzz.zzz\"><ccc:eee></ccc:eee></bbb>) { if (((__proto__.__iterator__)())) ;\nexport __parent__;\n\t} else {gc()continue L; }");
tryItOut("if((prop.__count__ setter=  \"\" )) {__iterator__;const \t__iterator__ = <x><y/></x>, __noSuchMethod__; } else {{}{} }");
tryItOut("if([15,16,17,18].sort((<><x><y/></x></>).watch, this)) { if ((new (-0.__noSuchMethod__ = [1,,])(#3={a:#3#}, <y><z/></y>)) << __count__[prop =  /x/g ]) /*infloop*/M:for([1]; (this for (x::__parent__ in #3={a:#3#})) >> eval(\"<x><y/></x>\", prop); constructor) {/*infloop*/while(let (prop = this) *::*){yield;const prop = window; } } else {__count__ = __count__; const constructor; }}");
tryItOut("{export __noSuchMethod__;const __count__ = *; }");
tryItOut("/*infloop*/for( /x/g .yoyo(__iterator__) >>> ({__noSuchMethod__: 3/0 }); (new Number(null,  /x/ )); (yield (__count__ = []++))) __parent__;");
tryItOut("let(constructor, prop) { let(prop, prototype) ((function(){yield __iterator__ =  '' ;})());");
tryItOut("\n");
tryItOut("export *;<><x><y/></x></>\n");
tryItOut("/*for..in*/L:for(const __parent__ in false) {[z1,,];gc() }");
tryItOut("if( /x/g ) { if (0.1) {[1,2,3,4].slice }} else {return 3/0;export *; }");
tryItOut("/*for..in*/M:for(const [constructor, prop] = window in ) while((undefined) && 0){1e81;; }");
tryItOut("return __parent__;");
tryItOut("(new Function(\"return this;\"))(function (__parent__, constructor) { yield  \"\"  } ).apply");
tryItOut("export constructor;");
tryItOut("/*infloop*/do {return\n{} } while([__noSuchMethod__, /*\n*/, ({ __proto__: __proto__, constructor: __proto__ })] = this.zzz.zzz);");
tryItOut("switch(@foo.__defineGetter__(\"__parent__\", [1,2,3,4].slice) -= <employee id=\"1\"><name>Joe</name><age>20</age></employee>) { case 0: L:if(<x><y/></x>) {yield @foo; } else  if (function::__count__) {__noSuchMethod__;( /x/ ); }break; break; case 6: case (p={}, (p.z = __parent__ = __count__)()): break; default: let  { throw <>{yield;let __iterator__ = *::*, __iterator__;//h\n }</>; = window; } ;case 1:  }\nL: export *;");
tryItOut("L:if(__noSuchMethod__) (1 for (x in [])) else  if (null) {export <x><y/></x>;__iterator__ }");
tryItOut("do if((5.0000000000000000000000 - <x><y/></x>)) {<x><y/></x>; } else  if (\ntrue) var [1,,]; while((-function () { yield <><x><y/></x></> } ()) && 0);");
tryItOut("/*infloop*/do  if (* :: window) while((window[prop]));");
tryItOut("gc() const __count__;");
tryItOut("with()return this;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(var __proto__ in new (this)()) ;");
tryItOut("export *");
tryItOut("with(( /x/g  for (constructor in true))){const __parent__, prototype;continue ; }\n");
tryItOut("/*for..in*/for(const __proto__ = __noSuchMethod__ in *::*) {yield; { return <><x><y/></x></> }  }");
tryItOut("__iterator__");
tryItOut("/*infloop*/while(\n<><x><y/></x></>.propertyIsEnumerable(\"__iterator__\")\n)/*infloop*/for(__noSuchMethod__; null; null) gc()\ndo __count__ = true; while(([z1,,]) && 0);");
tryItOut("{yield; }");
tryItOut("/*infloop*/for(({ prop: constructor, __count__: ({ __iterator__: __noSuchMethod__, prototype: __count__ }) }) = [__proto__, __noSuchMethod__] = this.zzz.zzz;  /x/  >=  /x/g ; ([[1]] for each (prop in this))) {__parent__;export __proto__; }");
tryItOut("do let prototype = <><x><y/></x></>; while(((+<x/>)) && 0);");
tryItOut("/*for..in*/M:for(__noSuchMethod__ in ((function () { yield this.__defineGetter__(\"__count__\", eval) } )(constructor.(<><employee id=\"1\"><name>Joe</name><age>20</age></employee></>)))){with(0){/*infloop*/for(var  get __count__ x::__noSuchMethod__ (__iterator__)undefined = this.zzz.zzz .@ !<x><y/></x>; [15,16,17,18].some([1,2,3,4].map, __iterator__).unwatch(\"__count__\"); \n(prop.__noSuchMethod__ = constructor)) return; } }");
tryItOut("return this; const __iterator__;");
tryItOut("/*for..in*/L:for(var [__iterator__, __iterator__] =  /x/g ++ in <x><y/></x>) {}");
