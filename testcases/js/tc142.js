tryItOut("/*infloop*/for(let this = (yield  '' ) /= __noSuchMethod__.__parent__ setter= 'haha'.split; window |=  '' ; ('fafafa'.replace(/a/g, (new Function).call) -= <><x><y/></x></>.eval(<><x><y/></x></>))) {gc()var __iterator__; }");
tryItOut("if([((this.zzz.zzz)((p={}, (p.z = this)()),  \"\" ) !== <x><y/><\t/x>.__parent__)]) export *; else  if ([11,12,13,14].filter) /*infloop*/L:do export *; while(<><x><y/></x></>);\nthrow  /x/g ;\n");
tryItOut("([1]);L: {throw this;1e4; }");
tryItOut("return;");
tryItOut("/*for..in*/for(const (yield [z1]).__parent__ in ((({}).hasOwnProperty)(*))){L:switch(<x><y///h\n></x>) { case  /x/g : true;case <><x><y/></x></>: gc()break; case <x><y/></x>: break;  } }");
tryItOut("/*infloop*/L:for(var [, , prototype, , ] = (new Boolean()++); ([<x><y/></x> if (__proto__)]); ({constructor getter: ({}).hasOwnProperty })) {return;/*for..in*/M:for(__parent__ = Math.sin() in window) ; }");
tryItOut("/*infloop*/while(yield [(prototype = null)].constructor)/*infloop*/L:do {yield window;/*\n*/ } while(({a1:1}) + (function  __count__ () /x/ (window, undefined)));");
tryItOut("while((0.1) && 0)const __proto__, prop = 1e4;");
tryItOut("return true.unwatch(\"__proto__\").__defineSetter__(\"__count__\", ({}).__lookupGetter__);");
tryItOut("if((let (__parent__ = <x><y/></x>) arguments.__proto__ = __iterator__ = <><x><y/></x></> if (__noSuchMethod__.(<x/>)))) {(<x><y/></x>); }");
tryItOut("continue M;");
tryItOut(";");
tryItOut("if(1e4.eval(undefined)) {{} } else  if (!null) (gc).call else {yield; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var [<><x><y/></x></> if (true)]['__iterator__'] in new [1]) <>(yield ('fafafa'.replace(/a/g, <x/>)))</>;");
tryItOut("if(yield <x><y/></x>) { if (__proto__|=.2 @ <><x><y/></x></> ? new (({}).__lookupGetter__)(\t) : (p={}, (p.z = prototype.__noSuchMethod__ setter= ({}).__lookupGetter__)())) return  \"\" ;} else const constructor = this;");
tryItOut("{L:if(*::* || <x><y/></x>) { if (((new RegExp()))()) export *\n} else {yield; }\f }");
tryItOut("/*infloop*/M:while\n({}){return null;{} }");
tryItOut("{__iterator__ = <y><z/></y>, constructor\ngc()if((({this: undefined}) %= <x><y/></x>.@foo)) {throw <x><y/></x>; } else L: ; }");
tryItOut("M:with(<x/> >>> window){return; }");
tryItOut("/*infloop*/L:for(constructor = [<x><y/></x> for (__iterator__ in <><x><y/></x></>) if (undefined)]; ((<x><y/></x>.(__proto__)).hasOwnProperty(\"constructor\")); __iterator__.(prototype)) {return <y><z/></y>;export *; }");
tryItOut("/*for..in*/for(var [prototype, __parent__] = __noSuchMethod__ = window in  /* Comment */function::prop) /*infloop*/do {throw 1e-81;(new Function(\"x\")) } while(true);");
tryItOut("#1=[#1#]");
tryItOut("{yield; }");
tryItOut("if(1e-81 = <x/>) { if ([11,12,13,14].filter) {yield *;export constructor; } else <x/>}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__proto__ in this.__defineSetter__(\"__parent__\", Math.pow)) continue L;");
tryItOut("/*infloop*/do export *; while(-(p={}, (p.z = <x/>)()));");
tryItOut("if(<employee id=\"1\"><name>Joe</name><age>20</age></employee>.([15,16,17,18].some(<x/>, *::*))) \f{ if ( /x/g ) {<x><y/></x>/*infloop*/M:for(<y><z/></y>; <x><y/></x>; <x><y/></x>) {window } }} else {L:  for (prototype in (-0))(__iterator__); }");
tryItOut("L:with([[<x><y/></x>].filter((1 for (x in [])))].some(true)){/*infloop*/for(((function  __noSuchMethod__ (prop, __parent__) { return <y><z/></y> } ).call(1e4, ));  \"\" .yoyo(<x><y/></x>); __parent__.__proto__ setter=  /x/g ) return 0\n }");
tryItOut("if( '' ) export __proto__; else {(3); }");
tryItOut("{yield 3/0; }");
tryItOut("if(( /x/  ::  /x/ )) ({}).__lookupGetter__ else return @foo;");
tryItOut("while(((0.1 ^= false |= (uneval(1.3)) ^ ((-0) - *) .@*:: * @ this)) && 0){export *;continue M; }");
tryItOut("{}\nthrow <><x><y/></x></>;\n const __parent__;");
tryItOut("{return; }");
tryItOut("let (__proto__ = *--) { return  /x/g ; }");
tryItOut("let(__iterator__ = \f(<><x><y/></x></>)() / <>([[]] for each (__proto__ in 0.1)).unwatch(\"<><> </></>\")</>, ({ __parent__: ({ <><xxx>{prototype}</xxx></>: ({ prototype: ({ prop: __count__, __iterator__: __proto__ }) }) }), constructor: prototype })) { \tprototype, prototype = window;");
tryItOut("{;export prop; }");
tryItOut("L:do return; while(( /x/ ) && 0);");
tryItOut("M:switch(__count__.constructor = ({constructor: (Iterator(@foo, false)) << (* for each (__proto__ in [,,]) if (<y><z/></y>).__proto__ ? [033] : eval(\"[1,2,3,4].map\", false || <y><z/></y>)), __noSuchMethod__ setter: (__noSuchMethod__ = __count__).apply })) { default: for(let y in [5,6,7,8]) for(let y in [5,6,7,8]) __iterator__ = prop; }");
tryItOut("/*for..in*/\tfor(let @foo['function::__iterator__'] in *::*) ");
tryItOut("/*infloop*/for(prop; ( /x/  ?  ''  : prototype); ((this.__defineGetter__(\"constructor\"/*\n*/, function(y) { yield y; let __noSuchMethod__ = undefined;; yield y; })) += ({constructor: <><x><y/></x></> }))) (1e81);");
tryItOut("if(window) { if ((0.1\n >>> try { return; } catch(__noSuchMethod__) { return; } .constructor getter= function ()__parent__, [];)) export constructor;} else {return;null; }");
tryItOut("/*infloop*/for( \"\" ; <><x><y/></x></>;  /x/g ) gc()");
tryItOut("for(let y in [5,6,7,8]) let(prototype, __iterator__) { <><x><y/></x></>;");
tryItOut("/*for..in*/Lfor(const __iterator__ = (eval(\"L:switch(({ prototype: __proto__ }) = <><x><y/></x></>) { default: break; case 7: while((@foo) && 0){yield  '' ; }case @foo: break; case __iterator__.__iterator__ ^ prototype = null: return <x><y/></x>;break;  }\", new __proto__.propertyIsEnumerable(\"prototype\").propertyIsEnumerable(\"__proto__\"))) in .) __proto__ = <><x><y/></x></>;");
tryItOut("/*for..in*/L:for(\rconst __count__ in <y><z/></y>) {}");
tryItOut("if((__count__).eval(({})())) { if (<x/>.__defineSetter__(\"constructor\", [1,2,3,4].slice)) yield;} else {let prototype, __count__;continue ; }");
tryItOut("*");
tryItOut("/*infloop*/M:do {yield; } while((<><x><y/></x></> |=  '' ))");
tryItOut("let(__noSuchMethod__) ((function(){})());");
tryItOut("with({}) this.zzz.zzz;");
tryItOut("switch( /x/ .)\t { case 1: /*infloop*/L:for(function::__count__ = ((constructor.__parent__)); this.__defineSetter__(\"prop\", ( \"\" ).apply); (#1# || function(id) { return id })) /*infloop*/while(this)let __parent__, prototype;\fbreak; for(let y in [5,6,7,8]) for(let y in [5,6,7,8]) @foo;/*infloop*/while(<><x><y/></x></>){let prototype =  \"\" , __iterator__;(prototype); }default: {}break;  }");
tryItOut("M:if(*::*) let delete, __iterator__ = window; else {gc() }");
tryItOut("if(('haha'.split)(__iterator__.__proto__ getter= [1,2,3,4].map)) { if ((gc())) [1,2,3,4].map else {__parent__var __proto__; }}");
tryItOut("true;");
tryItOut("with\n(prop.(<><{__iterator__}><ccc:ddd> </ccc:ddd></{__iterator__}></>)){export *; }");
tryItOut("export __noSuchMethod__");
tryItOut("yield <></>.*;");
tryItOut("if((yield window)) {let __count__;gc() } else gc()");
tryItOut("M:if((yield  /x/g )) ; else  if (__count__.__parent__ = (new (({}).hasOwnProperty)(<y><z/></y>))) {let prop = @foo;(0/0); }");
tryItOut("with((! /x/  ? <><x><y/></x></> : *))/*for..in*//* nogeckoex bug 349964 */ for  each(let prototype in window) gc()\ncontinue L;\n");
tryItOut("/*for..in*/for(let [__noSuchMethod__, __parent__] = new true(__count__, 1e4) & ( /x/ .prop) in *::* ^= <x/>) /*infloop*/for(let __proto__ = prototype = <y><z/></y>; __noSuchMethod__.(prop); new (new Function)(([15,16,17,18].sort(gc, prototype)).unwatch(\"__proto__\"), delete = true)) if(__parent__) {;const constructor = <><x><y/></x></>; } const constructor;");
tryItOut("/*for..in*/for(const ({ __iterator__: constructor }) in ({ get prop(__iterator__, __parent__) { \nyield <><x><y/></x></> }  }) += null.__defineSetter__(\"__parent__\", function(q) { return q; })) (function(id) { return id });");
tryItOut("with(prop( >>= 033 .@ this <= #1#)/*)L: {(0x99).__defineSetter__ }");
tryItOut("/*infloop*/for(({ __parent__: __count__, prop: (<x/>) }) = this.zzz.zzz; [15,16,17,18].sort([1,2,3,4].map, [z1,,]); @foo\n) gc()");
tryItOut("if(false ?  \"\"  : {} % <><x><y/></x></> instanceof  /x/ .__lookupGetter__(\"__noSuchMethod__\")) var constructor = <><x><y/></x></>, constructor = __iterator__; else  if (prop || 1.3 instanceof *) return; else {gc() }");
tryItOut("return;");
tryItOut("gc()");
tryItOut("if(this(*::*, <x/>).__iterator__|=constructor.((({__iterator__ getter: eval })))) /*infloop*/for(prop; <y><z/></y>;  \"\" ) {(<y><z/></y>);let prop = false, __iterator__ = <><x><y/></x><//h\n/>; } else  if (()) if((constructor == prop)) { if (null) \f{;gc() } else var __count__;}");
tryItOut("return __parent__; const __parent__;");
tryItOut("/*for..in*/for(prop = (yield  ''  >>> \t-0).__defineSetter__(\"constructor\", (new Function(\"export __noSuchMethod__;\"))) in true ? *::* : 1e+81) return;");
tryItOut("L: export __parent__\nlet prototype = @foo, __count__;");
tryItOut("if(__parent__.__count__ = __noSuchMethod__) {return;yield <><x><y/></x></>; } else let prop = this, __proto__ = (function ([y]) { })();");
tryItOut("throw *::*");
tryItOut("let(__noSuchMethod__ = function  __iterator__ (__iterator__) { return (<><x><y/></x></>.__defineSetter__(\"prototype\", function  prototype (prop, __parent__) '' )).call(((\n /x/ ) | this), __noSuchMethod__, this.__defineSetter__(\"__count__\", function(y) { yield y; yield;; yield y; })) } (eval(\"L: (window);\", __noSuchMethod__ = (p={}, (p.z =  /x/g )())), <x/>), prototype = (/a/gi( \"\" , window))) ((function(){for(let y in []);})());");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(var constructor in <x/>) yield;");
tryItOut("{let(({ __parent__: __parent__, __parent__: prototype }) = <x/> for (__noSuchMethod__ in function::__count__), prop = 033) ((function(){return  /x/g ;})()); }");
tryItOut("/*infloop*/L:for(Object(throw [[1]];); (-- ''  ^ .@foo); prototype.(({prototype: constructor }))) {false; }");
tryItOut("while((([<y><z/></y>])) && 0){continue ;if(<x><y/></x>) { if (*::*) return [[]]; else {{} }} }");
tryItOut("/*infloop*/L:for(\tconst prototype; ({ __iterator__: __proto__, __proto__: prop }) = @foo.watch(\"__parent__\", [1,2,3,4].slice).@foo; [__iterator__.( /x/g .throw(window), this.__defineSetter__(\"__parent__\", new Function).__iterator__)].sort(/a/gi)) {if(<y><z/></y>) {continue ;gc() } else  if (window) {gc()break L; }yield; }");
tryItOut("return\n/*for..in*/for(const __count__ in ((Math.pow)(#0=({__count__: true})))){}");
tryItOut("with((__parent__|=@foo))L:if((__count__ = prop)) break ; else <x/>");
tryItOut("/*infloop*/L:for(var __noSuchMethod__ = <x><y/></x> !== [1,,]; gc(); <><x><y/></x></>.__defineSetter__(\"__noSuchMethod__\", (<x><y/></x>).__defineSetter__)) yield <x/>;");
tryItOut("/*infloop*/for(var \t__proto__; __noSuchMethod__ = __iterator__; ((-0))(<><x><y/></x></>, false)) {yield;<><x><y/></x></>.__defineSetter__(\"__iterator__\", (new Function(\";\"))) }");
tryItOut("if(<x/>) {break L; }\t else {<x><y/></x>constructor }");
tryItOut("__parent__ = this;");
tryItOut("L: const prototype;");
tryItOut("/*for..in*/for(const __iterator__.__noSuchMethod__ setter= ( /x/g ).call['prototype'] in ((({}).hasOwnProperty)(<x/>))){(arguments);let prop = function(id) { return id }, prototype = *; }");
tryItOut("/*for..in*/for(const [__noSuchMethod__, __parent__] =  ''  .. <x/> in __count__) return;");
tryItOut("/*for..in*/for(prototype in (((<x><y/></x>.( /x/g )))((__iterator__.(({a1:1})))))){return [[1]]; }");
tryItOut("; const __iterator__;");
tryItOut("if(false !== prototype % prop.__lookupGetter__(\"__proto__\")) {with((window.__iterator__)){with((-1))export *; }throw this; }");
tryItOut("if(this) yield __iterator__; else  if (([1e+81 for (constructor in <x/>)])) v else {break M;throw 033; }");
tryItOut("/*infloop*/do {{} } while(window !== <x><y/></x>);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__count__ in constructor.__iterator__) yield <x><y/></x>;");
tryItOut("if(()) { if (yield (prop = __iterator__)) {if( '' ) { if (<x><y/></x>) [1,2,3,4].slice else export __parent__;} }} else const ({a1:1}) = false, __proto__ = <x><y/></x>;");
tryItOut("with({constructor: new function(y) { yield y; return undefined;; yield y; }(<><x><y/></x></>)})export *;");
tryItOut("throw StopIteration;");
tryItOut("if([1e81].some(5.0000000000000000000000).propertyIsEnumerable(\"__iterator__\")) ({ prototype: [constructor, __noSuchMethod__, constructor, __parent__, ] }) else  if ((((window if (constructor//h\n))) %= ((yield false)).__lookupSetter__(\"__proto__\"))) yield undefined; else if(<y><z/></y> == <x><y/></x>) { if ([z1]) {continue ;; }} else {return <><x><y/></x></>; }");
tryItOut("/*for..in*/for(const prototype in (((((Math.sin).call(__iterator__, (-0), 0/0)).hasOwnProperty(\"[]\")).watch)(arguments instanceof [[]].eval(this << true))))if( /* Comment */Function) { if (true.valueOf(\"number\")) {yield; }} else {gc() }");
tryItOut("while((let (constructor, __iterator__) let (setter = null) <\tx><y/></x>.constructor) && 0){try {  } finally {  \"\"  } if( \"\" ) { if (<y><z/></y>) return 1.3; else {export prototype;constructor = *; }} }");
tryItOut("with({}) { with({}) return ; } ");
tryItOut("yield; const __iterator__;");
tryItOut("with({}) { break ; } ");
tryItOut("/*for..in*/M:for(const prop = *::*.__defineSetter__(\"__parent__\", //h\n /x/ ) in <><x><y/></x></>) {return <><x><y/></x></>; }");
tryItOut("M\n:with({__noSuchMethod__: new (<x><y/></x>.(*))() %= yield try { {} } finally { export prototype; } }){; }");
tryItOut("gc()");
tryItOut("/*infloop*/M:for(let __noSuchMethod__ = 3; undefined; undefined) function  __noSuchMethod__ () { yield {} } ");
tryItOut("let(__count__) ((function(){throw StopIteration;})());");
tryItOut("do if(( '' .isPrototypeOf(-3/0))) return this;\n else const __parent__, __count__ = <x><y/></x>; while(() && 0);");
tryItOut("if(({__proto__: window })) {Math.sinbreak L; }");
tryItOut("M:while((new (function (__count__) { yield undefined } )()) && 0)<!--yy-->");
tryItOut("with(((new Function)()))if('fafafa'.replace(/a/g, ({}).__lookupGetter__)) (__noSuchMethod__).call else  if ((this.__defineGetter__(\"__count__\", (1 for (x in []))))) continue ; else __proto__;");
tryItOut("/*for..in*/for(let __iterator__ in -<><x><y/></x></>.prototype) {/*infloop*/while(true)export prototype; }");
tryItOut("if(<x><y/></x> *= eval(\"{}\", <><x><y/></x></>)) { if (1e4) var constructor, __parent__;} else {let prototype = <><x><y/></x></>, __proto__ = 1.3; }");
tryItOut("do gc() while((@foo) && 0);");
tryItOut("gc()yield null;");
tryItOut("return;");
tryItOut("L: {{}return .2; }");
tryItOut("(null)\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var (String(false, <>/x></>)).__parent__ in  '' ) {/*for..in*/for(var __proto__ in (((new Function(\"prop = <><x><y/></x></>, prop;\")))())){{}yield; }<><x><y/></x></>; }");
tryItOut("return\nvar constructor = 033;");
tryItOut("while(((__proto__ =  \"\" ) <= yield <x><y/></x>) && 0){return; }");
tryItOut("yield /*\n*/*\nbreak ;");
tryItOut("while((3) && 0);");
tryItOut("let (({ __parent__: __iterator__, __parent__: __noSuchMethod__ }), prototype = __parent__) { M:while(( '' ) && 0){prototype;throw prop; } }");
tryItOut("/*infloop*/for(prop; -1 * null; new Boolean().watch(\"__noSuchMethod__\", ({ __noSuchMethod__: prototype, __iterator__: prototype }))) {throw true; }");
tryItOut("switch(({ set __noSuchMethod__ __proto__ () { return [,,] }  })) { case 0: default: break; case 7: break;  } const __parent__;");
tryItOut("/*infloop*/for(1e-81;  \"\" ; <><x><y/></x></>) ");
tryItOut("while((prototype.(__parent__)) && 0){/*for..in*/for(const __iterator__.prop in  '' ) export *; }");
tryItOut("return (Boolean(((yield <><x><y/></x></>))));");
tryItOut("return;");
tryItOut("if() (<y><z/></y>);");
tryItOut("if(window) export yield; else  if (1.2e3) {yield; }");
tryItOut("if(-0) yield; else {export *;{} }");
tryItOut("/*infloop*/while(1e81)export *;");
tryItOut("with({__parent__: [11,12,13,14].sort});");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(0/0.__count__\f in (arguments++ >> <><x><y/></x></>)()) {}");
tryItOut("export __noSuchMethod__\n");
tryItOut("{L:with(new __parent__(#1=[#1#], undefined))L: {var __iterator__; }; }");
tryItOut("if(((function () { {} } ).call(<y><z/></y>, __proto__))) {var prop = 0/0; } else {throw  /x/ ;yield; }");
tryItOut("with({__iterator__: __noSuchMethod__.constructor = \n( \"\" )(<><x><y/></x></>).yoyo(delete __iterator__)}){yield; }\n/*infloop*/while(@foo){let (prototype = false, __count__) { {} }; }");
tryItOut("yield\n");
tryItOut("if(try { ; } finally { return; } ) export *; else ");
tryItOut("M:with((<><x><y/></x></>)( /x/ ))return <x><y/></x>;");
tryItOut("let(__count__, __proto__ = this) ((function(){return;})());");
tryItOut("with({prototype:  /x/ }){return; }\ngc()");
tryItOut("L: window;");
tryItOut("prototype;");
tryItOut("switch(new Iterator()) { case (constructor = [z1]): case 8: ;break; __noSuchMethod__ = 3.141592653589793, prototype;default: gc()case #3={a:#3#}.propertyIsEnumerable(\"__noSuchMethod__\"): {} }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __count__ in (this.zzz.zzz if ( /x/g ))) {if((__iterator__.__iterator__ getter= Math.sin)) { if ((false < <y><z/></y>)) {continue ; }} else const __noSuchMethod__ = <x><y/></x>, function::constructor; }");
tryItOut("let(__parent__ = ([window] @ (x::prototype , window))) { with({}) { throw prop; } ");
tryItOut("M:if(new ({})((<><x><y/></x></> *= @foo).watch(\"__iterator__\", (null).__defineSetter__))) {/*infloop*/M:while([1,,])break ; }");
tryItOut("const __noSuchMethod__ const __noSuchMethod__;\n");
tryItOut("{export __iterator__ }");
tryItOut("{({}).hasOwnProperty(this); }\n");
tryItOut("do /*infloop*/\fM:while(prop = 0x99(__noSuchMethod__ = [,], <x><y/></x>.constructor))/*for..in*/L:for(let  \"\"  in ((function (__parent__, __noSuchMethod__) { return; } )(({constructor: undefined, __count__: <y><z/></y> }))))(new Function(\"case <x><y/></x>: var __count__ = #1#;break; \")) while((__parent__ = window ? (window.__noSuchMethod__\n) : prop = <y><z/></y>\n) && 0);");
tryItOut("L: try { yield 1e81; } catch(__noSuchMethod__ if  '' ) { ; } finally { return [,,]; } ");
tryItOut("if(([11,12,13,14].filter)) {/*infloop*/do {gc() } while(window);export *; } else  if ([(<x><y/></x>)(@foo) = [constructor\f].filter(new Function)].map(gc)) {({}).hasOwnProperty }");
tryItOut("with(false.__lookupGetter__(\"__noSuchMethod__\") >>= (function  __noSuchMethod__ (constructor) { yield <><x><y/></x></> } ).call(<x/>\n, ({})).prototype = ((window for ((<><x><y/></x></>); in <><x><y/></x></>))))/*for..in*/L:for(var constructor in ((Math.sin)(__iterator__))){\n(__count__).watch({}).__lookupGetter__ }");
tryItOut("/*infloop*/for(__proto__; @foo === this.__defineSetter__(\"prototype\", ({}).hasOwnProperty); (false ? <x><y/></x> : *::*).call(void yield [window for each (__noSuchMethod__ in <x><y/></x>)], ('haha'.split)(<><x><y/></x></>, null), this)) {export __noSuchMethod__;export *; }");
tryItOut("let prototype = 3, __proto__\n");
tryItOut("do {const __parent__ = 033, prop } while((new ('haha'.split)(prop.eval(__proto__)) >= __parent__ *= ({a2:z2})) && 0);");
tryItOut("/*for..in*/M:for(__proto__ in ((<xxx {constructor}={({constructor: (window.__lookupGetter__(\"__iterator__\")) })} />)(( /x/g .__defineSetter__(\"__noSuchMethod__\", *)) ? ({a2:z2}) : (p={}, (p.z = __proto__.__parent__ getter=  /x/ )()))))__proto__");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__ in @foo , *) /*infloop*/while( /x/g )gc()");
tryItOut("{( /x/g );; }");
tryItOut("/*infloop*/for(new [z1](); (__count__\t = window); ({ __iterator__: ({ __iterator__: __proto__ }) }) = ({ __parent__: ({ __parent__: prop, __count__: __count__ }) })) ");
tryItOut("const prop = @foo, prototype;");
tryItOut("if(<y><z/></y>.__defineSetter__(\"__count__\", [,,z1])) __proto__ else  if (<x/>.hasOwnProperty(\"__noSuchMethod__\")) __iterator__: (__parent__) = constructor -= <x><y/></x> else {let (__count__ = <x><y/></x>, __iterator__) { continue ; } }");
tryItOut("/*for..in*/for(let constructor = constructor.__count__ setter= (<y><z/></y>).call in window.__iterator__) export  /x/g ;");
tryItOut("/*infloop*/L:for(let prototype; typeof (__proto__ = yield); __count__%=(new (*)(false))) undefined");
tryItOut("yield  ''  for (__parent__ in false);");
tryItOut("let(__count__ = this) { __noSuchMethod__ = __parent__;");
tryItOut("yield\n");
tryItOut("this.zzz.zzz;");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*/for(var __proto__.__parent__ in ((function  ({ __iterator__: prop }) (__noSuchMethod__) { yield  '' ++ & <x/> } )(@foo)))if(<x><y/></x>.*.@foo) with(__noSuchMethod__.__iterator__ setter= ({}).hasOwnProperty){yield  \"\" ; } else gc()");
tryItOut("/*infloop*/M:for(const __parent__; (constructor = 0x99); (( /x/ )[true])) {; }");
tryItOut("/*infloop*/for(window for each (__count__ in 0.1) .. (eval(<y><z/></y> .. <><x><y/></x></>, *::*)); (eval(\"<><x><y/></x></> in <><x><y/></x></>.__proto__ =  \\\"\\\" .constructor = <><x><y/></x></>\", ({ __proto__: ({ prototype\t: __parent__ }), __iterator__: ({ prop: prop }) }) = [z1,,].__defineSetter__(\"__parent__\", Math.sin))); (constructor = [z1,,] >>>=undefined)) {{export __count__;var __parent__; } }");
tryItOut("return;");
tryItOut("let (__iterator__, []) { {throw window; } }");
tryItOut("return *::*;");
tryItOut("for(let y in []);");
tryItOut(";");
tryItOut("L: const __parent__;");
tryItOut("M:if(<x/>) if(undefined) const __proto__ = true\r; else ");
tryItOut("break M");
tryItOut("if(void prototype) {var x::__parent__ = false, prototype; } else {/*for..in*/for([<><x><y/></x></>, prototype] = <><x><y/></x></>\t in  /x/ ) (window);export __iterator__; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let __proto__ in *) constructor");
tryItOut("throw StopIteration;");
tryItOut("if((function (__noSuchMethod__) { export prototype; } )(prop, <><x><y/></x></>)) yield; else  if ((__count__ = (* = <x/>))) yield <x/>;");
tryItOut("if((window.unwatch(\"constructor\").valueOf(\"number\"))[ /x/  ^ [1,,]]) { if ((({__noSuchMethod__: window}))) (<x>\t<y/></x>).__defineSetter__} else {}");
tryItOut("L:while(((<x><y/></x>)()) && 0){ }");
tryItOut("/*for..in*/for(var prop in (((new Function(\"continue ;\")))(__iterator__))){let prototype = 1e+81, __parent__ = 1e+81;return  '' ; }");
tryItOut("");
tryItOut("/*infloop*/M:do {gc() } while(-('fafafa'.replace(/a/g, (new Function(\"\"))) <<= (window.@foo)));");
tryItOut("if(new (this)()) {/*infloop*/L:do {return [z1,,];throw 1.2e3; } while(*::*.@*);return; } else {/*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in *::*) export __parent__; }");
tryItOut("let (__iterator__ = (<><x><y/></x></>.__iterator__ =  /x/ )) { this.__defineSetter__(\"__noSuchMethod__\", function (__count__, __parent__) { yield .2 } ); }");
tryItOut("export __noSuchMethod__;");
tryItOut("if(([1,2,3,4].slice)) { if (<><x\t><y/></x></>(((__proto__)()),  '' )) M:if([15,16,17,18].some(('haha'.split).call, __parent__ =  \"\" , prototype = this))  else (<><x><y/></x></>.hasOwnProperty(\"constructor\"));}");
