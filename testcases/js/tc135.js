tryItOut("/*for..in*/M:for(let [__count__] in {throw true; const __proto__;M:do {;const constructor =  /x/g ; } while((__noSuchMethod__) && 0); }) if(new <x><y/></x>(<y><z/></y>, constructor)) {gc() } else gc()");
tryItOut("with({}) { with({}) { let(({ __proto__: __proto__, __noSuchMethod__: setter }) = Iterator(<x><y/></x>, <x/>), constructor =  /x/ ) ((function(){throw StopIteration;})()); }  } ");
tryItOut("{let prototype = <x><y/></x>, __iterator__; const __proto__;let (__count__) { yield false; } }");
tryItOut("if( /x/g ) { if ( /x/ ) [, , ] else let __noSuchMethod__;}");
tryItOut("/*infloop*/for(let __parent__;  set __iterator__ prototype (__parent__)this.__defineSetter__(\"constructor\", true).@*; #1#) {delete }");
tryItOut("/*for..in*/for(var __count__ = 0.1 in null) {__count__; }");
tryItOut("/*infloop*/do {/*for..in*/for(const [__proto__, prop] = window in <x/>) { } } while([z1] ::  \"\" );");
tryItOut("this.zzz.zzz;");
tryItOut("yield null\n");
tryItOut("[1,2,3,4].slice");
tryItOut("let(__count__, prototype) { throw StopIteration;");
tryItOut("gc()");
tryItOut("if(new Boolean(new 'haha'.split(<y><z/></y>) if (4.++),  \"\" )) {new Object();const __iterator__, __noSuchMethod__ = __iterator__\ngc() } else  if (__proto__.__parent__) if((__proto__.constructor)) { if ((__parent__ = <><x><y/></x></>)) {if(<x><y/></x>) { if (<><x><y/></x></>) {export *; } else {yield; }} } else {yield;(function ([y]) { })(); }} else {/*infloop*/L:for(({ __proto__: prototype, constructor: constructor }) = <><x><y/></x></>.@*; (this | this); *.__proto__) return __parent__ = ([<><x><y/></x></> for each (__proto__ in 033)]);var prop; }");
tryItOut("M:with({get: __noSuchMethod__ = arguments})throw <x><y/></x>;function  constructor ()function::prototype");
tryItOut("/*infloop*/\tL:do return <><x><y/></x></>; while(<x/>)\n");
tryItOut("L: yield;");
tryItOut("L:if(null) {; }");
tryItOut("M:switch((yield this.__defineGetter__(\"__proto__\", /a/gi))) { case 4: break; default: /*for..in*/for(__proto__ = undefined.valueOf(\"number\") in prop) {throw <x><y/></x>; }break; break; true; }");
tryItOut("/*infloop*/L:do {} while(this.*);");
tryItOut("if(<x><y/></x>.__defineSetter__(\"__count__\", 'haha'.split)) {throw __proto__;(true); } else  if ((<><x><y/></x></>.isPrototypeOf(<x><y/></x>))) (<y><z/></y>); else {const prototype;gc() }");
tryItOut("while((delete void  /x/ ) && 0){__iterator__ = ({a2:z2}); }");
tryItOut("return ++__proto__ = window.propertyIsEnumerable(\"__count__\");");
tryItOut("L:if(true | <x><y/></x>) {window;let (__proto__, __iterator__) { null } } else yield;");
tryItOut("if(({<><x><y/></x>yyy</>:  \"\" .propertyIsEnumerable(\"prop\"), __parent__ setter: gc })) { if (prototype = [, , constructor]) export constructor; else {break ;throw *::*; }}");
tryItOut("{\fdo {if(1.3) return constructor; else  if (<x\f><y/></x>) {__iterator__ = window, __proto__ = <><x><y/></x></>; } } while((this.zzz.zzz) && 0);/*for..in*/for(prop in 0x99) <y><z/></y> }/*for..in*/M:for(<x><y/></x> in ( '' )[this]()) {/*for..in*//* nogeckoex bug 349964 */ for  each(const *.__noSuchMethod__ in \f__iterator__ = <><x><y/></x></>) /*infloop*/do gc() while(eval(\"yield this;\",  \"\" )); }");
tryItOut("export prop\n{}");
tryItOut("(*::*)\n");
tryItOut("try { throw __count__; } catch(prop if (function(){throw StopIteration;})()) { export *; } catch(__iterator__ if (__count__.constructor getter= <><x><y/></x></>)) { case 7: yield;export *;export __iterator__; } ");
tryItOut("M:if(#0=({__parent__: <x><y/></x>})) /*infloop*/for([] = ('fafafa'.replace(/a/g, (0.1++))); new (({ __proto__: ({ __noSuchMethod__: __proto__, prop: function::prop }), constructor: ({ constructor: prototype }) }) = let (__iterator__ = arguments) this)(); <bbb xmlns=\"1e4\"><></>yyy</bbb>) with({prototype: [15,16,17,18].filter('haha'.split, <y><z/></y>)}){yield @foo; }");
tryItOut("__count__ = __proto__;");
tryItOut("for(let y in []);");
tryItOut("throw __parent__");
tryItOut("if((new <><x><y/></x></>(false, ({a1:1})))) return window; else ;");
tryItOut("/*infloop*/for(5.0000000000000000000000[#3={a:#3#}]; (this.prototype = []); 1e-81) {continue L;; }");
tryItOut("/*infloop*/L:while((yield *::*)){Math.pow/*for..in*//* nogeckoex bug 349964 */ for  each(prop in <x/>) {throw <y><z/></y>; } }");
tryItOut("do return  '' ; while(((eval).call(({__proto__: __parent__.constructor }), ) if (function  __noSuchMethod__ ()(<><x><y/></x></>);)) && 0);");
tryItOut("return <><x><y/></x></>;");
tryItOut("while(((Array(*, null))) && 0){/*infloop*/do ; while(\n-0); }");
tryItOut("if((*.isPrototypeOf(true))) { if ((p={}, (p.z = prop = 0)())) {if(<><x><y/></x></>) {;true; } else  if (__parent__) let prop = #1=[#1#]; else yield <x><y/></x>; } else {let constructor = <><x><y/></x></>; }}");
tryItOut("__parent__ =  /x/ , __count__;\nlet constructor, __noSuchMethod__;\n");
tryItOut("/*for..in*/for([__count__, __noSuchMethod__] =  \"\"  in __parent__) {continue ; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__ in ((new Function(\"gc()\"))).call(__parent__ = prop, )) {L:if(window) { if ( '' ) {}} else {return;__iterator__ = window, __count__ = (function ([y]) { })(); } }");
tryItOut("M:with({constructor: 3})break ;");
tryItOut("M:switch(let (__noSuchMethod__)  '' ) { case 0: let (({ prop: ({ __iterator__: ({ __parent__: __count__, __parent__: prototype }), __parent__: __parent__ }) })) { /*infloop*/for(let ({ __iterator__: ({ __proto__: constructor }), __parent__: ({ prototype: __count__, __iterator__: [] }) }) = (p={}, (p.z = new ( /x/g )())());  /x/g  < -0; Array(<><x><y/></x></>, <x><y/></x>)) <x/>; }/*infloop*/for(constructor = constructor; *; constructor = @foo) {let __count__ = function::__iterator__;return; } }");
tryItOut("/*infloop*/do {with({__noSuchMethod__: undefined}){return; } } while(this.__defineGetter__(\"__noSuchMethod__\", /a/gi));");
tryItOut("for(let y in []);");
tryItOut("if((+=.__lookupGetter__(\"__noSuchMethod__\"))) {switch(<x/>) { default:  } } else  if ((((true)[[z1,,]]))(\n<><x><y/></x></>) == ({}.__parent__ = (eval(<x/>, <><x><y/></x></>)))) {let __iterator__ = *::*; \"\" ; }");
tryItOut("var prototype = [,];\n(<><x><y/></x></>);\n");
tryItOut("throw __count__;");
tryItOut("var __iterator__, prototype");
tryItOut(" /x/ ");
tryItOut("return;");
tryItOut("{} const __proto__;");
tryItOut("/*infloop*/for(var prop; 5.0000000000000000000000; ({ prototype: ({ __iterator__: ({ constructor: __proto__ }), __proto__: __parent__ }) }) = new ((<y><z/></y> = -1))((this.@*), null)) switch(<y><z/></y>) { default:  }");
tryItOut("return ({prototype setter: Math.pow, prop setter: Math.sin });");
tryItOut("/*infloop*/while(@foo)/*infloop*/M:for(const ({ true//h\n: function::__iterator__ }) = ((@foo.__iterator__ =  '' )\n); new <><x><y/></x></>(false); ((function  __proto__ (prop, __proto__) { let __proto__ = <x><y/></x>, __parent__ =  '' ; } )())) {yield -1; }");
tryItOut("do Math.pow while((((function(q) { return q; }).call)(function ([y]) { })) && 0);");
tryItOut("return; const prop;");
tryItOut("L:if(__noSuchMethod__) return; else  if ((({prototype setter: function (__count__)window.watch(\"__noSuchMethod__\", function (__iterator__) { return *::* } ) }))) {yield; }");
tryItOut("do {yield; } while(() && 0);");
tryItOut("L:if(prototype = __count__) with(<><x><y/\f></x></>)continue L; else  if (__parent__ = (@foo *= this.yoyo((null .@x:: __iterator__)))) {return; } else {__parent__, __iterator__ = [1,,]; }");
tryItOut("/*for..in*/for(var [prototype, prop] = Function in this.zzz.zzz) if(this.__defineSetter__(\"__noSuchMethod__\", new Function)) continue ; else  if (3/0) /*infloop*/for(const __proto__;  /x/ ; __iterator__) {Math.sinreturn <x><y/></x>; }");
tryItOut("__noSuchMethod__ const x::__parent__;");
tryItOut("while((<x><y/></x>) && 0){return <x/>;function  __parent__ (__proto__)F }");
tryItOut("M:if(undefined) {} else  if (<><x><y/></x></>) { }\n;gc");
tryItOut("const ({ __noSuchMethod__: prop }), prototype = *::*");
tryItOut("/*infloop*/for( /x/ ; <y><z/></y>--; __noSuchMethod__.__defineGetter__(\"__proto__.prop\", eval(\"const __proto__ = null, yield;\", ([15,16,17,18].map(<y><z/></y>, 3.141592653589793))))) return <x><y/></x>;(*);");
tryItOut("let (constructor = *, constructor) { yield; }M:do {{export prop; } } while((( { return  /x/  }  .. *::*).watch(\"__count__\", function(q) { return q; })) && 0);let(__parent__) { this.zzz.zzz;");
tryItOut("/*infloop*/for(({ __count__: ({ __parent__: prop }), __iterator__: __iterator__ }) = [[1]].eval(<x><y/></x>)\n; <x><y/></x> += *::*; [, __proto__] = window\n) return;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const function::__proto__.prop in  /x/g ) <x><y/></x>;");
tryItOut("throw <x><y/></x>");
tryItOut("L: var prop = <y><z/></y>;");
tryItOut("prototype = function(id) { return id }, prototype\n/*for..in*/for(var __proto__ = <><x><y/></x></> === <x><y/></x> in new ([1,2,3,4].map)()) {var __parent__ = <x\f><y/></x>;with({__count__: <x><y/></x>.prototype = <x><y/></x>})/*for..in*//* nogeckoex bug 349964 */ for  each(let __noSuchMethod__ in <y><z/></y>) return; }");
tryItOut("/*infloop*/for(const __proto__; __count__ = prop(__parent__ = #3={a:#3#}\n) == eval(\"(function(y) { yield y; ;; yield y; }).call(<x><y/></x>, <x><y/></x>)\", [15,16,17,18].map((1 for (x in [])), ({a2:z2})) .@x::  /x/ );  \"\" .valueOf(\"number\")) {switch((1e4 :: @foo |= 1e+81/)) { case 6: /*for..in*/for(var prototype in (('haha'.split)((this.zzz.zzz)))){({}).hasOwnProperty; }break;  } }\t");
tryItOut("/*for..in*/for(var [__parent__, __iterator__] = (@foo.yoyo(*)) in -1) {break L;; }\n");
tryItOut("with({__parent__: (#2=({__proto__: ( /x/  = *::*).__defineGetter__(\"prototype\", Math.pow)}))})export constructor; const __iterator__;");
tryItOut("/*infloop*/while(0.1){M:with({prop: 0x99}); }");
tryItOut("L:if(([prototype]%=export *))  for each (prop in (Function).call(window, <><x><y/></x></>)) for each (prop in (-0)) for each (prop in  '' ) for each (prop in <y><z/></y>)\nreturn constructor; else  if (eval) yield;");
tryItOut("constructor = constructor;");
tryItOut("{return;/*infloop*/do break ; while((new *::*(<x><y/></x>))); }");
tryItOut("M:if([undefined]) {/*for..in*//* nogeckoex bug 349964 */ for  each(const prop in <x><y/></x>) /*for..in*//* nogeckoex bug 349964 */ for  each(let prototype in [,,]) continue ; } else  if (undefined) return;");
tryItOut("L:switch(<><x>'<y/></></>.unwatch(\"__noSuchMethod__\")) { case  /* Comment */#3={a:#3#}: case ({__noSuchMethod__: false, function::prototype:  ''  }\t): break; case 9: export __iterator__default: break; case (-false):  }\n");
tryItOut("for(let y in []);");
tryItOut("__proto__ = __iterator__, prop; const prototype;");
tryItOut("if( /x/g ) {export *; } else {(<x/>);(<y><z/></y>).__defineSetter__ }");
tryItOut("if(('fafafa'.replace(/a/g, function  __noSuchMethod__ (prop) { yield window; } ).@foo)) /*for..in*/for(__proto__ in (((new Function(\"yield <><x><y/></x></>;\")))((1e81.__proto__ = prop >>> __parent__.*)))); else (-1);");
tryItOut("{var __count__ = true, getter;{} }");
tryItOut("/*for..in*/for(let [__parent__, __count__] = (yield ((null)() > *::*)) in #1=<><x><y/></x></>) {/*infloop*/for( /x/g ;  \"\" ;  /x/g ) function  __noSuchMethod__ (__parent__, __parent__) { yield <><x><y/></x></> }  }");
tryItOut("if(null) { if (this.zzz.zzz) {prototype = {}, __count__ = prop;export __count__; } else {const __noSuchMethod__; }}");
tryItOut("{gc()1.3; }");
tryItOut("throw prototype;");
tryItOut("__proto__");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(<x><y/></x>['__proto__'] in <><x><y/></x></>) \nFunction");
tryItOut("export *;");
tryItOut("gc()\ntrue;");
tryItOut("if((new ([15,16,17,18].sort('haha'.split, window))(<y><z/></y>\n))) {L: {(__count__);(0.1).__defineSetter__ }(<y><z/></y>); }");
tryItOut("switch(<x/>) { default: with((this.zzz.zzz))var prototype = prop, __parent__ = arguments;{}break;  }");
tryItOut("do /*for..in*/M:for(let prototype = __count__ in <y><z/></y>) {break ; } while((new <y><z/></y>( /x/g )) && 0);");
tryItOut("try { for(let y in [5,6,7,8]) const prop; } finally { let(constructor, prop = null) ((function(){__count__;\n})()); } ");
tryItOut("do {} while((<y><z/></y>.valueOf(\"number\")) && 0);");
tryItOut("{while(({}) && 0)return; const __parent__; }");
tryItOut("{/*for..in*//* nogeckoex bug 349964 */ for  each(var __count__ in  \"\" ) {function  __count__ () { yield * }  }__noSuchMethod__ = __proto__; }");
tryItOut("do yield *::*; while((<x><y/></x>) && 0);");
tryItOut("let (__proto__ = (({__iterator__: (<x/> * <x><y/></x>), prototype: window }))) { const ( = 1.2e3; }");
tryItOut("if(0.1) export ({ constructor: constructor, prototype: __noSuchMethod__ }); else {{} }");
tryItOut("/*for..in*/for(const __proto__ in ((({}).hasOwnProperty)(this))){}");
tryItOut(";");
tryItOut("\ngc()\n");
tryItOut("return");
tryItOut("do /*infloop*/for(undefined; (~<y><z/></y>)\t; throw  /x/g ) __parent__ while((@foo instanceof {}) && 0);");
tryItOut("/*for..in*/for(var [__iterator__, constructor] = 1.3 in __iterator__) {export __parent__;__parent__ = __iterator__, __proto__; }");
tryItOut("if( '' ) { if (__parent__ = <><x><y/></x></>) 0;} else export __iterator__;");
tryItOut("/*for..in*/for(const __iterator__ = (<><x><y/></x></> %= undefined)() in [15,16,17,18].map([1,2,3,4].map, new Function)) {yield; const constructor;/*for..in*/M:for(let [prop, __proto__] = <x><y/></x>//h\n in [1,,]) export __parent__; }");
tryItOut("/*for..in*/for(let __noSuchMethod__ in ((Function)(prop = ({a1:1}) ? <><x><y/></x></> : [[]] >>>=window))){/a/gigc() }");
tryItOut("L:if((__proto__.constructor setter= (Math.pow).call)) { if ((__count__ = (new Array()))) \f{this }} else export set;");
tryItOut("with(( \"\" .hasOwnProperty(\"constructor\")))let function::__proto__ = #3={a:#3#}, constructor;");
tryItOut("/*for..in*/for(var __count__ = <><ccc:ddd></ccc:ddd></>.(__noSuchMethod__.prop) in (new (({}).__lookupGetter__)().isPrototypeOf((__iterator__))).watch(\"function::__proto__\", Function)) {if((this.unwatch(\"prop\") ..  /x/g .__lookupGetter__(\"prop\")))  else  if ((constructor.prototype)) {const __noSuchMethod__, prototype;export __iterator__; } else export __proto__; }");
tryItOut("__proto__, __iterator__ = __iterator__; const __count__");
tryItOut("try { with({}) ({ prop: [] }) } finally { with({}) throw StopIteration; } ");
tryItOut("/*infloop*/for(var __noSuchMethod__; <><{prop}><ccc:ddd><ccc:ddd><x><y/></x></ccc:ddd></ccc:ddd></{prop}></>; (p={}, (p.z = window)())) return\nyield this;");
tryItOut("throw StopIteration;");
tryItOut("M:if(#2=[\t '' ]) yield;");
tryItOut("switch(this.__defineGetter__(\" \\\"\\\" \", gc)) { default: /*for..in*/M:for(var __parent__ = Date(*.throw( '' )) -= (({ __iterator__: prototype, __iterator__: __count__ }) = window) in let (__count__, __proto__)  \"\" ) /*infloop*/for(*::* ? <x><y/></x> : [z1,,]; this.__defineGetter__(\"__parent__\", Function); new this()) (<x><y/></x>);break;  }");
tryItOut("switch(__noSuchMethod__ = (uneval(null)) == new function  constructor () { return <><x><y/></x></> } (prop)) { case 3: if(this) yield; else export constructor;break; default: M:if((#1#)) { if (1.3.@foo) {<x><y/></x>export *; } else {yield;continue ; }}break; __count__break; case (__parent__|=*).@*: throw __iterator__; }");
tryItOut("/*for..in*/for(let __proto__ = *.hasOwnProperty(\"constructor\") in new function  __parent__ ()<x/>()) {L:with({constructor: <xxx {__proto__}={delete.propertyIsEnumerable(\"__noSuchMethod__\")} />})\nwindow }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let __parent__ in new Function(__noSuchMethod__.__count__ setter=  '' , false)) return (function ([y]) { })() &= null;");
tryItOut("<x/>");
tryItOut("M:do {gc()/*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__ in <><x><y/></x></>) {break M; } } while(([11,12,13,14].some) && 0);");
tryItOut("L:with(__iterator__){break L; }");
tryItOut("return;");
tryItOut("let(__parent__) { yield *;");
tryItOut("/*infloop*/M:for(let export *;; *; prop) export __count__;");
tryItOut("with({__parent__: <x/> if ( \"\" )})throw  /x/ ;");
tryItOut("let (__parent__, [, ({ prop: ( /x/ )( /x/ ) })]) { /*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__ in  '' ) <><x><y/></x></>; }");
tryItOut("L: default: ;");
tryItOut("if(( /x/g ).call(3,  '' ).__count__) { if (eval(\"yield 1.3\\f;\", window)) {; const prototype; } else {return;return false; }}");
tryItOut("{/*for..in*/for(var [prototype, __iterator__] = *::*Function  in arguments) {var __parent__;export *; } }");
tryItOut("if((uneval(prop = -0)))  else  if (({ __parent__: ({ constructor: ({ __noSuchMethod__: ({ __parent__: [, prototype, [constructor, __iterator__, prototype, , constructor], ], prop: [, ({ prototype: __parent__ })] }), __count__: [, , [__proto__, ({ prototype: prototype }), ({ __noSuchMethod__: __proto__ }), prop, ({ __noSuchMethod__: prototype })], , __noSuchMethod__] }), constructor: [, ({ constructor: [], prototype: @foo.__noSuchMethod__ }), __proto__, , ] }), __iterator__: ({ __proto__: __proto__ }) })) {/*for..in*/M:for(var __proto__ in (new Function).call(( \"\" );, )) {L:if(#3={a:#3#}) { if (__count__) {yield; } else continue M;} } } else /*for..in*/\tM:for(prop.prop in ((function(y) { yield y; let __parent__ =  /x/ ;; yield y; })(((__parent__)(<x><y/></x>, true)))))break ;");
tryItOut("M:if(0) {yield;export *; } else {}");
tryItOut("/*infloop*/do { } while((-<><x><y/></x></>));\n{__proto__{} }yield ( \"\" )[<x/>];\n");
tryItOut("/*infloop*/for(let __iterator__; ([<x/> for ( in <y><z/></y>)]); (prototype = __count__)) export *;");
tryItOut("if(<x><y/></x>.watch(\"__iterator__\", [1,2,3,4].map)) break L; else  if (({ prop: prop, prop: __parent__ }).__iterator__ += <>0</>.( /* Comment */*::*)) {let (prop = *::*) { let (__proto__ = null, prototype) { L: { } } } get constructor __count__ ()({ set __parent__(constructor, __noSuchMethod__)return false;, /*for..in*/for(__noSuchMethod__ = __proto__.__proto__ =  /x/  in [1]) if([,,z1]) { if (4.) {export __proto__; } else 1e+81;} setter: [1,2,3,4].slice }) -= 1.2e3 = __iterator__ =  ''  }");
tryItOut("with({}) this.zzz.zzz;\n/*infloop*/L:for(const __count__ = __iterator__;  \"\" ; @foo) export __proto__;\n");
tryItOut("if( \"\"  > null) yield; else  if (false\n) {(<y><z/></y>);const __iterator__ = <x><y/></x>, __noSuchMethod__; } else {let undefined = <><x><y/></x></>, prop = __proto__; }");
tryItOut("if((({prototype: __parent__ = <x><y/></x>, __parent__: (p={}, (p.z = 0/0)()) }) !== this)) { if (new (function (__proto__) { yield new null(5.0000000000000000000000) } )((prop.isPrototypeOf( /x/ ))[[true]], 'fafafa'.replace(/a/g, new Function))) return;} else ;");
tryItOut("export __proto__;");
tryItOut("with({}) with({}) gc()");
tryItOut("/*for..in*/for(let [__noSuchMethod__, prop] = -1 in __count__) export *;");
tryItOut("return;\nyield;\n");
tryItOut("if(typeof  /x/g ) { if (this) {export __count__; }} else /*for..in*//* nogeckoex bug 349964 */M: for  each(__noSuchMethod__ in *) { } const __count__;");
tryItOut("yield;M:if( /x/ ) {__parent__, constructor; } else  if (window) yield <y><z/></y>;");
tryItOut("L: M:if((__proto__ = ((uneval(true))))) ; else  if ((__proto__ = false)) o");
tryItOut("M:with({prop: (<x><y/></x>.__iterator__)}){export __iterator__;yield <y><z/></y>; }");
tryItOut(" { export __iterator__; } /*for..in*/for(var [__count__, false] = (constructor)[.\"prototype\")] in true / true) case 3: break; let(prop = 1e-81, __iterator__ = this) ((function(){export __proto__;})());case new let (each = <x><y/></x>, prototype = <x><y/></x>) [,](): case new (({}).hasOwnProperty)(this.__defineGetter__(\"constructor\", function ()<x><y/></x>)): break; break; default: break M;break; case ({ __noSuchMethod__: __count__ }).__lookupSetter__(\"__noSuchMethod__\"): let __proto__ = false;break; ");
tryItOut("let (__noSuchMethod__.__count__ = constructor.__lookupGetter__(\"__count__\"); = (<employee id=\"1\"><name>Joe</name><age>20</age></employee>.@*)) { (__count__.prop = 0x99); }");
tryItOut("if(<x><y/></x>)  \"\" ;");
tryItOut("gc() const __proto__;");
tryItOut("/*infloop*/for(var __proto__; \t__count__; [this].filter('fafafa'.replace(/a/g, (new Function(\"let __noSuchMethod__ = 5.0000000000000000000000;\"))))) <x/> .@x:: false;");
tryItOut("/*infloop*/L:for(let prototype; 'fafafa'.replace(/a/g, false >>= this); (uneval((Math.pow)(\tthis for (__noSuchMethod__ in <x/>))))) {(<x/>);\ngc()\n }");
tryItOut("{L:while(((new function(y) { yield y; yield;; yield y; }([1], prototype))) && 0)gc() }");
tryItOut("const __noSuchMethod__, prototype;");
tryItOut("for(let y in []);");
tryItOut("{constructor = window; }");
tryItOut("L: L: yield __proto__ = constructor;");
tryItOut("/*for..in*/for([__proto__, __noSuchMethod__] = [null]\n in (__iterator__).call(__proto__ = <><x><y/></x></>, )) {break ;/*for..in*/for([constructor, __count__] = undefined.propertyIsEnumerable(\"prop\") in this) const __proto__; }");
tryItOut("/*infloop*/M:for(new (<x/>)(); __parent__ / true; /*\n*/[,,z1].__defineGetter__(\"__noSuchMethod__\", function () { return ({ __count__: [[, __count__]] }) } )) __parent__ = 0x99, __proto__\n");
tryItOut("switch((1 for (x in []))) { case ~__iterator__: break; {} }");
tryItOut("/*infloop*/for((~<><x><y/></x></>); undefined.@*; [1,,].__defineSetter__(\"constructor\", function(q) { return q; })) break ");
tryItOut("gc()\n/*infloop*/M:do return false; while(new (window)(<y><z/></y>, 1.2e3));\n");
tryItOut("with({}) { /*infloop*/L:for((window > null); /<x><y/></x>)[<x><y/></x>]; [<x><y/></x>].sort(({}))) {return @foo;<x/>; } } ");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__ in <y><z/></y> for each (constructor in __proto__)) {yield; }");
tryItOut("/*for..in*/for(__count__ = ({__proto__: function::__count__ })[([15,16,17,18].filter((<x><y/></x>).__defineSetter__, <x><y/></x>))] in (<x><y/></x> ^ *)) {return; }");
tryItOut("return 0;");
tryItOut("{export __proto__; }");
tryItOut("for(let y in [5,6,7,8]) let(constructor = (new (constructor)(<x><y/></x>)).unwatch(\"__noSuchMethod__\"), __proto__) ((function(){for(let y in [5,6,7,8]) this.zzz.zzz;})());");
tryItOut("/*for..in*/for(const [__proto__, __noSuchMethod__] =  | this in true.__noSuchMethod__) { }");
tryItOut("try { this.zzz.zzz; } finally { for(let y in [5,6,7,8]) return  /x/ ; } ");
tryItOut("/*infloop*/for(var __count__; <><x><y/></x></>.*/*\n*/; <>yyy</>.__iterator__) /*for..in*/for(var #1=[constructor] in (<><x><y/></x></>)) {prop, prop = undefined;const prototype; }");
tryItOut("/*for..in*/for(let __parent__(window) in ((Math.pow)(<y><z/></y>))){ }");
tryItOut("prototype = __count__;");
tryItOut("let(prop, __parent__ = [z1]) { for(let y in [5,6,7,8]) for(let y in []);");
tryItOut("<employee id=\"1\"><name>Joe</name><age>20</age></employee>");
tryItOut("do {/*infloop*/for(__count__; <x><y/></x>.propertyIsEnumerable(\"prototype\"); true\n) break ;/*infloop*/for(const prop = try { (1.2e3); } finally { let __iterator__; } ; <y><z/></y>;  /x/ ) {return <>__iterator__ =  /x/ </>; } } while((this.zzz.zzz) && 0);");
tryItOut("for(let y in []);");
tryItOut("yield __noSuchMethod__.( \"\" .__lookupGetter__(\"__count__\"));");
tryItOut("/*infloop*/for((__parent__ = 0/0++); undefined .. window; <x><y/></x>.eval(<x><y/></x>)) default: break; ");
tryItOut("let(({ (p={}, (p.z = window.unwatch(\"__count__\"))()): ({ __noSuchMethod__: prop, __noSuchMethod__: ({ __parent__: __count__, constructor: constructor }) }) })) ((function(){let(prototype, __proto__) { return (\nthis.__defineSetter__(\"__proto__\", function () {  } ));})());");
tryItOut("/*infloop*/while(5.0000000000000000000000)continue ;");
tryItOut("const function::__iterator__, __parent__;if(((*())(constructor\r.__lookupSetter__(\"prototype\"), [[1]]))(this .. <><x><y/></x></>, @foo .. @foo)) { if (<><x><y/></x></>.unwatch(\"__proto__\")) export *;} else {let constructor, prop = <><x><y/></x></>; }");
tryItOut("[z1];export *;");
tryItOut("/*infloop*/for(let __iterator__ = delete 1e81; (this.__defineSetter__(\"__count__\", ({}).hasOwnProperty)); (new arguments(case window: return  /x/ ;break; case function::prototype: ))) {export *; }\nlet (({ __count__: constructor }) = (yield (new [1,2,3,4].map()))) { return; }\n");
tryItOut("/*infloop*/for(var ({ __iterator__: ({ __parent__: __parent__, prototype: __parent__ }), __count__: [__parent__, __iterator__, __proto__] }) = (__parent__.prototype setter= eval)(); [z1]; (*)) /*infloop*/for(var __proto__ = false; <x><y/\t></x>; (-1)) constructor");
tryItOut("/*infloop*/while(this)var (function  __iterator__ ()[[]]).call;");
tryItOut("yield\nthrow ({prop: __parent__.__proto__ = __iterator__, __noSuchMethod__: [-1] });");
tryItOut("throw __parent__;");
tryItOut("if(<x><y/></x>.__defineGetter__(\"__parent__\", 'haha'.split)) {export getter; } else  if ( '' .isPrototypeOf(<><x><y/></x></>)) {} else yield <><x><y/></x></>;");
tryItOut("let __noSuchMethod__; const __proto__;");
tryItOut("if(3) /*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__ in <><x><y/></x></>) {function(q) { return q; } }\nif(__iterator__) { if (__noSuchMethod__.__proto__) const const __iterator__ = undefined, prop =  /x/g ;;} else {gc() }\n");
tryItOut("L: {var prop =  /x/g ; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(const __parent__ in *) function  prop (constructor) { yield this } ");
