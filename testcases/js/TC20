
tryItOut("/*infloop*/M:while(__iterator__-=yield null){[]; }");
tryItOut("/*for..in*/for(const __noSuchMethod__ = ('haha'.split)() in <y><z/></y>) {let constructor, __noSuchMethod__;const __noSuchMethod__ = <x><y/></x>, __count__; }");
tryItOut("/*for..in*/L:for(let prototype = <bbb xmlns:ccc=\"([15,16,17,18].filter(Math.pow, <x/>))((false .@*:: window))\"><ccc:eee></ccc:eee></bbb>.((uneval(null--))) in ((p={}, (p.z = this\n)()))) {this }");
tryItOut("/*infloop*/for(\n[__iterator__ = <y><z/></y>].sort(Function); [*::* for (__count__ in +)]; arguments) {throw [z1,,]gc()\nyield true;\n }");
tryItOut("{{} }");
tryItOut("with({}) { this; } ");
tryItOut("/*for..in*/for(let __parent__ in (((new Function(\"var __count__, prototype = __noSuchMethod__;\")))( \"\" \n)))let prop = <x><y/></x>__proto__, prototype;");
tryItOut("export __noSuchMethod__\n({}).__lookupGetter__\nreturn undefined;");
tryItOut("if((<x><y/></x> , @foo) += [,].__defineSetter__(\"yield\", function () { yield ({a1:1}) } ).isPrototypeOf(__proto__ = <><xxx {__noSuchMethod__}={({})} /></>)) (\n[z1]); else  if (String(<!--yy-->)) {(1 for (x in []))__parent__ = __noSuchMethod__; }");
tryItOut("{ }");
tryItOut("/*infloop*/while(export __parent__)let (__parent__, __iterator__) {  }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var #1=[#1#] == [1,,].__parent__ in export __count__) return;return (<x><y/></x>.(undefined));");
tryItOut("break M;");
tryItOut("with({__proto__: <><zzz>'fafafa'.replace(/a/g, function () { yield <x><y/></x>; } )</zzz></>}){return window; }");
tryItOut("/*infloop*/while()throw __iterator__;");
tryItOut("/*for..in*/for(__iterator__([__noSuchMethod__ for each (constructor in 1e4)]) in ((function (__iterator__, __noSuchMethod__) { return (<x><y/></x>.(<x><y/></x>))\f } )(__noSuchMethod__ = true .@ @foo === window)))export *;");
tryItOut("/*for..in*/M:for(var constructor = +-3/0.* in 0) let __noSuchMethod__ = <x/>;\n;\n");
tryItOut("let(constructor, __count__) ((function(){gc()})())");
tryItOut("(@foo).__defineSetter__\n");
tryItOut("if(constructor = let (constructor = <x/>) [z1,,]) { if ( if (<y><z/></y>).__noSuchMethod__ = __iterator__.*) /*for..in*//* nogeckoex bug 349964 */ for  each(const __count__ in 0/0) window;} else ({}).__lookupGetter__");
tryItOut("if(-1) { if ( '' ) {gc()break L; } else {continue ; }}");
tryItOut("/*for..in*/L:for(var [__noSuchMethod__, prototype] = let (__noSuchMethod__, __count__) this in 0.1) ;");
tryItOut("yield (__parent__(<x><y/></x>).__parent__);");
tryItOut("with((void ((([,,z1]).__defineSetter__)()))){\nexport *;\nconst constructor = constructor; }");
tryItOut("with((<x><y/></x> &= *::*))var ;");
tryItOut("with({prototype: ([15,16,17,18].filter(function  __parent__ () { yield 1e4 !== *::*; } , eval(\"this.__defineSetter__(\\\"__parent__\\\", ({}).hasOwnProperty)\", prop = (this.__defineGetter__(\"__noSuchMethod__\", constructor))).__lookupSetter__(\"__parent__\")))})let (__count__ =  '' ) { prototype.__parent__ }");
tryItOut("with({}) __proto__;");
tryItOut("with({__noSuchMethod__: prop =  }){;__noSuchMethod__ ? [z1] : 1.3; }");
tryItOut("gc");
tryItOut("/*infloop*/for(<x><y/></x>.__lookupSetter__(\"prop\"); (__noSuchMethod__|=*);  /* Comment */constructor) {yield; }");
tryItOut("/*for..in*/for([__noSuchMethod__, __proto__] = eval(\"__parent__ = <x/>, prototype = window;\", @foo) in __proto__.__iterator__ setter= (('haha'.split).call).call) ");
tryItOut("M:while(((__iterator__[<>gc()</>])) && 0){let __proto__, __proto__ = <><x><y/></x></>; }");
tryItOut("/*infloop*/do {throw <x><y/></x>; } while(__count__);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __parent__(<x><y/></x>) in 5.0000000000000000000000.eval(false)) gc()");
tryItOut("/*for..in*/for(var __parent__ = [,,] in [,,]) yield;");
tryItOut("if(@foo ? <x><y/></x> : ({a1:1})) { if (new Number(__count__)) {return;gc() } else {; }}");
tryItOut("while((__noSuchMethod__ = constructor) && 0)throw [z1];");
tryItOut("/*for..in*/for(__proto__ = ([.propertyIsEnumerable(\"__parent__\")].map((Math.pow).apply)) in constructor.((uneval(<x/>)).yoyo({})).isPrototypeOf(__parent__)) L:with({__count__: <xxx>{__proto__}</xxx\r>}){(@foo); }\r");
tryItOut("M:if((constructor.__count__ getter= ([1,,]).apply)) {/*infloop*/for(const prototype = @foo; yield;;  '' ) default: return;break; case this: break; ;break; case 7: __iterator__, __parent__ = *;break; case <y><z/></y>: break M;break; export __noSuchMethod__;case <><x><y/></x></>: break; case <><x><y/></x></>: export *;break; case  '' : yield;case 8: export __iterator__;;const constructor = <><x><y/></x></>, __parent__; } else {{} }");
tryItOut("if(this.__defineGetter__(\"(function(q) { return q; })(<><x><y/></x></>,  \\\"\\\" )\", Math.pow)) {/*infloop*/for(({a1:1});  /x/ ; <><x><y/></x></>) {gc() }export __proto__; } else  if (-- \"\"  >>> ()) return window;");
tryItOut("export *\n");
tryItOut("{if(__iterator__.__iterator__ setter= Function) { if ((<x><y/></x> ? 0x99 : <y><z/></y>)()) {'haha'.split } else return;}/*infloop*/for(var __noSuchMethod__; (<><x><y/></x></>.__lookupSetter__(\"__count__\")); <x><y/></x>.valueOf(\"number\")) /*infloop*/for(var __iterator__ = this; *::*; <x/>) ; }");
tryItOut("/*infloop*/do let __noSuchMethod__; while(prototype.__iterator__ = (#3={a:#3#}.prototype = 0/0));throw StopIteration;");
tryItOut("if((export prototype; @ null <=  '' .__noSuchMethod__)) {;if(<y><z/></y>) {yield 5.0000000000000000000000; } } else  if ((new (Function)(1e81, this)) ? ('fafafa'.replace(/a/g, __count__)) : null) return null; const __parent__;");
tryItOut("/*for..in*/for(let __count__ in (<><x><y/></x></> ?  /x/g  : true)) {{}return [,,]; }");
tryItOut("/*for..in*/for(var __noSuchMethod__ = this in <y><z/></y>.__lookupSetter__(\"__noSuchMethod__\")) {if( '' ) yield [,,]; else  if (getter) {; } else {\f }Function }");
tryItOut("const __iterator__ = <><x><y/></x></>, __parent__ = __count__;");
tryItOut("*::*\n");
tryItOut("throw __count__;");
tryItOut("/*infloop*/for(const [prop, <x/>, [], prop] = __iterator__.constructor getter= ({}).__lookupGetter__; [__iterator__, ] = (delete window.propertyIsEnumerable(\"prototype\")); <x/>.__defineSetter__(\"__iterator__\", ({}).hasOwnProperty)) if(eval(\"constructor\", <y><z/></y>)) { if (prototype = __noSuchMethod__) {let constructor, __proto__; } else 0x99;}");
tryItOut("M:with(prototype.__count__){ }");
tryItOut("/*for..in*/for(__proto__ in prop) with({__proto__: __parent__})return; const __iterator__;");
tryItOut("switch(<>this++</>) { case new (<x><y/></x>)( '' , <><x><y/></x></>): break; case getter = undefined: break; case #1#: break;  }");
tryItOut("yield false;");
tryItOut("0;");
tryItOut("continue M;;");
tryItOut("/*infloop*/M:for(((__proto__ ? ( \"\" )[*::*] : -<x/>) if (@foo)); ((new Function(\"const __proto__, __parent__ = <x><y/></x>;\")))([<x/> for (__parent__ in true)],  '' ); <zzz>'fafafa'.replace(/a/g, gc)</zzz>) *::*;");
tryItOut("export *\n");
tryItOut("/*infloop*/for(var __noSuchMethod__ = window; window.yoyo(null); gc()) ");
tryItOut("/*for..in*/for(var [__count__, __count__] = \n[,,z1] in *::* - <y><z/></y>) /*for..in*//* nogeckoex bug 349964 */ for  each(__parent__ in <x/>) yield [[]];yield;");
tryItOut("with({}) { throw __count__; } ");
tryItOut("yield export *;;");
tryItOut("/*infloop*/while((1.2e3 != <><x><y/></x></>))");
tryItOut("return;");
tryItOut("/*infloop*/L:for(*::*; __count__ = <><x><y/></x></>;; 5.0000000000000000000000) let constructor; const prototype;");
tryItOut("M:with(*::*)/*infloop*/do export __iterator__; while(this);");
tryItOut("let (prop, prototype = function::__noSuchMethod__ = (new Math.pow()) - undefined.*) { {yield;yield <x><y/></x>; } }");
tryItOut("/*infloop*/for(let [, , , ({ prop: prototype, __parent__: __iterator__ }), __noSuchMethod__] = (uneval(<><x><y/></x></>)).propertyIsEnumerable(\"prop\"); ({__proto__:  \"\" }); this.@* &= ( /x/  ? false : (function ([y]) { })())) (-1)");
tryItOut("/*infloop*/L:do  while(<x/>);\nbreak L; const prop;\n");
tryItOut("L:switch([[({ constructor: constructor }), ({ __proto__: __iterator__ }), __proto__, __count__], , , ({ __iterator__\t: prop }), ] = let (prototype) constructor = prototype) { default: with({prototype:  /x/g }){return __parent__;export __proto__; }break;  }");
tryItOut("switch((!*.valueOf(\"number\"))) { default: break; case (p={}, (p.z = [,,])()): /*for..in*/for\f(var [prototype, prop] =  /x/g  in (yield <><x><y/></x></>)) {yield  /x/ ; }/*for..in*/for(__noSuchMethod__ = this in <x/>) return  /x/ ;case (uneval(<><x><y/></x></>)): break;  }");
tryItOut("if(prop.__parent__) {/*for..in*//* nogeckoex bug 349964 */ for  each(let __iterator__ in {return; }) <y><z/></y>; }");
tryItOut("L:if(export *) {export __noSuchMethod__;export *; } else  if ((__proto__.prop = (-1) *  '' )) export *; else {export __proto__;Math.sin }");
tryItOut("return;");
tryItOut("while((prototype = 5.0000000000000000000000) && 0){return *::*; }");
tryItOut("M:if(new Object()) export prototype; else  if (let(constructor = undefined %= #1=[#1#]) ((function(){let(__proto__, __noSuchMethod__) { let(__noSuchMethod__ = #1=[#1#], constructor = false) ((function(){return;})());})());) const prototype;");
tryItOut("if(true.valueOf(\"number\") == (<><x><y/></x></>.constructor)) { if ((uneval( /* Comment */<><x><y/></x></> ^= <x\n><y/></x>))) /*for..in*//* nogeckoex bug 349964 */M: for  each(__iterator__ in <x/>) var prototype = #1#, __noSuchMethod__ = null;} else switch((prop = (__iterator__++))) { default:  }");
tryItOut("let(__parent__, prop) ((function(){__noSuchMethod__ = __iterator__;})());");
tryItOut("/*infloop*/for(*::* >>>=true; [11,12,13,14].map; <x><y/></x>) { }");
tryItOut("do {yield __parent__;(<><x><y/></x></>); } while(( '' ) && 0);");
tryItOut("{L: ([1]);with({constructor:  \"\" }) }");
tryItOut("L:if(do {return;gc() } while((true) && 0);) (gfunction (prop) { yield true } ).apply else  if (((__parent__).call(<x/>, 5.0000000000000000000000) |= yield [1]) ? window : eval(\"true\", <><x><y/></x></>)) let __proto__, __noSuchMethod__ =  /x/g ; else let x::prop;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prop in <><x><y/></x></>) gc()");
tryItOut("throw StopIteration;");
tryItOut("L:if((<y><z/></y> |  /x/g )) var __iterator__ = 0; else  if (get%=(-0)) L: {}");
tryItOut("with(((@foo ? <><x><y/></x></> : this ? [1] : this !==  '' )[(((this.__defineGetter__(\"__proto__\", <x/>) for each (prop in null) if (__parent__))).__iterator__)])){{export *;throw window; } }");
tryItOut("switch(<x/>) { default:  }");
tryItOut("{} const prototype;");
tryItOut("{throw __noSuchMethod__;if(null.hasOwnProperty(\"constructor\").valueOf(\"number\")) return <x/>; else  if (((__iterator__.__count__) *= <><x><y/></x></>.let)) {{}<><x><y/></x></> } }");
tryItOut("M:if(@foo) {} else {let /*\n*/ = [], each; }");
tryItOut("throw StopIteration;");
tryItOut("if(this.zzz.zzz) gc() else  if (([, prop, , __noSuchMethod__ = [[]]] = -0(undefined)) | @foo(<y><z/></y>, __parent__)) {}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(var prototype in window) yield;");
tryItOut("/*infloop*/for(~__count__.__noSuchMethod__; <employee id=\"1\"><name>Joe</name><age>20</age></employee>.((<y><z/></y> for (__iterator__ in <><x><y/></x></>))); (__iterator__)) with({__count__: <x><y/></x> !=  \"\" ()})yield __noSuchMethod__;");
tryItOut("while(( /x/g ) && 0){return @foo; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var prototype in this in window) export __iterator__;");
tryItOut("/*for..in*/for(__count__ = ((new Function).call).apply(@foo) in prototype) {yield; }");
tryItOut("let (constructor = [[]], __iterator__ = @foo += @foo) { export __parent__; }");
tryItOut("do {const delete; } while((prototype >> new <x><y/></x>(<><x><y/></x></>, __parent__).unwatch(\"__parent__\")) && 0);");
tryItOut("/*infloop*/for(constructor; <x/>; <><x><y/></x></>) {}");
tryItOut("with({}) with({}) { return; } ");
tryItOut("yield;break L;");
tryItOut("/*infloop*/for(([15,16,17,18].filter(function  __iterator__ (__proto__) /x/g , this)); (<><x><y/></x></> = [__count__].sort(gc)); this['__proto__']) {(-0);export __proto__; }");
tryItOut("let (__count__ = -0, __proto__ = constructor) { throw ({a2:z2}); }");
tryItOut(";");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let prop in .2) return;");
tryItOut("if(<x/>) { if (<x/>)  else {; }}");
tryItOut("M:if(gc()) {L: {{} }\n for (@foo['__proto__'] in typeof (-0)) if (@foo) } else  if (yield <><x><y/></x></>) yield;return;");
tryItOut("let(x::constructor = [([z1,,] > this)()], constructor = (<x><y/></x>)(false, this)) { with({}) with({}) { yield ; } ");
tryItOut("with({__noSuchMethod__: (constructor = <y><z/></y>).hasOwnProperty(\"__noSuchMethod__\")}){if(<x/>) {throw [z1,,]; } else  if ( '' ) gc()gc() }");
tryItOut("/*for..in*/for(let (void window)[this].__noSuchMethod__ in ([] @ <x><y/></x>).throw(((0)[<y><z/></y>]))) {return; }");
tryItOut("prototype = __iterator__;");
tryItOut("if(<>new (prop > .2)(__count__)</>.()) {/*infloop*/for(<x><y/></x>; <x/>; [z1]) {throw  \"\" ;let prototype, __parent__; } } else  if (gc) {throw prototype;export *; } else (null);");
tryItOut("/*infloop*/new Function().constructor");
tryItOut("yield;");
tryItOut("L: /*infloop*/for(this;  /x/g ; ({__noSuchMethod__:  /x/g })) {prototype = 1e81;export *; }");
tryItOut("if(new <x><y/></x>()) {if(({a1:1})) {__count__;const __noSuchMethod__ = <x/>, __iterator__; } } else  if ((([]).__lookupGetter__(\"__iterator__\"))) L:with(constructor.__proto__ getter= function (__parent__, __iterator__) { L:if(__proto__) { if (__noSuchMethod__) throw false; else {(window);(__proto__); }} } ){L: return @foo; } else /*infloop*/M:for(var __noSuchMethod__; *; #1=[#1#]) yield ({});\n{}\n");
tryItOut("var __proto__ = <x/>; const prop;");
tryItOut("/*for..in*/M:for(const __parent__ = true in __noSuchMethod__|=*::*) -1;");
tryItOut("M:if( /x/ ) { if ( /* Comment */__iterator__ = prop) {} else {[1,2,3,4].slice }}");
tryItOut("/*for..in*/for(var __proto__ in <y><z/></y>) return window;");
tryItOut("{<><x><y/></x></>; }");
tryItOut("/*infloop*/while((void @foo.__defineSetter__(\"prototype\", (__iterator__).call)))while(() && 0){ }");
tryItOut("return <y><z/></y>.__noSuchMethod__; const prototype;");
tryItOut("if(;.valueOf(\"number\")) {function (prop) { export *; }  } else  if (__proto__.([].@foo)) {yield;break ; }");
tryItOut("return #2=[<x/>];");
tryItOut("switch(@foo) { case 9: case 7: export *;break; default: break; case 2: break;  }");
tryItOut("this.zzz.zzz;");
tryItOut("/*for..in*/for(var __noSuchMethod__ in ((Math.pow)((__parent__+=*::*)))){this, 1e-81 }");
tryItOut("/*infloop*/for(<y><z/></y>; (<xxx {function::prototype}={<><employee id=\"1\"><name>Joe</name><age>20</age></employee></>} />.((false.unwatch(\"__iterator__\")))); --(({__proto__ getter: ({}).__lookupGetter__ })) .. <x><y/></x>.([z1,,])) {yield __iterator__; const prop;return (p={}, (p.z = true)()); }");
tryItOut("/*for..in*/for([constructor, delete] = __noSuchMethod__ in false) \f{yield; }\n");
tryItOut("*");
tryItOut("/*for..in*/L:for(const __noSuchMethod__ in -3/0) var set;");
tryItOut("/*infloop*/for((constructor.((__proto__)[(undefined >>> -1)])); typeof window == 3; ( /x/  ? window : <x><y/></x>.__lookupGetter__(\"constructor\"))) throw __proto__;");
tryItOut("with({}) for(let y in [])");
tryItOut("{return <x><y/></x>;export __parent__; }");
tryItOut("if(({constructor: eval(\"\", <y><z/></y>), prototype getter: eval })) switch(<><x><y/></x></>) { default: break;  } else  if (<x/>\t) {(3/0);if( \"\" .yoyo(<x><y/></x>)) {continue ;let __noSuchMethod__; } else  if (undefined.__count__) export __noSuchMethod__; else { } }");
tryItOut("while((((0/0)())) && 0)'haha'.split");
tryItOut("if(([__noSuchMethod__ = <><x><y/></x></>].some(function(y) { yield y; const constructor;; yield y; })) &= (new Function(\"continue ;\"))()) continue ; else  if (prop = 1e-81) <x/>;");
tryItOut("if(<x><y/></x>) {const __proto__ = #1=[#1#], __parent__ = __noSuchMethod__, <x><y/></x>; }");
tryItOut("{/*for..in*//* nogeckoex bug 349964 */ for  each(const __iterator__ in <y><z/></y>.__defineGetter__(\"__parent__\", Function)) {*;{} } }");
tryItOut("throw __count__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in *) {return;function(y) { yield y; continue M;; yield y; } }");
tryItOut("/*for..in*/M:for(let (__count__ = this)['constructor'] in ((function (__iterator__, prop)function ([y]) { }.watch(\"__parent__\", 1e-81))('fafafa'.replace(/a/g, *))))return;");
tryItOut("/*for..in*/for(prop = (<x><y/></x>)[ \"\" ] in *::*) {break ;yield; }");
tryItOut("let(prop = __noSuchMethod__.__parent__ =  /x/g ) { return;");
tryItOut("with({}) { throw StopIteration; } ");
tryItOut("if([11,12,13,14].some) /*infloop*/do {__iterator__ = @foo;(<><x><y/></x></>); } while( /x/ ); else  if ((3/0)) {if(((new Function).apply).call(<y><z/></y>, <><x><y/></x></>)) {} else {throw this; } } else {export *;{}\n }");
tryItOut("let (__count__) { {false;return; } }");
tryItOut("L: {return;export *; }");
tryItOut("yield");
tryItOut("yield");
tryItOut("*;");
tryItOut("if(()) { if (true &= *::*) throw  /x/g ; else {let (prop, prop = {}) { (constructor); }gc() }}");
tryItOut("return;\nvar prototype;\n");
tryItOut("throw StopIteration;");
tryItOut("return this;\nyield;\n");
tryItOut("if(([((function  constructor (__noSuchMethod__)<y><z/></y>.watch(\"__parent__\", [1,2,3,4].slice)).call(__proto__ = eval(\"\", <><x><y/></x></>), (*::*.yoyo(<x><y/></x>)), __proto__))].watch(\"\", eval))) {if([1,,]) { if (1.2e3) {return #3={a:#3#};yield; }} else {(#1=[#1#]);@foo; }const [] = (<y><z/></y>.watch(\"prop\", *::*)); } else  if (((1e-81 .@*:: 1e-81) += 0.__lookupGetter__(\"constructor\") << <x/>)) {\nexport *;\ncontinue L; }");
tryItOut("if(function (__iterator__, prototype) { return 1e-81 } ( enum )) {return this;gc() } else  if (({__count__: <y><z/></y>})) Function");
tryItOut("/*for..in*/M:for(const constructor.__proto__ in (<x/>++)) gc()");
tryItOut("/*infloop*/do {throw <y><z/></y>; } while(#1#);");
tryItOut("L:if(*::*) /*infloop*/L:for(__parent__; this.__defineGetter__(\"__count__\", Function); new  \"\" (<x><y/><\f/x>))  else yield this;");
tryItOut("switch(#3={a:#3#}--) { case this.__defineSetter__(\"__parent__\", __parent__): /*infloop*/for(let __count__; prop = <><x><y/></x></>; function::__noSuchMethod__ = -0) return <><x><y/></x></>;break;  }");
tryItOut("M:if((( '' .@*).__count__) :: ({ get __noSuchMethod__ __proto__ (__noSuchMethod__) { yield (p={}, (p.z = <><x><y/></x></>)()) } , __count__: (<x><y/></x>.(<x><y/></x>)) }) instanceof (<x><y/></x>.hasOwnProperty(\"constructor\"))) {gc()__proto__ =  /x/g ; } else {/*infloop*/for(__proto__ = 1e81; <><x><y/></x>//h\n</>; ({})) export *;yield; }");
tryItOut("return;");
tryItOut("__count__(prototype) = __noSuchMethod__;");
tryItOut("L:switch((<x/> * @foo.propertyIsEnumerable(\"__noSuchMethod__\"))) { case 5: function(y) { yield y; function(y) { yield y; return;; yield y; }; yield y; } = __parent__ }");
tryItOut("/*for..in*/for(var (__noSuchMethod__) in (((__count__ = ({ __proto__: __iterator__ }) = prototype))(({}).__lookupGetter__)))throw window");
tryItOut("if(this) export constructor; else return true;");
tryItOut("/*for..in*/for(let [__count__, constructor] = (<y><z/></y>) in undefined) {return prototype; }");
tryItOut("/*for..in*/for(const \f<>((new Function(\"__count__\")))()</>.(({__iterator__: (yield (*::* = *)) }))['prototype'] in @foo.__lookupSetter__(\"delete\").__defineGetter__(\"prototype\"\t, function  __count__ (prototype) { return null } )) {__count__; const __proto__; }");
tryItOut("with((*::*\n)){yield <><x><y/></x></>;var __iterator__ = 1e-81; }");
tryItOut("for(let y in []);");
tryItOut("/*infloop*/L:do {if((window >> *::*)) { if ((#3={a:#3#} &= <x><y/></x>)) {return;prop } else {evalreturn; }}break ; } while(new (__noSuchMethod__ = *::*) , __count__ = prop([, __count__] = (function::__parent__ =  /x/g ), ((1 for (x in [])))(<xxx {prop}={<><x><y/></x></>} />)));");
tryItOut("for(let y in [5,6,7,8]) for(let y in [5,6,7,8]) this.zzz.zzz;");
tryItOut("L: /*infloop*/do {__noSuchMethod__ = function::({ __proto__: __iterator__, __noSuchMethod__: __count__ }); } while((*::*.hasOwnProperty(\"__iterator__\")));");
tryItOut("{export *;export ({ __parent__: __count__ }); }");
tryItOut("{yield; }");
tryItOut("if(*.eval(5.0000000000000000000000)) {export set; } else {if(1e4) __parent__ =  '' , __noSuchMethod__; else  if (true) {(<x/>).__defineSetter__ } }");
tryItOut("for(let y in []);");
tryItOut("/*infloop*/for(let ({ __parent__: [] }) = __noSuchMethod__.@*; typeof window; (p={}, (p.z = __count__)())) if(*) return prototype; else return;");
tryItOut("do throw 033; while((({ __noSuchMethod__: ({ constructor: ({ constructor: ({ setter: prop }), prototype: ({ : __iterator__) }) }) })) && 0);");
tryItOut("/*for..in*/for(let constructor in gc) throw set;");
tryItOut("prop; const __proto__;");
tryItOut("/*infloop*/\ndo const __noSuchMethod__ = this, __proto__; while(prop = <x><y/></x>);");
tryItOut("/*infloop*/for((__iterator__.__parent__); (__count__); __parent__(window = \f\n<y><z/></y> >>>  '' .__defineGetter__(\"__proto__\", <x/>)) {__count__ = constructor, __iterator__ = *; }");
tryItOut("/*infloop*/L:while({}){(this);prop }");
tryItOut("L:switch(new ([1,2,3,4].map)(((prop.__parent__ setter= 'haha'.split) |= constructor | undefined), *::*.@foo)) { case [[__count__, prototype, __parent__, __noSuchMethod__] = this]: /*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__ in [z1,,]) {gc() }break; yield;break; default: break; case 9: ;\nexport __parent__;\nbreak; case (<x><y/></x> for each (__iterator__ in #1=[#1#])): (<y><z/></y>); }");
tryItOut("if(this) switch(()\f)\f { default: break; case (-1): break;  } else ; const __count__; const prototype;");
tryItOut("M:if(.(__parent__ = __count__)) {yield  /x/ \f ^ window; } else  if ((-1) .@ <><x><y/></x></>) yield *;");
tryItOut("/*for..in*/for(__count__ = undefined in *.constructor) {new Functionif((<x/>.valueOf(\"number\"))--) {@foo;throw prototype; } else {export *;yield  /x/ ; } }");
tryItOut("if(null ? 0/0 : 3/0) {{} } else  if (__count__ = window) ");
tryItOut("L:if(\n \"\" .propertyIsEnumerable(\"__proto__\")--) do ; while((({a1:1})) && 0); else  if ((function () { return @foo } )(1.3).constructor = new (let (__iterator__) new <><x><y/></x></>(<y><z/></y>, 1e81))()) ");
tryItOut("while(( /x/ ) && 0){return undefined;prototype = [[1]];\t }");
tryItOut("export __iterator__");
tryItOut("break L\n");
tryItOut("/*infloop*/L:for((typeof (*.__lookupSetter__(\"__iterator__\"))(Exception(((new Function(\"let __noSuchMethod__ = undefined, constructor = null;\")) .@ .2)), @foo < 0)); ((new <x><y/></x>( /x/g ,  /x/ ).__count__)++); function::prop = ([15,16,17,18].filter(/a/gi,  /x/ ))--) yield;");
tryItOut("while(([15,16,17,18].map('haha'.split, 3/0).__defineSetter__(\"constructor\", ({}).hasOwnProperty)) && 0)/*for..in*/for(var [prop, __parent__] = (__parent__.(this).hasOwnProperty(\"yield\")) in (p={}, (p.z = true)()).__defineGetter__(\"delete\", gc)) {{return;if((-1)) {return [,,z1]; } else  if (window) Math.pow else continue L; } }");
tryItOut("let(__parent__ = (__count__ = __noSuchMethod__ = *()), __iterator__) { return;");
tryItOut("__proto__");
