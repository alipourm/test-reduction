tryItOut("constructor = __parent__;");
tryItOut("L:switch(__count__) { case  /x/g : <x><y/></x>; }\ndo {yield __iterator__; } while((false) && 0);");
tryItOut("if(({a2:z2})) throw 0x99; else undefined;");
tryItOut("/*for..in*/for(const prop in <zzz>033</zzz>.(<x/>)) {M:while((__proto__ = ) && 0)L:if(*) {false; } else  if ( \"\" ) {(<><x><y/></x></>);export prop; } else var prototype = window;export __iterator__\n }");
tryItOut("/*for..in*/for([__proto__, __proto__] = /*for..in*//* nogeckoex bug 349964 */ for  each(__noSuchMethod__ in  '' ) __proto__, __iterator__; in prototype-=<x><y/></x>) {switch(*::*) { case @foo: export __parent__; } }");
tryItOut("/*infloop*/L:for(const __proto__; void function(id) { return id }.@foo; (({ __noSuchMethod__: ({ __parent__: ({ constructor: ({ __noSuchMethod__ = -3/0, prototype = __noSuchMethod__: __iterator__, constructor: __parent__ }), __proto__: prototype }), prop: prototype }) }) = __proto__ = *::*.prototype.__defineSetter__(\"__parent__\", (new Function(\"/*infloop*/for(var prototype = <><x><y/></x></>; #1=[#1#]; 0/0) {return;var __noSuchMethod__; }\"))))) with(<><x><y/></x></>){<x><y/></x>;return default: break; gc()break; case  '' : __noSuchMethod__;break; break; case @foo: __proto__ = prototype, __count__ = *;break; case <x><y/></x>: ;case 9: export function::this;break; case <><x><y/></x></>: __iterator__, __noSuchMethod__;case 5: break; case 8: {//h\n}break; break; case constructor: continue L;break; __iterator__.__noSuchMethod__case 0: {}break; break; case 2: break; ; }");
tryItOut("for(let y in [5,6,7,8]) this.zzz.zzz;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var prop in __parent__) {}\n({}).__lookupGetter__");
tryItOut("{/*infloop*/\rL:do {prototype = <><x><y/></x></>; } while( \"\"  &= false.constructor = %); }");
tryItOut("with([,,])\n");
tryItOut("L:do {} while((*::*) && 0);");
tryItOut("let (__noSuchMethod__ = false) { while(( /x/ ) && 0)__noSuchMethod__ = *; }");
tryItOut("let(prop = #1=[__iterator__]) { throw StopIteration;");
tryItOut("/*infloop*/for(<y><z/></y>; \t__parent__.__parent__ = window; (this)[1.3].yoyo(<><x><y/></x></>.__defineGetter__(\"prototype\", this))) yield <y><z/></y>;M:if( \"\" .__noSuchMethod__ = (prop-=0.1)) /*infloop*/for(<><x><y/></x></>; this; <x><y/></x>)  else  if (__proto__.prototype) yield  \"\" ; else yield; const __proto__;");
tryItOut("yield  '' ;gc()");
tryItOut("L:if( /x/g ) throw {};");
tryItOut("switch(<y><z/></y>.*) { case __noSuchMethod__ = <x/>: break; default: __proto__;break; case ([1].__defineSetter__(\"__proto__\", (new Function(\"(5.0000000000000000000000);\")))): M:with({prop: <><x><y/></x></>})return this;break;  }");
tryItOut("with({}) { let(prop = *::*, __proto__) { {} } ");
tryItOut("/*infloop*/L:for((constructor = prototype); new (({}).hasOwnProperty)(); *::*.@foo) L:if(#1=[#1#]) { if (__iterator__) {return <x/>; } else (-1);}");
tryItOut("switch((this.__proto__.isPrototypeOf(this.zzz.zzz;.constructor = (p={}, (p.z = 0x99)())))) { default: return constructor\ngc() const __proto__; }");
tryItOut("/*infloop*/for(var __iterator__; [15,16,17,18].map(function  __parent__ () { yield __count__ } , [,,z1].__iterator__); ({ prop: ({ __noSuchMethod__: [__parent__, , prototype, ], constructor: prototype }) }) = (uneval((__proto__.(*::*).prop)))) {let (__parent__ = <x><y/></x>, __parent__) { while((constructor) && 0){} }/*infloop*/L:while((p={}, (p.z = (uneval(null)))())){var prototype = <x><y/></x>, constructorcontinue ; } }");
tryItOut(";");
tryItOut("switch(false.__lookupGetter__(\"__noSuchMethod__\").__defineGetter__(\"__iterator__\", eval)) { default: let __iterator__;break; case 4: break; case 7: yield; }");
tryItOut("return  /x/g ;\n\n\n");
tryItOut("L:with({prototype: ({a1:1})}){[[]];{} }");
tryItOut("this.zzz.zzz;");
tryItOut("( '' );");
tryItOut("if((@foo[__noSuchMethod__])) {gc(){} } else  if ((new (1e+81)())) {yield *::*; }");
tryItOut("/*for..in*/for(__parent__ = (new (/a/gi)((<x/> for (prop in false)\f), null)).__lookupSetter__(\"__noSuchMethod__\")\f in (window)(this)-=<y><z/></y> .@*:: <><x><y/></x></>) /*for..in*//* nogeckoex bug 349964 */ for  each(const [].isPrototypeOf(<><x><y/></x></>)['__proto__'] in <x/>) {let __proto__, delete; }");
tryItOut("/*for..in*/for(let [prop, prop] = __count__.__noSuchMethod__ setter= new Function in (<x><y/></x>)([,])) with([,].hasOwnProperty(\"__noSuchMethod__\")){}");
tryItOut("M:while((prototype.((#1# += 1e4))) && 0){; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(__iterator__ in <><x><y/></x></>) {let prototype; }");
tryItOut("/*for..in*/for(__count__ = <x><y/></x> in false) ;");
tryItOut("/*infloop*/for(prototype; \n /x/g ; <{prototype}><!--yy--></{prototype}>.([false\n for (__noSuchMethod__ in <x><y/></x>)])) with( /x/ )yield window");
tryItOut("/*for..in*/L:for(const prototype in ((function(y) { yield y; yield;; yield y; })(eval(\"[,]\", [z1,,]))))for(let y in []);");
tryItOut("throw __proto__;");
tryItOut("/*for..in*/M:for(var __iterator__((new Function).call([,], )) in (((new Function(\"__iterator__if(__proto__ = __count__) {gc() } else  if (constructor ? function ([y]) { } : [[1]]) export prototype\")))([11,12,13,14].filter)))/*infloop*/M:for(new (<><x><y/></x></>)().__lookupGetter__(\"__parent__\");  '' ; typeof 'fafafa'.replace(/a/g, function ()0.1)) {export each; }");
tryItOut("{with([null if (<x><y/></x>)]){const prop, __proto__;(new Function(\"<x><y/></x>\")) } }");
tryItOut("M:if(*) { if (__proto__.throw( /x/ ) || <><x><y/></x></>.propertyIsEnumerable(\"prop\").__defineGetter__(\"__noSuchMethod__\", __count__ = prop)) {(*::*); }} else export {<x><y/></x>; };");
tryItOut("/*for..in*/for(__noSuchMethod__ in (('haha'.split)(<><x><y/></x></>))){;function (__noSuchMethod__, __parent__)<y><z/></y> }");
tryItOut("try { __noSuchMethod__ = __count__; } finally { yield <x><y/></x> - (__proto__)[ \"\" ]; } ");
tryItOut("if(+(uneval(033))) { if ('fafafa'.replace(/a/g, ({}).hasOwnProperty))  else continue L;}");
tryItOut("function::prototype\n*, this.__defineSetter__(\"constructor\", <y><z/></y>)");
tryItOut("return new +undefined.hasOwnProperty(\"__parent__\");");
tryItOut("<xxx>{prop}</xxx>");
tryItOut("while((<><bbb xmlns:ccc=\".eval((__count__.constructor)).throw(constructor+=delete new @foo([[]]))\"><ccc:eee></ccc:eee></bbb></>) && 0){return;break M; }");
tryItOut("if(<><x><y/></x></>) { if ([,,z1]) {__proto__ = __parent__, __noSuchMethod__ =  \"\" ; }} else ");
tryItOut("do for(let y in []); while((<x/>) && 0);");
tryItOut("/*infloop*/for(var __iterator__ = *; *; undefined) {let prop = undefined, <><x><y/></x></>;export constructor; }");
tryItOut("/*infloop*/for(var prototype; (true.__lookupGetter__(\"__count__\"))() += function::__iterator__() >>>=true <<=  \"\" ; this && <y><z/></y> <= [,,] = __iterator__ = __count__) {M:with({__noSuchMethod__: eval(\"* <= <x><y/></x>\", false)})M:if((arguments %= #1=[#1#])) { if (#0=({constructor: -3/0})) {}} else  /x/ ; }");
tryItOut("/*for..in*/L:for(constructor in *) {return this;yield @foo; }");
tryItOut("L:if(! /* Comment */constructor , <y><z/></y>[[1,,]]) {0/0; } else  if (@foo % 1e4) {if((__iterator__.__count__ =  '' )) return {}; else {let __noSuchMethod__; /x/  }/*infloop*/do return; while((break )); } else export __iterator__\n");
tryItOut("/*for..in*/for(var __noSuchMethod__ in ((/a/gi)((new eval()))))export *\nreturn;");
tryItOut("M:if(prototype.__iterator__ = ()) {; } else  if ((false\n).prototype) {yield constructor\n/*for..in*/for(const __noSuchMethod__ in ((function  __proto__ ()(new (function (constructor)<y><z/></y>)()))((( '' [[z1,,]]).hasOwnProperty(\"__noSuchMethod__\"))))){export __proto__;; } } else {/*infloop*/for(prototype; new 1e4(); new (new Function)(false)) ;{(<y><z/></y>);throw  /x/g ; } }");
tryItOut("M:if((new (function  __proto__ ()(this += *::*))((void __parent__), (prototype = 0)))) {function(q) { return q; }return *::*; } else  if (__proto__ = let.isPrototypeOf(__iterator__.yoyo(prototype))) {L: {yield 1e81; } } else export __noSuchMethod__;");
tryItOut("{/*infloop*/do var __count__, function::function::__proto__; while(this.__defineSetter__(\"__noSuchMethod__\", eval)); }");
tryItOut("{continue M; }");
tryItOut("yield\n");
tryItOut("switch((yield <x><y/></x>.(<><x><y/></x></>))) { default: L:if(<x><y/></x>) gc() else {yield null; }break; case 4: M:if(((continue L))(__iterator__)) { if ((eval(\"/*for..in*//*\\n*/for(var __iterator__ = -1([,,z1], *) in *::*) \", yield ({}) .@x:: <x><y/></x>))) *::*;} else {<><x><y/></x></>; }break; break; case 4: break; case window.valueOf(\"number\"): yield <x><y/></x>;break; case <x/>.unwatch(\"__parent__\"): (false)(\nwindow); }");
tryItOut("/*infloop*/L:do return; while(__proto__ = <y><z/></y>);");
tryItOut("if((false - [[1]].__defineSetter__(\"__parent__\", Math.sin))) { if (let __iterator__;.valueOf(\"number\")) while((<x/>) && 0); else {Math.powyield  '' ; }}");
tryItOut("{({}); }");
tryItOut("if( /x/ \n) { if (\t(false === <x><y/></x>).propertyIsEnumerable(\"__proto__\")) {yield <x><y/></x>; }} else {throw 1e+81; } const __count__;");
tryItOut("export *; const prop;\nthrow true;\n");
tryItOut("switch(__iterator__.(prop = __proto__)) { case 0: break; case 6: {}break; case 5.0000000000000000000000.__lookupSetter__(\"__count__\").propertyIsEnumerable(\"__count__\"): if([1]) {return prototype;\f({}).__lookupGetter__ } else  if (__iterator__) yield; const prototype; else (<><x><y/></x></>);break; default: /*for..in*/for(__proto__ = *::* *= window in 0) {throw  /x/ ; } }\n");
tryItOut("with(({a1:1}))({})\nyield;");
tryItOut("let (({ __parent__: __proto__, prop: constructor }) = (false.__defineGetter__(\"__iterator__\", function(y) { yield y; 0;; yield y; }))) { let __count__ = @foo; }");
tryItOut("export *");
tryItOut("L: {/*infloop*/L:while(<><x><y/></x></>)const __count__; }");
tryItOut("if((constructor = prop = <y><z/></y>)) function(q) { return q; } else  if (__count__) {{}export *; } else {export *; }");
tryItOut("/*infloop*/while(/a/gi |= function ([y]) { }){if(/*\n*/1.3) (<x/>); else  if (__parent__) {let __parent__, __noSuchMethod__; }; }");
tryItOut("L:if( /x/  >>>=*::*.valueOf(\"number\")) {{}\t } else const __proto__ = <y><z/></y>;");
tryItOut("M:switch((window.unwatch(\"__proto__\"))) { case 2: yield;if(window) { if ([,]) {continue ; } else {this }}case 9:  }");
tryItOut("/*infloop*/do (.2); while([<y><z/></y>]);");
tryItOut("");
tryItOut("if(true) {/*infloop*/while(<x><y/></x> ? <x><y/\t></x> : <><x><y/></x\t></>)L: {continue L;return 0x99; } } else  if (new ([1,2,3,4].map)()) {{} }");
tryItOut("if( \"\" ) { if (new prop\t(<x/>, <x><y\f/></x>)) if(false) { if (prop) {var prototype = *::*, __iterator__ = *; } else {{} }} else var prototype =  /x/ , __parent__ = this;}");
tryItOut("if(function (constructor)true) {/*for..in*/for(var [__parent__, null] = * in @foo) {{} }\feval } else  if (<xxx {function::[, , , __parent__, __parent__]}={1.2e3} />.(true .@x:: @foo)) {continue L;gc() }");
tryItOut("L:if(<><bbb xmlns:ccc=\"prop = __parent__\"><ccc:eee></ccc:eee></bbb></>) { if (new <x><y/></x>()) {return; } else {return;break M; }}");
tryItOut("for(let y in []);");
tryItOut("__noSuchMethod__ = window;");
tryItOut("/*for..in*/L:for(const prop = __iterator__.__noSuchMethod__ in prototype = window) const __parent__ = <><x><y/></x></>, __noSuchMethod__;");
tryItOut("const __iterator__, __proto__ = <><x><y/></x></>\n");
tryItOut("/*infloop*/for(const prototype; 4.; true) {yield __proto__;return  '' ; }");
tryItOut("let prop = *, __proto__ = <x><y/></x>; const __iterator__;");
tryItOut("while(([ | (~window) if ([[z1] for each (__count__ in  /x/g )])]) && 0);");
tryItOut("if(((*::* >>= false).eval(-1.__lookupGetter__(\"__count__\")))) {gc() } else  if (({prop:  /x/ })) let constructor = #3={a:#3#};");
tryItOut("let(__noSuchMethod__.__count__, prop) { throw StopIteration;");
tryItOut("{Math.powexport __proto__; }");
tryItOut("/*infloop*/M:while([.__iterator__, ({ prop: ({ __iterator__: [] }) })] = this.__defineSetter__(\"function::__iterator__\", false)){yield <><x><y/></x></>;yield; }");
tryItOut("\nexport __count__;\n");
tryItOut("if((<x/>.valueOf(\"number\").__proto__)) { if (true =  \"\" .__iterator__) export *; else var __noSuchMethod__ = <y><z/></y>;\n}");
tryItOut("if(__iterator__.prototype) (-1); else  if (@foo.yoyo(prop))  const __iterator__;");
tryItOut("({a1:1})");
tryItOut("continue ;");
tryItOut("M:with(<x><\fy/></x>){export *; }");
tryItOut("return\nif(<ccc:ddd><x><y/></x> </ccc:ddd>) { if ((null++)) {let __parent__;export *; }} else {var __proto__; }");
tryItOut("/*for..in*/for(let [__noSuchMethod__, __count__] = (Math.sin) in (p={}, (p.z = __iterator__)())) /*infloop*/while(window.__defineSetter__(\"__count__\", gc)){yield 1e81;var __proto__ = prototype, __count__; }\f");
tryItOut("/*infloop*/for(var ({ constructor: [(__iterator__), , [], ({ prop: ({ prototype: prop }), __iterator__: ({ __iterator__: __proto__, __parent__: __parent__ }) }), ] }) = prop; ({prop: *::*, __iterator__: <x><y/></x> })\n; \n<><x><y/></x></>) L:switch(<x><y/></x>.(this)) { case 6: throw 0.1; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let ~4..prototype in (new Object())) { }");
tryItOut("do switch(window) { default: {}case 3:  } while(((new (function (__iterator__, __parent__)<><x><y/></x></>)(window))) && 0);");
tryItOut("with({}) return;");
tryItOut("{M:if((this.__defineGetter__(\"prototype\", function  prop (prop) { return window } ) ? <><x><y/></x></>.valueOf(\"number\") : )) {let __count__ =  \"\" ; } else  if (__parent__) {if(({ get __noSuchMethod__ __proto__ (__parent__, prototype) { gc() } , __count__:  \"\"  })) throw (function ([y]) { })(); else  if ((eval(\"let (prop = 3) [1,,]\", ({constructor getter: function(y) { yield y; ;; yield y; }, delete: prototype })))) {{} }/*infloop*/while([11,12,13,14].filter){return <><x><y/></x></>;break ; } } else {\n{{}yield; }M:if(window) {export __iterator__; } else  if (this) {[1,2,3,4].mapexport __count__; } else <x/> } }");
tryItOut(";if(Math.sin()) { if ((({ get __noSuchMethod__(__noSuchMethod__, __noSuchMethod__)<x><y/></x>, __iterator__ setter: (eval).apply }))[RegExp()]) prototype = <><x><y/></x></>} else return;");
tryItOut("__proto__, prototype = window;");
tryItOut("<employee id=\"1\"><name>Joe</name><age>20</age></employee>");
tryItOut("if(eval(\"<x><y/></x>\", this)) {{}throw <><x><y/></x></>; } else undefined;");
tryItOut("if((__parent__ = null) ? this : <x><y/></x>.prototype) /*for..in*//* nogeckoex bug 349964 */ for  each(let __proto__ in 0) {yield <x><y/></x>; }");
tryItOut("L:if(__count__ = new (<y><z/></y>)( /x/ )) export __proto__; else  if ((uneval(let (__noSuchMethod__ = function::constructor)  /x/g ))) export *; else function(y) { yield y; export *;; yield y; }");
tryItOut("{return; }");
tryItOut("{}\n");
tryItOut("with({}) this.zzz.zzz;");
tryItOut("const prototype, constructor = #1#;");
tryItOut("yield");
tryItOut("yield; const this;");
tryItOut("let (({ __parent__: prototype, prototype: constructor }), prototype = false) { gc() }");
tryItOut("/*infloop*/for(const ({ prop: ({ __count__: ({ __iterator__: constructor }) }), __iterator__: ({ constructor: [({ __proto__: \fprototype, __iterator__: constructor }), prop, , , ({ __count__: ({ __parent__: prop }), __noSuchMethod__: ({ __noSuchMethod__: __noSuchMethod__, prototype: x::__count__ }) })] }) }) = undefined.prototype; (Function)(([z1] if (1e81)), 0x99); (yield new (function(q) { return q; }).apply( /x/g , __noSuchMethod__))) {gc(){} }");
tryItOut("constructor = __proto__.__count__;");
tryItOut("with({__parent__: __proto__ = @foo.__parent__})export *;");
tryItOut("return <y><z/></y>;");
tryItOut("with({}) this.zzz.zzz;");
tryItOut("/*for..in*/for(let case <bbb xmlns=\"undefined\"><!--yy--></bbb>.((-1.eval(<y><z/></y>))): gc()break; case #1=1e-81: return;break;  in (yield window)) switch((*.__lookupGetter__(\"__proto__\"))) { case 6: break;  }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(['__count__'] in -1) /*for..in*/for(var prototype = [15,16,17,18].some(<x/>, window) in <x><y/></x>) yield <><x><y/></x></>;");
tryItOut("if( '' ) {M:if(<x><y/></x>) 'haha'.split } else  if (eval(\"switch(<x/>) { default:  }\", <x><y/></x>.__parent__)) /*for..in*/L:for(const __count__ in ((prototype)(((* if (window)))))){{} } else {throw this; }");
tryItOut("/*infloop*/while(.valueOf(\"number\")){gc() }with({constructor: <x><y/></x>})(@foo);");
tryItOut("L: {yield [1,,]export __proto__; }");
tryItOut("/*infloop*/L:while( '' ){0x99; }");
tryItOut("/*for..in*/for(let __count__ in ((function (prop)(__parent__ ? null : null.__parent__ = (({ __count__: prop }) = <><x><y/></x></>.propertyIsEnumerable(\"__parent__\"))))(<bbb xmlns:ccc=\" /x/g \"><ccc:eee></ccc:eee></bbb>.(<><>*</></> !== ({prop getter: Function }))))){if((new (<x/>)())(@foo, @foo)) { if (constructor =  \"\" .__defineSetter__(\"__proto__\", (new Function(\"return window;\")))) {/*for..in*//* nogeckoex bug 349964 */ for  each(const __noSuchMethod__ in prototype) {yield false; } } else {; }}{export prototypethrow 1.2e3; } }");
tryItOut("with({prop: constructor.constructor = window + 0.throw( \"\" )})function (prototype) { return window } ");
tryItOut("L:if((false instanceof this)) {throw <x><y/></x>;{} } else  if (((eval).call(undefined, <x><y/></x>, ({a1:1})))) {;yield prop; }");
tryItOut("M:if( \"\" ) { if (*) {__noSuchMethod__ = 5.0000000000000000000000; }} else switch((<x><y/></x>.(<x><y/></x>))) { case 3: default: ;break;  }");
tryItOut("export __count__;");
tryItOut("if(([11,12,13,14].sort ? ({}).__lookupGetter__ : ( /x/ .throw(<y><z/></y>)))) gc()");
tryItOut("({}).hasOwnProperty\ngc()\n");
tryItOut("(true)");
tryItOut("if(<x><y/></x> | this.valueOf(\"number\")) { if (__parent__ = this\n) {return  '' ;return true; }} else return;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(var __iterator__.__count__ in <><x><y/></x></>.watch(\"__iterator__\", 'haha'.split).watch(\"__noSuchMethod__\", ({}).__lookupGetter__)) {switch((window <= <><x><y/></x></>)) { default:  } }");
tryItOut("/*for..in*/for(let __parent__ = eval(\"(new Function(\\\"return window\\\\f;\\\"))\",  /x/g ) .. [z1,,] in (eval(\"{}\", (uneval(prototype))))) {throw  /x/g ; }");
tryItOut("/*for..in*/for(const [__count__, constructor] = [,,z1] in <x><y/></x> <<= true) gc()");
tryItOut("L:if(__parent__ = (\n<x><y/></x> >>>=(<><x><y/></x></> -= 1.3))) {export prop;export prop; }");
tryItOut("/*for..in*/for(const __proto__ in -3/0) {return <x/>; }M:with(<bbb xmlns:ccc=\"(((new Number(<x><y/></x>, __proto__))[__parent__.x::constructor]).unwatch(\"prototype\"))\"><ccc:eee></ccc:eee></bbb>){; }");
tryItOut("/*infloop*/M:for(prop = this; @foo; <x><y/></x>) {{}__noSuchMethod__ = function ([y]) { }, __count__; }");
tryItOut("with([11,12,13,14].map)M:switch(window) { case <x><y/></x>--: let prop, prop = (-1);break; default: {__parent__{} }case ({__iterator__: true,  set prop __iterator__ (__proto__) { return (-0) }  }):  }");
tryItOut("if((yield <x><y/></x>)) /*for..in*/for(let __parent__ = window in  /x/ ) export *; else /*for..in*//* nogeckoex bug 349964 */");
tryItOut("/*for..in*/for(var constructor = (\tfunction  constructor (__count__) { yield __count__ } )([, prototype, constructor, prototype, ] = <><x><y/></x></>.__lookupGetter__(\"__proto__\")) in new gc()) {let (__iterator__) { ; } }");
tryItOut("/*infloop*/for(constructor; (__parent__ = (p={}, (p.z = [1,2,3,4].slice)())); (({__iterator__: function ([y]) { } }) == 4. === <x><y/></x> *=  /x/  |  /x/ )) (<x/>)");
tryItOut("yield; const __proto__;");
tryItOut("/*for..in*/M:for(let prop = #1# in 0) {return <x><y/></x>; }");
tryItOut("{L:if(<x><y/></x>.constructor = <x><y/></x>) /a/gi else  if ((p={}, (p.z = @foo)()).valueOf(\"number\")) {<><x><y/></x></> } }");
tryItOut("with({__count__: <y><z/></y>})with(<><x><y/></x></> ^= 0/0 >>> __iterator__ ? <x><y/></x> : *::*){export *;break ; }");
tryItOut("while((+new Error()) && 0){gc() }\nexport __iterator__;");
tryItOut("{/a/gi }");
tryItOut("with({__noSuchMethod__: (yield (this / false))})__noSuchMethod__ = constructor;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const get.__parent__ in [,]) /*for..in*//* nogeckoex bug 349964 */ for  each(const __count__(true) in <><x><y/></x></>) {let constructor;const __parent__; }");
tryItOut("/*for..in*/for(var \tprop.__parent__ in ((({}).__lookupGetter__)((throw StopIteration;).eval(this.__defineSetter__(\"__proto__\", /a/gi))))){const __count__; }");
tryItOut("let(__noSuchMethod__, prototype) { return  /* Comment */ /x/g ;");
tryItOut("throw -3/0;1e-81; const __noSuchMethod__;");
tryItOut("L:while(( '' ) && 0)gc()");
tryItOut("do  while(((<x><y/></x>.(window))) && 0);");
tryItOut("return;return this.zzz.zzz;");
tryItOut("if(yield (p={}, (p.z =  /x/g )())) {export *;/*for..in*/for(let prop in  \"\" ) export constructor; } else {break M; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __iterator__ in *::* ? window : <><x><y/></x></>) ;");
tryItOut("/*infloop*/L:do (1 for (x in [])) while((prototype));\n{L:if(<x><y/></x>) {(<y><z/></y>);return false; } else  if (<x><y/></x>) {<y><z/></y>yield (-1); } }\n");
tryItOut("if(this.__defineSetter__(\"prototype\", (prop).__defineSetter__)) { if ((prop = <x><y/></x>.hasOwnProperty(\"__count__\"))) L:if(<x/>) { if ([]) {const __proto__ = <><x><y/></x></>;break L; } else {/*\n*/export *; }\t} else {yield <y><z/></y>;if(yield <><x><y/></x></>) { if ([<><x><y/></x></> for (prototype in this)]) {__proto__;; } else throw <><x><y/></x></>;} }}");
tryItOut("constructor = constructor");
tryItOut("this.zzz.zzz;");
tryItOut("with(@foo)/*infloop*/L:for(*.throw(__iterator__); true.constructor; this.__defineGetter__(\"prototype\", Math.pow)) {yield; }");
tryItOut("L: /*infloop*/for(let __proto__ = *::*;  \"\" ; window) {(<y><z/></y>).__defineSetter__ };");
tryItOut("/*for..in*/for(var prototype = __count__ in ('haha'.split(window, <x/>))) export prop;");
tryItOut("L: {continue ; }");
tryItOut("__parent__");
tryItOut("/*for..in*/for(const constructor in __count__ |= <x><y/></x> / <x/>) with({}) {  } ");
tryItOut("/*for..in*/for(let [prototype, __iterator__] = ((<><x><y/></x></> if (null))) in __iterator__) {throw this;if(<y><z/></y>) gc() else  if (*) { } }\nwindow = __parent__;");
tryItOut("{L: let (getter, prop = 3/0.@*) { /*for..in*//* nogeckoex bug 349964 */ for  each(const prototype in <><x><y/></x></>) {; } } }");
tryItOut("{let constructor, __iterator__ = __proto__;(undefined); }");
tryItOut("with(({ __parent__: __parent__ }) = <y><z/></y>){/*infloop*/case false: break; default: return 1e4;[[1]]break; case 2: continue M;break; return; }");
tryItOut("/*infloop*/do {return __noSuchMethod__ = this; } while(((new Object(__noSuchMethod__)) if ((new [1,2,3,4].map()))));");
tryItOut("L:if(constructor <= [[]]) { if (this.__defineGetter__(\"__noSuchMethod__\"//h\n, (__parent__).__defineSetter__)) {break M;function(id) { return id }; }} else (undefined);");
tryItOut("switch((__iterator__\f = <y><z/></y>).eval(<x/> >= @foo)) { case yield (prototype): default: [1,2,3,4].slicebreak;  }");
tryItOut("this\n__iterator__ =  /x/ ;yield;");
tryItOut("with(prop.propertyIsEnumerable(\"__noSuchMethod__\")\t){{}return; }");
tryItOut("yield false\n");
tryItOut("if(<x/>) { if (<y><z/></y>) {gc() } else break ;}");
tryItOut("if([15,16,17,18].sort([1,2,3,4].map, function () { return * } ())) {M:do {return;__noSuchMethod__ } while((window) && 0);return true; } else  if (([__proto__].some(function ()prototype))) \n*::*;");
tryItOut("/*for..in*/for(var ({ constructor: __parent__ }) in Array()) {/*for..in*/L:for(let  \"\"  in ((<x><y/></x>)(1.2e3))){let __noSuchMethod__, prototype; }/*infloop*/while(prototype = [[1]]){(-1); } }");
tryItOut("if(new  ''  + true()) { if (<><bbb xmlns=\" /x/g  >= 033\"> </bbb></>) /*infloop*/for(let []; (__parent__ =  '' ); 'fafafa'.replace(/a/g, (1 for (x in [])))) {/*for..in*//* nogeckoex bug 349964 */ for  each(const __proto__ in null) {return; } }} else {export *; }");
tryItOut("var prop, __count__;");
tryItOut("if(({ __parent__: ({ __parent__: [] }) }).new Date((__noSuchMethod__++))) {/*for..in*//* nogeckoex bug 349964 */ for  each(let {}['prototype'] in [[]]) (window); }");
tryItOut("with({}) ;");
tryItOut("let (__noSuchMethod__ = [ \"\" ].sort([1,2,3,4].slice)) { (<y><z/></y>); } const prototype;");
tryItOut("for(let y in []);");
tryItOut("export constructor");
tryItOut("{return false;throw false; }");
tryItOut("{with({__iterator__: ({ set __count__(prop) { yield prop.__count__ }  })})yield <><x><y/></x></>; }");
tryItOut("L: export prototype;");
tryItOut("<><x><y/></x></>\n(*::*);\n");
tryItOut("let(__iterator__ = constructor = ({a1:1}), __proto__) ((function(){this.zzz.zzz;})());");
tryItOut("do {L: {yield;{} } } while(((__count__)|=<x><y/></x>) && 0);");
tryItOut("if(((uneval(__noSuchMethod__)).watch(\"__parent__\", function(q) { return q; }))) {(function::__noSuchMethod__);var constructor; } else yield [z1] <= prop;");
tryItOut(" /x/ ;\nif( /x/g ) return  '' ; else  if (<><x><y/></x></>) const __noSuchMethod__ = null, prototype = <x><y/></x>; else {yield [,,]; }\n");
