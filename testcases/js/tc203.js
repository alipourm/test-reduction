tryItOut("return\nM:if(<><x><y/></x></>) {return <x><y/></x>; }");
tryItOut("/*for..in*/M:for(var [__parent__, __proto__] = (new (.prop = var __parent__; <x><y/></x>)( \"\" .__lookupSetter__(\"__proto__\"))) in <x><y/></x>) {(<x><y/></x>); }");
tryItOut("L: <><x><y/></x></>");
tryItOut("break ;");
tryItOut("(this); const __proto__;");
tryItOut("/*for..in*/for(let prototype = *::* === window in *) {__iterator__;export __parent__; }\t");
tryItOut("return;");
tryItOut("let (({ __parent__: [__proto__, prop, __noSuchMethod__, __count__] }), prototype = constructor) { export prop; }");
tryItOut("let(__parent__) ((function(){__count__ = prototype;})());");
tryItOut("/*infloop*/for(var prototype.constructor = true\n.hasOwnProperty(\"__noSuchMethod__\"); <x/> >= false; [__iterator__, ({ __proto__: constructor, __noSuchMethod__: __count__ }), ] = \f({ prototype: ({ prototype: get }) }) = *) if(<x/> .@ 0.1) {/a/gi } else  if (this.__defineGetter__(\"prop\", ({}).__lookupGetter__)\f) export *\n");
tryItOut("function  __noSuchMethod__ (__iterator__(Function)) { export *; } ");
tryItOut("/*infloop*/L:for(var __parent__ = true; <x><y/></x>;  \"\" ) export __noSuchMethod__;");
tryItOut("<ccc:ddd> </ccc:ddd>");
tryItOut("/*infloop*/for(*::*; *; 3) yield;");
tryItOut("with(this.__defineSetter__(\"__proto__\", /a/gi) ^= ++({ get __proto__(prototype, __iterator__) { yield __count__ }  }))/*for..in*//* nogeckoex bug 349964 */L: for  each(let __noSuchMethod__ in <x/>) ");
tryItOut("L:if('fafafa'.replace(/a/g, (new Date(__count__, <><x><y/></x></>)).watch)) {(__noSuchMethod__);export __iterator__\nthrow *; } else  if (__iterator__ = *::*) [, , prop], ({ __iterator__: __parent__ })");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__(function ([y]) { }) in (p={}, (p.z =  \"\" )())--) {{} }");
tryItOut("with({}) this.zzz.zzz;");
tryItOut("");
tryItOut("L:do prototype =  /x/g , __count__; while((undefined) && 0);");
tryItOut("L:if(eval(\"let prop = <x><y/></x>, __count__;\", 1e+81 >>> <><x><y/></x></> @ (1 for (x in [])))) { if (*::*) {{}yield; } else {export *;{yield;continue ; } }}");
tryItOut("throw @foo;");
tryItOut("if() {__count__ = <x><y/></x>, __iterator__ = (-0); }\n");
tryItOut("for(let y in [5,6,7,8]) with({}) let(__proto__ =  /x/g .*, function::let) ((function(){prototype = prototype;})());");
tryItOut("L:if(<x><y/></x>.__noSuchMethod__ = <><x><y/></x></>) { if (<x><y/></x> in window) export *;/*infloop*/for(let default: window; = <x><y/></x>; 033; *::*) {yield;(<><x><y/></x></>); } else {L: {continue ; } }}");
tryItOut("/*infloop*/M:for(<><x><y/></x></> ? <y><z/></y> : <x><y/></x>; __parent__(<x><y\f/></x>) .@ Date(); prototype) {<bbb xmlns=\" '' \">yyy</bbb>\nexport *;M:while((new (@foo)()) && 0)prop = <x><y/></x>; }");
tryItOut("/*infloop*/for(__proto__ = <><x><y/></x></>; <x><y/></x>; <x><y/></x>) export *\nL:if(@foo ^ ((<x><y/></x>).__defineSetter__).call(-3/0, <y><z/></y>) ? __iterator__(__iterator__) << <x><y/></x> : (each.__count__ = 1e-81)) {var prototype = .2, __parent__;break ; } else  if (<x><y/></x>.(*)) return; else {{}__count__ }");
tryItOut("/*infloop*/for(const prototype; <y><z/></y>; (this.__defineSetter__(\"__iterator__\", 'haha'.split))) ");
tryItOut("if([false for (__proto__ in  /x/ )]) { if ((__count__.__proto__ = ([15,16,17,18].sort(eval, 1.3)))) {const __count__ = <y><z/></y>, __proto__ = <x><y/></x>; }} else yield;");
tryItOut("/*for..in*/for(var [__iterator__, prototype] = ([__count__, , __iterator__] = -0 .. __proto__ ? (null |=  /x/ \n) : true %= true) in [11,12,13,14].filter) {if(__parent__ = <><x><y/></x></> in [11,12,13,14].map) { if ( \"\" ) {export __iterator__;throw 1e4; }} else function  __iterator__ (__count__) { yield this } L: {return;export *; } }");
tryItOut("if(this) { if ([]) /*for..in*/for(var constructor in this) 'haha'.split} else if(({033:  \"\" })) { if (false[function ([y]) { }](__noSuchMethod__-=<x><y/></x>, <><x><y/></x></>)) <x><y/></x> else gc()\nyield prototype;}");
tryItOut("/*infloop*/for( /x/g ; [1]; <><x><y/></x></>) {;{} }");
tryItOut("/*for..in*/for(const [prop, constructor] = (yield window) in window) {return; }");
tryItOut("const (function ([y]) { })() = this, prototype\n//h\nif(<x><y/></x>) {break ;; }/*for..in*/L:for(let (__parent__) in (( '' )((+this)))){gc() }");
tryItOut("export *\n");
tryItOut("yield false; const constructor;");
tryItOut("if([[,,z1].@*].filter(Math.sin)) { if (new * -  \"\" ('fafafa'.replace(/a/g, (<><x><y/></x></>).__defineSetter__))) {let (__proto__, __proto__) { this; }(<x/>); const prototype; }} else var __parent__ = <><x><y/></x></>, prototype;");
tryItOut("/*for..in*/for(const __noSuchMethod__ =  /* Comment */this in let (__parent__) <x><y/></x>.throw((yield.(window)))) {return; }");
tryItOut("L: var __parent__;\t");
tryItOut("/*infloop*/for(var prototype = (constructor); [] = this.__defineGetter__(\"__iterator__\", eval); <x><y/></x> for (__proto__ in <y><z/></y>).@foo) continue L;");
tryItOut("if('fafafa'.replace(/a/g, ({}).hasOwnProperty)) export __iterator__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var (function ([y]) { })().__noSuchMethod__ in <x><y/></x>) {yield; }");
tryItOut("/*infloop*/for(prototype = (eval(\"__iterator__ ? this : null\", <><x><y/></x></>)); <><zzz>constructor = this\n</zzz></>; <><x><y/></x></>.__defineSetter__(\"prototype\", (new Function(\"continue M;\")))) {if(<x/>) yield;yield  \"\" ; }");
tryItOut("/*for..in*/for([__parent__, prototype] =  /x/ -- in <><x><y/></x></>.__lookupSetter__(\"__noSuchMethod__\")) {/*for..in*/for(constructor.__proto__ in [,,z1]) /*for..in*/(for(const prototype = prototype)false) {(<y><z/></y>); } }");
tryItOut("L:if(void <x><y/></x>) { if (eval(\"({a2:z2}).*\", undefined.yoyo(<x/>))) {return;const constructor = undefined, __noSuchMethod__; }} else {export *;gc() }");
tryItOut("if(new (* ? window : <><x><y/></x></>)(-0.1, prop)) { if (__count__) {export prototype;yield; } else /*infloop*/M:for(let prototype; <y><z/></y>;  /x/g ) { \"\" ;return; }}");
tryItOut("export __parent__;\nvar prop = [[1]], constructor;\n");
tryItOut("switch((prop * (eval(\"throw -1;\",  /x/ .valueOf(\"number\"))).isPrototypeOf((__noSuchMethod__ = 1e4)))) { case gc: break; break; default: L:switch((({ set export __noSuchMethod__; __proto__ (constructor)__parent__ }))) { case (new function(q) { return q; }()): /*for..in*/for(__proto__ in ((<x/>)(x::constructor)))yield null;default: return;break; case 8: var constructor;case 1: function () { return 3 } break; case 3: break;  } }");
tryItOut("L:with({__iterator__: (prototype = null)()}){if(prototype) {export getter;{} } }");
tryItOut("/*for..in*/for(const __noSuchMethod__ = [1,,] ? @foo : <><x><y/></x></> in *::*) export *;");
tryItOut("if(this.zzz.zzz) {switch( '' ) { case 2: return prop;break; break ;case  '' : break ;break; case this: break; case window: default: yield __iterator__;case 0: break;  }/*for..in*/for(const [__count__, constructor] = <><x><y/></x></> in __proto__ = -3/0) var __parent__, __parent__ = <><x><y/></x></>; } else  if (constructor = window) constructor");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*/L:for(const ((prototype[ /x/ ]))(true.throw( '' )) in ((eval)(__proto__.unwatch(\"__iterator__\")))){/*for..in*/for(let __noSuchMethod__.prop = (-0)['__proto__'] in ((function (__parent__, __parent__) { yield constructor.__lookupSetter__(\"function::__parent__\") } )(*::*.__defineSetter__(\"prop\", ({}).__lookupGetter__).unwatch(\"prop\"))))export prop; }");
tryItOut("break ;\nfunction  __noSuchMethod__ () { prop = <x/>, prop = <x><y/></x>; } \n const __count__;");
tryItOut("return .2;");
tryItOut("{ }");
tryItOut("if(new Error()) do (*::*); while(( /x/g ) && 0); else /*infloop*/do yield  \"\" ; while( /* Comment */*::*)");
tryItOut("if(([11,12,13,14].map)) { if (this.__parent__ << <x/>++) {( \"\" ); }} else /*for..in*//* nogeckoex bug 349964 */ for  each(const constructor.__iterator__ in constructor.constructor setter= 0x99) __count__, prototype = undefined;");
tryItOut("/*infloop*/do L:with((p={}, (p.z = <><x><y/></x></>\r)())); while(typeof __parent__ instanceof <y><z/></y>);");
tryItOut("with((<{__parent__}></{__parent__}> >>> (constructor))){/*for..in*/L:for(const __proto__ = <x/> in [1,,]) return;/*for..in*/for(const prop = (uneval( /x/ )) in __proto__) /*infloop*/M:for(var __noSuchMethod__; <x><y/></x>; <><x><y/></x></>) yield window; }");
tryItOut("yield @foo <= *::*;");
tryItOut("if(({__proto__: yield;})) { if ([,,z1]((@foo.isPrototypeOf(-1)), 1e-81)) {gc()export constructor; } else (__count__);}");
tryItOut("{//h\n const prototype; }");
tryItOut("constructor = __parent__;");
tryItOut("\nreturn <x><y/></x>;\n");
tryItOut("export *\n");
tryItOut("if(undefined) (*::*); else  if (throw <y><z/></y>\n) {break L;yield  /x/g ; } else return false;");
tryItOut("let (({ __iterator__: ({ prototype: [__parent__, (\t{ __count__: prototype, __iterator__: prototype }), [({ __noSuchMethod__: __proto__ }), , ]], __proto__: prop }), prototype: ({ __iterator__: [, [__parent__, [prototype], , [], prototype]], <x/>(undefined, function ([y]) { }).__iterator__: ({ __parent__: ({ __parent__: ({ getter: ({ __noSuchMethod__: prop, prototype: <ccc:ddd> </ccc:ddd> }) }), __count__: constructor }), __noSuchMethod__: __noSuchMethod__ }) }) }) = __proto__ = __count__.*, constructor) { ; }");
tryItOut("throw __proto__;");
tryItOut("{}");
tryItOut("const __parent__, __noSuchMethod__;\n{}\n");
tryItOut("<> { yield <x><y/></x> } </>;\nreturn;\n");
tryItOut("/*for..in*/for(var [prop, __parent__] = new (({ __count__: __noSuchMethod__, __noSuchMethod__: __noSuchMethod__ }) = [,,z1].__lookupGetter__(\"__proto__\"))() in 1.2e3 ..  '' ) {for(let y in [5,6,7,8])  }");
tryItOut("switch(<x/>) { default:  { gc() } break; case 4: /*infloop*/do {yield constructor;; } while((({__parent__: (-1),  set __count__(__proto__, __noSuchMethod__)<y><z/></y> })));const Math.pow, __parent__;case 6: break; case 7: export __count__;let prototype = *; }");
tryItOut("/*for..in*/for(const __proto__ = .2.throw(<x><y/></x>) in #1#) {yield; }");
tryItOut("if((new return null;.getter)) {if(*::*) return; else {Math.powyield; }export __count__\n const __proto__; } else  if ([15,16,17,18].map(({}).hasOwnProperty, @foo)) {/*for..in*/ get constructor() { with({}) return prop; } {}\nexport __noSuchMethod__;\n const constructor; }");
tryItOut("/*infloop*/for(const __proto__; ((yield ((uneval([]--))))); (({prop: this }))) export prop\f;");
tryItOut("if(<x><y/></x>) { if (function(id) { return id }) var __parent__ = -3/0;} else {(this); }");
tryItOut("/*infloop*/for(let [, ({ function::__proto__: ({ prop: [, , __noSuchMethod__, ] }), prototype: ({ __noSuchMethod__: __proto__ }) }), [, __iterator__, ({ __parent__: ({ prop: __parent__ }), prototype: [, , ] }), [({ __iterator__: __count__, function::__count__: __noSuchMethod__ }), , , ]], __proto__, ] = ((prop = __iterator__) | @foo.//h\n__noSuchMethod__ = *::*\f); [<x><y/></x> for each (__noSuchMethod__ in 033)] ^ Boolean(); (( for (__parent__ in *)))) L: gc()");
tryItOut("M:if(__parent__.__proto__ = <x><y/></x>) yield true; else {throw 1e81;let __count__ = <><x><y/></x></>; }");
tryItOut("/*infloop*/M:for( /* Comment */[11,12,13,14].filter.yoyo(__count__.throw(-3/0)); (prototype = <x><y/></x>); gc) M:if(__count__++) {{}gc() }");
tryItOut("/*for..in*/for(prototype = [<x><y/></x>].sort(eval) in ((window for each (__iterator__ in constructor)))++) {L:if(__noSuchMethod__) yield <x><y/></x>; }");
tryItOut("if(true)  else  if (<x><y/\f></x>) var prop; else ");
tryItOut("if(this .. ({})) { if ([ /x/  == <y><z/></y>].sort(gc)) {gc() }} else export __proto__;");
tryItOut("/*infloop*/M:for(let __parent__ = function::__iterator__.isPrototypeOf(true); this for (prop in true); (<><x><y/></x></> >>= [z1,,])) (<x><y/></x>).watch");
tryItOut("if((new window({}, <y><z/></y>)) |= 'fafafa'.replace(/a/g, Math.sin)) {__parent__ } else {var __proto__; }");
tryItOut("/*for..in*/for(const prototype.constructor in \t__iterator__ = new <><x><y/></x></> &= null((({ set prop(__parent__, __iterator__) { yield null }  })), 1e4 << false)) export *;\nreturn;\n");
tryItOut("L: {arguments; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var let in ({a2:z2})) {gc()yield; }");
tryItOut("let (__count__) { yield <y><z/></y>; }");
tryItOut("/*for..in*/for(let __count__ in (((new Function(\"const prototype = window, __proto__;\")))(<x/>)))gc()");
tryItOut("if(__iterator__.__iterator__ setter= new Function) { if (__parent__ = (( /x/  += <x><y/></x>.hasOwnProperty(\"__count__\"))[(__noSuchMethod__ = (prop = get))])) {/*for..in*/for(let [__iterator__, __count__] = window in <x><y/></x>) {1e-81; }gc() }} else {if([[1]]) {export *; }return *::*; }");
tryItOut("{} const let;");
tryItOut("/*for..in*/for(const [__noSuchMethod__, __parent__] = (new function(y) { yield y; <x/>;; yield y; }()) in (1e81 for each (constructor in <x><y/></x>))) {;L:if(this) return; else  if ((++ '' )) let constructor, prop = null; }");
tryItOut("/*for..in*/for(__count__ in ((<><x><y/></x></>)(@foo))){export *; }");
tryItOut("yield this.__defineGetter__(\"prop\", function (__parent__)<y><z/></y>);");
tryItOut("if() return null; else {((-0));prototype = 1.2e3; }\nlet ([, , ({ __parent__: ({ __count__: ({ __proto__: __parent__ }) }) }), ] = #2=({prop: let (constructor = prototype, constructor = this) false}), ({ __iterator__: ({ prop: [], __count__: constructor.__noSuchMethod__ }) }) = ({try {  } finally { throw <>__noSuchMethod__: @foo</>; }  })) { if((window)) { if (__parent__ = __iterator__) yield \n(-1);} else yield; }");
tryItOut("with({}) { yield; } ");
tryItOut("{[15,16,17,18].sort(Math.sin, *::*) !== <x><y/></x>--yield <><x><y/></x></>; }");
tryItOut("/*infloop*/for(prototype; (p={}, (p.z = [1,,])()); (*::*.isPrototypeOf(1e-81))) {return; }");
tryItOut("with(*){return;yield false; }");
tryItOut("let (__count__ = #1=__noSuchMethod__ = ({a1:1}), __count__) { __proto__ = __parent__; }");
tryItOut("do {continue ; } while((<x/>) && 0);");
tryItOut("/*for..in*/for([__parent__, __proto__] = ((uneval(this.__defineSetter__(\"__noSuchMethod__\", window)))) in __count__.constructor setter= eval) yield;");
tryItOut("if([[1]].__lookupGetter__(\"prop\")) { if (1e+81 / -3/0) {throw  '' ; } else {(function ([y]) { }); }}\n");
tryItOut("this.zzz.zzz;");
tryItOut("do gc()\n while((false) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each('fafafa'.replace(/a//h\n/g, [1,2,3,4].map) in eval(\"(gc((function ([y]) { })(), window))\", false <<= 1e-81)) {; }");
tryItOut("L:if(undefined) return; else  if (<><x><y/></x></>) yield;");
tryItOut("do {export __count__; } while((([[1]].eval(this)--)) && 0);");
tryItOut("if( \"\" ) { if ((#0=({__iterator__: null +=  /x/ }))) /*infloop*/do {*::*; } while([,]); else }");
tryItOut("constructor\nprototype;");
tryItOut("M:do yield window; while((({a2:z2}) / <x><y/></x>) && 0);");
tryItOut("if(null) {__iterator__;yield null; } else let __count__ = null;");
tryItOut("return;");
tryItOut(";");
tryItOut("switch((/a/gi).call(constructor.__iterator__ = @foo, )) { default: case 4: export __parent__;break; yield;continue ;break; case -0: break;  }");
tryItOut("/*infloop*/L:do {if(<x><y/></x>) { if (<><x><y/></x></>\t) return;} else continue L;return null; } while((( \"\"  if ( \"\" )).@foo));");
tryItOut("/*infloop*/do {var __proto__ = ({}); } while(this);");
tryItOut("/*infloop*/while(__noSuchMethod__ = (__proto__.prototype)){let(__iterator__ = this, prop = <x/>) { export *; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(var prop in null) {return constructor; }\nlet (prototype) { throw window; }\n");
tryItOut("yield  /* Comment */this > (@foo ^= this);");
tryItOut("break M;<x><y/></x>;\nreturn *::*;\n");
tryItOut("L:if([15,16,17,18].filter((undefined).__defineSetter__, <x><y/></x>)) {yield 1e+81;throw window; } else  if (<></>) {gc()(#1#); }\r");
tryItOut("/*for..in*/for(let __count__ = ((yield <x><y/></x>)) in __iterator__) {{}__parent__ = #3={a:#3#}, __proto__ = yield; }\n");
tryItOut("yield <><xxx>{prototype}</xxx></>.__parent__;");
tryItOut("return;");
tryItOut("while((__iterator__ = new Boolean(__noSuchMethod__)) && 0)if((([1,2,3,4].map).call(prototype, *::*))) (<y><z/></y>);");
tryItOut("M:switch((new (1 for (x in []))())) { default: break; case (false).call(false && (-1), <><bbb xmlns=\"<x><y/></x>\"><x><y/></x><ccc:ddd><ccc:ddd></ccc:ddd></ccc:ddd></bbb></>, ).valueOf(\"number\"): gc()break;  }");
tryItOut("throw __noSuchMethod__;");
tryItOut("return");
tryItOut("/*infloop*/while(-this.__lookupGetter__(\"__noSuchMethod__\"))/*infloop*/M:for(prototype = *; window; <x><y/></x>) export *;");
tryItOut("return @foo;");
tryItOut("if((prototype)) { if ((try { continue M; } finally { <><x><y/></x></>; } .unwatch/*\n*/(\"__iterator__\"))) {if(<y><z/></y>) { if (-1) throw  \"\" ; else return;}/*infloop*/for(*::*; *::*; *)  }} else {const x::constructor = <x/>, __iterator__ = window;(undefined); }");
tryItOut("switch((uneval(__proto__ = undefined.throw(true).__proto__))) { case eval(\"[[1]]\", [z1,,]): yield [window]; }");
tryItOut("{var __count__, __noSuchMethod__\nlet (prototype = *, __proto__ =  ) {  get __count__(prop) { return *::* } ; } const __noSuchMethod__; }");
tryItOut("/*for..in*/for(var [__proto__, prop] = <y><z/></y>\n in (3/0 for each (__proto__ in <>__count__</>))) {throw <x/>; }");
tryItOut("L:if((uneval((<y><z/></y> in 1.3)))) {var function::__iterator__ = <><x><y/></x></>; } else ;");
tryItOut("with(#1#.__lookupGetter__(\"__iterator__\"))return;");
tryItOut("return");
tryItOut("M:while(((this)[033]) && 0)__count__");
tryItOut("M:if((new <y><z/></y>(#1=[#1#])))  else  if ((yield <><x><y/></x></> < <x/>)) export *; else yield false;");
tryItOut("with({__parent__: ({ prototype: __parent__ }) = \n<x><y/></x> !== null >> null})/*infloop*/for(let __noSuchMethod__; (*)[({__count__: (-1)})]\n; <bbb xmlns:ccc=\"({a1:1})\"><ccc:eee></ccc:eee></bbb>.(__count__.(eval(\"\", <x><y/></x>)))) M:if(<x><y/></x>.(#3={a:#3#})) { if (this.zzz.zzz) let <x/>, __noSuchMethod__ = window; else {gc() }}");
tryItOut("with({__iterator__: new [1,2,3,4].slice()}){break L;__count__; }");
tryItOut("if(__noSuchMethod__) {; } else  if (<x><y/></x>) {case 7: (prototype).callbreak; return; }");
tryItOut("for(let y in []);");
tryItOut("/*for..in*/L:for(const __parent__ = (Math.pow) in (p={}, (p.z = prop =  '' )())) {{{}export __proto__; } }");
tryItOut("L: {if(1e81) { if (arguments) export *;} else {(<x/>); }return; }");
tryItOut("gc() const prop;");
tryItOut("let (yield = (<><x><y/></x></>)()) { M:if(this.zzz.zzz) gc() else  if (window <<= __iterator__) {__count__[1,2,3,4].slice } }");
tryItOut("{gc()export prop; }\n const __parent__;\nvar prototype = 5.0000000000000000000000, prototype;\n");
tryItOut("{1e4let constructor = {}; }");
tryItOut("/*infloop*/M:for(var [prototype, ] =  /x/g ; (uneval(((function  prop (__noSuchMethod__, __proto__)<x><y/></x>).call).call(<><x><y/></x></>, 1e+81, <><x><y/></x></>))); ({ __parent__: ({ prototype: constructor, __count__: __noSuchMethod__ }) }) = constructor) {continue ;new ( /x/ )(); }");
tryItOut("gc()gc()");
tryItOut("throw <x><y/></x>;");
tryItOut("{(/a/gi).apply__count__; }");
tryItOut("/*for..in*/for(var prototype = new (<x><y/></x>)().isPrototypeOf( /* Comment */this) in __parent__ = constructor) if(function ([y]) { }) {yield __iterator__; } else  if ( ''  >> __count__) {export __parent__;{} } else {gc()<><x><y/></x></> }");
tryItOut("/*for..in*/M:for(const __count__ in ((Math.pow)(<x/>))){{} }");
tryItOut("/*for..in*/M:for(var prototype = (prop =  /x/  , <><x><y/></x></>) in ({prop: ((p={}, (p.z = [,,])())), prototype: (@foo)(.2) })) /*for..in*//* nogeckoex bug 349964 */ for  each(let prop in #1#.hasOwnProperty(\"__iterator__\")\f) var __noSuchMethod__ = -1;");
tryItOut("switch(prop) { case this:  }");
tryItOut("if(<><x><y/></x></>.valueOf(\"number\")) {if(__parent__) {'haha'.splitexport *; } else {{}yield; } }");
tryItOut("if(\n(yield new false(1e-81, prop))) if(__noSuchMethod__ === 1e-81) {false } else {;const __parent__, __noSuchMethod__; } else  if (({prototype getter: function () \"\"  }) & (uneval(<x><y/></x>))) {\ngc()while(((new (Math.sin)() instanceof __noSuchMethod__ = 1e+81)) && 0)break L; }");
tryItOut("/*infloop*/for(--.2 | @foo; new (1 for (x in []))(<bbb xmlns:ccc=\"*::*.__count__\"><ccc:eee></ccc:eee></bbb>); (<><x><y/></x></>)[*]) {M:if([11,12,13,14].sort) ; else yield;export *; }");
tryItOut("/*for..in*/for(__count__ = window in __parent__) {let constructor;gc() }");
tryItOut("let([__noSuchMethod__, , __parent__]) ((function(){return (prototype = ({a1:1})).@foo;})());");
tryItOut("if((p={}, (p.z =  '' )())) {try { const __proto__ = <x/>; } finally { yield <><x><y/></x></>; }   if (new (({}).hasOwnProperty)(new (function ([y]) { })()) export *;) {/*infloop*/do __noSuchMethod__: prop while(<><x><y/></x></>);break ; } else }");
tryItOut("with(<{prototype}><x><y/></x>yyy</{prototype}>){__parent__; }");
tryItOut("{prototype; }");
tryItOut("try { let(({ __iterator__: __iterator__ }), __noSuchMethod__) { with({}) { yield prop; }  } catch(prop) { with({}) let(__proto__ = <y><z/></y>) ((function(){prototype getter: new Function})()); } ");
tryItOut("constructor = __count__;M:if( '' ) { if ((this-- for (__proto__.__iterator__ in <y><z/></y>) for (prop in <x><y/></x>))) {/a/gi; } else /*infloop*/for( \"\" ; 0; <x/>) export *;}");
tryItOut("/*for..in*/for(const __proto__ = eval(\"throw  /x/ ;\", <><x><y/></x></>).@* in .2) {yield; }");
tryItOut("/*for..in*/for(let __noSuchMethod__ in (((({}).hasOwnProperty).apply)([( '' ++) for (window in <y><z/></y>) for each (prototype in __parent__)]))){;\nreturn;\n }");
tryItOut("return ({ prop: __proto__ }) = [[1]].__lookupSetter__(\"__proto__\");");
tryItOut("do /*for..in*//* nogeckoex bug 349964 */ for  each(var __iterator__ in prop) window; while((eval(\"yield <><x><y/></x></>;\", __noSuchMethod__) > __iterator__ = <y><z/></y>) && 0);");
tryItOut("if(new (( /x/ ).watch)(*)) if(window) { if (function ([y]) { }) {; }} else yield;");
tryItOut("/*for..in*/for(var __iterator__ in let (prop = null, __noSuchMethod__) ({a2:z2})) (<><x><y/></x></>);");
tryItOut("{<><x><y/></x></>\n }");
tryItOut("/*for..in*/L:for([each, prototype] = (5.0000000000000000000000 << __proto__) = new /a/gi() in this.__defineSetter__(\"constructor\", ({}).__lookupGetter__)) if(<><x><y/></x></>) var __count__, __noSuchMethod__ = <x><y/></x>; else {return; }");
tryItOut("L:if(((Function).call)) {yield;const prototype; } else  if ((prop.eval(0.1))) var constructor = window;");
tryItOut("(this);\nbreak ;\n");
tryItOut("with({__parent__: throw (<><x><y/></x></> @ <y><z/></y>)((true)[this]); .@*::  \"\"  | __proto__.__count__}){export *;L: {prop;Math.pow } }");
tryItOut("M:with({__count__: 0x99}){/*for..in*/M:for([__count__, __count__] = __count__%=(constructor = <x><y/></x>) in arguments > 0/0) ; }");
tryItOut("/*for..in*/for(const constructor = (function(q) { return q; })(case 2: break; ) in Error(this) - new <><x><y/></x></>(<x><y/></x>,  \"\" )) {throw 1e4;{} }");
tryItOut("/*infloop*/for(__proto__ = this; ((-0) >>>=(-0)); constructor = __noSuchMethod__) {let __count__ = <><x><y/></x></>;var __noSuchMethod__ =  '' ; }");
tryItOut("L:if(<x><y/></x\f>) { if (<x><y/></x>) yield [,,]; else let __parent__ = <x><y/></x>;}\nif((window >= null)) { if () const prop, __parent__; else {if(this) yield <x><y/></x>; }}\n");
tryItOut("/*infloop*/for(var __parent__ = Error(); (function ([y]) { })(); ((new Math.sin(*::*)).yoyo((Array())))) L:if(((<><x><y/></x></>))) let (constructor) { <x><y/></x>; } else  if (this.zzz.zzz.valueOf(\"number\")) {let __iterator__;return  /x/ ; }");
tryItOut("<> </>");
tryItOut("if((void this.constructor)) {([]); } else { }");
tryItOut("with(-(({constructor: this})))throw (-0);");
tryItOut("<><x><y/></x></> && <><x><y/></x></>");
tryItOut("switch(((__noSuchMethod__) = ({ __proto__: __noSuchMethod__, prop: __noSuchMethod__ }) = prototype.prop)) { case 4: with({}) { yield; } break; break; default: case ([] = new *(__noSuchMethod__, [1,,]) .@ function () { return <y><z/></y> } ): throw null;case 4: break; break; case ({a1:1}).propertyIsEnumerable(\"\"): break; break; case let (__iterator__, __proto__) (function (__parent__, __proto__) { yield <x><y/></x> } ()): break; __noSuchMethod__; }");
tryItOut("return;");
tryItOut("M:switch( { yield window } ) { default: break; case 2: break;  }");
tryItOut("if(<><zzz><><x><y/></x></> >= false && (__iterator__ = 1e4)</zzz></>) {if((function(q) { return q; }).call) ; else  if ((function (prototype, __parent__) { yield; } )()) {gc() } }");
tryItOut("with({}) { __iterator__ = __iterator__; } ");
tryItOut("with({prototype: Function(__proto__ = <x><y/></x>)}){do {yield 5.0000000000000000000000; } while((<x/>.__lookupGetter__(\"__parent__\")) && 0); }");
tryItOut("");
tryItOut("default: return *;var prototype =  \"\" , constructor;case 4: case 9: case 1: break; break; case 1: break; \nexport *;");
tryItOut("if(<>yyy</>.(<x><y/>\n</x>(\n))) (undefined);");
tryItOut("with({}) { __iterator__.prototype; } ");
