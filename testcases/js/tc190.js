tryItOut("let ([, constructor, prop, ] = (__proto__ = @foo)) { /*infloop*/M:for(const constructor; (undefined++); [[1]].@foo) {switch(null) { default: break; case [1,,]: {}break;  } } }");
tryItOut("if(<x><y/></x>) {export *;continue ; } else  if (<x><y/></x>) {const __proto__, __proto__; } else (@foo);");
tryItOut("let (prop, prop) { const __noSuchMethod__ = <x/>, __count__; }");
tryItOut("/*infloop*/for(({ prototype: x::constructor }) = (new (true)() * <x><y/></x> -= prop); (__parent__ = prop.hasOwnProperty(\"delete\")); new ({} <= <><x><y/></x></>)((null)(<><x><y/></x></>, this),  /x/g )) if(window\n) {throw <><x><y/></x></>; } else  if ((yield #3={a:#3#})) return [z1]; else let __proto__ = [[]], prop;");
tryItOut("{ }");
tryItOut("break M;\n/*infloop*/while(false.unwatch(\"__noSuchMethod__\"))with({__iterator__:  /x/ }){export *; }\n");
tryItOut("/*for..in*/for(var [prop, __proto__] = <><x><y/></x>yyy</> in *) return;");
tryItOut("switch((+<><x><y/></x></> ? <><x><y/></x></> : ({a1:1}))) { case 8: break; export prop; }");
tryItOut("while((*.__noSuchMethod__) && 0){return this;continue L; }");
tryItOut("for(let y in [5,6,7,8]) throw StopIteration;");
tryItOut("switch(((prototype)()) .@ *::* += <><bbb xmlns:ccc=\"__parent__\"><ccc:eee></ccc:eee></bbb></>) { default: break; case  /x/ : break; break; case 1: if((\n*)) return; else {{}return; } }");
tryItOut("do {continue M;with({__parent__: ((prototype)([,,], #1#))}){var __noSuchMethod__ = arguments;this; } } while((#2=({__parent__: 033 >>>  /x/ }) .@x:: this) && 0);");
tryItOut("while(((yield (prototype = __proto__))) && 0){gc() }");
tryItOut("throw __noSuchMethod__;__count__\n");
tryItOut("return <x><y/></x>\r\n");
tryItOut("if(<x/> %= ((constructor.__parent__ setter= <x><y/></x>) ? <x><y/></x>.__defineGetter__(\"prop\", function(y) { yield y; __parent__; yield y; }) : null.__lookupGetter__(\"[1]\"))) { if (prop = ( /x/g  || .2)) {return @foo;/*for..in*/for(constructor in <y><z/></y>) {export __parent__;var __count__ = <><x><y/></x></>; } } else {var __count__;{} }}");
tryItOut("if((yield ((1e-81)[<><x><y/></x></>]))) { if (__proto__) } else gc()\n");
tryItOut("do /*for..in*/for(let __proto__ = undefined in true) {export *;yield 033; } while((<bbb xmlns:ccc=\"*::*.valueOf(\"number\")\"><ccc:eee></ccc:eee></bbb>) && 0)\f;");
tryItOut("{yield constructor; }");
tryItOut("/*for..in*/for(const __proto__ = (__iterator__)[<x><y/></x>].watch(\"__noSuchMethod__\", [1,2,3,4].slice) in constructor.__iterator__) with(*){gc()throw window; }");
tryItOut("/*infloop*/for(const __parent__; (__noSuchMethod__.prop setter= (<><x><y/></x></>).__defineSetter__); true) __iterator__ = (~this.__defineGetter__(\"prop\", (new Function(\"gc()\"))).__noSuchMethod__)");
tryItOut("return <><x><y/></x></>\n");
tryItOut("with({}) export *;\nreturn;\n");
tryItOut("/*infloop*/for(prototype; 'fafafa'.replace(/a/g, function(q) { return q; }); 0.1 <= window > 'fafafa'.replace(/a/g, ({}).hasOwnProperty).__defineGetter__(\"__iterator__\"\f, 'haha'.split)) {[z1,,](<x><y/></x>, <><x><y/></x></>).hasOwnProperty(\"constructor\"), this\n }");
tryItOut("throw 1.3\n/*infloop*/for(constructor = *;  '' ; undefined) {;return <x><y/></x>; }");
tryItOut("M:if(prototype.prop) { if (__noSuchMethod__.prototype getter= function  function::__noSuchMethod__ (constructor, constructor) { return; } ) <employee id=\"1\"><name>Joe</name><age>20</age></employee>} else {gc() }");
tryItOut("yield __parent__;");
tryItOut("/*infloop*/for(var __count__; <bbb xmlns=\"(<y><z/></y>)[[,,]]\"> </bbb>; false) return <><x><y/></x></>;if(<x/>) { if (({a2:z2})) {(-1); } else yield;}");
tryItOut("return;");
tryItOut("let (__proto__ = prototype.(4.)) { return <><x><y/></x></>; }");
tryItOut("throw <y><z/></y>; const prop;");
tryItOut("{function(q) { return q; } }");
tryItOut("function (__count__, constructor)__noSuchMethod__ = <><>(new Number())</></><x><y/></x> ");
tryItOut("/*infloop*/for(__parent__ = new (*::* ? 033 : <x><y/></x>)(#0=window); (window); __parent__-=*::*) {yield <y><z/></y>;yield <x><y/></x>; }");
tryItOut("try { throw -0; } finally { throw  /x/ ; } ");
tryItOut("/*infloop*/for(prototype; (__parent__ = 0x99\n); <x><y/></x>) .2;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__(true -  '' ) in <><ccc:ddd></ccc:ddd></>) {default: ;\nyield  /x/g ; const __iterator__;\nbreak; case 0: break; constructor;break;  }");
tryItOut("export *\n");
tryItOut("/*infloop*/for(var __iterator__; ()[this.zzz.zzz]; (window if (window) :: ([,,z1] == @foo))) {M:if(<x><y/></x>) let constructor = ({a2:z2}), __proto__ = <><x><y/></x></>;const constructor; }");
tryItOut("constructor = __noSuchMethod__;");
tryItOut("if((__proto__ = (<x><y/></x>.eval(<><x><y/></x></>)))) {eval/*infloop*/for(const prototype; <x><y/></x>(<x><y/></x>, *); __noSuchMethod__.prop) const __parent__; }\n");
tryItOut("/*infloop*/for(({ prop: prototype }) = [<x/>]; 1.2e3 if (<x/>); [false]) {return  '' ;@foo\t; }");
tryItOut("/*infloop*/for(var [((-this).__lookupGetter__(\"__iterator__\")), , [, __noSuchMethod__],  .__defineGetter__(\"__count__\", 'haha'.split), ] = ([[]] | window); this.__defineGetter__(\"prop\", (window++)); (__parent__ = (constructor.isPrototypeOf(constructor.__lookupSetter__(\"prop\"))).eval([true .@ this]))) (<y><z/></y>);\n\n");
tryItOut("while((__parent__) && 0)(__iterator__).__defineSetter__");
tryItOut("with({__parent__: ((this.__defineGetter__(\"__noSuchMethod__\", ({}).__lookupGetter__))[window])})");
tryItOut("let(({ __proto__: __iterator__ }), __count__) { for(let y in [5,6,7,8]) throw #1=[#1#];");
tryItOut("/*infloop*/for(prop; 1e4; (-1)) {throw  '' ; }do  while(((__parent__.isPrototypeOf( \"\" )).__count__) && 0);{const __parent__;\f }");
tryItOut("var __proto__ =  /x/ , __iterator__ = @foo;\nthrow [];\n");
tryItOut("<ccc:ddd> </ccc:ddd>");
tryItOut("/*for..in*/for(var [prototype, __parent__] = -(window)[*::*] in __proto__|=((<x><y/></x>.(this)) for each (__parent__ in <><x><y/></x></>))) if((prop.__proto__ setter= Function)) gc()");
tryItOut("M:while((new Error().@*) && 0){}\n(<><x></(/>/x></>);");
tryItOut("/*for..in*/for(let __count__ in <><x><y/></x></>) {return <><x><y/></x></>;{} }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(var __noSuchMethod__ in <y><z/></y>) return <><x><y/></x></>\n/*for..in*/for(let __iterator__ in __count__ = <x><y/></x>) {<x><y\n/></x>; }");
tryItOut("for(let y in []);");
tryItOut("if(0/0) { if (((p={}, (p.z = null)())) >>>=window) {;export prototype; } else {( \"\" );export *; }}");
tryItOut("{} const prop;");
tryItOut("/*infloop*/L:while((constructor = ((yield 0.1) / __proto__.(-3/0))))/*infloop*/M:for(const __proto__; <><x><y/></x></>; 0x99) const __noSuchMethod__ = <x><y/></x>\n__iterator__ =  '' ;");
tryItOut("/*for..in*/M:for(__noSuchMethod__ = @foo++ in (3/0.__parent__)) {const prototype, prop = window;L:  }");
tryItOut("let (__proto__, constructor) { export *; }");
tryItOut("/*infloop*/\fM:for(__iterator__.constructor = (('fafafa'.replace(/a/g, Math.sin))\n); (new <xxx {__parent__}={({a1:1})} />(eval(\"<><x><y/></x></>\", this) ^= <y><z/></y>.@foo, ( /x/ \n))); (prototype.@*.__defineSetter__(\"__noSuchMethod__\", (1 for (x in []))) -= (((p={}, (p.z = #1#)())) if ((-0))))) {(__proto__);return *::*; }");
tryItOut("let (__count__ = <><x><y/></x></>) { {} }");
tryItOut("if( /x/g ) {gc()([1]); } else yield this;");
tryItOut("L: {{} }/*for..in*/for(let (__count__) in ((eval)(new ( '' ).__defineSetter__().@*)))export *;");
tryItOut("/*infloop*/for(const __iterator__ = let (__proto__) 1e+81.unwatch(\"prototype\"); ({a2:z2}).valueOf(\"number\"); (<y><z/></y> >= <x><y/></x>[window])) {;; }");
tryItOut("yield <><x><y/></x></>;");
tryItOut("L:while(( /* Comment */__count__ >> [z1]) && 0)gc()");
tryItOut("L:with((__count__ = this))let prototype =  /x/g ");
tryItOut("do {continue M; } while((<x><y/></x>.isPrototypeOf\f(<><x><y/></x></>)) && 0);");
tryItOut("if(<x/>) { if ((<><x><y/></x></>.watch(\"constructor\", function  prop (__iterator__) { let __iterator__ = undefined, prototype = #1=[#1#]; } ).eval(this.__defineSetter__(\"<x><y/></x>\", gc)))) {export \t*;return __count__; } else {M:while((5.0000000000000000000000) && 0);return; }}");
tryItOut("throw <><x><y/></x></>;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for \r each(__count__ in *::*) {export __parent__;yield  \"\" ; }");
tryItOut("if(<x><y/></x> , 0.1) {yield <y><z/></y>; } else  if (--undefined) {__proto__, __parent__ = [,];throw 033; } else let __proto__ = #3={a:#3#}\n");
tryItOut("const __parent__ = undefined;\nvar __count__ = null;\n");
tryItOut("/*infloop*/for(prototype.prototype; ([function(id) { return id } for (constructor in {})]); <><!--yy--></>) prop, constructor = window;");
tryItOut("if('fafafa'.replace(/a/g, Math.sin)) (window).__defineSetter__ else  if ((this for (constructor in [[1]])) | <><x><y/></x></>.__parent__ = <x><y/></x>) throw  /x/g ;");
tryItOut("with({}) { try { prop; } catch(__noSuchMethod__ if (function(){yield <x><y/></x>;})()) { this } catch(__count__) { (window); }  } ");
tryItOut("/*infloop*/while(@foo >>=  /x/g )return\n");
tryItOut("/*for..in*/for(const constructor in ((function(q) { return q; })(<y><z/></y> for (__noSuchMethod__ in window)))){M:do yield  \"\" ; while((__parent__) && 0);/*for..in*/L:for(let __proto__ in ((((<><x><y/></x></>).__defineSetter__).apply)( /x/g )))return; }");
tryItOut("return prop & 3.141592653589793\n const __iterator__;");
tryItOut("L: (({__proto__ setter: 'haha'.split })).__defineSetter__");
tryItOut("switch(([1,2,3,4].slice())) { default: {}break; window;break; case (function ([y]) { } ? <><x><y/></x></> : [,,]):  }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __proto__.__count__ in (({ x::__noSuchMethod__: constructor, constructor: __iterator__ }) = (1.3.yoyo(undefined))).__count__) {/*infloop*/for(prop = <x><y/></x>; (( \"\" )((<x><y/></x>.__defineGetter__(\"prop\", (new Function(\"export __iterator__;\")))))); window[<x><y/></x>]) continue M;const constructor = *; }");
tryItOut("if((uneval(({prop })))) {/*for..in*/M:for(constructor = [,,z1] in <x><y/></x>) <><x><y/></x></> } else  if ( ''  <<= <x><y/></x>.yoyo((new window))) {export *;  } else yield this;");
tryItOut("while((( /* Comment */window)) && 0)(constructor);");
tryItOut("__iterator__: yield <><x><y/></x></>.propertyIsEnumerable(\"prototype\") |= ");
tryItOut("/*for..in*/for(const [__proto__, __iterator__] = this in 'fafafa'.replace(/a/g, (/a/gi).apply)) {M:with({__noSuchMethod__: --#1#}){{} } }");
tryItOut("/*infloop*/while(each.(*::*).yoyo( /* Comment */typeof __parent__ = prop))/*infloop*/do yield __count__; while({yield window;<x><y/></x>; });");
tryItOut("");
tryItOut("return \n<x><y/></x>;");
tryItOut("{/*for..in*//* nogeckoex bug 349964 */ for  each(*.constructor in [z1]) export *;export constructor; }");
tryItOut("const __iterator__ = null");
tryItOut("try { export prop; } catch(constructor if (function(){var __count__ = @foo;})()) { __proto__ = <x><y/></x>, __proto__; } ");
tryItOut("let __proto__, __proto__;");
tryItOut("__proto__;");
tryItOut("/*for..in*/for(let __proto__ = eval(\"continue ;\", (__count__ = prop)) in __count__.((new ( \"\" )()))) return;");
tryItOut("return;");
tryItOut("switch(<x/> instanceof [,,z1]) { default:  }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(var prop in __noSuchMethod__) {(undefined);{} }");
tryItOut("if( '' ) {return; } else  if ( '' ) ");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(var prototype.__count__ in 0.__parent__ = ( /* Comment */[].unwatch(\"__noSuchMethod__\"))) export constructor;;");
tryItOut("let (constructor) { ; }");
tryItOut("const __iterator__;/*infloop*/M:for(let __noSuchMethod__; 0/0; <x><y/></x>) {return [,];[1,2,3,4].map }");
tryItOut("/*for..in*/for(var [__iterator__, ({ constructor: [({ __count__: prototype, prototype: __parent__ }), , , , ], __proto__: prop })] = <><>yield __proto__</></> in this.__defineGetter__(\"prototype\", (Function).apply)) {throw *; }");
tryItOut("if((-0 ? (prototype) : \nnull :: *)) { if (prototype) L:if(.2) { if (prop = <><x><y/></x></> == 1e81.propertyIsEnumerable(\"-3/0\")) export *;} else {\treturn window; } else export *;}");
tryItOut("(3.141592653589793)");
tryItOut("export let;\n(({}));\n");
tryItOut("throw prop;");
tryItOut("/*for..in*/for(let prototype in 0) export __proto__;");
tryItOut("break ;");
tryItOut("switch(0x99.eval((function ([y]) { })())) { case new <><x><y/></x></>(this, <><x><y/></x></>): break; <ccc//h\n:ddd></ccc:ddd>break;  }");
tryItOut("/*for..in*/L:for(let [__parent__, __noSuchMethod__] = [11,12,13,14].filter in <>(-0)</>) {break L;var __iterator__ = *::*;throw prop = @foo; }");
tryItOut("if([1].watch(\"__proto__\", [1,2,3,4].map)) { if ('fafafa'.replace(/a/g, ({}).__lookupGetter__)) { return <x><y/></x>; } else {yield;gc() }}");
tryItOut("L:while((--*) && 0){__count__, function::prototype;return window; }break ;");
tryItOut("export constructor;");
tryItOut("with({__parent__: (uneval(yield))}){[1,2,3,4].slicecontinue ; }");
tryItOut("M:with(undefined){with({constructor: --(((null).call)(([,,z1] !== <><x><y/></x></>/*\n*/), __noSuchMethod__))}){return; } }");
tryItOut("M:while((.2 != this) && 0)yield 1e4;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var constructor = <x><y/\f></x>['__proto__'] in __noSuchMethod__.propertyIsEnumerable(\"<x><y/></x>\")) {export prop;L: {throw *; } }");
tryItOut("{<x/>;yield;yield  /x/g ; }");
tryItOut("for(let y in [5,6,7,8]) yield this;");
tryItOut("with({__iterator__: <x/>})yield *;\neval\n");
tryItOut("{}");
tryItOut("/*infloop*/do if(<y><z/></y>) { if (<><x><y/></x></>) { \"\"  } else {yield; }} while((null > this));");
tryItOut("let (__noSuchMethod__) { L: {__proto__, __iterator__ = <><x><y/></x></>; } }");
tryItOut("with({constructor: ({ set constructor __parent__ () { yield; } , (__proto__): __count__.__proto__\f setter= ((__count__%=-3/0)).watch })}){/*for..in*//* nogeckoex bug 349964 */ for  each(var delete in false) {const __iterator__ = null, __iterator__; } }");
tryItOut("export *;\n/*infloop*/for(var [__iterator__, __parent__, __count__, ] = [15,16,17,18].filter(<><x><y/></x></>, <><x><y/></x></>\t); (__parent__.__lookupGetter__(\"__parent__\")); __iterator__ = true) {yield;{} }\n");
tryItOut("if(*.@*) { if (-3/0) {var this;break ; } else yield <x><y/></x>;}");
tryItOut("/*for..in*/L:for(var __iterator__ = this.__defineGetter__(\"constructor\", @foo).__defineGetter__(\"__iterator__\", function  __parent__ (prop, __proto__)(<x><y/></x>.propertyIsEnumerable(\"__parent__\"))) in (null /= <x><y/></x>)) return;");
tryItOut("L:switch((yield <><x><y/></x></> | @foo)) { case 0: break;  }");
tryItOut("{L: { \"\" ; }with(( '' )--){{;((<x><y/></x>).__defineSetter__).apply } } }");
tryItOut("try { return 0; } finally { return; } \n");
tryItOut("{switch((function ([y]) { })()) { default: break; case __noSuchMethod__, prototype = <x><y/></x>: (<x><y/></x>);case 6: break; case try { return; } catch(__parent__ if (function(){throw __iterator__;})()) { export __parent__; } catch(__count__ if <y><z/></y>) { {} } finally { return 1.2e3; } : case 1: case 7: break; case ({a2:z2}): export __iterator__;break; break; case 4: prototype = <x/>, prototype = <x/>;case 5: case 2:  } }");
tryItOut("/*infloop*/while(undefined){(yield arguments;); }");
tryItOut("/*for..in*/for(var constructor.prototype in (+__noSuchMethod__)) let __iterator__ = <x><y/></x>;");
tryItOut("let (constructor) { {/a/giexport *; } }");
tryItOut("__count__;\n{}\n");
tryItOut("let(__proto__, constructor = prototype) ((function(){__count__.__parent__ = __count__;})())\ncontinue \n");
tryItOut("M:if((this = ({}))) { if ((new Function(<y><z/></y>, this))) {L: {function (__proto__, function::__parent__) { yield <><x><y/></x></> }  } } else (Math.sin).apply}\n");
tryItOut("while((@foo) && 0){;return null; }");
tryItOut("{{}(~#1=[1,,]), x>y></> , *::*\n }");
tryItOut("{window = __iterator__; }");
tryItOut("if(((yield <x><y/></x>)) > (#1=[#1#]).__defineSetter__.throw((constructor.prop))) L:if((__parent__.prototype)\f) (this).__defineSetter__ else  if (<x><y/></x>\t) {{} } else  if (*::*) {continue ; }");
tryItOut("return\nyield;");
tryItOut("throw -3/0; const prototype;");
tryItOut("with(new Boolean())L:while((({ __parent__: prototype, prop: prop }) = (constructor.__proto__)) && 0)yield false;");
tryItOut("while((this) && 0)return false\nexport constructor;");
tryItOut("{let __iterator__, prop = [,]; }");
tryItOut("/*for..in*/for([__count__, constructor] = new gc(constructor.@*).hasOwnProperty(\"__iterator__\") in (__proto__)) if(__iterator__ = *::*) return;");
tryItOut("while(((new RegExp(({}), gc))) && 0){const __iterator__;continue L; }");
tryItOut("/*infloop*/while([1]){M:while((\f<x><y/></x>) && 0){export *;export *;\t }export *; }");
tryItOut("M:with([<x><y/></x>].sort(function(q) { return q; })){\t(@foo);with(<x><y/></x>){export prototype; } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(var ((constructor.( /x/g ))\n) in #2=(let (prototype = new eval([z1,,], (-1))) this.__defineSetter__(\"__count__\", (1 for (x in []))))) {return  \"\" ;/*infloop*/for(var __iterator__; ([15,16,17,18]\t.filter(((function(y) { yield y; return;; yield y; })()(__iterator__ = 3, *::*)), 'fafafa'.replace(/a/g, function  __noSuchMethod__ (constructor, __iterator__) { export __parent__; } ))); (this.zzz.zzz) <<= new [1,2,3,4].slice()) {__iterator__; } }");
tryItOut("yield <x><y/></x>;yield window;");
tryItOut("/*for..in*/M:for([prop, getter] = <x><y/></x>.(__parent__) in __proto__) throw <x/>;");
tryItOut("gc()");
tryItOut("(1 for (x in []))\n");
tryItOut("/*infloop*/while((Iterator()))var __proto__ = window, prop;");
tryItOut("with({prop: <><x><y/></x></>}){throw ; }\n");
tryItOut("with(__noSuchMethod__.__lookupGetter__(\"__parent__\"))export __iterator__;");
tryItOut("switch((let (__iterator__ = __parent__, __count__)  /x/ )) { case <x/> < <><x><y/></x></>: export __count__; }");
tryItOut("/*for..in*/for(const (eval).call(this, ) in new  \"\" (<y><z/></y>,  /x/ )) gc()");
tryItOut("for(let y in [5,6,7,8]) const __noSuchMethod__ = , prototype =  /x/ ;");
tryItOut("__iterator__ = constructor;");
tryItOut("return (yield <y><z/></y>.hasOwnProperty(\"__count__\"));");
tryItOut("{if(*) { if ( \"\" ) throw this; else (function ([y]) { })();}export *; }");
tryItOut("{switch(<x/>) { case <x/>: export *;break; return;break;  } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each((__proto__) in  /x/g )  /x/g ;");
tryItOut("with({constructor: ( \"\" \n)}){/*infloop*/for(prop; \nthis; ([,] == @foo)) {(__noSuchMethod__);this; } }\nexport *;\n");
tryItOut("if(\n<x/>) ; else  if (prototype = function ([y]) { } :: (__noSuchMethod__|=false)) {export prop; }");
tryItOut("do return; const prop; while(((Function).call(((({}).__lookupGetter__).apply).call(new Number(<><x><y/></x></>,  \"\" ), ), ((\fprop = ( /x/ )()).propertyIsEnumerable(\"__noSuchMethod__\") + __parent__), new Error(prop.watch(\"__parent__\", /a/gi), (prototype)))) && 0);");
tryItOut("while((( /x/ ['prototype'] = ((-0) %  \"\" .__lookupGetter__(\"constructor\")))) && 0){/*infloop*/for(<><x><y/></x></>;  /x/g ; this) yield prop;Math.sin }");
tryItOut("do {/*infloop*/while(( /* Comment */(Function(<x><y/></x>)))){export constructor; } } while((((new Function(\"return 3;\"))).call(window ^= <x><y/></x>, )) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const getter.prop in (<x><y/></x>.(<x/>))) gc()");
tryItOut("M:if(constructor)  for each (function::setter in undefined) for each (__noSuchMethod__ in __iterator__)");
tryItOut("with(new [15,16,17,18].sort(function  __proto__ () { break L; } , [z1,,])){}");
tryItOut("let (prototype) { yield 0x99; const __proto__\nif((({a2:z2}).__defineSetter__(\"__noSuchMethod__\", (new Function(\"(<y><z/></y>);\"))))) { if ((new RangeError( \"\" , <x/>))) {yield prop;return __iterator__; }} else /*for..in*/for(__parent__ in *) throw *::*; }");
tryItOut("L:with({__iterator__: (function ()<y><z/></y>)(this)})\f; const prop;");
tryItOut("let (__count__ = prop = window + null.throw(<y><z/></y>)) { let (prop = 1.2e3) { break ; } }\n");
tryItOut("with(*::*(*)\n){ '' ; }");
tryItOut("if([1,2,3,4].slice) if(<x><y/></x>) yield; else  if (prototype) export *; else export *; else  if (#1=[<x/>]) /*for..in*//* nogeckoex bug 349964 */ for  each(const __iterator__ in *::*) return; else {M:switch(*::*) { case *: break;  }{} }");
tryItOut("with({}) { with({}) return (); } ");
tryItOut("/*infloop*/for(eval(\"undefined\", <y><z/></y> -= 1e81).__lookupSetter__(\"__proto__\"); #1=[#1#].yoyo(<x><y/></x>)((#1=[#1#] ? <y><z/></y> : <><x><y/></x></>)); ([1,2,3,4].map)) {(this)\t; }");
tryItOut("( /x/g .__defineGetter__(\"__noSuchMethod__\", function ([y]) { }))");
tryItOut("(new Function).call");
tryItOut("let (prototype, constructor = new  /x/g ()) { (<y><z/></y>) }");
tryItOut("/*for..in*/for(var [__proto__, __noSuchMethod__] = <x><y/></x> in false) {yield null;gc() }");
tryItOut("if(<x/>) {(__iterator__).call }");
tryItOut("/*for..in*/for(var __count__ = <y><z/></y>.__proto__ = [1].@* in [1,,] .@*:: eval(\" /x/ \", <x><y/></x>)) {yield; ''  }");
tryItOut("for(let y in []);");
tryItOut("/*for..in*/for(var [__count__, prop] = [[<><x><y/></x></>]] in ((<x><y/></x> |=  /x/ ) && new (function(y) { yield y; {}; yield y; })(*))) {/*for..in*//* nogeckoex bug 349964 */ for  each(const __iterator__ in const get;) false;/*infloop*/for(let __iterator__ = window; [z1,,]; true) {{} } }");
tryItOut("with({}) for(let y in [5,6,7,8]) let(__iterator__) { return __iterator__;");
tryItOut("/*infloop*/for(var __noSuchMethod__ = undefined;  \"\" ; <y><z/></y>) {export *; }");
tryItOut("/*for..in*/L:for(var __proto__ in [11,12,13,14].filter) {/*infloop*/while( '' ){let __proto__; }gc() }");
tryItOut("L: { }");
tryItOut("L:with(__noSuchMethod__){export __count__;return window; }");
tryItOut("with(this)\r{throw setter = prototype;; }");
tryItOut("/*infloop*/for(var constructor; __parent__.__iterator__; false) {/*infloop*/M:for(null; function(id) { return id }; -0) return [[]]; }");
tryItOut("with({}) __iterator__ = <x><y/></x>, __parent__ = window;");
tryItOut("let (__iterator__ = *) { /*infloop*/for(<><x><y/></x></>; 3; *::*) <x><y/></x> }");
tryItOut("/*for..in*/for(var prop = (#1# / constructor) in true) Math.pow");
