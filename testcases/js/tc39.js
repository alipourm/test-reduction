tryItOut("/*infloop*/for(\n#0=[#2=<x><y/></x>]; this << __noSuchMethod__; *::* + *::* / <y><z/></y>) const __noSuchMethod__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(var (<><x><y/></x></>)( \"\" ) in this.__lookupGetter__(\"prop\")) {(1e4).__defineSetter__export __parent__; }");
tryItOut("let(__proto__) { return (033 <<= <><x><y/></\tx></>);");
tryItOut("for(let y in []);");
tryItOut("if(*) {export __iterator__;{} } else  if (({})) {#3={a:#3#}; } else window;");
tryItOut("{}");
tryItOut("/*infloop*/do (__iterator__); while(true.eval(__iterator__.__noSuchMethod__ = <><x><y/></x></>.__defineGetter__(\"__proto__(*::*)\", ({}).hasOwnProperty)));");
tryItOut("{L: {(<y><z/></y>); }if(1.3) {/*infloop*/for(let __parent__; false; #1#) __count__ = __noSuchMethod__;this; } else {var prop = <><x><y/></x></>\t, constructor;; } }");
tryItOut("let (__parent__ = yield <x/>) { if(prototype.__parent__ setter= function (constructor) { return __noSuchMethod__ } ) {gc() } }");
tryItOut("(if(__count__.prop) {\n })");
tryItOut("with(<><x><y/></x></> ? false : @foo){{prop; } }");
tryItOut("/*infloop*/for(let __noSuchMethod__ = (uneval(<y><z/></y>)).__defineGetter__(\"prototype\", true.__defineGetter__(\"prototype\", function  yield (__parent__, __proto__) { (({a2:z2})); } ).hasOwnProperty(\"set\")); <><zzz>\n(get.__parent__ getter= (<x><y/></x>).__defineSetter__ >>> <x/> >>  /x/ )</zzz></>; (__proto__)+=new [,,z1]) /*for..in*/M:for(const [__count__, __parent__] = __noSuchMethod__ = [[]] in @foo) {return; }");
tryItOut("with({}) let(__count__ = ({ set __parent__(prototype, prototype/*\n*/)(prototype =  /x/ .hasOwnProperty(\"__iterator__\"))\t })) ((function(){return;})());");
tryItOut("with(<x/>){throw window; }");
tryItOut("/*infloop*/\fwhile(~ /x/ ){const prototype; } const constructor;");
tryItOut("/*for..in*/for(var __parent__.prop in <y><z/></y>) let __iterator__ = 1e4;");
tryItOut("function(q) { return q; }");
tryItOut("return +window\f.__noSuchMethod__.watch(\"__proto__\", (new Function(\"const __noSuchMethod__ = <y><z/></y>, __parent__;\")))(\"__count__\")';");
tryItOut("/*for..in*/L:for(let [__count__, __iterator__] = (yield) in prototype.constructor) throw (function ([y]) { })();");
tryItOut("__proto__ = prototype;");
tryItOut("{with({__proto__: <y><z/></y>}){export constructor;return this; }return; }");
tryItOut("/*for..in*/for(let  in ((Function)(true ? __iterator__ :  '' )))/*infloop*/M:for(<><x><y/></x></>.__iterator__ = 3; ++(3.141592653589793); (yield <><x><y/></x></>.__defineGetter__(\"__parent__\", (*).__defineSetter__))) {case  \"\" : break; yield;case __parent__: throw ({a2:z2});break; export *;break; ;throw {}; }");
tryItOut("switch(__proto__.__iterator__ = this instanceof eval(\"[[1]]\", this)) { case 0: {}default: break; case 9: <x/>\nif(__proto__) ; else  if (<x/>) export __noSuchMethod__;break; case this.*: let constructor = constructor, __count__ = 3.141592653589793; }");
tryItOut("this.zzz.zzz;");
tryItOut("if(new [1,2,3,4].map(<y><z/></y>, <><x><y/></x></>)) 'haha'.split else  if ((/a/gi).call( \"\" , )) {var 1;yield; } else {export *; }");
tryItOut("if(*) export __count__; else  if (<x><y/></x>) yield; else export *;");
tryItOut("throw StopIteration;");
tryItOut("gc()\n");
tryItOut("switch(undefined) { case 7: continue M; }");
tryItOut("{export *; }");
tryItOut("/*for..in*/for(var prop = 1.3 ? false : window ? ((function ([y]) { })() != null) : [11,12,13,14].some in #1=[#1#]) {export *; }");
tryItOut("L:if((prop = window)) return __parent__;");
tryItOut("/*for..in*/M:for(setter = __noSuchMethod__ if (#1#) in __iterator__ = <y><z/></y>) let constructor =  /x/g ;");
tryItOut("let (({ __count__: ({ prototype: ({ __parent__: prop }) }) })) { /*for..in*/for(const __noSuchMethod__ = <y><z/></y>.@* in function::setter) {export __iterator__;gc() } }");
tryItOut("if(new ()(window, window)) throw <x><y/></x>; else {return [,,];(<x>\t<y/></x>); }");
tryItOut("if((this != #1=({__proto__: prop.(false)}))[1.3]) {<x><y/></x>; } else  if (*.__count__|=(({__iterator__:  ''  }))) /*infloop*/for(var ({ __parent__: ({ __proto__: ({ constructor: __proto__, constructor: prop }) }) }) = __count__; true.watch(\"prop\", (new Function).call); false) {yield <><x><y/>//h\n</x></>;export *; } else export prop;");
tryItOut("/*for..in*/M:for(const __noSuchMethod__.__iterator__ in ((__count__ = <><x><y/></x></>)(__parent__ = this)))(-0);");
tryItOut("with({__parent__:  /x/ }){yield <x><y/></x>; }");
tryItOut("(<x><y/></x>)\n/*infloop*/M:for((<><x><y/></x></> if (__noSuchMethod__)); (new RangeError(({a2:z2}), *)); ({constructor: new Object(<><x><y/></x></>) })) {{function(y) { yield y; {}; yield y; }return  /x/ ; }({}).hasOwnProperty }{}");
tryItOut("with({}) { prototype; } ");
tryItOut("while(( /x/g  in \t1.2e3) && 0){if(1.2e3) { if (({a1:1})) {; }} else yield 1e81;yield undefined; }");
tryItOut("gc()");
tryItOut("if((eval(\"gc()\", undefined)) - undefined) /*\n*/{} else  if (@foo.__parent__ = 5.0000000000000000000000) {break M;export *; } else {yield;export *; }");
tryItOut("let (yield, __noSuchMethod__ = #3={a:#3#}.__parent__ = 0x99) { [1,2,3,4].map }");
tryItOut("L:do throw [<x><y/></x>]; while((void new Function(this)) && 0);");
tryItOut("{const delete = __noSuchMethod__, get = <x><y/></x>; }");
tryItOut("/*infloop*/for(<bbb xmlns=\"__parent__\"> </bbb>; (__iterator__.prototype setter= Math.sin); this.__defineGetter__(\"delete\", function  __noSuchMethod__ (__proto__, [<x><y/></x> if (undefined)]['__iterator__']) { return new __proto__ = __parent__(<x><y/></x>, <x/>) } )) continue L;");
tryItOut("/*for..in*/for(const [__iterator__, __count__] = (new Function)(yield ([11,12,13,14].some), prop = (function ([y]) { })().valueOf(\"number\")) in this.__defineSetter__(\"__proto__\", (new Function(\"yield this;\")))) /*for..in*/for(((yield 1.3))['__noSuchMethod__'] in (({ __count__: __noSuchMethod__ }) = #1=[<><x><y/></x></>])) /*infloop*/for('fafafa'.replace(/a/g, [1,2,3,4].slice); (@foo.propertyIsEnumerable(\"__noSuchMethod__\")); ( if (/a/gi.unwatch(\"prototype\")))) gc()");
tryItOut("constructor;");
tryItOut("/*for..in*/L:for(var [__parent__, constructor] = \nwindow >>>=<y><z/></y>.@foo in (-1) ? prototype : this) /*for..in*//* nogeckoex bug 349964 */ for  each(var each in <><x><y/></x></>) return;");
tryItOut("if(*::* >>>=window) continue M;");
tryItOut("if(__iterator__.__iterator__ =  /x/ ) { if ( /* Comment */0 ? (<><x><y/></x></>.__proto__) : new <x><y/></x>()) {({}).__lookupGetter__ } else {/*for..in*//* nogeckoex bug 349964 */ for  each(const __iterator__ in <x><y/></x>) {{} } }}");
tryItOut("{\f/*for..in*/for(var prop = new prop: prototype() in null %= @foo) gc()if(__proto__) { } }");
tryItOut("if(__iterator__.isPrototypeOf/*\n*/(__proto__)) throw <x><y/></x>; else {return <x><y/></x>; }");
tryItOut("{throw  \"\" ;let __noSuchMethod__ = this, prop; }");
tryItOut("L:if(__proto__ =  /x/g  < ) { if (window) {with({}) return; }} else export *;");
tryItOut("return\nif(<x><y/></x>) { if (<><x><y/></x></>) {yield null; } else yield <x><y/></x>;}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in *::*) break ;");
tryItOut("/*for..in*/M:for(let __iterator__ in (((1 for (x in [])))(this)))yield;");
tryItOut("L:if((uneval(arguments)) -= let (__count__) <><x><y/></x></> - *) { if ((|.propertyIsEnumerable(\"__count__\"))[undefined if (<><x><y/></x></>)]) {do {throw window; } while((@foo) && 0);(__parent__.__count__ setter= <y><z/></y>); }} else if(yield 3/0) {break M;<x/>; } else  if ((Date(<x><y/></x>))) ; else continue L;");
tryItOut("if((new Object(__iterator__.eval(<><x><y/></x></>), (__parent__ && <x><y/></x>))).valueOf(\"number\")) {/*infloop*/M:do {/*infloop*/for(const prop = undefined; window; arguments) throw <><x><y/></x>\t</>; } while(*);\t } else  if (eval) {if((( /x/ )[true])) throw <><x><y/></x></>;export *;while((<><x><y/></x></>) && 0){throw  /x/ ;; }switch( \"\" .hasOwnProperty(\"__noSuchMethod__\")) { default: /*for..in*/for(__iterator__ in ((function(q) { return q; })(this))){ /x/ ;const __noSuchMethod__ = <><x><y/></x></>, __parent__; }return <><x><y/></x></>;break;  } } else /*infloop*/M:for(constructor = *; <x><y/></x>; window) {export constructor;export *; }\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prototype in window) {}");
tryItOut("for(let y in [5,6,7,8]) let(__count__ = __proto__ = (function ([y]) { })()) ((function(){export __proto__;})());");
tryItOut("switch((<y><z/></y> / <><x><y/></x></>)) { case 0: [({ __noSuchMethod__: __count__, prop: __noSuchMethod__ }), [], , ], function::__count__ = (let (prop = <><x><y/></x></>, __parent__ = (-0)) *)case window for (prop in <><x><y/></x></>): yield [z1,,]; }");
tryItOut("/*for..in*/M:for(let [__proto__, prop] = (this).watch in <x><y/></x>) <x><y/></x>;\nif(1.3) { if (<x><y/></x>) {gc()break ; }} else {yield;export *; }\n");
tryItOut("/*for..in*/M:for(const __proto__ in (let ([__noSuchMethod__, ] = this.__iterator__ = false, __iterator__) prop = <><x><y/></x></>)) let (prop, ({ prop: __iterator__ = prop })) { L: yield; }");
tryItOut("with({__noSuchMethod__: (window.__lookupSetter__(\"__iterator__\")'prototypethis.zzz.zzz ] = ({a2:z2}))})var __count__;\n { return <y><z/></y> } \n");
tryItOut("if(new (let (constructor = .2, __parent__)  /x/g )()) { if ([<><x><y/></x></>.constructor = *::*]) {throw constructor; }} else if(*::*++) return <y><z/></y>; else L: (__noSuchMethod__: null);");
tryItOut("/*infloop*/M:while(([this .@*:: __iterator__[(*::* ? <x><y/></x>\n : <x/>)] for each (__parent__ in <x><y/></x>)])){(<><x><y/></x></>);if(<y><z/></y>) {export *;export __proto__; } else  if (prototype = \fthis) {return; } else {{} } }");
tryItOut("{/*for..in*/for(let __iterator__ in (((new Function(\"let (constructor, __count__ = <x><y/></x>) { gc() }\")))(++0.1))){yield <y><z/></y>; } }");
tryItOut("M:switch(__iterator__ = ({ set __proto__(__proto__, constructor) { 4.; }  })) { default: if((getter = <>prop</>)) {export *; } else { }break; case 4: if(<><x><y/></x></>--) { if (yield this.__defineSetter__(\"__iterator__\", __count__)) {;gc() } else <><x><y/></x></>;} }");
tryItOut("while(( \"\" ) && 0)/*for..in*/\tfor([__count__, prototype] = __noSuchMethod__.constructor in [false]()) export *;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let <x><y/></x>.__count__ in \f<x/>) {{} }");
tryItOut("{/*for..in*/for(let constructor in  \"\" --) yield;break ; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prop(({ __count__: [,] })\t) in undefined) const prop;");
tryItOut("/*for..in*/for(let <><x><y/></x></>['__iterator__'] in __count__) L:if(<x><y/></x>) {return *;return; } else  if (<x/>) export *; else prototype\n/*infloop*/for(const __iterator__;  '' .throw(<x/>); (<x/> == <x/>)) {;/*infloop*/L:for( '' ; <x><y/></x>; *) (*::*); }");
tryItOut("if(1e-81) /*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__ in <><x><y/></\fx></>) yield #1=[#1#];");
tryItOut("gc()");
tryItOut("/*infloop*/while({})yield 1e-81;");
tryItOut("L: return;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __count__ in prototype = <y><z/></y>) {/*for..in*/for(let __iterator__ in ((<x><y/></x>)(<><x><y/></x></>\f))){yield; } }");
tryItOut("/*infloop*/while(__proto__.(this)){do {throw <y><z/></y>;const __iterator__, __proto__; } while((this) && 0); }");
tryItOut("/*for..in*/for(var [__count__, __parent__] = <><xxx>{__proto__}</xxx></> | new ( '' .watch(\"__noSuchMethod__\", (new Function(\"{}\")))).__defineGetter__(\"__parent__\", <x/> += constructor)()\t in (__iterator__) = ((yield (new <><x><y/></x></>)))) L: {/*infloop*/for(let [, , ] = (* for ( /x/g  in <><x><y/></x></>)); new (<x/>)();  '' .constructor) {__count__ = null; }__iterator__; }");
tryItOut("/*infloop*/for(const __iterator__; <y><z/></y> >>>=<x/>; [, , ({ __noSuchMethod__: ({ prototype: function::prop, __count__: __proto__ }), __count__: prop }), , ] = [prototype, <x><y/></x>['__count__'], ({ constructor: ({ __noSuchMethod__: __iterator__ }), constructor: __count__ }), ]) {yield window; }");
tryItOut("with({}){return __count__; }");
tryItOut("for(let y in [5,6,7,8]) this.zzz.zzz;");
tryItOut("/*infloop*/do {export prototype; } while(true);");
tryItOut("/*infloop*/for(const constructor.__noSuchMethod__ = <><x><y/></x></> <<=  /x/g ; ({ __proto__: __iterator__, __iterator__: __parent__ }) = (yield <><x><y/></x></>); [prototype]) switch((<x/> *= <><x><y/></x\f></>)) { default: return;case window: break;  }");
tryItOut("const __count__, __parent__ =  /x/g ;");
tryItOut("while((const __noSuchMethod__ = <><x><y/></x></>, __iterator__) && 0)/*infloop*/while(new (new Function(\"L: {__proto__;throw <x><y/></x>; }\"))(<y><z/></y> .@*:: <><x><y/></x></> % *, [,].__defineGetter__(\"__count__\", 1e4)) :: ([z1,,].@*.valueOf(\"number\"))){break M; }");
tryItOut("if(prototype = \t) { if (constructor = __noSuchMethod__) {const __proto__ = (function ([y]) { })(), __noSuchMethod__;gc() } else {export *; }}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var prototype in <><x><y/></x></>) {<x/>;let prop; }");
tryItOut("/*for..in*/M:for(prototype.\n in <x><y/></x> + true) {__proto__;do (<x><y/></x>); while((this) && 0); }");
tryItOut("while((new (Math.sin)(<x><y/></x>)) && 0){; const __parent__; }");
tryItOut("export *;");
tryItOut("do {let ([] = new  ? (function ([y]) { })() : [,](true), __parent__ = (#1=[this]/*\n*/)) { /*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__ in *) return; }throw <y><z/></y>; } while(((let (({ __noSuchMethod__: prop, prototype: __proto__ }) = false) (prototype.__count__))) && 0);");
tryItOut("/*infloop*/for(new ((prototype.__parent__ setter= (constructor setter: function  __iterator__ (constructor) { yield __noSuchMethod__ } ).call))([15,16,17,18].some(eval, <x><y/></x>)); __iterator__-=window; (@foo.eval(({a2:z2}))) , (new (prototype.@foo)(__noSuchMethod__, <x/>))) break L;");
tryItOut("if(((<y><z/></y>).__defineSetter__)()) L: {__proto__; } else L");
tryItOut("L:with(<><bbb xmlns=\"*::*\"> </bbb></>.prototype){return <x><y/></x>;M:if(false.@*) { if ( { <><x><y/></x></>; } ) export __count__; else export __count__;} }");
tryItOut("yield  /x/g ;");
tryItOut("/*infloop*/for(let [, ({ prototype: __parent__, function::constructor: __parent__ }), ({ prototype: constructor }), ({ __iterator__: prop, prototype: constructor })] = ([11,12,13,14].map); this; ) {prop }");
tryItOut("if((let (__noSuchMethod__ = <><x><y/></x></>) <><x><y/></x></>)) /*for..in*/for(let yield in <x><y/></x>) {(<y><z/></y>);let __count__, __noSuchMethod__ = <x><y/></x>; }");
tryItOut("/*infloop*/for(prop = {return; }; null.unwatch(\"constructor\"); prototype = <x><y/></x>) constructor, __parent__ = <x><y/></x>");
tryItOut("/*for..in*/L:for(let __iterator__ in __parent__) return <x><y/></x>;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(__noSuchMethod__ in null) {/*for..in*//* nogeckoex bug 349964 */ for  each(var getter in <x><y/></x>) yield;yield <y><z/></y>; }/*infloop*/L:for(this; (constructor.(<><x><y/></x></>) !== (1.2e3 += 1e4)); <//h\nzzz>5.0000000000000000000000</zzz>.(new ( /x/g ).watch(*::*, *))) with({__noSuchMethod__: <><x><y/></x></>}){export prop;__proto__ = <><x><y/></x></>, constructor = null; }");
tryItOut("L:if(this.__defineGetter__(\"__proto__\", ((gc(*))).watch)) { if (( /* Comment */<x><y/></x>)) ([1,,]); else <{set}><!--yy--></{set}>.((({constructor: __noSuchMethod__})))}");
tryItOut("L: with({}) throw <>\t<x><y/></x></>;");
tryItOut("{continue ;let __parent__ = *::*, prototype; }");
tryItOut("/*infloop*/for(const __count__; new [1,2,3,4].slice(); this.zzz.zzz.valueOf(\"number\")) {yield <y><z/></y>;L:if(__iterator__) {yield; } else  if (__parent__ = __parent__) {prop = <>\t<x><y/></x></>, prop = <x><y/></x>;break ; } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __parent__(typeof window) in undefined) __proto__const ({ prop: ({ function::__proto__: prototype, prototype: __count__ }) });");
tryItOut("with({__count__: arguments}){yield *::*; }");
tryItOut("window");
tryItOut("/*infloop*/for(var [({ [, ({ prototype: prototype }), , ]: (\f{ __proto__: prototype }) }), ({ constructor: \n({ __proto__: [], *::*: [] }), __count__: ({ prop: __iterator__ }) }), , ] = (prototype|='fafafa'.replace(/a/g, ([1,2,3,4].map).apply)); <x/>.yoyo(*::*); ('haha'.split(new ((null).__defineSetter__)( '' , null)))) {continue L; }");
tryItOut("with({__noSuchMethod__: (*::*.__defineGetter__(\"__proto__\", ('haha'.split).apply) & #3={a:#3#})})break ;");
tryItOut("with(({prop getter: /a/gi, __iterator__: (yield) }) != *.yoyo(@foo).__defineSetter__(\"__count__\", function ( { yield 3/0.*.throw(const constructor, prototype = window) + prototype } ) { return window } )){yield  /x/g ; }");
tryItOut("with(__iterator__)return this;");
tryItOut("L: ;");
tryItOut("with({}) (this);");
tryItOut("gc()\nyield prototype;");
tryItOut("{{}{}prototype = -3/0\t; }");
tryItOut("{/*for..in*/for(const __parent__ in ((<x><y/></x>)(*::*)))__parent__ = ({});//h\n }");
tryItOut("for(let y in [5,6,7,8]) for(let y in [5,6,7,8]) this.zzz.zzz;");
tryItOut("/*infloop*/do {/*for..in*/for(\tlet [__noSuchMethod__, __parent__] = __iterator__ = __noSuchMethod__ in null) yield <><x><y/></x></>;if(({})) var __parent__ = window, __parent__; } while(__noSuchMethod__ = this);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __proto__ in null) ;");
tryItOut("if(new Number(__parent__)) this.zzz.zzz; else {yield; }");
tryItOut("if( \"\" ) {yield;yield; } else  if (<y><z/></y>) {yield; } else {yield; }");
tryItOut("if(([11,12,13,14].some)) {;return ({a1:1}); } else  if (yield window) {/*for..in*/for(var [__count__, prop] = [].__proto__ = [1,,] in undefined) {return; }do {yield; } while((({ set __iterator__ prototype (__count__) { yield !0x99 } , constructor: [15,16,17,18].some([1,2,3,4].slice, <y><z/></y>) })) && 0); }");
tryItOut("if(__noSuchMethod__.@foo) { if (((new Array())[<x/>.isPrototypeOf(this)])) yield .2;} else {__iterator__: [11,12,13,14].map }");
tryItOut("continue M\nconst prop;");
tryItOut("if((typeof prototype)) { if (3/0.yoyo( /x/ )) gc()} else gc");
tryItOut("with(constructor = undefined){var prop;break L; }");
tryItOut("while((prop = (new prototype = -3/0([prop =  /x/  for each (__noSuchMethod__ in (function ([y]) { })()) if (function ([y]) { })]))) && 0){M:if((((__iterator__)(window, window)).__defineSetter__).call(((new ((new Function(\"-0\")))([,,z1])) >>  /x/g  ? true : 1.3), __parent__ = __parent__ = <x><y/></x>, (*.yoyo(0/0)))) { if (prototype) {with({prototype: <><x><y/></x></>});continue M; }} else (__iterator__).watch }");
tryItOut("switch([,,z1].*) { case 3:  }");
tryItOut("let __proto__");
tryItOut("if(([#1=[#1#]].sort(<y><z/></y>))[new ((({}).hasOwnProperty).apply)((__count__ = constructor), [1,,])]) (*); else  if (033) export *;\t else ([1,2,3,4].map).call");
tryItOut("/*infloop*/M:for(new <bbb xmlns=\"(!<x><y/></x>)\"></bbb>; function::__proto__; (({__noSuchMethod__: (Math.pow(prop, <><x><y/></x></>)) }))) {L:if(//h\n(prop\n)) {gc() } else {1e4; } }");
tryItOut("return ((~__proto__.__count__ = (function ([y]) { })()).eval(__noSuchMethod__ if ([1,,])));");
tryItOut("/*for..in*/for(let export constructor['<><zzz>([1,2,3,4].map).apply\n</zzz></>'] in ((this.__defineSetter__(\"prop\", prop)))((-0))) {throw (yield  '' );L:if(<x><y/></x>) <y><z/></y>; else (1 for (x in [])) }");
tryItOut("/*for..in*/for(const (({__noSuchMethod__ getter: /a/gi, __proto__: *::* })) in ((function(y) { yield y; throw <x><y/></x>;; yield y; })())){{}__proto__ }");
tryItOut("L:if([]) {throw 1e4;gc() } else  if (({})) (new Function(\"function(q) { return q; }\")) else continue L;");
tryItOut("__iterator__ = prop;");
tryItOut("{let __parent__, __proto__; }");
tryItOut("export __count__\n");
tryItOut("/*for..in*/for(var __count__ in arguments) {continue ; } const __count__;");
tryItOut("if(({constructor getter: new Function, constructor: [15,16,17,18].some(('fafafa'.replace(/a/g, Math.sin)).__defineSetter__, function (__parent__)(@foo.__proto__ = <><x><y/></x></>)()) })) {\n } else  if (1e-81) {/*infloop*/for(undefined <<= <x/>; <x/>.@*; <x><y/></x>.eval( /x/g )) { '' ; } }");
tryItOut("/*for..in*/for(var __iterator__ = this in true) /*for..in*/for(const [__count__, prototype] = [033] in default: break; ) return __parent__;");
tryItOut("/*infloop*/while(([15,16,17,18].some(eval,  /x/g ))){if(<x/>) default: break; case 1: const __proto__ = @foo, __iterator__;case [,,]: case 2:  else  if ( /x/ ) {constructor;; } else yield; }\t");
tryItOut("let (__parent__, ({ prop: (<x><y/></x>)(({a2:z2})), prop: __iterator__ }) = (+<><x><y/></x></>) ^ [1.2e3]) { {if(__proto__.isPrototypeOf((yield window))) {__count__; } else {; } } }");
tryItOut("{M:while(([__noSuchMethod__.unwatch(\"__parent__\")].filter(({}).__lookupGetter__)) && 0)/*for..in*//* nogeckoex bug 349964 */L: for  each( __noSuchMethod__, constructor = (function ([y]) { })().prototype prototype' in <y><z/></y>) const __proto__ = <x/>, __proto__ = <><x><y/></x></>; }");
tryItOut("let __parent__ = <><x><y/></x></>;\n;\n\n{}\n");
tryItOut("return <y><z/></y>\nexport __iterator__;");
tryItOut("try { __iterator__, __parent__; } finally { export __iterator__; } ");
tryItOut("break \nthrow <x><y/></x>;");
tryItOut("{/*infloop*/L:do function(y) { yield y; ; yield y; } while(@foo); }");
tryItOut("__parent__ = function::__noSuchMethod__;");
tryItOut("/*for..in*/for(var [__count__, __noSuchMethod__] = (eval)() in new (({}).hasOwnProperty)()) <x><y/></x>;");
tryItOut("L:while((([] = [,,z1] .. <><x><y/></x></>)) && 0)(@foo);");
tryItOut("if(((function (__proto__, constructor) { null; } )(__proto__ = <x><y/></x>, window))) do export *;gc() while(((uneval([].@*))) && 0); else  if (\tthis) function::__noSuchMethod__ = constructor; else {var prototype = this;export __parent__; }");
tryItOut("if((0x99 &= yield ( /x/g  + false))) {return <><x><y/></x></>; } else  if (<><x><y/></x>.@*</> .. @foo instanceof <><x><y/></x></>) /*infloop*/L:while(Iterator((this.__defineSetter__(\"prototype\", __parent__)),  /x/g ))(<x><y/></x>);");
tryItOut("for(let y in []);");
tryItOut("throw prop;");
tryItOut("do {yield #1=[#1#]; } while(([[]].map(function(y) { yield y; export __noSuchMethod__;; yield y; })) && 0);\n(@foo).watch\n");
tryItOut("if(__proto__.__lookupGetter__(\"__proto__\")) { if ( /x/g .yoyo(this)) @foo;} else \n{}\n;");
tryItOut("throw __count__;");
tryItOut("{} const __proto__;");
tryItOut("/*infloop*/while(prototype){throw <x><y/></x>;(<x><y/></x>); }");
tryItOut("M:while(( /x/g ) && 0)break M;\n/*infloop*/for(this.zzz.zzz; *::*; (let (__noSuchMethod__, __iterator__ = this) (p={}, (p.z = false)()))) ({a2:z2});\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */(uneval(prop|=<><x><y/></x></>)),  '' .watch(\"prototype\", new Function) for  each(const __iterator__ in <x/>) yield this\n");
tryItOut("/*for..in*/M:for(var __noSuchMethod__ = true * [1,,] in !window += __parent__ = <x><y/></x>) { }");
tryItOut("L:if((__count__ = (<x><y/></x\t>)[<><x><y/><\f/x></>])) {[[]];function(q) { return q; } } else /*infloop*/L:do {; } while(true);");
tryItOut("{}");
tryItOut("var __iterator__ = <y><z/></y>, __iterator__ = this;");
tryItOut("/*for..in*/for(var prototype = prototype in <x><y/></x>) export *\n");
tryItOut("L: throw prop;");
tryItOut("{/*infloop*/do {yield __iterator__;; } while(<x/> ?  ''  : #1#); }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let ((__proto__)())['__noSuchMethod__'] in 033.__lookupGetter__(\"yield\")) const ({ __count__: __count__ }) = ++;");
tryItOut("with(({ __count__: [] }) =  /* Comment */({ set __iterator__() { yield <x/> } , prototype: true })){/*infloop*/for([, constructor, , ({ constructor: __parent__ })] = new (/a/gi)(new (Function)()); (eval(\"<x><y/></x>\", [1]).unwatch(\"constructor\")); ({prop: (<><x><y/></x></>()) })) /*for..in*/for(let function::prototype in  /x/g ) <y><z/></y> }");
tryItOut("if([z1,,]) {yield;/*infloop*/for(__iterator__; 1e81; <><x><y/></x></>\t) {( /x/ ); } } else { }");
tryItOut("L:if(prototype = <><x><y/></x></>) { if (this.__defineSetter__(\"prop\", 'haha'.split)) {__parent__ }} else continue M;");
tryItOut("return <zzz>((((-0) for (__noSuchMethod__ in <y><z/></y>))((1.2e3--))).__defineGetter__(\"__noSuchMethod__\", /a/gi))</zzz>;");
tryItOut("for(let y in [5,6,7,8]) for(let y in [5,6,7,8]) for(let y in []);");
tryItOut("throw StopIteration;");
tryItOut("/*infloop*/L:for(* || <y><z/></y>; RangeError(this.__defineSetter__(\"prop\", 'haha'.split)); __noSuchMethod__.__parent__ = @foo.@foo) {;(gc).call }");
tryItOut("if(\n /x/g ) {with({prototype: ()})yield  /x/ ; }");
tryItOut("let (prototype, ({ __proto__: __iterator__, constructor: prototype })) { var prototype, prototype; }");
tryItOut("{<><x><y/></x></>; }");
tryItOut("if(([, prototype, null.__proto__, ] = __proto__ = <x/>)) {*::*;do {} while((({a2:z2})) && 0); } else {yield; }");
tryItOut("/*for..in*/M:for(var constructor = (({}).hasOwnProperty)(<zzz>3.141592653589793</zzz>.(0/0 >>>=__proto__)) in window.__defineGetter__(\"constructor\", (function(q) { return q; }).call)) var prototype = __proto__, prop = (function ([y]) { })();;//h\n");
tryItOut("while(('fafafa'.replace(/a/g, gc)) && 0)/*for..in*/for(const prototype in <><x><y/></x></>) const prototype =  /x/g , ;;");
tryItOut("return;");
tryItOut("\rif(true) {return <x><y/></x>;throw <x><y/></x>; }");
tryItOut("M:do {/*infloop*/for([*::*].sort(function(q) { return q; }); * .@x:: prop;  /x/g .watch(\"__noSuchMethod__\", function () { export *; } )) export *;export constructor; const __iterator__; } while((({ set constructor([], ({ __count__: __iterator__, prototype: constructor })) { yield this.__defineGetter__(\"prototype\", gc) } , prototype: ((<y><z/></y> > null)()) })) && 0);");
tryItOut("if((function(id) { return id } for (__count__ in [z1,,]))) ; else continue ;");
tryItOut("/*infloop*/for(let [] = constructor; (new Function()); __iterator__ = <><x><y/></x></>) {continue M; }");
tryItOut("/*infloop*/for(var ({ __proto__: [, ({ prop: (/ }), __iterator__], __count__: ({ function::__iterator__: ({ __proto__: prop }), prototype: ({ __count__: __count__ }) }) }) = __proto__ = <x/>; ([]); constructor >>= true) break M;");
tryItOut("do eval while((prop = <><x><y/></x></>) && 0);");
tryItOut("if((3--)\n) {const prop;var constructor, __noSuchMethod__; }");
tryItOut("let(__noSuchMethod__, __proto__ = __parent__) { {}");
tryItOut("__noSuchMethod__ = __parent__\n");
tryItOut("L:if(eval(\"/*for..in*/L:for([constructor, __parent__] = __parent__.prop setter= function(q) { return q; } in <><x><y/></x></>) __count__, __proto__;\",  \"\" [<><x><y/></x>\t</>] <= <><x><y/></x></>.watch(\"__proto__\", function (prototype)<x/>) << \n({__count__: <x><y/></x> }))) let( = (<x/>--) ? (yield  /x/g ) : <x><y/></x>.@*, ({ __noSuchMethod__: prototype }) = <x><y/></x>.watch(\"__proto__\", <><x><y/></x></>)) ((function(){let(prototype, __iterator__ = <x><y/></x>) { let(__iterator__, constructor = <x><y/></x>) { (undefined);})()); else {eval }");
