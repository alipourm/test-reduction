tryItOut("L:if(function(id) { return id })  else  if (<x/>)  /x/  else ;");
tryItOut("let prototype");
tryItOut("M\r:if(prototype = (/a/gi)(__proto__ = __count__) -= ((/a/gi).call([, , __proto__] = <x><y/></x>, (__noSuchMethod__.prototype setter= null), false--)) :: (uneval(export *;)).valueOf(\"number\") > (#0=({__iterator__: <x/>}))[(__proto__.__iterator__ ? __count__.prop : null *= 1.3) /= prototype = this]) { if (__count__-=yield <x><y/></x> = 1e+81.__defineSetter__(\"__proto__\", ({}).__lookupGetter__)) {/*for..in*/for(let  /x/  in (__count__++)) {([,,]);gc() }while(((null<zzz>false</zzz> )) && 0){{} } }} else {if(((<y><z/></y>)[this] >> (this.__defineSetter__(\"__parent__\", function (__count__, prototype)__noSuchMethod__, [__proto__, __parent__])))) {const __parent__ = <x/>, __count__ = #3={a:#3#}; } else  if ((*.throw(<x><y/></x>))) (window); }");
tryItOut("do __noSuchMethod__ = __parent__; while((([11,12,13,14].map)) && 0);");
tryItOut("/*for..in*/L:for(try { with({}) { for(let y in [5,6,7,8]) let prototype; }  } catch(__noSuchMethod__ if (function(){this.zzz.zzz;})()) { if(<y><z/></y>) {break M;(<><x><y/></x></>); } }  in (('haha'.split)(__proto__ = (new (({}).__lookupGetter__)(__proto__))))){/*for..in*/for(var constructor in []) {var prop = 1e4; } const prop; }");
tryItOut("this.zzz.zzz;");
tryItOut("if(window) {} else  if (({constructor:  \"\" .__defineSetter__(\"__iterator__\", window), constructor getter: function (__parent__) { return  /x/  }  })) {(window);arguments; }");
tryItOut("M:if(({[[({ __noSuchMethod__: [], prop: __parent__ }), , ], [[], , prototype.__parent__, [, ], ], , ({ __proto__: [({ prop: __count__ }), , , , ] })]: @foo})) {\f/*for..in*/L:for([constructor, prop] = __noSuchMethod__ = \f<><x><y/></x></> in [1]) {yield; }yield this } else {let ([__count__, __parent__] = (({ __proto__: __proto__ }) = (({ set __iterator__ __iterator__ (prototype, prototype) { throw 0/0; }  })))) { while(((<><x><y/></x></> .. <y><z/></y> >>> <x><y/></x>.__lookupSetter__(\"prop\"))) && 0)(window); } } const __proto__;");
tryItOut("with({}) for(let y in []);");
tryItOut("/*infloop*/L:do  { yield <><x><y/></x></> }  while((yield this.__lookupSetter__(\"const prop =  '' ;\")\f));");
tryItOut("with({__parent__: void <x><y/></x>.(033)})do {prop } while((this) && 0);");
tryItOut("with({}) { yield null.throw(1e4); } ");
tryItOut("while(({(__iterator__); }) && 0){{}Math.pow }");
tryItOut("{switch((({ constructor: ({ __proto__: ({ __count__: __noSuchMethod__ }) }) }) = __iterator__)) { case 1: return;if(__iterator__ for (__noSuchMethod__ in  /x/ )) { if (<x><y/></x>\n) {throw <x><y/></x>;let __noSuchMethod__ = [,,z1]; } else {}}const constructor, prop = *;default: export *;break;  } }");
tryItOut("do { if (window) } while((true) && 0);");
tryItOut("/*infloop*/do {/*for..in*/for(let function::prop = null in <x/>) yield; } while(__iterator__.__proto__ setter= Math.pow);");
tryItOut("return;");
tryItOut("switch(~(({prototype: true }))) { default: break; case 1: continue ;break; break;  }");
tryItOut("while(((<><x><y/></x></>).__lookupSetter__(\"function::prototype\")) && 0)continue L;");
tryItOut("switch(*::*) { case *::*.__lookupSetter__(\"__iterator__\"): break; export *; }");
tryItOut("__proto__ = constructor;");
tryItOut("let (__noSuchMethod__ = @foo) { {} }");
tryItOut("L: var __proto__ = <><x><y/></x></>, prop = window;");
tryItOut("export *; const prop;");
tryItOut("/*infloop*/L:for(prototype = true; function ([y]) { }.__noSuchMethod__; ( \"\"  != *::*.yoyo(__parent__))) break L;");
tryItOut("L: {return 1e+81; }");
tryItOut("if([(new (/a/gi)())].map(/a/gi)) {let prop; } else  if (({((( '' .__defineGetter__(\"__noSuchMethod__\", 'haha'.split)) for each (constructor in  '' ) for each (__proto__ in undefined)))--: <x/> / <x><y/></x>})) var __count__ =  \"\" ; else {(<><x><y/></x></>);/*infloop*/while(eval(\"var prop = <><\\fx><y/></x></>, __noSuchMethod__;\", (new Function(each))))switch(__proto__) { case true: return null } }");
tryItOut("do {/*for..in*//* nogeckoex bug 349964 */ for  each(__proto__ in *::*) {continue L;break ; } } while(( >>>=@foo\n) && 0);");
tryItOut("export __proto__;");
tryItOut("(*)\n");
tryItOut("/*for..in*/L:for(var __count__ in (((RangeError(\f<>__count__</>, let (__noSuchMethod__, __iterator__ = #1=[#1#]) 1e-81)))((prototype([11,12,13,14].filter) = __iterator__(undefined)))))/*infloop*/for(var __parent__; @foo; new <y><z/></y>(null)) {continue M;var __parent__ = __count__, constructor = <x><y/></x>; }");
tryItOut("/*infloop*/while((<x/>) ? <y><z/></y> : #2=[ \"\" ])yield @foo;");
tryItOut("yield;");
tryItOut("/*for..in*/M:for(let prototype = (true >= ()) in *) {let (prop = *, __proto__) { @foo; } }");
tryItOut("/*infloop*/L:for(new #1#( /x/g ); (<><x><y/></x></>.isPrototypeOf\n(*::*)).valueOf(\"number\"); ((#3={a:#3#}).watch(this).__lookupGetter__(\"constructor\"))) {return this;\n(<><x><y/></x></>);\n }");
tryItOut("/*infloop*/for(const let; this; [1,,]) {(__proto__);(<x><y/></x>); }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(const __proto__ in +undefined) {return <><x><y/></x></>;[,,z1]; }");
tryItOut("if(<><xxx {constructor}={<><x><y/></x></>++.__proto__ = __iterator__} /></>) { /x/ ; } else const prop =  /x/ ;");
tryItOut("return  { let prop = window, constructor = window; } ;");
tryItOut("L:switch((Number())) { case (({__noSuchMethod__ getter: <x><y/></x>, __iterator__ getter: ({}).hasOwnProperty }) >> new (Function)()): throw __iterator__;default: yield  '' ; }");
tryItOut("/*for..in*/for(const [__proto__, prototype] = ({ __parent__: __parent__, constructor: prototype }) = (<><x><y/></x></> != 3/0).isPrototypeOf((<x><y/></x> ?  : prop.([,]))) in (<x><y/></x> *= window).yoyo(\ntrue)) export *;");
tryItOut("let(({ prop: ({ constructor\f: ({ __proto__: constructor, __iterator__: __proto__ }), __count__: [__noSuchMethod__] }) }) = <x><y/></x> ? (__iterator__ = __iterator__) :  ''  .@x:: 0x99, constructor = (prop) =  /x/g  ? window : undefined) ((function(){with({}) { throw StopIteration; } })());");
tryItOut("/*infloop*/while( \"\" ){*const __iterator__; }");
tryItOut("/*for..in*/for(let constructor in [,,z1]) {export *; }");
tryItOut("/*for..in*/for(var __count__ = Boolean() in @foo) {var prototype = <x/>, __proto__;yield; }");
tryItOut("/*for..in*/M:for(let [prototype, __count__] = 'fafafa'.replace(/a/g, (new Function(\"export __count__; const __iterator__;\"))) in ([window] instanceof (({__proto__ getter: 'haha'.split })))) {return  /x/  | window;/*infloop*/for(const prop = set.( /x/ ); (function(y) { yield y; export *;; yield y; }.isPrototypeOf(<><x><y/></x></> %= 1.3) %= (Error((<><x><y/></x></>.eval(*))))); prototype.__count__ = __proto__ = <x/>.__lookupGetter__(\"__count__\")) let (__noSuchMethod__, prop) { /*infloop*/do yield  \"\" ; while(-0); } }");
tryItOut("{/*infloop*/for((<><xxx {prototype}={<x/>} /></>.__defineSetter__(\"__iterator__\", eval)); (eval(\"export __proto__;\", ([033 if (<x/>)])\n)); ((prototype)())) {this({}).hasOwnProperty } case 7: prop = 3/0;default: (window);return;case 7: truebreak; gc() }");
tryItOut("__parent__ = constructor;");
tryItOut("{/*for..in*/for(let prototype =  /* Comment */<x/> in  /x/g ) return;const __count__ = <x><y/></x>, prop; }");
tryItOut("if((window).call(<x><y/></x>, <><x><y/></x></>, undefined, <><x><y/></x></>).propertyIsEnumerable(\"constructor\")) break ; else  if ((prototype = -1)(@foo.__lookupSetter__(\"prototype\"), <><x><y/></x></>)) {export *;\f(<x><y/></x>); }");
tryItOut("while((++1e-81 -= 1e+81.valueOf(\"number\")) && 0){/*infloop*/for(let __iterator__; 1e+81; *) return 0/0;\f }");
tryItOut("with([this].filter(function(q) { return q; }) .@ (p={}, (p.z = null)()))var prop = __count__, __noSuchMethod__ = ({a1:1});");
tryItOut("/*infloop*/M:for(var [, ({ get: __count__, __count__: getter })] = ([11,12,13,14].map); window; @foo && <y><z/></y>) const __iterator__ = __count__, constructor\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const prop in <x><y/></x>) {throw <x/>;{} }");
tryItOut("M:if((({__iterator__: (p={}, (p.z = @foo)()) }))) { if ('fafafa'.replace(/a/g,  /x/g )) {( /x/ ); }} else {continue ;let __proto__ =  '' ; }");
tryItOut("yield (null | <><x><y/></x></>) ? <x><y/></x> : [z1]\n");
tryItOut("/*infloop*/for((function () { return *::* } ); (export *); ( '' .__lookupGetter__(\"prop\"))) /*infloop*/for(let __iterator__; *; __parent__) {return; }\n");
tryItOut("/*infloop*/for(__iterator__; (function  prop (__count__, __proto__) { yield function(id) { return id } } ); 0/0) {({});\ryield <><x><y/></x></>; }");
tryItOut("with({prop: <>(-(true ? (<><x><y/></x></>\n) : (null.watch(\"prototype\", new Function))))</>}){if( \"\" ) {break M;; }\nif((0)) {var __count__ = <y><z/></y>, __count__; }return; }");
tryItOut("if( '' ) {[,,z1]; } else  if (function(id) { return id }) {(function  __parent__ (constructor) { ; } );null } else {}");
tryItOut("while((new (__proto__ = <x/>)(__iterator__, <><x><y/></x></>)) && 0)let prototype;");
tryItOut("/*infloop*/for(__count__ = function(id) { return id }; __proto__.prop; <><employee id=\"1\"><name>Joe</name><age>20</age></employee></>) return;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(const prototype in window) { }");
tryItOut("while(((this.*).__defineGetter__(\"__parent__\", [1,2,3,4].map)) && 0)/*for..in*//* nogeckoex bug 349964 */ for  each(__parent__ in 1.2e3) {var prototype = 4., prototype = (-0); }");
tryItOut("if(<><x><y/></x></>.prototype) { if (({@foo })) export prop; else {throw <><x><y/></x></>; }}");
tryItOut("L: /*for..in*//* nogeckoex bug 349964 */M: for  each(const prop in  '' ) 1e+81");
tryItOut("\n");
tryItOut("/*for..in*/M:for([constructor, each] = #1=*[*] in \t(__noSuchMethod__ = @foo)) yield;");
tryItOut("/*infloop*/for(__noSuchMethod__ = (new (<><x><y/></x></> / @foo)(((prop = <><x><y/></x></>)((('fafafa'.replace(/a/g\t, null)) @ __noSuchMethod__), -1.__defineGetter__(\"__iterator__\", (1 for (x in []))))), <><x><y/></x></> <= __noSuchMethod__)); (<x><y/></x>.constructor ^ eval(\"<y><z/></y>\", @foo) >> (eval(\"<><x><y/></x></>\", <>//h\n<x><y/></x></>)).__defineGetter__(\"prototype\", new Function)); (((<employee id=\"1\"><name>Joe</name><age>20</age></employee>yyy in <x><y/></x> &= (constructor.@*)))( \"\" , __proto__ = ({})))) if(((p={}, (p.z = false)()).propertyIsEnumerable(\"__parent__\")).__noSuchMethod__ = var __count__, __noSuchMethod__) continue M; else yyy");
tryItOut("{export constructor;yield; }\nthrow false;");
tryItOut("/*infloop*/for([] = ({ prototype: ({ __iterator__: __count__ }), prop: [, , __parent__, __count__, ] }); [11,12,13,14].map; new Exception(window, <y><z/></y>)) \f__noSuchMethod__ = (prop.constructor = (prop = 1.2e3))");
tryItOut("/*infloop*/do {break L; } while((__count__ = #1=[#1#])((prototype = __proto__), x::__proto__));");
tryItOut("/*infloop*/for(const __noSuchMethod__;  ''  ? (this.__defineGetter__(\"constructor\", *)) : <x/>; (typeof yield __parent__ = this) - (<x><y/></x>\n) | @foo ? window : <><x><y/></x></>) {let (__count__, __parent__ = Iterator(<y><z/></y>, <y><z/></y>)) { const __noSuchMethod__ = 5.0000000000000000000000, __parent__; } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(const prototype in __parent__) export prop;");
tryItOut("if(__noSuchMethod__) { if ( '' .eval( \"\" )) {export *; } else {yield function::__parent__; }}");
tryItOut("L:if((1e-81.prototype)) {let __proto__ = 3/0;.2; }");
tryItOut("continue ;");
tryItOut("/*infloop*/for(let prop; false.constructor; ((yield #1#))(__noSuchMethod__.__proto__ getter= /a/gi, __iterator__ ? * : [,])) /*for..in*/L:for(__noSuchMethod__ in (((({}).hasOwnProperty).apply)(#3={a:#3#}))){let = [z1,,], __iterator__; \"\"  }");
tryItOut("const __count__ = [z1,,];");
tryItOut("/*infloop*/M:do yield <x><y/></x>; while(<>({}) <<= 1e81</>);");
tryItOut("/*infloop*/for(const [[<><x><y/></x></>, ]] = 1e81 > <><x><y/></x></>; __count__ = constructor|=<x><y/></x>; <x><y/></x>\f.(prop)) L: {return *::*; }");
tryItOut("M:if(new (function () { yield (<x><y/></x>); } )((eval(\"<x><y/></x>\", undefined)), <><x><y/></x></>)) {L:while(((this.zzz.zzz)) && 0){export *; } }");
tryItOut("/*for..in*/for(let prop = ([z1,,] !== #1=[#1#] || null.@*).__defineGetter__(\"prop\", Function) % <x/>.isPrototypeOf(window) in (new [1,2,3,4].slice( /* Comment */(prototype = <y><z/></y>), constructor))) {M:if(0.1.valueOf(\"number\") -= new *::*()) { if (([11,12,13,14].filter)) gc() else yield prototype;}if(new (3).watch(<x/>, <>\f<x><y/></x></>)) {this } }");
tryItOut("if(prop = *::*) { if ( /x/g ) {const __count__ = <x><y/></x>;gc() }} else {gc() }");
tryItOut("{{constructor = 0x99;while((new (<y><z/></y>)( /x/g )) && 0){0x99;return; } }/*infloop*/for(constructor; __noSuchMethod__.(prop += <><x><y/></x></>.watch(\"__parent__\", [1,2,3,4].map)); __proto__.prototype getter= function  constructor (constructor)(function ([y]) { })()) {(({a2:z2})); } }");
tryItOut("/*infloop*/M:for(var __iterator__; (p={}, (p.z = false.__lookupGetter__(\"__parent__\"))()); <><xxx {__iterator__}={<xxx {__noSuchMethod__}={__iterator__ = prop} />.(<employee id=\"1\"><name>Joe</name><age>20</age></employee>.((__noSuchMethod__ = <x/>)))} /></>) {/*for..in*/for(const __noSuchMethod__ = new ( '' )(@foo, #3={a:#3#}) in this) M:if(__noSuchMethod__) throw <><x><y/></x></>;L:switch(( \"\" .isPrototypeOf([,]) if ( \"\" ))) { case (<x><y/></x>.yoyo(false)):  } }");
tryItOut("if( /x/ ) {} else  if (@foo.yoyo(1.3)) export *;");
tryItOut("for(let y in [5,6,7,8]) export *;");
tryItOut("if(true) <x><y/></x> else {return;{} }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let constructor in new prop(prop.prototype = 1e4, <x><y/></x>)) {export *\nexport *; }");
tryItOut("if(undefined) {yield window;if((<x><y/*\n*//></x>.eval(<x/>))) { if ( '' ) {export *\n/*infloop*/M:while(({a2:z2})){return; } } else return *;} }");
tryItOut("switch(({prototype: true })) { default:  /x/g ;(<x><y/></x>);break; case 8: /*infloop*/do {{} } while(( for each (__parent__ in this) for each (__iterator__ in *) for each (__parent__ in <x/>)));break; case 8: break; if((eval(\"__proto__;\", (uneval('fafafa'.replace(/a/g, gc)))))) export __parent__; else {{gc() }function (__parent__) { return * }  }break; case 1: break; case 4: yield <x><y/*\n*//></x>\n }");
tryItOut("yield  /x/ ;{}");
tryItOut("return;");
tryItOut("if('fafafa'.replace(/a/g, function  prototype () { yield this } )) export __noSuchMethod__; else yield;");
tryItOut("function (prototype, __proto__) { yield undefined } \n[1,,] ,  /x/ ['@foo.propertyIsEnumerable(\"__proto__\")'] = __count__;\n");
tryItOut("yield");
tryItOut("/*infloop*/do return; while(({prop: this,  set function::__proto__(__count__, prop) { return ({__parent__: #3={a:#3#} }) }  }));");
tryItOut("do L:with({prototype:  /x/g }){return;<><x><y/></x></>; } while((__parent__ = (! \"\" )) && 0);");
tryItOut("M:if(@foo) { if (<>window</>) yield; else {export __iterator__;prop; }}");
tryItOut("/*for..in*/for(let [prop, [prop, , __noSuchMethod__, ], , ] in *::*) {return @foo;return; }");
tryItOut("/*for..in*/M:for((())(eval++) in [z1]) yield;");
tryItOut("{/*for..in*/for(var __noSuchMethod__ in ((({}).__lookupGetter__)(this)))return;if('haha'.split) {return; } else  if (this.__defineSetter__(\"prop\", function(y) { yield y; L:if(*) {; }; yield y; }) + (({ __iterator__: [, ] }) = prop getter: new Function === eval( '' , this))) {export *;{const __proto__; } } }");
tryItOut("/*for..in*/L:for(var [] in <x><y/></x>) return 0x99; const constructor;");
tryItOut("L: {continue L; }");
tryItOut("/*infloop*/M:for(let prop = @foo; <><x><y/></x></>; <x><y/></x>) return;");
tryItOut("/*infloop*/for(prop; new ({}).__lookupGetter__(new (<x><y/></x>.throw(*))(__iterator__.constructor)); (yield <x><y/></x>)\n) (*);\nL:if(window) return; else {return;; }\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var prop in __parent__) {\t-3/0; }");
tryItOut("M:if(3.141592653589793) {let prototype = 1.3, __parent__ = 3.141592653589793; } else  if (undefined) ((-1));");
tryItOut("throw prop;");
tryItOut("throw <><x><y/></x></>\n");
tryItOut("/*infloop*/L:while((new (function  __count__ (constructor) { return @foo } )())){/*for..in*/for(__noSuchMethod__.__parent__ in ((({}).__lookupGetter__)(<bbb xmlns=\" /x/g \"> </bbb>))){yieldyield; } }");
tryItOut("let (({ constructor: ({ __parent__: ({ __count__: __parent__, prop: prototype }) }), constructor: [] })) { eval }");
tryItOut("yield  /x/g ;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(constructor in ((new Function(\"throw 1e-81;\")))([1,2,3,4].map)) {var prop, __proto__;export *; } const __iterator__;");
tryItOut("/*infloop*/L:for((window >>> 1e4).constructor; ({__noSuchMethod__ getter: function(q) { return q; } });  /x/ .__lookupSetter__(\"__count__\"))  const __proto__;");
tryItOut("with({}) { try { /*infloop*/for(var __count__; <y><z/></y>; prop) prop, __proto__ = this; } catch(__count__) { for(let y in []); } finally { let(prototype = 'fafafa'.replace(/a/g, false), prototype) ((function(){with({}) (<x><y/></x>);})()); }  } \nfor(let y in []);");
tryItOut("M:switch(<x><y/></x>) { default:  }");
tryItOut("with({__noSuchMethod__: .2})return;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(const (new this.__defineSetter__(\"__parent__\", (__parent__).__defineSetter__)() __proto__ )() in --__noSuchMethod__|= '' ) {let __proto__ = 1.2e3; }");
tryItOut("with({}) (1 for (x in []))");
tryItOut("L: {;let constructor; }\nwith({prototype: ('fafafa'.replace(/a/g, (Math.sin).call))}){(0.1); }");
tryItOut("/*for..in*//*\n*/for(var //h\n__parent__ in  /x/g ) let prop;");
tryItOut("return <><x><y/></x></>;yield;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(function::prop in this) return;");
tryItOut("{}\nyield;\n\n<><x><y/></x></>;gc()");
tryItOut("/*infloop*/for(var __count__; prototype = undefined; <x><y/></x>.__proto__) (<x/>);");
tryItOut("return;\nvar __noSuchMethod__ = [];\n");
tryItOut("gc");
tryItOut("switch(1.2e3) { default: return; }");
tryItOut("for(let y in [5,6,7,8]) export __proto__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __parent__ in (\ntrue)) gc()");
tryItOut("/*infloop*/M:for(prototype; (prop.__proto__); (let (constructor = (<x><y/></x>())) [,,z1].@foo)) {yield;/*for..in*/for(__count__ in ((((gc).call(prototype, )) %= ((yield __proto__)))())){var __noSuchMethod__, constructor; } }");
tryItOut("export *;");
tryItOut("/*for..in*/for(var (([((1e81).__defineSetter__)()].sort(/a/gi)))(<x><y/></x>(function(id) { return id })) in <y><z/></y>.unwatch(\"__iterator__\")) return <><x><y/></x></>;");
tryItOut("/*for..in*/for(const prop = <><x><y/></x></> in __parent__) let prop, prototype;");
tryItOut("/*infloop*/for(({ __noSuchMethod__: ({ __count__: __iterator__, prop: constructor }) }) = (__parent__.__iterator__); this.__defineGetter__(\"__iterator__\",  /* Comment */ ''  .. []); <><employee id=\"1\"><name>Joe</name><age>20</age></employee></>) {yield new ((<x><y/></x>)([[]], <y><z/></y>))(new window(<x><y/></x>)); }");
tryItOut("if(<><x><y/></x></>) continue \f; else  if (__noSuchMethod__) {yield <><x><y/></x></>; } else {continue ; }");
tryItOut("switch(new Date().yoyo(__iterator__ = false)) { default: export *;break; /*infloop*/for(__noSuchMethod__ = (eval(\"null\", <><x><y/></x></>)); String();  if ( \"\" )) export __parent__;break;  }");
tryItOut("let (({ __proto__: ({ prop: ({ constructor: ({ __iterator__: [, , prop, __proto__], __noSuchMethod__: ({ prototype: prop }) }), __noSuchMethod__: ({ __iterator__: [] }) }), prop: ({ prop: [] }) }), prop: ({ __parent__: ({ __proto__: [, constructor, , [prototype, ]], prop: __proto__ }) }) })) { const __parent__ = function(id) { return id }; }");
tryItOut("L: /*infloop*/do {continue ; } while(false.watch(\"constructor\", ({}).__lookupGetter__)[__parent__ = <x><y/></x>]);");
tryItOut("with({}) with({}) { try { {} } catch(__count__ if (function(){<ccc:ddd>yyy</ccc:ddd>})()) { ({}).hasOwnProperty }  } ");
tryItOut("/*infloop*/for(var __proto__ = __proto__ = __noSuchMethod__.@*; (#3={a:#3#})(<y><z/></y>)%=* , <y><z/></y>; ([true(*).__defineSetter__])) {gc()const __noSuchMethod__ = true; }");
tryItOut("while((4.) && 0)switch( \"\"  .@ __count__) { default:  }");
tryItOut("{yield ; }");
tryItOut("return  '' ;");
tryItOut("null\n");
tryItOut("while((__noSuchMethod__.((prototype = 0))) && 0){throw __parent__;export x::constructor; }");
tryItOut("while(( /x/  .@*:: yield  \"\" ;) && 0){}");
tryItOut("/*infloop*/for(var __parent__; __proto__ = this; <x><y/></x>.(<x><y/></x>)) (__noSuchMethod__);");
tryItOut("/*infloop*/L:for(var constructor; <><bbb xmlns:ccc=\"*::*\"><ccc:eee></ccc:eee></bbb></> *= (*::*.hasOwnProperty(\"__parent__\")); <bbb xmlns=\" /x/g \"><xxx {__iterator__}={__noSuchMethod__.(.2)} /><ccc:ddd><!--yy--></ccc:ddd></bbb>) {if(this.__defineSetter__(\"__count__\", __noSuchMethod__)) __noSuchMethod__; else gc()L:if((prop = undefined)) ; else  if (*::*) this; else {{}return <><x><y/></x></>; } }");
tryItOut("/*infloop*/for(__iterator__; [,,z1]; window) {export *; }");
tryItOut("L:if(Function(false\n)) throw *; else  if ((({ __proto__: [] })/*\n*/ = eval(\"window;\", window))) break ; else const yield = false, __parent__ = window\n");
tryItOut("/*for..in*/for(__proto__(@foo) in .2 || <x/>) {{} }");
tryItOut("if((({__noSuchMethod__: (*.__proto__), __parent__ getter: function (__iterator__, __noSuchMethod__) { ; }  }))) { if (<x><y/></x> ? this : <x/>) /*infloop*/while\t( '' ){yield <x/>; } else yield let (__parent__ = true, prototype = <x/>) function(id) { return id };}");
tryItOut("/*infloop*/for(let prop; (__parent__ = (<y><z/></y> === <x/>) .. <x><y/></x>.@foo); new [11,12,13,14].sort(#3={a:#3#})) {var constructor = []; }");
tryItOut("L: new Function");
tryItOut("if(undefined) \t{{} } else <ccc:ddd>\t<ccc:ddd></ccc:ddd></ccc:ddd>");
tryItOut("{return;[1,2,3,4].map }");
tryItOut("/*for..in*/for(const [__parent__, __iterator__] = @foo in function(id) { return id }) __proto__");
tryItOut("with({}) ");
tryItOut("let (__noSuchMethod__, constructor = [15,16,17,18].map((<><x><y/></x></>).__defineSetter__, <><x><y/></x></>)) { L:if((this)[@foo]) { if ([window for (__count__ in 3/0)]) constructor, __noSuchMethod__; else {throw function ([y]) { }; }} }");
tryItOut("let (__iterator__, prop) { gc() }");
tryItOut("/*infloop*/for(var [, , ({ __noSuchMethod__: [] }), ({ __iterator__: [], [, , , function::constructor, ]: __noSuchMethod__ }), ] = (eval(\"new __parent__(__noSuchMethod__)\", <xxx>{prototype}</xxx>)); __iterator__.__noSuchMethod__ getter= function  __proto__ () { return <><x><y/></x></>.__lookupSetter__(\"__parent__\") } ; (<><x><y/></x></>.__defineSetter__(\"__count__\", 'haha'.split)) === [*].filter(({a1:1})).eval(__count__)) {L: export __noSuchMethod__; }");
tryItOut("/*for..in*/for(let [__parent__, __noSuchMethod__] = + \"\"  in *.__defineGetter__(\"__parent__\", __iterator__)) //h\n{L: yield <x><y/></x>; }");
tryItOut("if( \"\" ) if(true) {export *; } else {yield *; } else {export *; }");
tryItOut("switch(function::__count__.__count__ = (//h\n__iterator__ = *::*)) { default: break; case ([, ] = __noSuchMethod__ = ((<y><z/></y>)()).eval(eval(\"[*::* for each (__count__ in  '' )]\", <y><z/></y>.prototype = <y><z/></y>))): break; switch(<x><y/></x>.@foo) { default: <x><y/></x>; }case 8: if((1.3 & true)) { if ( /x/ .*) {throw __count__; }} else {break M; }break; case 7: /*for..in*/L:for(let __proto__ = 1.2e3 in __noSuchMethod__) {return;__proto__, prototype; }break; <x/>;case 0: break;  }");
tryItOut("/*for..in*/for(let [__parent__, //h\n__noSuchMethod__] = [this] in true) {gc()( \"\" ); }");
tryItOut("let (__parent__ = let (prop = case constructor = null: if((3.141592653589793)[@foo]) {yield;export __parent__; } else {<><x><y/></x></> }break; let constructor =  /x/g , __count__ = <x><y/></x>;break; , __count__) *::*.@foo) { throw <><x><y/></x></>; }");
tryItOut("if(([true if (true)]).unwatch(\"set\")) throw [z1,,];");
tryItOut("if( \"\" ) { if (#1#) {\tyield this; }} else {export __proto__;break ; }");
tryItOut("prototype");
tryItOut("/*infloop*/L:for(var ({ __count__: ({ function::__iterator__: ({ __noSuchMethod__: ({ __count__: prop, prototype: ({ __parent__: prop }) }) }), undefined: ({ __parent__: __noSuchMethod__, prop: constructor }) }) }) = <>yyy</>; (yield <><xxx>{prop}</xxx></>); new  /x/ .__lookupSetter__(\"function::prop\")__count__(((__iterator__.__parent__))().@foo)) L:with({__parent__: prototype.constructor = function(id) { return id }})export *;");
tryItOut("L:switch(__noSuchMethod__) { default: break; break;  }");
tryItOut("M:if(<xxx {__noSuchMethod__}={__count__} />.(<><x><y/></x></>)) /*infloop*/for(const prop; this.zzz.zzz[<><x><y/></x></>]; *) ");
tryItOut("M:if(3.__defineSetter__(\"__iterator__\", (window).__defineSetter__) | <x><y/></x>.valueOf(\"number\")) { if (* %= <x><y/></x>) {if(<><x><y/></x></>) {yield;continue L; } else  if ( /x/ ) {}(arguments); }} else {export ; }");
tryItOut("for(let y in []);");
tryItOut("if( '' ) constructor;");
tryItOut("/*for..in*/M:for(var [__noSuchMethod__, __proto__] = new [1,2,3,4].map() in __parent__ = <x/>) break L;");
tryItOut("/*for..in*/for((<><bbb xmlns:ccc=\" '' \"><ccc:eee></ccc:eee></bbb></>)(<y><z/></y>\n) in __parent__ = false) {let constructor = prop, this = @foo;M:if(-0) __count__ setter: ({}).hasOwnProperty }");
tryItOut("/*infloop*/for(<x/>; (function  __iterator__ (__parent__)-0)((new [,,z1]).__parent__); (<x/>.__lookupSetter__(\"prop\"))) {const prototype, __noSuchMethod__ =  /x/ ;\t }");
tryItOut("while(((((new Function(\"L: {return; }\")))())) && 0)throw (function ([y]) { })();");
tryItOut("/*for..in*/for(var __count__ = new (yield +gc)(typeof [z1]) in <employee id=\"1\"><name>Joe</name><age>20</age></employee>) {if(__noSuchMethod__ = function(id) { return id }.__defineSetter__(\"constructor\", function(y) { yield y; ; yield y; })) (__parent__);/*infloop*/for(var ({ __noSuchMethod__: [__proto__] }) = __count__ =  /x/  ?  /x/ .__defineSetter__(\"prototype\", gc) : [@foo]; ({prop: this.__defineGetter__(\"__iterator__\", function  constructor (constructor, __parent__) { export *; } ), __iterator__: ({ prototype: __parent__, __noSuchMethod__: prop }) = *::*.throw(0/0): <y><z/></y>.__defineSetter__(\"prop\", <><x><y/></x></>) });  /x/ ) {yield <x><y/></x>; } }");
tryItOut("var __count__;\nthrow #3={a:#3#};\n");
tryItOut("if((-0)) { if ((void <x/>)) export *; else {{} }}");
tryItOut("/*infloop*/do {/*for..in*/for(var prop in (( '' )(<><x><y/></x></>))){throw undefined; }return; } while(__parent__);");
tryItOut("{if(<y><z/></y>) { if (this) continue ; else ;}/*infloop*/for(var __proto__ = null; *::*;  \"\" ) export __noSuchMethod__\nyield;__proto__ = 0x99, __proto__ = <><x><y/></x></>; }");
tryItOut("/*for..in*/L:for(let __iterator__ in ((arguments)(<><x><y/></x>\t</> ? .2 : 1e81)))with({prop: <x/>})return *;");
tryItOut("if(<x/> -=  \"\" ) const constructor; else  if (5.0000000000000000000000 <<= #3={a:#3#}) {let __count__ = this, constructor = <><x><y/></x></>;constructor; } else {constructor = <><x><y/></x></>;prop }/*for..in*/L:for(const [__iterator__, __noSuchMethod__] = eval(\"-0\", 0x99) in  /x/  .. __iterator__) /*infloop*/for(033; @foo; 1e4) \f{{}return 0x99; }");
tryItOut("if(new (function  __proto__ () { return  /x/  } )()) { if ([z1,,].yoyo(4.)) var prototype; else {return -1;export *; }}");
tryItOut("{} const constructor;");
tryItOut("/*for..in*/M:for([prop, __noSuchMethod__] = 0[<><x><y/></x></>] in *) {throw <><x><y/></x></>;return <><x> {return; } <y.__iterator__></x></>; }");
tryItOut("if(4.) {continue ;{} } else  if ([[1]]) {return <x><y/></x>;export *; }");
tryItOut("if(({prototype setter: 'haha'.split })) {constructor, __proto__ = <x/>; } else  if (*::*) yield __iterator__ .@x:: constructor = prop; else {with({}) { __proto__ = prototype; }  }");
tryItOut("L:if(__iterator__ = [,,]\t) {M:switch((//h\n(function (__noSuchMethod__, prototype) { {} } )(undefined))) { default: break;  } } else  if (<x/>) (*);");
tryItOut("switch(false %= <y><z/></y>) { default: L: { /x/g  }break; case let (__noSuchMethod__ = false) __iterator__: continue ;break;  }");
tryItOut("if(([[]]++)) {return this; } else {(3.141592653589793); }");
tryItOut("/*for..in*/for(let [__count__, prototype] = 3/0 in (@foo) in new (function(y) { yield y; ; yield y; })(@foo, *::*)) export let;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __iterator__ in eval(\"0\",  /x/ )) {yield ( /x/  >>>=[,]); }");
tryItOut("{yield; }");
