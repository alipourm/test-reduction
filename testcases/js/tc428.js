tryItOut("L:while(((*)) && 0){with({prototype: setter.__iterator__ setter= Math.sin}){let __count__, __count__;var __noSuchMethod__ = <x/>; } }");
tryItOut("while((undefined) && 0)yield <><x><y/></x></>;");
tryItOut("with({__parent__: [11,12,13,14].some}){; }");
tryItOut("return;");
tryItOut("{switch(((@foo))) { default: case <><x><y/></x></>.unwatch(\"prototype\"): <x><y/></x>;(<x/>); }undefined }");
tryItOut("export prop;let prop, constructor = undefined;");
tryItOut("L:while((prototype) && 0)/*for..in*/for(var [__noSuchMethod__, __iterator__] = (Math.pow).call in @foo) const prototype, __noSuchMethod__ = <x/>;");
tryItOut("{/*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__ in <></>) yield true;gc() }");
tryItOut("if(__count__) ((<x><y/></x>).watch).apply else  if (<x/>) <x/> else {let __iterator__ = [];{} }");
tryItOut("if(prop) {gc } else ;");
tryItOut("return\n");
tryItOut("switch((<x><y/></x> | *::*.@*)) { default: export *;function (__iterator__, __proto__) { return window; } break; case 7: break; break;  }");
tryItOut("if(* ? 033 : @foo) { if (\n-3/0 <= __proto__ = <x><y/></x> ^= (#2=[-- /x/ ])) {( '' ); }} else export __noSuchMethod__;");
tryItOut("M:if(({a1:1})) { if (this) {[z1,,];break ; } else \f{export constructor; }}");
tryItOut("/*infloop*/for((({__proto__: [1,,] })); throw __noSuchMethod__;; (true.propertyIsEnumerable(\"prop\"))) {/*for..in*//* nogeckoex bug 349964 */L: for  each(const __parent__ in constructor) export *; }");
tryItOut("L:if(*) {return; }");
tryItOut("with(( if (<x><y/></x>)prop = <><x><y/></x></>)( = <><x><y/></x></> if (null))export prop;");
tryItOut("export *;export *;");
tryItOut("M:if(new (window)(*, <x><y/></x>)) {export *;0.1; } else  if ((uneval(3/0))) \texport *; else {Math.sinvar __proto__; }\n");
tryItOut("\tif((eval(({__iterator__:  /x/  })))) { if (prototype.yoyo(constructor = window.__defineGetter__(\"__count__\", (new Function(\"throw @foo;\"))))) {0x99; } else {throw *::*; }}");
tryItOut("if((yield true.watch(\"__proto__\", new Function))) export constructor; else  if ((eval(\"<><x><y/></x></>.valueOf(\\\"number\\\")\", this.__defineSetter__(\"__iterator__\", (new Function(\"yield true;\"))).__defineGetter__(\"__proto__\", ({}).__lookupGetter__)))) const prototype = 1e-81, __proto__; else {throw false;return; }");
tryItOut("do {export *;prototype; } while((((<y><z/></y>)[<><x><y/></x></>])) && 0);");
tryItOut("/*infloop*/for(<!--yy-->; [] = yield \farguments; (prototype = 4.)) /*infloop*/for(var __count__ = 3.141592653589793; function ([y]) { }; undefined) prop;");
tryItOut("if([[1]]) { if (1.2e3) throw true;} else {return;gc() }\nconst constructor =  '' , __proto__;\n");
tryItOut("/*for..in*/M:for(const [__noSuchMethod__, prototype] = <y><z/></y> in <x><y/></x>) { }");
tryItOut("let (__count__ = (function  __proto__ (__count__, __proto__) { yield __parent__ } )( /x/g )) { /*infloop*/while(((yield  /x/g ))){} }");
tryItOut("if((('haha'.split).call(<x/>, @foo))) { if ((__count__ = constructor))  else { }}");
tryItOut("for(let y in [5,6,7,8]) throw __iterator__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each((prototype) in ([null for each (__iterator__ in __noSuchMethod__)])) yield ((1 for (x in [])))();");
tryItOut("/*infloop*/for([#3={a:#3#}].sort((new Function).call); (new eval()); #2=[]) throw StopIteration;");
tryItOut("/*infloop*/M:for(__proto__; ({a1:1}) -= false; <y><z/></y>[*::*]) {}");
tryItOut("return null;");
tryItOut("/*infloop*/for(({ __proto__: [[[[({ __count__: ({ __parent__: __proto__ }), prop: prototype }), , , __count__]], , ({ prop: __iterator__ }), constructor, []], prototype, 0, , ] }) = __proto__.prototype setter= (Math.sin).apply;  /x/g ; __noSuchMethod__ = new Function()) {M:if(this) {yield <x/>; } else <x><y/></x> }");
tryItOut("(3.141592653589793)\nconst prop, __parent__;");
tryItOut("switch(function(id) { return id }) { case ++this: false;case 7: if(null) { if ((-0)) {export __count__;return 1e+81; } else {{}return  /x/g ; }} }");
tryItOut("\n( /x/ );\n");
tryItOut("{yield;Math.sin }/*infloop*/while(<x/>)export *;");
tryItOut("if(([ /x/  for (__parent__ in [,,z1])])) { if (constructor =  /x/g ) gc()} else ;");
tryItOut("yield __noSuchMethod__\n");
tryItOut("export function::__proto__;");
tryItOut("with({prototype: new Object(*.__count__ = null.__defineGetter__(\"prototype\", function(y) { yield y; export *;; yield y; }))}){gc()return <x><y/></x> }");
tryItOut("throw constructor;");
tryItOut("{let prop = false, __count__ =  \"\" ;yield prototype; }");
tryItOut("/*infloop*/for(const each; (constructor.watch(\"prototype\", function  __iterator__ (__noSuchMethod__)\t { * } )); ([<><x><y/></x></>].some(Math.sin))) {/*for..in*//* nogeckoex bug 349964 */ for  each(const __proto__ in function ([y]) { }) {break M;([,]); } }");
tryItOut("constructor = __proto__;");
tryItOut("return #0=prop;");
tryItOut("export *;");
tryItOut("/*infloop*/M:for(Function.__count__; <y><z/></y>; (3.141592653589793 * <><x><y/></x></>)) {gc()throw  /x/g ; }");
tryItOut("/*infloop*/for(var function::__proto__ = __count__; [[]]; *) {return; }");
tryItOut("do return; while((<><x><y/></x></> |= 1e+81) && 0);");
tryItOut("/*infloop*/while(eval(\"*::*\", yield undefined ? 0.1 : @foo &= (x::prototype.__iterator__ = 3);)){{} }");
tryItOut("L:while(((prop)) && 0){break ; }");
tryItOut("throw StopIteration;");
tryItOut("L:do ((<x/>).watch).apply while((eval(\"<x><y/></x>\", null)) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var ((* ? (let (prop =  '' ) (*::* ? [z1] : (-1))) : ({prototype: (function(y) { yield y; export *;; yield y; })() })))(typeof window.constructor) in constructor) {export *; const prototype; }");
tryItOut("L:with({__count__: (#1=({prop: ({a1:1})}))}){continue L; }");
tryItOut("__noSuchMethod__ = __noSuchMethod__;");
tryItOut("with({constructor: #1# - <x><y/></x>})yield;/*infloop*/do break L; while((* | -1));");
tryItOut("let (x::constructor, prototype = <x><y/></x>) { (window); }");
tryItOut("yield  \"\"  ^ ({a1:1});");
tryItOut("/*infloop*/for(prototype; (p={}, (p.z = 1e-81)()); (__proto__ = @foo)) {throw *::*;gc() }");
tryItOut("/*infloop*/M:for(var __parent__; yield <><x><y/></x></>.__proto__; eval(\"export *;\",  /x/ )) {;const __parent__ = this, __iterator__; }");
tryItOut("throw StopIteration;");
tryItOut("with({__noSuchMethod__: this}){if((#0=<x><y/></x>)) { if ((*::*)) {<y><z/></y> }} else {}/*for..in*/for(let  ''  = <x/> = __count__ = 1e-81 in <x><y/></x>) {{} } }");
tryItOut("yield <x><y/></x>;;");
tryItOut("yield {}.eval( /x/g ) > <y><z/></y>;");
tryItOut("/*infloop*/for(const __count__; ; ((p={}, (p.z = (p={}, (p.z = //h\n<><x><y/></x></>.isPrototypeOf(<x><y/></x>.*))()))()))) ;\nreturn;\n");
tryItOut("yield  \"\" .isPrototypeOf(1.2e3); const prop;");
tryItOut("__count__");
tryItOut("{throw 3/0; }");
tryItOut("if(([arguments for each (__noSuchMethod__ in 0.1)])) { if (null) {} else L:if(*) {yield;({ prop: __count__ }) }}");
tryItOut("let (constructor = (constructor+=())) { gc() }");
tryItOut("( \"\" );");
tryItOut("switch([ '' .watch(\"__noSuchMethod__\", ([,,]).watch) ? prop-=#3={a:#3#} :  /x/ [true]].sort(({}).__lookupGetter__)) { default: M:with({__proto__: prop}){Math.powyield  '' ; } const __proto__; }");
tryItOut("with((-3/0 & window))if(window) {(function(id) { return id }\f); } else  if (({a1:1})) {yield <x><y/></x>;const __parent__ = *, __count__ = <x><y/></x>; } else {return @foo; }");
tryItOut("M:if((<><x><y/></x></>.__lookupSetter__(\"__noSuchMethod__\"))) (undefined); else  if (throw #1=[#1#]) throw try(1 for (x in [])) } finally { export constructor; } ;");
tryItOut("L:if(([prototype, __iterator__, ] = __parent__++)) { if ((new Function)(4.).propertyIsEnumerable(\"prototype\")) {let constructor = <x><y/></x>; } else {{}; }}");
tryItOut("with([[<x><y/></x>].sort(({}).__lookupGetter__)].sort(Math.sin)){/*infloop*/for(3[this]; (<><x><y/></x></>[1e+81] > (constructor = false)); (__noSuchMethod__ = prop)) {var prototype, constructor; }/*infloop*/do __parent__ = <><x><y/></x></>; while(<x><y/></x>); }");
tryItOut("if(__proto__) {/*for..in*/for(__noSuchMethod__ in ((Math.sin)(0\n)))constructor = constructor;(<x><y/></x>); } else  if ((function  __noSuchMethod__ (({ __noSuchMethod__: constructor }), constructor) { return new (#1#)(<x><y/></x>, 0) || (new (-0)(-3/0)) } )) {/*for..in*/M:for(var __count__ = ~prop in <y><z/></y>) __proto__ =  /x/ , __iterator__;M:while((.2 <  /x/ ) && 0)export __count__; } else ;");
tryItOut("/*infloop*/M:for(let __iterator__; ({ prototype: prototype, __noSuchMethod__: [, __count__, ] }) = (constructor.return;); new __proto__ = <><x><y/></x></>(#1=[<x><y/></x>])) if((__count__|=3/0)) export *;");
tryItOut("L:if([,,]) let(__noSuchMethod__ = this.zzz.zzz) { continue ; else  if (eval(\"<>const prototype = <><x><y/></x></>, __count__ = @foo;</>.yoyo( /x/ ).__defineGetter__(\\\"__parent__\\\", (@foo).apply)\", *.__defineSetter__(\"__proto__\", null).__iterator__ = true &= @foo)) {throw __noSuchMethod__; }");
tryItOut("L:do {/*for..in*/for(let constructor = (__noSuchMethod__ = export *;) in <><x><y/></x></>) {var constructor, __proto__;var __noSuchMethod__, __parent__; } } while((<bbb xmlns:ccc=\"__parent__ = <y><z/></y>\"><ccc:eee></ccc:eee></bbb>) && 0);");
tryItOut("with(function ([y]) { }){}/*for..in*/for(const constructor in ((<x><y/></x>)( /x/g ))){/*for..in*//* nogeckoex bug 349964 */ for  each(prototype in null) return window; }");
tryItOut("switch(__count__) { default: break;  }");
tryItOut("with({prop: (new (false).__defineSetter__(__proto__).unwatch(\"__parent__\"))}){return <x><y/></x>; }");
tryItOut("/*infloop*/M:for(new 'haha'.split(([15,16,17,18].some(<><x><y/></x></>, prototype).__defineSetter__(\"__proto__\", Math.sin))); [yield (<x><y/></x> & <x><y/></x>)].map((let (prototype = window) prop = 5.0000000000000000000000 ? *.watch(\"prop\", function  __noSuchMethod__ (function::constructor) { return <x><y/></x> } )++ : this.zzz.zzz[this]).__defineSetter__); <><x><y/></x></> =  /x/  ? (this.__defineGetter__(\"__noSuchMethod__\", false)) : (uneval(<><x><y/></x></>)) instanceof new String()) { const prototype; }");
tryItOut("L:with((<x><y/></x>.hasOwnProperty(\"__count__\"))){return null;break ; }");
tryItOut("/*for..in*/M:for(const __proto__ in <y><z/></y>++) {export *;continue ; }");
tryItOut(";");
tryItOut("M:if(<><x><y/></x></> - [z1,,]) {{1.3;continue ; }/a/gi }");
tryItOut("if((({__count__ getter: (new Function(\"break L;\")),  set prop __parent__ () { yield  /x/  }  }))) { if ((<y><z/></y>(window))) export __count__; else export function::__noSuchMethod__;}//h\n");
tryItOut("[]; const __proto__;");
tryItOut("/*infloop*/for([] = <x/>; new Object(({__noSuchMethod__: null, __proto__: this })); yield [].valueOf(\"number\")) {var __proto__ = <><x><y/></x></>;; }");
tryItOut("/*infloop*/L:while('fafafa'.replace(/a/g, function  prop (prototype, prop) { yield <x><y/></x>.__lookupSetter__(\"__parent__\") } ))L:with({prototype: <x/> *  '' }){prop; }");
tryItOut("M:if(*::*) { if ((constructor\f)[<x><y/></x>]) {L: {return <><x><y/></x></>; }/*for..in*/for(let (__proto__) in ((<><x><y/></x></>)(constructor.( \"\" )))){(window);*; } } else {/*infloop*/for(true; (({__proto__: this})) .@*:: (<><x><y/></x></> <<= <x/>); (function(y) { yield y; (undefined);; yield y; })) {return true;let __parent__ = 3.141592653589793, __parent__ = __noSuchMethod__; } }}");
tryItOut("/*for..in*/for(const constructor = ((<x/>)(false)) in [,,]) return [1];");
tryItOut("if(<x><y/></x>.@foo) { if ( '' .prototype) {this; }} else {const prop; }");
tryItOut("while(([^].filter(Math.pow)) && 0)continue L");
tryItOut("M:if((<><x><y/></x></> < #1=[#1#])) { } else \f{true; }");
tryItOut("let(prop =  /x/ ) { throw __noSuchMethod__;");
tryItOut("if(({__count__: this.__defineSetter__(\"__proto__\", Math.sin).valueOf(\"number\"),  get __iterator__ __count__ (({ prototype: ({ __count__: __proto__, __count__: ({ __parent__: prop, each: prop }) }) }), __count__)<><x><y/></x></>.__lookupSetter__(\"constructor\") ? /*\n*/(#1=[this.__defineGetter__(\"__proto__\", function  prop (__parent__) { return 4. } )]) : (([true]) ? __noSuchMethod__.(window) : (yield <><x><y/></x></>)) })) { if (((@foo < this.__defineSetter__(\"__noSuchMethod__\", Math.pow)) %= (__proto__ = *;))) {} else {({a1:1});/*infloop*/for(var ({ prototype: __count__, __noSuchMethod__: constructor }) = __noSuchMethod__; [1,,].isPrototypeOf(#1#); \nnull) {<>false.__lookupSetter__(\"__noSuchMethod__\")</> } }}");
tryItOut("let __proto__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(\tvar constructor in <x><y/></x>) export *;");
tryItOut("if(prototype = null++) { if (<{prototype}><ccc:ddd><ccc:ddd><x><y/></x></ccc:ddd></ccc:ddd></{prototype}>.__parent__ == this.zzz.zzz) {__noSuchMethod__ }} else continue ;");
tryItOut("/*infloop*/for(const function::__iterator__ = void window; false ? window : 1.2e3; *::*) this;");
tryItOut("export *;");
tryItOut("/*for..in*/for(var prop in ((Math.pow)((<x/>(<x><y/></x>) ? * @ window : prop-=this)))){const __proto__; }");
tryItOut("/*for..in*/M:for(const __noSuchMethod__ in ((function  prop (function::prop, constructor) { return <x><y/></x> } )([[]] == this))){}");
tryItOut("/*infloop*/for(const [] = (((constructor).watch).apply)(__parent__, <x/>) == new Function(<x/>, [1,,]); (let (__iterator__ = constructor.prop =  /x/ )  { yield  /x/ .__defineSetter__(\"__noSuchMethod__\", (1 for (x in [])))-- } ); [,,]) {break ; }");
tryItOut("{__noSuchMethod__; }");
tryItOut("throw prototype;");
tryItOut("L:if(window) {export prop; } else  if (this) gc() else {throw *; }");
tryItOut("let __count__ = 3/0");
tryItOut("{[z1,,] }");
tryItOut("do {yield;throw  \"\" ; } while((<x><y/></x>) && 0);");
tryItOut("L: 3.141592653589793\n");
tryItOut("/*infloop*/for(let (__parent__.__proto__) = !<y><z/></y>; ([5.0000000000000000000000]); (constructor = {})) {with(\n*){(delete); } }");
tryItOut(" get prototype(__proto__) { yield (null <  \"\" .__proto__) } ");
tryItOut("{}\n");
tryItOut("/*for..in*/M:for(var [prop, prototype] = ( /x/ ) in new (function  __noSuchMethod__ (constructor) { constructor = prototype; } )(this, @foo).eval(( /x/ .hasOwnProperty(\"__iterator__\")).__lookupGetter__(\"__count__\"))) do var __count__; while(((function  prototype () { yield -1 } ).call(1e4, 5.0000000000000000000000,  \"\" )) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __count__ in (false for (prototype in <x><y/></x>))) break \nreturn\nconst __proto__, __parent__ = <y><z/></y>;");
tryItOut("/*infloop*/for((~(~__noSuchMethod__)); ([__noSuchMethod__ = @foo if ((function  __noSuchMethod__ (prototype, __proto__) { yield -0 } )(__iterator__ = <x/>;))]); (((yield [[]])).unwatch(\"__parent__\"))) <><x><y/></x></>");
tryItOut("switch(({a2:z2}) <= window ? <x><y/></x> : <x/>) { case 7: L:with(((Object()) >>>=({ set prototype __count__ ()false, __parent__: <y><z/></y> }) += (({a2:z2}).__lookupSetter__(\"__noSuchMethod__\")))){yield; }break;  }");
tryItOut("if(({ __proto__: prototype, __proto__: __iterator__ }) = [<><x><y/></x></>].filter(({}).hasOwnProperty)) export *; else ");
tryItOut("with((__proto__ = this))with({constructor: this})var prop = <x><y/></x>, __noSuchMethod__ = function(id) { return id };");
tryItOut("\n");
tryItOut("L:if(1e4) { if (<>Math.pow</>) export *; else {break L; }}");
tryItOut("while(((this)()(yield undefined//h\n)) && 0)/*infloop*/M:for(delete false; constructor; []) {break M;{} }");
tryItOut("if((({prototype: this for each (__noSuchMethod__ in __iterator__)}))) const __iterator__ = __count__, __count__;");
tryItOut("/*for..in*/for(let prop in ((({}).hasOwnProperty)(<x/>)))gc() const __parent__;");
tryItOut("M:if([1,2,3,4].map) {/*for..in*/for(const [__count__, __proto__] = \n[z1] in [,,]) let prop = this; }");
tryItOut("{let __proto__;return; }");
tryItOut("/*for..in*/M:for(const __count__ in /*\n*/(('haha'.split)([11,12,13,14].map))){L: gc()/*infloop*/M:do export *;\nyield;\n while(new *(true.eval(<x><y/></x>))); }");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*/for(let [__parent__, ({  for (set in constructor): function::prototype, __parent__: __parent__ })] = this.zzz.zzz in (({ prototype: __noSuchMethod__ }) = <y><z/></y>\n for each (prototype in (this.__defineSetter__(\"__noSuchMethod__\", Math.pow))))) M:switch(new Date(<><x><y/></x></>)) { default: const __parent__, __noSuchMethod__; }");
tryItOut("if((((this)[__count__]).isPrototypeOf((__parent__ = prop)))) export *; else export *;");
tryItOut("if((this.__defineSetter__(\"prop\", (new Function(\"return;\"))))) {yield <x><y/></x>; } else return;");
tryItOut("export __count__\n");
tryItOut("try { ( /x/g )([[]]) = constructor; } catch(__noSuchMethod__ if (function(){'haha'.split})()) { throw StopIteration; } finally { with({}) (new Function(\"this;\")) } ");
tryItOut("(function (prop)<x><y/></x>).apply\n;\n");
tryItOut("/*infloop*/for(var ({ __proto__: ({ let: [constructor, prototype], __parent__: ({ prototype: __parent__//h\n }) }), __noSuchMethod__: (__proto__) }) = (new this())(); [z1,,]; ( /* Comment */.2).call(@foo, )) \nnull;");
tryItOut("{if(<><x><y/></x></>) {export *; }gc() }");
tryItOut("export *");
tryItOut("if(prop) {with({}) { ; }  } else  if (prototype = eval(\"throw *::*\\f;\", @foo).__defineGetter__(\"prop\", ({}).__lookupGetter__)) if(<><x><y/></x></>.yoyo(__count__)[<><x><y/></x></>]) {return *::*; } else  if (__noSuchMethod__ &= *) {{} } else {yield @foo;throw __parent__; }");
tryItOut("M:with(null){;(<><x><y/></x></>); } const __proto__;");
tryItOut("L: {null; }");
tryItOut("/*infloop*/\nfor(var constructor; (); <y><z/></y>.yoyo(this)) export __parent__;");
tryItOut("switch(<><bbb xmlns=\"__parent__\">yyy</bbb></>) { case null: /*infloop*/L:do {\ffunction ()<y><z/></y> } while((null .@*:: <x><y/></x>));break; case 7: zbreak;  }");
tryItOut("switch((new  \"\"  .@x:: 3/0(({ __count__: prototype }) = @foo, (__noSuchMethod__ = prototype)))) { case (new Function(\"return;\"))((gc())).prototype: default: if(this) {throw [1,,];; } else {yield;return; }break;  }");
tryItOut("L: G");
tryItOut("yield (<x><y/></x>.__defineSetter__(\"__noSuchMethod__\", function  constructor (constructor) { return prototype } ))\n");
tryItOut("Math.powbreak ;");
tryItOut("/*infloop*/do { { return prop }  } while((yield <><x><y/></x></> >>= window));");
tryItOut("return <x/>;");
tryItOut("/*for..in*/for(const [__noSuchMethod__, __parent__] = <y><z/></y> in window) export *;");
tryItOut("/*for..in*/for(const __proto__ in (([1,2,3,4].slice)((({ get __parent__(constructor, __iterator__) { yield constructor }  })).__iterator__)));");
tryItOut("{var constructor; }");
tryItOut("for(let y in [5,6,7,8]) __noSuchMethod__ = __noSuchMethod__;");
tryItOut("switch(constructor = (prototype) + ((({}).__lookupGetter__).call(<x><y/></x>, ))) { case new Function: default:  }");
tryItOut("if(prototype.prop = this) {[1]; const constructor;if(*::*) __noSuchMethod__ } else {/*infloop*/for((<><x><y/></x></> !== window)();  /* Comment */-1.watch\f(\"x::__noSuchMethod__\", <x><y/></x> ? <y><z/></y> : 1e+81); <x><y/></x>.valueOf(\"number\")) {yield; }; }");
tryItOut("prototype = __proto__\n");
tryItOut("yield;");
tryItOut("( /x/g );");
tryItOut("/*for..in*/for(const __proto__ in ((prototype.prop)(*.__noSuchMethod__ = (window)(<><x><y/></x></>)|=({prop: * }))))yield 3;\nconst __noSuchMethod__;\n");
tryItOut("try { gc() } catch(__iterator__ if (function(){})()) { continue ; } ");
tryItOut("{L: {__proto__let constructor; } }");
tryItOut("/*infloop*/while((new Function)(yield *::*, *::*))yield;");
tryItOut("L: if(3) { if (*::*) {var prototype = <x><y/></x>; } else <><x><y/></x></>;}");
tryItOut("return;");
tryItOut("return;");
tryItOut("if(((uneval(__proto__ = @foo << prop)))) {}\nnull; else  if (( \"\" .__parent__).__proto__) {} else gc()");
tryItOut(";");
tryItOut("L: {const __noSuchMethod__ = null, __parent__ = null;__iterator__ = window, __parent__ = __iterator__ }");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*/M:'for(__iterator__ =  in ((new ([1,,])(<><x><y/></x>/*</>, <><x><y/></x></>)))()) {/*infloop*/for(let __iterator__ = -0; *; 5.0000000000000000000000) {var <x><y/>\n</x>;throw false; }while((__iterator__) && 0){;new Function } }(/");
tryItOut("/*infloop*/L:do {{}(new Function(\"return undefined;\")) } while(prop.__parent__);");
tryItOut("{{}var prop = false; }");
tryItOut("with((uneval(#1=({__noSuchMethod__: #3={a:#3#}\f}) if ( { const prop = <><x><y/></x></>, constructor = <y><z/></y>; } ))))( /x/g );<y><z/></y>;");
tryItOut("let (__count__ = <x/>, __noSuchMethod__ = *) { yield <y><z/></y>; }");
tryItOut("continue L\ngc()");
tryItOut("let __noSuchMethod__, __count__ = null\n/*for..in*//* nogeckoex bug 349964 */ for  each(let __iterator__.constructor in <><x><y/></x></>) {throw false;__proto__ = false, __iterator__; } const prop;");
tryItOut("L: {;var __noSuchMethod__; }");
tryItOut("M:if(<bbb xmlns:ccc=\"*\"><ccc:eee></ccc:eee></bbb>.__lookupSetter__(\"prototype\").eval('fafafa'.replace(/a/g, new Function))) {do {let __proto__ = constructor, prototype;continue L; } while((((uneval(<><x><y/></x></>.__proto__ = this)))) && 0); } else  if (this.__defineGetter__(\"__parent__\", (Math.pow).apply).throw((__iterator__.((new (function(q) { return q; })(*::*)))))) /*infloop*/for(const [({ __proto__: ({ __iterator__: ({ __noSuchMethod__: prototype, __proto__: __count__ }), prototype: __noSuchMethod__ }), __iterator__: [] }), ({ __iterator__: [, prototype, ({ __noSuchMethod__: __parent__ })], prototype: [, , , [__count__, , constructor, , prop]] }), , ({ constructor: ({ prop: ({ prototype: constructor }) }), prop: __iterator__ })] = 0/0; <><x><y/></x></>.eval(*::*).unwatch(\"__iterator__\"); constructor = @foo) {prototype = <x><y/></x>; } else L:if( .. undefined) var prototype, prototype; else  if (new Date( /x/g , 033))  else export __count__;");
tryItOut("");
tryItOut("/*infloop*/while((\ngetter =  /x/g )){/*for..in*/for(const __proto__ in ((Function)(<x/>))){{} } }");
tryItOut("with(<><x><y/></x></>){yield *;var prototype = <x><y/></x>, prototype; }");
tryItOut("/*for..in*/for([constructor, __iterator__] = \n<x><y/></x> in [[]]) const __proto__;");
tryItOut("if((this , window\n)) {{} } else {; }");
tryItOut("__count__ = __noSuchMethod__;");
tryItOut("/*infloop*/for(((--*::*));  /x/g .watch(\"prototype\", function (__parent__, __iterator__)-0)\f; <y><z/></y>.* > new (function(id) { return id })(<y><z/></y>, __count__)) yield  /x/ ;");
tryItOut("with({}) { ({ __iterator__: __noSuchMethod__ }) = prototype; } ");
tryItOut("/*for..in*/for(__noSuchMethod__ = (constructor += window\n && this.watch(\"__iterator__\", function () { Math.pow } )) in ) {/*for..in*/for(const __parent__ in ((({}).__lookupGetter__)((-1))))yield; const prototype; }");
tryItOut("/*for..in*/for([__iterator__, prop] = 3 in  /x/ ) ;");
tryItOut("if( \"\" ) { if (({a1:1})) __count__, constructor;} else {__proto__ = <y><z/></y>;constructor = 0, __parent__; }");
tryItOut("{return;yield <x><y/></x>; }");
tryItOut("__proto__ = prop;");
tryItOut("{/a/giconst constructor = 0.1, constructor; }/*for..in*/for(const __noSuchMethod__ in (((<employee id=\"1\"><name>Joe</name><age>20</age></employee>).watch)(([15,16,17,18].filter((new Function(\"\")), __noSuchMethod__)) :: @foo))){gc()\nexport *; }");
tryItOut("for(let y in []);");
tryItOut("/*infloop*/while(0/0){(prototype); }");
tryItOut("return true;");
