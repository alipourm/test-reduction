tryItOut("M:\tif(({ __count__: ({ __iterator__: __proto__, __parent__: __count__ }), __count__: ({ __count__: ({ constructor: [__parent__, , ] }), <><x><y/></x></>['__noSuchMethod__']: ({ prop: ({ __parent__: ({ __parent__: prop, __iterator__: prototype }) }), prototype: try { for(let y in []); } finally {  }  }) }) }) = <employee id=\"1\"><name>Joe</name><age>20</age></employee>.((p={}, (p.z = <x><y/></x>.__lookupGetter__(\"prop\"))()))) { if (*) {{constructor = <x/>, constructor = <><x><y/></x></>; }\n } else M:if(033 ? undefined : <><x><y/></x></>) { if (<x/> .@ <y><z/></y>) eval} else ( '' ).__defineSetter__}");
tryItOut("");
tryItOut("if(this.watch(\"prop\", function  __noSuchMethod__ ()(<><x><y/></x></\t>++))) { if ((eval(\"break M;\", <><x><y/></x></>.hasOwnProperty(\"function::function::__iterator__\")).__parent__)) {break ;__parent__ = var __count__ = <y><z/></y>, constructor = window;; }} else ;");
tryItOut("return;");
tryItOut("let (prototype) { {} }");
tryItOut("if(((({}).__lookupGetter__).call(__count__, ))) {yield <><x><y/></x></>\ncontinue L; } else  if (([*].sort(/a/gi))) let prototype, prototype; else throw 1.2e3;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__ in window ||  \"\"  > .2.__defineGetter__(\"function::true\", (window).watch)) {var constructor; }");
tryItOut("if([11,12,13,14].filter) {__noSuchMethod__, __count__;return; }");
tryItOut("try { throw StopIteration; } catch(prototype) { let([]) ((function(){let(__parent__ = null) ((function(){let __iterator__, __count__ = <x><y/></x>;})());})()); } finally { yield (__parent__ = __proto__) === this.zzz.zzz; } ");
tryItOut("/*infloop*/for((window.hasOwnProperty(\"__noSuchMethod__\")); true.unwatch(\"__noSuchMethod__\"); (this.zzz.zzz)) /*for..in*/for(var __parent__ in null) {yield;; }");
tryItOut("L:if([[]]) { if (<><x><y/></x></>) {return; }} else  \"\" ;");
tryItOut("/*infloop*/M:for(const prototype; *; __parent__) prop.prototype");
tryItOut("/*infloop*/for(new (null)() /= let (constructor) new @foo(); <><><x><y/></x></></>.@*; (__parent__.__parent__)) {let function ()<x><y/></x>; }");
tryItOut("do {;export *; } while((this) && 0);gc()");
tryItOut("/*infloop*/for(let \f__count__; new Array(*::*.throw\r(null)); 0) {{export *; }let (prototype =  \"\" , window = false) { /*infloop*/do {__iterator__, __parent__; } while(<x><y/></x>); } }");
tryItOut("/*infloop*/do {<y><z/></y>; } while([,,z1]);");
tryItOut("/*for..in*/for(let [__parent__, __parent__] = false || <x/> in <x><y/></x>) \fif(1.3) { if (({})) {} else continue L;}");
tryItOut("L:while(() && 0){export *;var prototype = arguments, __noSuchMethod__; }");
tryItOut("__count__\nL: {const __iterator__ = <y><z/></y>, prototype = __parent__;; }");
tryItOut("if(__count__ = (new Object( /x/g ,  '' ))) {/*for..in*/for(var (let(true)) in ((new Function)(<zzz> /x/ </zzz>))){{} } } else  if (((<><bbb xmlns:ccc=\"<><xxx {prototype}={*::*} /></>\"\t><ccc:eee></ccc:eee></bbb></>)[__noSuchMethod__ = <><x><y/></x></>])((new ((((<x/>)[<x><y/></x>].unwatch(\"prop\"))).call)(__count__, eval(\"(uneval([15,16,17,18].sort(<x//h\\n><y/></x>,  '' )))\", ((p={}, (p.z = *::*\n)()))))), (new Exception((({ get constructor(prototype, prototype)new -3/0(), <x><y/></x> getter: function (__noSuchMethod__, __count__) { false\f; }  })))))) { }");
tryItOut("L: //h\n{{}yield; const __iterator__; }");
tryItOut("if(new [15,16,17,18].filter(/a/gi, #1=[#1#])(__parent__)) return; else  if ( '' .__defineSetter__(\"function::__parent__\", function () { new Function } ) + (__iterator__+=(function ([y]) { })())) {throw StopIteration;(*::*); } else {(true);return 1e4; }");
tryItOut("if(__count__%=prop+=constructor ? (__noSuchMethod__.watch(\"function::__parent__\", (1 for (x in [])))) : gc(undefined).@*) { if ((prototype.__parent__ = ([prototype, ] = ((1 for (x in [])))(<x><y/></x>)))) /*for..in*//* nogeckoex bug 349964 */M: for  each(let (__proto__.prop) in 1.2e3.__defineGetter__(\"__iterator__\", #1#)) yield\n} else {{}{} }");
tryItOut("if(<><bbb xmlns:ccc=\"\twindow\"><ccc:eee></ccc:eee></bbb></>) constructor else  if ([, ({ prop: ({ __iterator__: __proto__ }) })] ? (eval(\"gc()\", <xxx>{constructor}</xxx>).__defineGetter__(\"__iterator__\", (1 for (x in [])))) : (prop.prototype)) {}");
tryItOut("/*infloop*/M:while(({__proto__: __noSuchMethod__.__proto__ = (({ constructor: __count__, __proto__: __noSuchMethod__ }) = (<x/>)[*::*]) })){break ; }");
tryItOut("gc() const __parent__;");
tryItOut("throw __proto__;");
tryItOut("/*infloop*/M:do {let (__count__ = @foo, prototype = prototype.(*)) { (__proto__.__proto__ = [,]); }export *; } while(((function::__count__ = __parent__ = @foo).valueOf(\"number\") + let (__noSuchMethod__ = window.yoyo(1e81), __iterator__ = [[1]])  /x/g .isPrototypeOf(this)));");
tryItOut("while((this = ({ __proto__: [], prototype: [, , ({ __proto__: [, ] }), ] })) && 0){throw <x><y/></x>; }");
tryItOut("/*infloop*/while()break M;");
tryItOut("yield [] = [({ constructor: ({ prop: __count__, __iterator__: prototype }), __proto__: __count__ }), [[], , , ]].__lookupGetter__(\"prop\");");
tryItOut("if(prototype >>> __count__ = 033) { if ((function (__iterator__, __parent__) { return <><x><y/></x></> } )( /x/g )) {return  ''  % <x><y/></x> &= <y><z/></y>; }} else {for(let y in [5,6,7,8]) gc()(true)\nexport prototype; }");
tryItOut(";");
tryItOut("yield constructor.valueOf(\"number\");");
tryItOut("switch(function(id) { return id }([[1]])\t ? <y><z/></y> : *::*.__lookupGetter__(\"__iterator__\")) { case 1: __iterator__;case 9: break;  }");
tryItOut("/*for..in*/M:\tfor(let __iterator__ = this.__defineSetter__(\"( \\\"\\\" .__noSuchMethod__)\", ((1 for (x in []))).call) in (p={}, (p.z =  ''  ? <y><z/></y> : 4. ? this : __noSuchMethod__ - undefined)())) { }");
tryItOut("M:if(.2) ( /x/g ); else  if ((window)) {return; } else {return 5.0000000000000000000000; }");
tryItOut("if((new (true)((true), <><x><y/></x></>))) {constructor = undefined, __proto__ = <><x><y/></x></>;var __iterator__; } else  if ('fafafa'.replace(/a/g, function (\n) { yield *::* } )--) {export __parent__; }");
tryItOut("/*infloop*/for(({__iterator__: <x><y/></x>,  get __count__(__proto__, yield) { yield function ([y]) { } }  })[prototype.__lookupGetter__(\"__count__\")].throw([(prototype|=true)].some(function ()<x><y/></x>)); (((<x/>).call(<><x><y/></x></>, null))); setter = prototype) {export prototype;{} }");
tryItOut("/*infloop*/while(<x><y/></x>)var prop = 0.1;");
tryItOut("/*infloop*/M:do {function (__count__) { return @foo }  } while((new 0/0(<x><y/></x>, <x><y/></x>)));");
tryItOut("yield <><x><y/></x></>\n");
tryItOut("if(3.141592653589793) { if (window.@foo) {yield;{} }} else return <><x><y/></x></>;");
tryItOut("/*for..in*/for(var __parent__ = (Math.pow).call(prop =  /x/ , new (true)(<y><z/></y>, (function ([y]) { })())) in <y><z/></y>) {yield undefined; }");
tryItOut("/*infloop*/for(const constructor;  '' ; (__iterator__.prototype setter= function  __count__ (__parent__)case 8: default: break; case [,]: export *;break; case 3: break; case undefined: break ;break; case 8: break; )) {throw  \"\" ; }");
tryItOut("if((uneval([1])).__defineGetter__(\"__proto__\", new Function)) {let (prototype = arguments) { while((window) && 0)throw constructor; }return; } else {export __parent__;(<!--yy-->); }");
tryItOut("yield 3.141592653589793;if(<x><y/></x> .@x:: <><x><y/></x></>) throw __iterator__; else /a/gi");
tryItOut("/*infloop*/for(var __iterator__;  '' ; 'fafafa'.replace(/a/g, Math.pow)) with({prop: })M:do return undefined; while((true) && 0);");
tryItOut("/*infloop*/for(const [, __iterator__, [({ constructor: constructor, __proto__: prop })]] = __parent__ = @foo; prop.__noSuchMethod__; new Function(<y><z/></y>)) gc()");
tryItOut("/*infloop*/for(const __parent__ = __parent__.__iterator__ = *; prototype = 1e+81; <>\t<x><y/></x></>) yield <x><y/></x>;");
tryItOut("return (<x><y/></x> <= <><x><y/></x></> for (prop in arguments)\t for (constructor in  '' ));");
tryItOut("/*infloop*/while(constructor = ({a1:1}))export *;\nif( /x/g ) <y><z/></y>; else  if ((1 for (x in []))) {throw <><x><y/></x></>; }\n");
tryItOut("if( \"\"  ? __parent__ : null) {(constructor);while((export *) && 0){yield [[1]]; } } else  if (((1 for (x in []))).call(eval(\"throw __iterator__;\", <x><y/></x>), * + null, [z1,,])) {L:with(([] &  \"\" ).eval( /* Comment */ '' ))var __noSuchMethod__; }");
tryItOut("/*infloop*/\fdo const __iterator__; while(__parent__ = [z1]--);");
tryItOut("/*for..in*/for(const [constructor, __proto__] =  { yield __noSuchMethod__ }  in (<x><y/></x>.*)) {gc(){var __noSuchMethod__, __proto__;var __iterator__, prototype = <x><y/></x>; } }");
tryItOut("/*for..in*/for(const [__parent__, __count__] = this | 1.2e3 in window instanceof ('haha'.split).call(__proto__, )) {let __parent__ = *::*; }");
tryItOut("do {/*for..in*//* nogeckoex bug 349964 */M: for  each(const (__proto__.(<x/>)) in 1.2e3) continue ;/*infloop*/for(let constructor; [function ([y]) { } for (__noSuchMethod__ in null)/*\n*/]; <><><!--yy--></></>.__proto__) (window); } while(([1,,]) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var false['__count__'] in (return <y><z/></y>)) M:if(prototype.__proto__ getter= Math.sin) {let (function::constructor =  '' ) { {} } }");
tryItOut("do {{}; } while(((p={}, (p.z = <x/>)())) && 0);");
tryItOut("throw __parent__;");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*/for(let ({ prop: ({ __count__: ({ __count__: __parent__, prototype: constructor }) }) }) in ((function ()(((<x><y/></x>.@*)--))())( /x/g )))yield;");
tryItOut("{switch(<x/> == <></>) { default: const __noSuchMethod__ = [z1];case 3: break;  } }");
tryItOut("if([15,16,17,18].map(-1, (#1=[#1#])[<x><y/></x>])) {let __proto__ = __proto__, prototype =  { return *::* } ; } else export *;");
tryItOut("/*infloop*/with({}) return;\n{(__parent__); }\n");
tryItOut("{\ncontinue ; }");
tryItOut("while(((-0)) && 0)function(q) { return q; }");
tryItOut("with(*.eval(this.__defineSetter__(\"prop\", function(y) { yield y; export *;; yield y; }) | constructor.prop setter= ({}).__lookupGetter__ !== new (4.)()))throw 033;");
tryItOut("/*infloop*/for(({ __noSuchMethod__: [] }) = (prototype = <x/>) ? (Function()) : 'fafafa'.replace(/a/g, (this).__defineSetter__); eval(\"__parent__.watch(\\\"prototype\\\", [1,2,3,4].slice)\",  '' .__lookupSetter__(\"prop\")); \n<><x><y/></x></>) {let null; }");
tryItOut("M:with([1,,]){return; }");
tryItOut("/*for..in*/for(const constructor = (new RangeError(null)) in (((__parent__ instanceof <><x><y/></x></>).__defineSetter__)(new ((true ? .2 : constructor ? __noSuchMethod__+=__proto__ : ((uneval(false)))))()\n)))yield;");
tryItOut("/*infloop*/for(const prototype; ({a1:1}); @foo) {throw ;return window; }");
tryItOut("if(<><xxx {__noSuchMethod__}={ '' } /></>) {/*infloop*/do {{}return; } while(1.2e3); } else  if (<x/>) break ;");
tryItOut("");
tryItOut("throw constructor;");
tryItOut("/*for..in*/for([constructor, prop] = window >>>=undefined in false) ([[]]);");
tryItOut("<x><y/></x>; const prop");
tryItOut("if(1.2e3 / __iterator__) yield *;");
tryItOut("/*for..in*/for(var [__proto__, prototype] =  in this.__defineGetter__(\"__parent__\", (constructor).apply)) /*for..in*/L:for(let [window, prop] = (constructor) in function ([y]) { }) {{} }(<x><y/></x>);");
tryItOut("return --( /x/g [prototype]);");
tryItOut("yield __iterator__ = this.eval((constructor = <x><y/></x>))\nM:do export __iterator__; while((new (<x><y/></x>)(<x><y/></x>, [])) && 0);");
tryItOut("yield null.eval(<><x><y/></x></>);");
tryItOut("switch(delete <!--yy-->) { case (3.141592653589793 ? ({}) : @foo): break; default:  /x/ \nbreak; __proto__break;  }");
tryItOut("/*for..in*/for(let [__iterator__, __iterator__] = prototype = this.__defineSetter__(\"__proto__\", new Function) in (prototype.__proto__ getter= window.prop = ( \"\"  ? <y><z/></y> : *::*))) {break M;yield; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__count__.prototype in this) let constructor;");
tryItOut("let (__iterator__) {  }");
tryItOut("while(((uneval(window))) && 0){const prototype;const prop = <x><y/></x>, prop = this; }");
tryItOut("if(<x/>) { if (export *;) {yield <x><y/></x>; }} else export *;");
tryItOut("while((<><x><y/></x></>) && 0){yield [];{} }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each((__proto__) in ) ( \"\" )");
tryItOut("/*infloop*/L:do export __parent__; while(typeof ({prototype: __proto__ = <><x><y/></x></>,  get prop __parent__ (prop, __iterator__) {  }  }));");
tryItOut(";");
tryItOut("break \nyield;");
tryItOut("switch( /* Comment */null\f) { default: export __proto__;break; case 7: break; /*infloop*/for(let prop; <y><z/></y>; undefined) {throw <y><z/></y>;continue ; }break; break;  }");
tryItOut("return  \"\" ;");
tryItOut("/*infloop*/for(constructor; <x><y/></x>.valueOf(\"number\"); prop = constructor) yield <><x><y/></x></>;");
tryItOut("{if(yield (constructor = __count__)\n) {var  if (1.3);yield <x><y/></x>; } else {prop, prop =  /x/g ; } }");
tryItOut("L: let __count__, __noSuchMethod__ = <x><y/></x>;\nyield  \"\" ;\n");
tryItOut("const __parent__ = function::prototype, prop = 3");
tryItOut("/*for..in*/for(let __proto__ = ([new (/a/gi)( '' )].filter(Math.pow)) in [,,]) prop = window, __noSuchMethod__");
tryItOut("/*infloop*/for((<x><y/></x>.valueOf(\"number\")); prop = prototype; new (prototype)(*::*)) {return;prop }");
tryItOut("{\f }");
tryItOut("while((<y><z/></y>.yoyo/*\n*/( \"\" ) !== false.unwatch(\"__noSuchMethod__\")) && 0){; }");
tryItOut("try { throw StopIteration; } catch(constructor if true.__defineSetter__(\"constructor\", new ( \"\"  , <y><z/></y>)((yield *)))) { yield  \"\" ; } finally { with({}) { for(let y in [5,6,7,8]) __proto__ = __proto__; }  } ");
tryItOut("this.zzz.zzz;");
tryItOut("if(*::*) { if ((({__parent__: <y><z/></y>, prototype: delete <x><y/></x> }).yoyo((__iterator__) = (*::*.__proto__ = (-0))))) {return;yield; } else if(constructor = __count__.__count__ =  \"\" ) {return @foo;let __proto__, __proto__; } else {break M; }}");
tryItOut("var __proto__, __noSuchMethod__ = <x><y/></x>;");
tryItOut("/*infloop*/while(prototype *= function(id) { return id })\texport constructor;");
tryItOut("let (__noSuchMethod__ = <><x><y/></x></>, __noSuchMethod__ = <><x><y/></x></>) {  }");
tryItOut("/*for..in*/for(prop in <x/>) {export prototype;yield; }");
tryItOut("");
tryItOut("/*infloop*/for(let __proto__; <x><y/></x>; (*)) <x><y/></x>\n__iterator__;");
tryItOut("let(prop, prop = true) ((function(){let [,,];})());");
tryItOut("/*infloop*/for(var prop; ~[__iterator__, ] = <y><z/></y>++; prototype) return <x><y/></x>");
tryItOut("/*for..in*/for(var __parent__ in __count__.__iterator__.__lookupGetter__(\"__noSuchMethod__\")) if(<x><y/></x>) {return <y><z/></y>; } else {const ;export prototype; }");
tryItOut("M:while((<><x><y/></x></>) && 0){yield; }");
tryItOut("do function(q) { return q; } while((arguments) && 0);");
tryItOut("if(#1=[#1#]) gc() else  if (<y><z/></y>) return  \"\" ; else {throw ({a2:z2});return; };");
tryItOut("__count__if(function (__iterator__)({ (<y><z/></y>)(this): __noSuchMethod__ }) = __parent__ = []) return; else  if (true) {yield window;gc() } else {;with({__parent__: null}){return  \"\" ;var prototype; } }");
tryItOut("if((new Error(<><x><\fy/></x></>))) ");
tryItOut("if(@foo %= null) { if ((this.zzz.zzz--)) {yield *; } else yield; const setter;}\n");
tryItOut("(true); const __noSuchMethod__;");
tryItOut("{/*for..in*//* nogeckoex bug 349964 */L: for  each(const (3)(<><x><y/></x></>) in 5.0000000000000000000000) yield  '' ; }\nwhile((@foo) && 0){}\n");
tryItOut("/*for..in*/for(var constructor = __noSuchMethod__ = (new ((1 for (x in [])))()) in ((new function(id) { return id })(({}).isPrototypeOf(__noSuchMethod__), -1.*))) function  __noSuchMethod__ (function::__parent__) { return *::* } ");
tryItOut("if(__noSuchMethod__) { if (*::*.eval(@foo)) ; else }");
tryItOut("M:while((null for (__iterator__ in window) -= @foo) && 0){switch(<x><y/></x>) { case undefined: break; const function::__iterator__ = __noSuchMethod__, __noSuchMethod__ = false;return #3={a:#3#};break; break; continue ;break; case true:  /x/ ;case 6: break; default: break; export __noSuchMethod__;break;  }const __iterator__; }");
tryItOut("with({__noSuchMethod__: ([11,12,13,14].map)})export __parent__;");
tryItOut("L:if((*::*.prop)) {if(\n{ }(prototype)) {(this); } else {; } } else  if (<xxx>{constructor}</xxx>) var __proto__;");
tryItOut("/*infloop*/M:while(window){([[1]]); } const __noSuchMethod__;");
tryItOut("L: {(<x><y/></x>); }");
tryItOut("{if(([] = (function ([y]) { })())) { if ((\n<x><y/></x>)()) {yield;yield *; } else return;} }");
tryItOut("with({prop: ({__noSuchMethod__: ([11,12,13,14].some).yoyo(1.3)})}){var __iterator__, __parent__; }");
tryItOut("/*infloop*/for((this.__defineSetter__(\"prototype\", (new Function(\"return __count__\\f;\")))); ((__count__ = this.__count__ =  '' ).__proto__); function(id) { return id }.propertyIsEnumerable(\"__noSuchMethod__\")) {return (undefined)();this; }");
tryItOut("L: gc()");
tryItOut("with(([@foo for (prop in <x><y/></x>)\r].unwatch(\"__noSuchMethod__\")))<x><y/></x>");
tryItOut("if( '' ) {{}{} } else  if (function ()(*::* <<= false)) {break M; } else return;");
tryItOut("/*for..in*/M:for(var __count__ = new (<><></></>)() in (-0)) ({ (({ set prop __noSuchMethod__ () { return *::* }  })).prop: ({ __iterator__: __iterator__, prop:  /x/g  || <x/> }) })");
tryItOut("let (constructor, ({ __iterator__: ({ __noSuchMethod__: 'fafafa'.replace(/a/g, function (prototype) { yield  /x/g  } ).__noSuchMethod__, \r__count__: ({ __iterator__: __noSuchMethod__ }) }), prop: ({ __noSuchMethod__: ({ __proto__: ({ prop: gc(), prop: ({ prototype: __noSuchMethod__, prop: __count__ }) }) }) }) }) = this.zzz.zzz) { do {throw [,,];\n } while(( /x/g  !== ({__count__ setter: [1,2,3,4].map, __parent__:  ''  })) && 0); }");
tryItOut("if(<x><y/></x>.@*) { if (new (undefined)((<x/>.watch(\"__noSuchMethod__\", Math.pow\f)))) yield;} else {;__proto__ }");
tryItOut("do {L:do {return; } while((<x><y/></x>) && 0);if(<><x><y/></x></>) { if ( /x/g ) {return;yield; }} else *; } while((<y><z/></y>) && 0);");
tryItOut("L: {gc()return; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let constructor in (undefined ^ this).eval(__iterator__)) {export *;(1e81); }");
tryItOut("{/*for..in*/L:for([prop, prop] = [null] in (-- /x/g )) ;/*infloop*/for(({ function::getter: __parent__ }) = this; (Array(((uneval(<x><y/></x>))))); (((({prototype: ~@foo})))(new *::* .@x:: <><\tx><y/></x></>.__lookupGetter__(\"__iterator__\")(( /* Comment */eval(\" \\\"\\\" \", <y><z/></y>)), ({__proto__ setter: __iterator__,  get __parent__(__iterator__) { return __count__ }  }))))) {yield;prop const prototype; } }");
tryItOut("function  __noSuchMethod__ () { return (window); } ");
tryItOut("prop = prototype;");
tryItOut("do {} while((*) && 0);");
tryItOut("L:if(*::* >>> @foo[1e+81]) {if(constructor.__count__ = <x/>) {continue ; }/*for..in*/for(var [__iterator__, constructor] = prototype in  '' ) return __noSuchMethod__; } else {; }");
tryItOut("/*infloop*/for(const [[[, , ({ prop: ({ __iterator__: __proto__, __iterator__: __iterator__ }), __parent__: [, , , , constructor] })], [({ __proto__: prototype }), , ({ __proto__: constructor, prototype: __iterator__ }), __count__], prototype, prototype, prototype], ({ constructor: [__noSuchMethod__, ({ __proto__: ({ prop: __parent__ }) })], __proto__: ({ each: __count__, __noSuchMethod__: [__parent__, 1e+81, [__count__, prototype, ], , ] }) }), ] = let (prop = <><x><y/></x></>)  \"\" ; [[ /x/g ].sort(gc)]; @foo ? null : ({a1:1})) /*for..in*/M:for((__noSuchMethod__) in (('haha'.split)(prototype.prototype))){/*for..in*/M:for(let prototype = 1e81 in -3/0) {; } }");
tryItOut("yield 1e4 >> prop;");
tryItOut("throw StopIteration;");
tryItOut("(uneval((({__parent__: __parent__ = <x><y/></x>.__lookupGetter__(\"prototype\")}))))['__count__']");
tryItOut("");
tryItOut("break ; const __iterator__;");
tryItOut("return (-0);");
tryItOut("L:if(<y><z/></y>.__noSuchMethod__ = <x/>) { if (({<{__count__}><ccc:ddd>yyy</ccc:ddd></{__count__}>: (uneval( '' ))})) {[1,2,3,4].slice } else (window).__defineSetter__}");
tryItOut("L: yield;");
tryItOut("/*infloop*/for(var constructor; __parent__.__count__ = <x><y/></x> >>>=constructor += <x/>; ({ prop: prototype }) = ((*::* for each (__parent__ in 5.0000000000000000000000)))) throw -0;");
tryItOut("(*)\nfor(let y in [5,6,7,8]) yield (-1);");
tryItOut("yield 0.1\n");
tryItOut("/*infloop*/M:\ffor(__parent__; #1#; {}.__lookupSetter__(\"constructor\")) /*for..in*/M:for(var set in <><x><y/></x></>) yield;");
tryItOut("continue L\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let ()((yield  \"\" )) in  /x/ ) {gc() }");
tryItOut("export *\nexport *;");
tryItOut("/*infloop*/for(let constructor;  /x/ ; <><x><y/></x></>) {continue M;function(q) { return q; } }if((false ? window : ({a1:1}))) { if ((<><x><y/></x></>)(<x/>)) {let <y><z/></y> = <><x><y/></x></>; } else {}}");
tryItOut("do ( /x/g ) while((1e81) && 0);");
tryItOut("if((<x><y/></x>\n)) {break ;let __noSuchMethod__; } else {if(*) { if (<x/>) {export __noSuchMethod__; }} else {(function(q) { return q; }).call{} } }");
tryItOut("/*for..in*/for(({ prototype: __count__ }) in ({ get __iterator__(__proto__, __proto__) { throw this; }  })) {L:if(this) continue M; else  if (<><x><y/></x></>) export *; else ; }");
tryItOut("/*infloop*/do {; } while(window.unwatch(\"__parent__\"));");
tryItOut("switch((this.__defineSetter__(\"__noSuchMethod__\", /a/gi))) { case 5: return;break; /*for..in*/L:for(const __iterator__ = (<y><z/></y>.@*) in <x><y/></x>) {yield;; }case 2: /*for..in*/M:for(let [prop, prototype] = this in <y><z/></y>) export *;/*for..in*//* nogeckoex bug 349964 */ for  each(const prototype*)  }");
tryItOut("let (__parent__) { const constructor = [z1]; }");
tryItOut("/*for..in*/for(var __iterator__ in constructor) {;__iterator__, prop = #1=[#1#]; }");
tryItOut("continue L;");
tryItOut("/*for..in*/for(var [__parent__, prop] =  ''  for (function::__noSuchMethod__ in false) in <x><y/></x>) ");
tryItOut("with(undefined){return  /x/ ; }");
tryItOut("L: return;");
tryItOut("with(((uneval([[1]]))))yield;");
tryItOut("try { return /*for..in*/M:for(const [function::__proto__, __proto__] = undefined in {}) return <y><z/></y>; } catch(prototype) { this.zzz.zzz; } ");
tryItOut("while(((new true()__noSuchMethod__)[*]) && 0)with((++(undefined.propertyIsEnumerable(\"constructor\").__lookupSetter__(\"__iterator__\"))))\n");
tryItOut("do {/*infloop*/for(( '' .@*); (__proto__.prototype = <x><y/\t></x>); ( \"\" )[ /x/g ]) {/*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in <><x><y/></x></>) {yield this; } } } while((__noSuchMethod__ = __count__.__lookupGetter__(\"__iterator__\")) && 0);");
tryItOut("break \n\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(__proto__ in <><x><y/></x></>) {export *;function  __iterator__ () { window }  }");
tryItOut("/*infloop*/L:while((({__count__: <x><y/></x>})) ^ <y><z/></y> ? null :  /x/ ){yield;/*infloop*/while(<y><z/></y>)gc() }");
tryItOut("(__count__);");
tryItOut("with({__parent__: prop =  \"\"  ? undefined : \n((<><x><y/></x></>).watch).call(constructor,  \"\" ,  \"\" )}){/*for..in*/for(var prototype.prop in ) {let case 6: break; let __count__, function::__iterator__ =  /x/g ;throw <y><z/></y>;break; case <x><y/></x>: yield;break; case <x/>: let __parent__ = this, __count__;default: let prototype =  /x/ , __iterator__ = function  __parent__ (prototype) { return __iterator__ = prop } ;case 0: return;case 5: ; }throw [z1]; }");
tryItOut("{L: {} }");
tryItOut(" /x/ ");
tryItOut("let(__noSuchMethod__) { ");
tryItOut("yield (1 for (x in []))();");
tryItOut("if((__noSuchMethod__ = window)) {(this);/*infloop*/for(const __count__ = constructor; <x><y/></x>; (-1)) (<><x><y/></x></>); } else  if (false <<= <><x><y/></x></> > <x/>\n.__noSuchMethod__) yield [[]];");
tryItOut("/*for..in*/for(var [__parent__, constructor] = __noSuchMethod__ in <><x><y/></x></>) export prop;");
tryItOut("/*for..in*/M:for(let (void 3/0)['constructor'] in \f({__proto__:  '' , prototype setter: Error(, (-1)) })) return;return  \"\" .isPrototypeOf(3/0);");
tryItOut("let (__noSuchMethod__ = arguments) { ; }");
tryItOut("do if(window.unwatch(\"__parent__\") %=  /x/ ) {export __proto__; } else yield; while((\t<><x><y/></x>[<y><z/></y>]</>.([constructor = <x><y/></x>])) && 0);");
tryItOut("do this while((@foo) && 0);");
tryItOut("/*infloop*/for(let __count__ = (break .__parent__); (Error() ?  : (yield null.unwatch(\"get\"))); <> </>) \rif((null for (__count__ in true))) return;");
tryItOut("gc()");
tryItOut("{let prop; }");
tryItOut("if(0.1) ; else  if (prototype) return;");
tryItOut("with({constructor: let (prop = * - (-1)) new null()})return;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __proto__ in ({ get constructor(prop) { yield <x/> }  })) case (let (<x/>) prop): break; ");
