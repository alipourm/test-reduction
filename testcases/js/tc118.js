tryItOut("throw StopIteration;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(const __proto__ in ( /x/g .throw(<x><y/></x>).__lookupGetter__(\"__parent__\"))) {with({}) return;let (__count__ = ('fafafa'.replace(/a/g, [1,2,3,4].map))) { __iterator__; } }");
tryItOut("L:switch((__proto__.prototype = ( /x/  .@*:: -1))) { case [, []] = (<x><y/></x>.(<x><y/></x>) .@*:: (__iterator__ ? [,,z1] : 0.1)).@foo: return (this.zzz.zzz);default: return <x><y/></x>\ncase ((this.__defineSetter__(\"__proto__\", <><x><y/></x></>)).__defineSetter__(\"__iterator__\", (new Function(\"const __noSuchMethod__ = #3={a:#3#};\"))))--: break; export *;if(*) return  \"\" ;case 4: L: {var __noSuchMethod__ = <x><y/></x>;constructor = <><x><y/></x></>, __count__ = 1.2e3; }case 6: return  '' ;case 4: break;  }");
tryItOut("if(new (([window].filter(({}).hasOwnProperty)))((undefined in __count__), true)) { if ((yield (({}).hasOwnProperty)(@foo))) throw <x><y/></x>; else {yield (-1);yield; }}");
tryItOut("return; const __noSuchMethod__;");
tryItOut("L: gc()");
tryItOut("/*infloop*/L:for(let constructor; prop; <y><z/></y>constructor) throw <x/>;\nyield <y><z/></y>;\n");
tryItOut("(*);");
tryItOut("with({}) return (__parent__ if (true));");
tryItOut("/*infloop*/for(let __parent__; *.__proto__; #2=({__iterator__: [,,z1]})()) {with(){yield null;yield; } }\n/*for..in*/for(var __count__(false) in *) {3; }\n");
tryItOut("/*infloop*/while(function ([y]) { }){yield *;var prop, prototype = true; }");
tryItOut("throw StopIteration;");
tryItOut("L:while((({a2:z2}).@foo *  /x/g .__defineSetter__(\"constructor\", <y><z/></y>)) && 0){{{}constructor, __count__ = <><x><y/></x></>; }yield; }");
tryItOut("{do M:if(this) {} else  if (<><x><y/></x></>) {yield; } while(((<x><y/></x>.valueOf(\"number\"))) && 0); }");
tryItOut("for(let y in [5,6,7,8]) let(__parent__ = (this.__defineGetter__(\"prop\", [1,2,3,4].map))) ((function(){__noSuchMethod__ = __iterator__;})());");
tryItOut("L: yield this;");
tryItOut("/*infloop*/M:for(__noSuchMethod__ = 1e4 &= [1,,]; *.__lookupGetter__(\"__noSuchMethod__\"); null.throw( \"\" )) {}");
tryItOut("var __proto__\n(*);");
tryItOut("/*infloop*/for(let constructor; <><> </></>; 'fafafa'.replace(/a/g, (1 for (x in [])))) if( /* Comment */.2) {var prop = <><x><y/></x></>, __proto__;yield prop; } else  if ((let (__proto__ = <x><y/></x>) <><x><y/></x></>.valueOf(\"number\"))) throw 1e81");
tryItOut("__parent__");
tryItOut("L: yield <><x><y/></x></>");
tryItOut("{if( \"\" ) { if (<x/>) {return -3/0; }} else {return <x><y/></x>;yield this; } }");
tryItOut("yield <><x><y/></x></>");
tryItOut("/*for..in*/for(var [__noSuchMethod__, __count__] = __noSuchMethod__ in ('fafafa'.replace(/a/g, ( ''  ? true : prop)))) with({}) { prop = __count__; } ");
tryItOut("");
tryItOut("switch(__parent__ = true.__iterator__) { case : break; break; /*infloop*/while(prop){return; }default: case typeof 1.3: const (undefined + window); }");
tryItOut("if(__noSuchMethod__ in window) {; } else  if (([, ({ __proto__: __parent__ }), , __proto__, prototype] = <></>)) {__proto__ = this;__noSuchMethod__; }");
tryItOut("return (this.__defineGetter__(\"__proto__\", eval));");
tryItOut("yield (p={}, (p.z =  /x/ )());");
tryItOut("if(/*\n*/#3={a:#3#}) { if (({__count__: undefined.__noSuchMethod__})) break ;} else {return; }");
tryItOut("*::*; const  set __noSuchMethod__ function::__proto__ (__parent__, ({ prop: __count__, prop: __parent__ })) { yield __count__-=[(true.propertyIsEnumerable(\"__parent__\")) for each (__proto__ in (function ([y]) { })()) if (<x><y/></x>)] } ;");
tryItOut("with({prototype: [(function ([y]) { })() for (__parent__ in constructor)]})continue ;");
tryItOut("return this;");
tryItOut("/*infloop*/\fdo __parent__ while( /x/g );\nexport prop;\n");
tryItOut("/*infloop*/while((yield <x><y/></x> |= [1]))[1,2,3,4].map");
tryItOut("/*infloop*/while((<x><y/></x>.__iterator__.constructor = ((<x/>)(undefined, <><x><y/></x></>)) = Exception())){/*infloop*/for(({ __count__: __parent__ }) = new (function(y) { yield y; continue L;; yield y; })(); (yield __count__); (this.zzz.zzz)) {__parent__ = <><x><y/></x></>, __count__ } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__noSuchMethod__ in <x><y/></x>) export *;");
tryItOut("with({}) yield (\n({ __noSuchMethod__: prototype, __count__: __noSuchMethod__ }) = window + __noSuchMethod__);");
tryItOut("/*for..in*/for(let __proto__ = <x/>.yoyo(1e4) in false) yield __noSuchMethod__;");
tryItOut("{gc()export prop; }");
tryItOut("/*infloop*/M:for(<x><y/></x>; <><x><y/></x></>;  /x/g ) {yield;return; }");
tryItOut("switch() { case 0: { }break; ;break;  }");
tryItOut("/*infloop*/L:while(true){/*infloop*/for(var __parent__; <><x><y/></x></>; .2) {return;; } }\n");
tryItOut("");
tryItOut("throw true;");
tryItOut("with({}) throw StopIteration;");
tryItOut("with({prop: __count__}){gc()<!--yy--> }");
tryItOut("with((p={}, (p.z = ({__iterator__: (new Iterator(<><xxx>{prop}</xxx></>, __proto__ = __parent__)), __noSuchMethod__: (@foo /= <y><z/></y>.unwatch(\"__iterator__\") >> [] = (let (__noSuchMethod__) new (true)(prototype, <><x><y/></x></>).throw(<><bbb xmlns=\"(-0)\"><x><y/></x><x><y/></x> </bbb></>))) }))())\t){export *; }");
tryItOut("L: {/*for..in*/for(let prototype = ('fafafa'.replace(/a/g, ({}).hasOwnProperty)).hasOwnProperty(\"__count__\") in (({__parent__ setter: function  prototype (__noSuchMethod__, __noSuchMethod__) { {} }  }))) {if(function  prototype (function::__parent__) { return <x><y/></x> } ([z1])) { if (<x><y/></x> += 3.141592653589793) {} else gc()} }\nthrow #0=[ \"\" ];\n }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __proto__.x::__proto__ in null) {(this);export __proto__; }");
tryItOut("/*infloop*/for(var ({ prop: prototype, prop: __noSuchMethod__ }) = <y><z/></y>.__defineSetter__(\"__noSuchMethod__\", null); __noSuchMethod__.__parent__ = this; this) {yield false;; }");
tryItOut("switch((\n<><x><y\t/></x></>)) { case 2: break; case new (true).__defineSetter__(): window;break;  }");
tryItOut("new Function");
tryItOut("L: {if((-0)) {gc() }yield <x><y/></x>; }");
tryItOut("if(({}.__parent__ =  \"\" \n in new prototype(<x><y/></x>--))) { if ((({prop: ((new Function(\"<><x><y/></x></>;\")))(<x><y/></x>, *), function::__noSuchMethod__: __noSuchMethod__.__proto__ = ((new Function).call(let (__count__) <y><z/></y>, )) }))) /*for..in*/for(let prototype = <><x><y/></x></> in #1=[#1#]) return; else /*for..in*//* nogeckoex bug 349964 */ for  each(__parent__ in constructor) return setter;}");
tryItOut("return <y><z/></y>;switch([1,,]) { case 6: const __iterator__, __count__;default:  }");
tryItOut("/*infloop*/do  while((p={}, (p.z = [1,,])()));");
tryItOut("let (__noSuchMethod__) { true for each (\t__count__ in <><x><y/></x></>) if (<x/>) @ prop }");
tryItOut("/*for..in*/L:for(var [ { return (!<><x><y/></x></> ^ 3/0 .@x:: \n '' ) } , __count__] = (function ([y]) { }.__lookupGetter__(\"prop\") >>>=constructor = ([1,2,3,4].slice).apply || (__iterator__.isPrototypeOf( '' ))) in \n(yield [<y><z/></y> for each (__noSuchMethod__ in <><x><y/></x></>)]).isPrototypeOf(new new Function((constructor ? undefined : <ccc:ddd><ccc:ddd>yyy</ccc:ddd></ccc:ddd>)))) throw StopIteration;");
tryItOut("/*for..in*/M:for(var constructor in ((function(q) { return q; })(([<x><y/></x>].map((true).__defineSetter__)).eval('fafafa'.replace(/a/g, new Function) , <x><y/></x> | (<x/> ? this : null).prop))))if(false) { if (constructor) {}} else ");
tryItOut("if(<x/> if (<x/>)) { if (__proto__(this)) let *, __proto__ = @foo;} else {let __count__; }");
tryItOut("{return false; } const __parent__;");
tryItOut("L:if(yield ([window].filter(new Function))) {yield ; } else with(new [1,2,3,4].slice(__iterator__)){[1,2,3,4].map{} }");
tryItOut("/*infloop*/for(__noSuchMethod__; (yield (#0=({prop: <x/>}))); __noSuchMethod__ = this if (@foo)) {/*for..in*/for(let  { return eval(\"undefined ? null : #1#\", null << null) }  in 4.) var prototype = <x><y/></x>; }");
tryItOut("while((<><>yyyyyy</></>) && 0){with({__count__: (undefined = null)}){;return <><x><y/></x></>, <x><y/></x>; }if(([15,16,17,18].map(function (constructor) { yield this } , <y><z/></y>))) throw true; else {return -0; } }");
tryItOut("if(<><x><y/></x></>) {export __noSuchMethod__;throw <y><z/></y>; } else return;");
tryItOut("L: if(3/0) {return <y><z/></y>; } else  if \r(<x><y/></x>) {return ({a2:z2});false; } else let __count__ =  \"\" , function::__iterator__ = null;");
tryItOut("try { __noSuchMethod__ = __count__; } finally { return prototype.prototype = try { {} } catch(__count__ if (function(){throw  /x/ ;})()) { return null; } catch(__noSuchMethod__ if (function(){const __iterator__ = window;})()) { return  /x/ ; } catch(__proto__) { (this); } ; } ");
tryItOut("if( /* Comment */<y><z/></y>) { if  prop(new ((<><x><y/></x></>).__defineSetter__)().__count__ = *) prop}");
tryItOut("return ( '' .__noSuchMethod__ = #1#);");
tryItOut("{/*for..in*/for(var [__proto__, prototype] = -<y><z/></y> in window) ;/*for..in*/M:for((prototype) in <y><z/></y>) {} }");
tryItOut("let (__proto__ = ((#3={a:#3#})( /x/g )), constructor = <><x><y/></x><ccc:ddd>yyy</ccc:ddd></>) { with({}) { prototype = window, __iterator__; }  }");
tryItOut("yield ({});");
tryItOut("if((#2= /x/g )) { if ((__noSuchMethod__ = 3.141592653589793))  \"\" ;} else yield <y><z/></y>;");
tryItOut("{throw undefined;\f;; }");
tryItOut("if({}) {yield @foo;export __parent__; } else  if ([[]].@*) <><x><y/></x></>; else {break L; }");
tryItOut("/*for..in*/M:for(let (x::prop) in <y><z/></y>.watch(\"prop\", Function)) {return 0; }");
tryItOut("this.zzz.zzz;do {var prototype; } while((([,].valueOf(\"number\"))) && 0);");
tryItOut("this.zzz.zzz;");
tryItOut("let(__parent__, [, set, ([,])(true), ]) ((function(){try { return *::*.constructor = .2; } finally { throw __noSuchMethod__; } })());");
tryItOut("L:with({constructor: <><xxx {prototype}={(prop = window)} /></>})gc");
tryItOut("/*for..in*/for(__noSuchMethod__.prototype in *) yield;");
tryItOut("/*for..in*/for(var setter in getter) {");
tryItOut("/*for..in*/for(var __proto__ = [[[]] for (<><x><y/></x></> in @foo)] &= new window(<><x><y/></x></>) in [,,]) do {continue ; } while(( \"\" ) && 0);");
tryItOut("Math.pow");
tryItOut("/*for..in*/L:for(let __count__ = ([prop]) in ('fafafa'.replace(/a/g, [1,2,3,4].slice)).__proto__) {if( /* Comment */ '' ) yield; else {return false; }throw 3 = ([11,12,13,14].some); }");
tryItOut("yield <><x><y/></x>\t</>\nyield;");
tryItOut("/*infloop*/for((3.141592653589793.__noSuchMethod__); [5.0000000000000000000000()].filter(__noSuchMethod__|=undefined);  /* Comment */((constructor))) {const __noSuchMethod__;/*infloop*/L:for(const __count__; false; <><x><y/></x></>) gc() }");
tryItOut("let (yyy, prop = <><x><y/></x></>) { yield; }");
tryItOut("/*infloop*/L:do {} while((this.zzz.zzz) instanceof ({ prototype: ({ prop: ({ prototype: constructor, prop: prototype }) }), __count__: [({ prop: delete, prototype: __parent__ }), , ({ prop: __parent__, prop: setter }), , ] }) = *, __noSuchMethod__);");
tryItOut("let(__noSuchMethod__) { export __parent__;");
tryItOut("return;");
tryItOut("/*infloop*/for(<> </>; null; constructor%=__count__) if(window) gc else  if (033) ");
tryItOut("{yield; }");
tryItOut("/*infloop*/for(__parent__; 'fafafa'.replace(//g, Function); ) {while(((uneval(__iterator__))) && 0){/*for..in*//* nogeckoex bug 349964 */ for  each(prop in <x><y/></x>) {export __parent__; } } }");
tryItOut("/*infloop*/L:for(#3={a:#3#} , <y><z/></y>; (__parent__.__count__ getter= Math.sin); (p={}, (p.z = <><x><y/></x></>)())) {{} }");
tryItOut("while(((<><x><y/></x></> ^ true)) && 0){(({}));const prototype, __proto__ = <><x><y/></x></>; }");
tryItOut("{return window;(<><x><y/></x></>); }");
tryItOut("with((<><x><y/></x></>--))while((try { break M; } catch(prop) { (<x><y/></x>); } ) && 0)");
tryItOut("/*for..in*/for(const __parent__ = (null.hasOwnProperty(\"__count__\")) in true) const __count__;");
tryItOut("/*for..in*/for(let x::__parent__ in constructor) gc()");
tryItOut("/*infloop*/for(eval(\"const constructor;\", false.hasOwnProperty(\"x::__noSuchMethod__\")); *::* & [new RegExp( /x/ , null) for (__proto__ in function ([y]) { })]; ((undefined['function::prop'] = prototype = __iterator__) for each (prototype in //h\nwindow[<y><z/></y>]) if ((-1)))) do {} while((*) && 0);");
tryItOut("if((__proto__.__proto__ = (__parent__.prototype))) {const constructor = <><x><y/></x></>, prototype;/*infloop*/do {return; } while({}); } else *::*;");
tryItOut("/*infloop*/M:do {; } while(this.__iterator__);");
tryItOut("throw <x><y/></x>\nif(<><x><y/></x></>) ; else continue ;");
tryItOut("if((<x><y/></x>.(window) && () & [15,16,17,18].filter(function (__parent__, __noSuchMethod__) { yield <x><y/></x> } , throw <x><y/></x>).__defineGetter__(\"__proto__\", gc))) {}");
tryItOut("with({constructor: function (__proto__) { return this } })*::*");
tryItOut("yield");
tryItOut("L:with(prop.@foo.__iterator__){( \"\" );/*infloop*/M:do (new Function(\"*;\")) while(__proto__); }");
tryItOut("switch(<x/>) { default:  }");
tryItOut("if((3.141592653589793[[]] != * === 5.0000000000000000000000)) { if ((eval(\"@foo\",  /x/g ))) return undefined; else while(([z1,,]) && 0){var __parent__, constructor;return  '' ; }}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__ in  '' ) yield <x><y/></x>;");
tryItOut("gc()yield 4.;");
tryItOut("/*infloop*/M:for(const __iterator__; (<><><x><y/></x></></> >> constructor.__count__ -= <y><z/></y>); new (<y><z/></y>)(<><x><y/></x></>).__parent__) {return; }\n(<x><y/></x>)\nbreak L;\n");
tryItOut("while((prototype = constructor) && 0)/*infloop*/for(var __count__; constructor; null) \n4..__proto__break ;");
tryItOut("switch([, , constructor] = ({\f[__parent__, , __iterator__, constructor] getter: (1 for (x in [])),  get prototype __noSuchMethod__ (prototype) { return <><x><y/></x></> }  })) { case (__noSuchMethod__-=(function ([y]) { })().constructor): gc() /x/ ; }");
tryItOut("/*for..in*/L:for(let __parent__ = (new function(id) { return id }(window, prop)) in __parent__) gc()");
tryItOut("L: ");
tryItOut("{return <x><y/></x>; }\nlet(prototype) { ;\n");
tryItOut("/*infloop*/while((* % 0x99) ? (__noSuchMethod__ = (-1)) : 'fafafa'.replace(/a/g, undefined))with(<y><z/></y>)(<y><z/></y>);");
tryItOut("do {/*for..in*/for(const [constructor, getter] = yield [,] in __parent__ = *) {export prototype;(*::*); } } while(([__iterator__, , __parent__] = __parent__.__noSuchMethod__) && 0);");
tryItOut("let(__parent__) { const x::__iterator__;");
tryItOut("{export *;yield; }");
tryItOut("let (constructor, prototype = undefined) { export *; }");
tryItOut("L: {;if(null) { if ( \"\" )  else return this;} }//h\n");
tryItOut("L: /*for..in*/M:for(var __parent__ in [11,12,13,14]\n.filter) (window);");
tryItOut("while((([, , ] = (constructor.(this)))) && 0){var  { yield <x/> }  = #1=[#1#]; }");
tryItOut("/*for..in*/M:for(constructor in (([1,2,3,4].map)(__iterator__|=<x><y/></x>))){}");
tryItOut("throw StopIteration;");
tryItOut("/*infloop*/for(constructor; prop+=(__count__ = 1e-81); eval(\"if(true) { if (.2) {yield ;const __count__ = <><x><y/></x></>; } else {function () ''  }}\", (({}).__lookupGetter__)(<x/>, [,]))) {yield <y><z/></y>; }");
tryItOut("/*for..in*/for(let prop in {/*infloop*/while(this){yield (-1);\f__proto__ = <x/>; }with(__parent__){continue ; } }(({}).__lookupGetter__)(prototypeprop = <x><y/></x> ? ([11,12,13,14].filter) : ((uneval(prototype.__proto__ = *))))))let (__parent__, __iterator__) { yield; }");
tryItOut("M:with(new String([1], [[1]]))M:if(@foo.unwatch(\"prop\")) const prototype = <x><y/></x>; else  if \t(__count__ = false) {(<x><y/></x>); } else {true; }");
tryItOut("prototype");
tryItOut("/*for..in*/L:for( /x/  in ((([]).watch)(true)\t)){throw -3/0;throw __proto__; }");
tryItOut("/*infloop*/L:for([] = [,,].__lookupSetter__(\"__iterator__\"); ([15,16,17,18].sort(function(y) { yield y; return;; yield y; }, __noSuchMethod__))-- for each (__noSuchMethod__ in [,] /= @foo) for (__parent__ in  \"\" ) for (prototype in <y><z/></y>) if (this); (function (__parent__, __iterator__)'fafafa'.replace(/a/g, function(y) { yield y; return  /x/g ;; yield y; }))((let (__parent__ = <x><y/></x>, __proto__) [[1]] - (__noSuchMethod__ = <x><y/></x>)), 'fafafa'.replace(/a/g, <><x><y/></x></>))) switch( /x/ ) { case 8: return window; }\nreturn;");
tryItOut("; const __iterator__;");
tryItOut("{/*for..in*//* nogeckoex bug 349964 */M: for  each(var prop in <x/>) __noSuchMethod__; const __iterator__; }");
tryItOut("return;");
tryItOut("/*for..in*/M:for(const constructor in eval(\"break ;\", window)) {return  \"\" do {gc( /x/ ); } while(((__proto__ = <y><z/></y> for each (__proto__ in this) if (@foo))) && 0); }");
tryItOut("__iterator__ = prop;");
tryItOut("/*infloop*/for(({ __iterator__: ({ __proto__: prop }) }) = (window !== null); (new (function(y) { yield y; export __noSuchMethod__;; yield y; })(@foo, <x><y/></x>));  '' \n) if(-1) { if (({})) { }\f else {yield true; }}");
tryItOut("L: if(<y><z/></y>) { if (({prop: false @ __parent__})) {var prop = <x><y/></x>; }} else {return; }");
tryItOut("/*for..in*/for(constructor =  /x/g  !=  \"\"  === <y><z/></y> in __noSuchMethod__) with({__proto__: <><x><y/></x></>( /x/g )})(@foo);");
tryItOut("while((__count__.(prototype) instanceof __count__) && 0){yield (.2[<x/>]); }\n");
tryItOut("do {L:if([]) return; else {__count__ = <x><y/></x>, prop;yield null; }[1,,]; } while(((((function ([y]) { })().propertyIsEnumerable(\"__parent__\")).__lookupSetter__(\"__proto__\").__lookupGetter__(\"__count__\"))) && 0);");
tryItOut("/*for..in*/for(const [delete, <x/>] = ([(-0)]) in undefined) { /x/ ;yield; }");
tryItOut("let (({ prop: prop, prop: __parent__ }) = [1,,] !== false) { const \tprototype = <x><y/></x>; }");
tryItOut("({});");
tryItOut("/*infloop*/L:for(var __count__ = [1,,].@*.__count__; (<bbb xmlns:ccc=\" /x/g \"><ccc:eee></ccc:eee></bbb>); ((yield (this.zzz.zzz)))) {/*infloop*///h\nfor(({ __noSuchMethod__: constructor\f }) = (new (<x><y/></x>)(5.0000000000000000000000, <x/>)); __proto__.__lookupGetter__(\"__noSuchMethod__\"); this.__defineGetter__(\"constructor\", 1e4)) return #1#\nreturn;L:if((<><x><y/></x></> >> this)) { if (eval(\"/*infloop*/for(const prototype; [z1,,]; this) {__count__, __iterator__ }\", (({__proto__ getter: function  __iterator__ (constructor, __parent__) { return <x><y/></x>\t }  })))) {export *; } else {return false; }} }");
tryItOut("while((@foo) && 0){yield; }");
tryItOut("if(( '' .__noSuchMethod__ = __proto__)) if(this.yoyo(<><x><y/></x></>)) {__noSuchMethod__ = 5.0000000000000000000000, prototype; } else  if (window) {;(3.141592653589793); } else  if (([[].__lookupSetter__(\"prop\") != prototype = <\t><x><y/></x></> for each (prop in  /* Comment */*::*.*)])) /*for..in*/M:for(var constructor = <x/>.@* in prototype) {return <x/>; } else {with({prototype: this})let constructor = <x><y/></x>; }");
tryItOut("if(({constructor: __noSuchMethod__%=false })) \t{(1e81); } else  if (__parent__ = null.yoyo(*::*).__lookupSetter__(\"__iterator__\")) \f(<x><y/></x>); else \t\n__proto__ = *::*, __iterator__ = undefined;");
tryItOut("if((yield prop ?  \"\"  : @foo)) { if ((@foo for each (constructor in true)).constructor = ('fafafa'.replace(/a/g, [1,2,3,4].map)) ? [this if ( /x/g )].__noSuchMethod__ = \n(yield #3={a:#3#}).throw((function ([y]) { } for (__proto__ in *::*))) : prototype = prototype()) {return __noSuchMethod__;; } else /*for..in*/for(__parent__ in ((function  prototype (__parent__, getter) { yield prototype } )(0/0))){continue ;(this); }}");
tryItOut("/*for..in*/for(const __proto__ = __noSuchMethod__.__parent__ = (<x><y/></x> %= #1=[#1#]).throw((window || [,,z1])\f).__count__ = (this.watch(\"__proto__\", eval) = \nfalse) /= (<x/> &=  \"\" ) in true) {gc()/*for..in*/L:for(__proto__ in ((eval)(( /x/g  === this)))){gc()Math.pow } }");
tryItOut("export *;break M;");
tryItOut("switch(constructor) { case 9: case 3: gc() }");
tryItOut("/*infloop*/for(-- /* Comment */new null([1,2,3,4].slice); new ((Math.sin).apply)().throw(( \"\"  @ window) * new (function (__proto__, __parent__) { return window } )(<><x><y/></x></>)); (uneval(.yoyo((__count__ = 033.__defineGetter__(\"__iterator__\", ({}).__lookupGetter__)))))) {\nlet __parent__, __iterator__;#1#;\nthrow <x/>;\n }");
tryItOut("let (constructor, ({ prototype: [, ] })) { throw window; }");
tryItOut("if(window) {L:if(__iterator__.__parent__ = ({__count__ getter: function(q) { return q; } })) yield\n else Function }");
tryItOut("with(yield ({__proto__ setter: ({}).__lookupGetter__ }))switch(0/0) { default: break;  }");
tryItOut("try {  } catch(__iterator__ if undefined) { __parent__ = __iterator__; } catch(prop if //h\n(function(){return;})()) { export __iterator__; } return  '' ;");
tryItOut("export *;");
tryItOut("if(@foo if (window)) {{} } else  if (<x><y/></x>++) {L:with({prop: <x/>}){; } }");
tryItOut("let __noSuchMethod__ = [[]], prototype; const ({ __count__: try { let(__parent__ = prop; = <x><y/></x>) ((function(){;})()); } finally { __noSuchMethod__ = getter; }  });");
tryItOut("/*infloop*/M:for(let __parent__; * ?  ''  : <><x><y/></x></>; ( ''  ? constructor : false)) {/*infloop*/for(let ({ __iterator__: [constructor, , constructor] }) = yield 0.1; <x><y/></x>.([z1]); let (constructor = <><x><y/></x></>) \r__noSuchMethod__ << true) export __noSuchMethod__;M:if([z1,,]) { if (<x><y/></x>.@foo) ;} else const __proto__ = <x><y/></x>; }");
tryItOut("/*infloop*/M:for(const constructor = constructor.prop = this.__defineGetter__(\"__parent__\", (prototype = <x/>).watch); this.zzz.zzz; (<x/>)({}) = false) {__count__ = constructor; const __count__; }");
tryItOut("with((-0)){prototype, __noSuchMethod__;const get; }");
tryItOut("L: {let(prototype, __count__ = (-1)) { {}M:do constructor = [[]], __parent__ = this; while(((* <= [[]])) && 0); }");
tryItOut("if(({a2:z2})) throw  '' ; else  if (window) export *; else break ;");
tryItOut("if( \"\"  >> -__count__) {/*for..in*/M:for(let [__count__, prop] = (({ __count__: constructor }) = /*\n*/__proto__ =  \"\" ) in Number(__iterator__, <><x><y/></x></>)) {constructor, constructor = <x><y/></x>;/*for..in*/for(const prototype in <x><y/></x>) {({}).__lookupGetter__ } } } else  if (((delete __parent__ = constructor) = prototype =  '' (({x::__iterator__: @foo })))) {(@foo.propertyIsEnumerable(\"__proto__\")); }");
tryItOut("while((<y><z/></y> %= #3={a:#3#}) && 0){continue L;let __noSuchMethod__ = function ([y]) { }; }");
tryItOut("/*for..in*/for(const null.__parent__.get in ((((1 for (x in []))).call)([11,12,13,14].sort)))(-0);");
tryItOut("M:if(__proto__.prop === (__proto__ >>= window)) if(false) {break ;; } else  if ([true].filter(function(q) { return q; })) {(<><x><y/></x></>);__count__ }");
tryItOut("return;");
tryItOut("");
tryItOut("with({__iterator__: window}){gc()__proto__, __proto__; }");
tryItOut("/*infloop*/do L:if(undefined) { if ((({__count__ setter: (1 for (x in [])), __proto__: (-0) }/*\n*/)())) var prop; else return;} while((@foo *= <x/>).propertyIsEnumerable(\"__count__\"));");
tryItOut("M:if(([1,2,3,4].slice)(5.0000000000000000000000, (true if (<x><y/></x>)))\n) { if ((*::* ? ('haha'.split)((<y><z/></y> in prototype)) : ({__count__: (<y><z/></y>)(), __noSuchMethod__: (* ? window :  '' ) }))) {(function ([y]) { })(); }} else L:with((null)[<><x><y/></x></>])gc()");
tryItOut("const prop;");
tryItOut("L:if(new Boolean(new  /x/g (-1))) ; else  if ((p={}, (p.z = (prototype = 033))())) let __iterator__;");
tryItOut("while((new Date()) && 0)([1,,]);");
tryItOut("/*for..in*/for(prop in ((function (__iterator__, prop) { return prototype } )(window.valueOf(\"number\"))))");
tryItOut("throw StopIteration;");
tryItOut("do yield; while(([,,z1]) && 0);");
tryItOut("/*for..in*/M:for(prototype = this.__defineSetter__(\"prop\", __iterator__ = <x/>) in undefined) {/*infloop*/for(let __proto__; <><x><y/></x></>; <><x><y/></x></>) {(window);'haha'.split } }");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*/L:for(const __proto__ = 3.141592653589793, __count__ in <x/>) /*for..in*/for(const prototype in (([1,2,3,4].slice)(__parent__))){export __iterator__; }");
tryItOut("{(__iterator__);{} }");
tryItOut("{export __proto__;/*for..in*/for\r([__noSuchMethod__, prop] = <><x><y/></x></> in <x><y/></x>) gc() }");
tryItOut("/*infloop*/for(({ __iterator__: prototype, __count__: __noSuchMethod__ }) = constructor =  \"\" ; (new <x><y/></x>); (({__count__ setter: <y><z/></y>, __count__: <x/> }))) gc()");
tryItOut("/*infloop*/do /*infloop*/L:for(Function(Iterator(3/0, @foo), true); null.__noSuchMethod__ = <><x><y/></x></> && +[,,]; (eval(\"gc()\", <x><y/></x>))(__iterator__ = <><x><y/></x></>, *::*)) {var __proto__ = <x/>, __iterator__ = window } while(<bbb xmlns=\"new (function (__parent__)<x/>)(@foo, <x><y/></x>).yoyo(<><x><y/></x></> ^ arguments)\">yyy</bbb>.(({__parent__: * })));");
tryItOut("L: export *;");
tryItOut("/*for..in*/for(let prop(*::*) in __count__ = __iterator__) switch(new Object(false)) { case window < <><x><y/></x></>.prototype: break; case 7: return; }");
tryItOut("/*for..in*/for(let constructor = new (function  __proto__ ()({a1:1}))([,,z1], (function ([y]) { })()) === <x><y/></x>([1,,] << 1e81 <<= (uneval(<x/>))) in ( \"\"  :: <x/> ||  '' .throw(constructor))) /*infloop*/L:do var prototype =  /x/g , constructor; while(<x><y/></x> - undefined);");
tryItOut("if(*::*) yield this; else  if (<><x><y/></x></>) {} else {var __iterator__, __noSuchMethod__;yield <x><y/></x>; }");
tryItOut("L: {__parent__; }\n/*infloop*/while(<x><y/></x>.(undefined)){yield this;(<x><y/></x>); }");
tryItOut("/*for..in*/for(__count__ = \t<x/>.__defineSetter__(\"prototype\", function(q) { return q; }) in [,,].isPrototypeOf(<x><y/></x>)) {return;return; }");
tryItOut("return 1e-81\nnew (function (__proto__, __parent__) { return (yield 1e-81) } )(__proto__ = __noSuchMethod__, (( /* Comment */this) ? (<x><y/></x> * this) :  if (<x><y/></x>)))");
tryItOut("if((({}).hasOwnProperty)(function ([y]) { }, 0)) {return __iterator__;gc() } else {true; }");
tryItOut("L: {}");
