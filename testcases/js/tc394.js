tryItOut("with({}) { @foo; } ");
tryItOut("M:if(<\n><x><y/></x></>, arguments) { if (\t__proto__ = ( /x/g )) {throw undefined;__proto__ = [[]]; }} else __parent__, constructor;");
tryItOut("L:switch(null.throw(@foo) ? (function ([y]) { })() << <x><y/></x> === (yield prototype) : ((yield [z1,,]))) { default: break; prototype = <x/> const this.__defineSetter__(\"setter\", function  get () { yield 0/0 } )['__proto__'];case let (prototype, constructor = *) <x/>: break; case 4: ;break; case 6: break;  }");
tryItOut("do (#1#).__defineSetter__ while((__parent__ >= <><x><y/></x></>) && 0);");
tryItOut("throw new Function;");
tryItOut("break ;((__iterator__ = this))((uneval(prop)))");
tryItOut("(prop[__iterator__, [], [[__proto__, , ({ __proto__: prop })], , ], __parent__, ({ __noSuchMethod__: ({ prop: __iterator__, constructor: [({ prop: __count__, constructor: __parent__ })] }), __noSuchMethod__: __parent__ })], __proto__: [({ __proto__: ({ __iterator__: [], __parent__: ({ __count__: [constructor, prototype, , __iterator__, __noSuchMethod__], prop: constructor }) }), getter:  })] }) = (({}).hasOwnProperty).call(@foo, <x><y/></x>);");
tryItOut("switch((((({}).__lookupGetter__).call)())) { default: /*for..in*//* nogeckoex bug 349964 */ for  each//h\n(const __parent__ in null) yield;break; case (__noSuchMethod__.prototype = __iterator__.__proto__ = #1=[#1#]): case (p={}, (p.z =  /x/g )()): {} }");
tryItOut("break ;\nfunction::__count__,  = <x\t><y/></x>;\n\n(<><x><y/></x></>);gc()\n");
tryItOut("/*infloop*/while((\n<y><z/></y> * #3={a:#3#})){if(<y><z/></y> if (__parent__)) {__parent__, __iterator__{} } else  if ((function (__parent__, __noSuchMethod__) { return window; } )(.2, <x><y/></x>)) return; }");
tryItOut("if(+(*::* &= eval(\"true /= 0.1\", (yield.__iterator__)))) { if (window.throw(window)) {L: {gc()(*::*); }try { __parent__ = __noSuchMethod__; } finally { return this; }  }} else for(let y in []);");
tryItOut("with( /x/g  - <x><y/></x>)(true);");
tryItOut("/*infloop*/for(this; @foo; constructor) (__iterator__).call");
tryItOut("/*infloop*/M:for(; ({ __parent__: __parent__ }) =  /x/  * (continue ); ) {{} }");
tryItOut("/*infloop*/for((constructor.prop = ({a1:1})); (({ get prototype  { ; }  () /x/  })); [[1]].__defineSetter__(\"constructor\", function(q) { return q; })) {switch(<x/>) { case 9: gc()case 2: break; default: break;  }const prop = 4.; }");
tryItOut("/*infloop*/\tM:for(([15,16,17,18].some([1,2,3,4].slice, *)); (constructor = *.hasOwnProperty(\"prop\").__lookupSetter__(\"__iterator__\")); ((this.__defineGetter__(\"__iterator__\", Math.sin))(//h\n(@foo .@*:: 4.)) = eval(\"<x><y/></x>\", __parent__) || (({}).__lookupGetter__))) ;");
tryItOut("{export *;const prop; }");
tryItOut("try { this.zzz.zzz; } finally { try { let(prototype = delete  /x/ , [, , , __iterator__, __count__]) ((function(){__proto__ = prototype;})()); } finally { return; }  } ");
tryItOut("M:if(yield <><\tx><y/></x></>\t) { if (Iterator(null)) {break L; }} else {evalundefined; }");
tryItOut("L:if(@foo) { if (__iterator__ = <x><y/></x> >= -1 != <x/>) {{export constructor; } }} else {window }");
tryItOut("let(({ __parent__: __noSuchMethod__, prototype: __count__ })) { let(try { break ; } catch(prop if (function(){true})()) { (arguments).call } catch(prototype) { prototype = <x><y/></x>, __proto__ = null; }  = *::*, constructor = __count__) { return __parent__;");
tryItOut("switch(true - undefined) { case this.__defineGetter__(\"constructor\", new Function): case eval(\"({__iterator__: ( '' .__defineSetter__(\\\"__noSuchMethod__\\\", *::*)) })\", false < this): /*infloop*/while((p={}, (p.z = <><x><y/></x></>)()))/*for..in*//* nogeckoex bug 349964 */ for  each(constructor([z1]) in this) {throw false; }break; case 9: for(let y in [5,6,7,8]) export constructor; }");
tryItOut("for(let y in [5,6,7,8]) let((__proto__)) ((function(){let([, prototype, constructor, __parent__, constructor], prop = ({})) ((function(){with({}) { constructor; } })());})());");
tryItOut("/*for..in*/for(let [__noSuchMethod__, prototype] = ((*::*)(<x><y/></x>)%=@foo) in ((prototype.__parent__ getter= ({}).hasOwnProperty) , <><x><y/></x><!--yy--></>)) {/*infloop*/for([z1,,]; #2=[1e+81]; constructor.prototype) {} }");
tryItOut("M:while((prop) && 0)throw \t<x><y/></x>;");
tryItOut("/*for..in*/for(var [__iterator__, constructor] = (\n(yield (yield (this.__defineSetter__(\"prop\", true))))) in undefined) {if(!<x><y/></x> if (<x><y/></x>)) \r{export constructor; } else {{}throw <x><y/></x>; } }");
tryItOut("M:with(([11,12,13,14].sort)){switch( \"\" ) { default: /*infloop*/L:do var  /x/  = <x><y/></x>, __count__; while(undefined); } }");
tryItOut("for(let y in []);");
tryItOut("return constructor.__proto__ getter= <employee id=\"1\"><name>Joe</name><age>20</age></employee>;");
tryItOut("/*infloop*/for(var prototype; false > <x><y/></x>; new Function(4.)) \tthrow __count__;");
tryItOut("/*infloop*/do {return function::__count__\n } while(new (@foo)(<y><z/></y>)--);");
tryItOut("with({__proto__: [[1]]}){with({__proto__: __noSuchMethod__%=(true in  /x/ )})<x><y/></x>; }");
tryItOut("let (__parent__, __noSuchMethod__) { __proto__ = false, __count__; }\n");
tryItOut("switch(eval(\"typeof __proto__.__noSuchMethod__\", (function(y) { yield y; {let __iterator__ =  \"\" , __noSuchMethod__;__iterator__, __proto__; }; yield y; }))) { case 6: if(<x><y/></x>) ; else  if (window) (@foo);break; default: break;  }");
tryItOut("/*for..in*/for([constructor, prop] = undefined |= <y><z/></y> in (-<x><y/></x>.__lookupSetter__(\"__proto__\")).unwatch(\"__parent__\")) /*infloop*/for(\f__iterator__;  /x/g ; #3={a:#3#}) {export prototype; }");
tryItOut("L:while((<x><y/></x>) && 0);");
tryItOut("/*for..in*/for(const __iterator__ in (prototype = window)) {if(5.0000000000000000000000) {yield 0; } }");
tryItOut("throw __noSuchMethod__;");
tryItOut("M:while((~this << this.yoyo( '' )) && 0){ '' export __iterator__; }");
tryItOut("return;");
tryItOut("L: break M;");
tryItOut("let (({ __proto__: ({ __iterator__: [[({ __count__: prototype }), [__iterator__]], prototype, , ] }) }) = ({__noSuchMethod__: ((<x/>()).@foo)}), [__iterator__]) { {}\n }");
tryItOut("do do {((this).call).call } while(( /x/g ) && 0); while((prop.__count__ = *::*) && 0);");
tryItOut("yield <x><y/></x>;\nexport *;\n");
tryItOut("return window *= undefined;");
tryItOut("while(((void )) && 0){({a1:1});M:if(-3/0) { if ( /x/ )  get function::__proto__()<y><z/></y>;} else const __proto__, __count__ = <x/>; }");
tryItOut("/*infloop*/L:while(this.__defineSetter__(\"constructor\", <x/>)){gc()(this).__defineSetter__ }");
tryItOut("/*for..in*/for(var prototype in window) {[z1];{} }");
tryItOut("/*for..in*/for(let [constructor, __iterator__] = __iterator__ = __parent__ in __iterator__) {const __noSuchMethod__, __count__; }");
tryItOut("/*infloop*/for(~ /x/ .hasOwnProperty(\"prototype\"); <><x><y/></x></>\n.valueOf(\"number\"); [11,12,13,14].map >>>=constructor) M:switch(this) { case <><x><y/></x></>: return <x/>; }");
tryItOut("/*infloop*/do {yield; } while(new <x/>());");
tryItOut("/*for..in*/for(var __iterator__ = #0=[prototype.isPrototypeOf(1.2e3)] in ({__count__: __proto__ = 1e-81})) /*infloop*/while(true)export prop;");
tryItOut("<y><z/></y>;");
tryItOut("M:if(<y><z/></y>) /*infloop*/while(function(id) { return id })export prototype;");
tryItOut("with({((function (prop) { yield window > *::* } )(<x/>, undefined.propertyIsEnumerable(\"constructor\"))): #0=eval})export __noSuchMethod__;");
tryItOut("/*infloop*/for([, prototype] = new RegExp(); window for (__proto__ in null); function (__iterator__) { return 0.1 } ()) {/*for..in*/default: continue ;break; do {export __proto__; } while((<><x><y/></x></>) && 0);return;break; break; case 2: yield *;if(__parent__) { if (0.1) {__parent__ = <><x><y/></x></> }} else {let constructor, constructor = __iterator__;throw this; } }");
tryItOut("let (__proto__) { ; }");
tryItOut("/*infloop*/for(__count__; (constructor)[null]; (yield <x><y/></x>)) {let constructor, prop;throw __proto__; }");
tryItOut("yield ();");
tryItOut("return;");
tryItOut("/*infloop*/for(const ({ __iterator__: prototype }) = (new (((-1) * undefined))(new (this.zzz.zzz)()))\n; <><x><y/></x></> <<  /x/g  || (this.zzz.zzz); (([1,,]\f.prototype).__noSuchMethod__) for ( in <x/>)) {@foogc() }");
tryItOut("if(null) { if (<y><z/></y>) (function ([y]) { })(); else {const __parent__ = prototype; const __parent__;yield ({}); }}");
tryItOut("/*infloop*/do {export prototype; } while(());");
tryItOut("if((function ([y]) { })()) {if((-0)) var __count__, __count__ =  '' ; else  if (<y><z/></y>) break L; else export __iterator__;((true.__defineSetter__(\"__proto__\", function(q) { return q; }).eval(prop.constructor setter= function  set (__count__) { ; } ))); } else  if ([[1]]\f) if((this.__defineGetter__(\"__parent__\", 3/0.throw(<x><y/></x>)))) {export __iterator__;export *; }");
tryItOut("/*infloop*/while(<y><z/></y>.isPrototypeOf((Error(4., __noSuchMethod__ ? <x><y/></x> : [,,])))\f) /x/g \n;");
tryItOut("switch((p={}, (p.z =  /x/ )()).__lookupGetter__(\"__count__\")) { case 6: export __iterator__;break; case (__parent__.__lookupGetter__(\"prop\")) - -@foo.__defineGetter__(\"__parent__\", function(y) { yield y; do {continue ; } while((3/0) && 0);; yield y; }): throw StopIteration;case 1: break; case 8: /*for..in*/for(let [__noSuchMethod__, yield] = window in @foo) yield;break; gc()break; case 1:  }");
tryItOut("if({}\n) {return [[]]; } else  if (({ __parent__: prototype }) = /*\n*/({ prototype: constructor })) {return;yield <x><y/></x>; } else ( /x/g );");
tryItOut("throw StopIteration;");
tryItOut("if(<x/>) { if ((__proto__.prototype = __iterator__) &= <y><z/></y>.yoyo(<x/>)) {export *; } else {M:do {gc() } while((<x/>) && 0); }}");
tryItOut("prop = __parent__;");
tryItOut("do { } while((<x/>) && 0);");
tryItOut("let (__count__ = [ ''  if (@foo)], function::__iterator__ = <><x><y/></x></>) { continue ; }");
tryItOut("return (++this.zzz.zzz);");
tryItOut("let (.2 = this, __parent__) { yield <x><y/></x>; }");
tryItOut("/*infloop*/L:for(__noSuchMethod__ = *; (p={}, (p.z = <y><z/></y>.*)()); [(Math.sin)(__iterator__) if (<x><y/></x>)]) /*infloop*/M:do {__parent__, prototype = <><x><y/></x></>; } while([1,2,3,4].slice);");
tryItOut("(<x><y/></x>).watch\n<><x><y/></x></>");
tryItOut("/*for..in*/for(var constructor in *) {this; }");
tryItOut("L: {throw new <><x><y/></x></>(<x><y/></x>);continue M; }");
tryItOut("/*infloop*/for(__count__;  /x/ ; <y><z/></y>) export __parent__const __noSuchMethod__ = 0.1, __noSuchMethod__;");
tryItOut("throw StopIteration;");
tryItOut("switch(({*::*: this})[(typeof __proto__)]) { case 7: function (__proto__, __parent__) { yield __count__ } case 1: export *\ngc()break; case (<x/>)(<y><z/></y>, undefined): break; default: case ([, , __parent__, prop, ] = gc()): /*for..in*/for(var __iterator__ in (([1,2,3,4].map)(())))do export *; while((<x/>) && 0);break; break;  }");
tryItOut("if(/a/gi) { if (__noSuchMethod__) yield window; else (this);}");
tryItOut("let __parent__;\neval\n");
tryItOut("return new RangeError();");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __proto__ in __count__.((yield 0.1)--)) {let __noSuchMethod__ = @foo, delete;export prop; }");
tryItOut("[[]]");
tryItOut("yield 033;");
tryItOut("let(constructor, __noSuchMethod__) ((function(){return Error();})())\n/*infloop*/for(({ prop: __proto__, prototype: [] }) = 1e+81.*; [z1,,].unwatch(\"prototype\"); __proto__.__proto__ <= (__proto__ ? __iterator__ : __parent__)) (<x/>).watch");
tryItOut("/*for..in*/L:for(var prototype in (('haha'.split)(( /x/ \n) ? false : (Number(window))))){null;continue M; }");
tryItOut("if(({ __proto__: prototype }) = [, , ]) Math.pow else  if ((*.prop = (-0))) ");
tryItOut("let (__count__ = 0/0) { yield <><x><y/></x></>; }");
tryItOut("M:switch(((uneval( /x/ )))) { case 4: {}\f }\n");
tryItOut("/*for..in*/for(var __count__ in ((<x/>)((function (__count__) { yield .2 } )()))){gc()let __count__; }");
tryItOut("/*for..in*/M:for(const __noSuchMethod__ in @foo) export __proto__;");
tryItOut("if(<y><z/></y>.__lookupGetter__(\"__proto__\")) prototype = (<><x><y/></x></> .@ <x/>) else  if (#1=new this\f([])) yield function(id) { return id };");
tryItOut("L: {return  /x/ ;let __parent__, prototype\nyield; }");
tryItOut("M:if(<><zzz>window</zzz></>.__lookupSetter__(\"__proto__\")) { if (prototype ? <y><z/></y> : 5.0000000000000000000000 in null) {return <x><y/></x>;/*infloop*/do {export *;{} } while(1e+81); } else }");
tryItOut("/*infloop*/for(var __parent__ = <y><z/></y>.\t__proto__ = ((function (prototype))(true)); (__parent__.prop); new (new Function(\"yield;\"))(<><x><y/></x></>, *)) yield  \"\" ;");
tryItOut("__iterator__ = *;true");
tryItOut("return;\nconst __parent__ = this\n\n");
tryItOut("return false\nM:if(4.) {<x><y/></x>;export prototype; } else {(@foo); }");
tryItOut("__noSuchMethod__");
tryItOut("/*infloop*/M:for(<x/>; __parent__ = function(id) { return id }; (<x><y/></x>.__defineGetter__(\"__noSuchMethod__\", window))) let __iterator__, constructor;");
tryItOut("with(prototype){gc() }");
tryItOut("export prop");
tryItOut("L: {L: {throw <><x><y/></x></>; }break ; }");
tryItOut("return (constructor = __iterator__);");
tryItOut("*;");
tryItOut("/*for..in*/for([__parent__, \r__parent__] = eval(\"return -3/0;\", 0) in (new (.2)([,], prototype))) {prototype;yield; }");
tryItOut("continue ;{}");
tryItOut("/*infloop*/for(var __count__ = (function () { return <y><z/></y> } )(); __noSuchMethod__; ((() for each (__proto__ in  '' ) for (prototype in __parent__)))) if(this.__defineGetter__(\"__proto__\", 'haha'.split)) {break ;return *::*;\f } else /*for..in*/M:for(const __parent__ = this in ({a1:1})) {return;Math.pow }");
tryItOut("M:if(*) {break M;{} } else  if (-(-1)) {throw  /x/g ; } else {{}throw <><x><y/></x></>; }");
tryItOut("{(null); }");
tryItOut("/*for..in*/[,,].__defineGetter__(\"__noSuchMethod__\", /a/gi).unwatch(\"__iterator__\")");
tryItOut("with(__count__.constructor = <><x><y/></x></>){gc() }");
tryItOut("return <><x><y/></x></>;");
tryItOut("while((<x/>) && 0){return; }");
tryItOut("for(let y in []);");
tryItOut("while(((let(__iterator__) ((function(){try { let constructor; } finally { ; } })()); ? <x/>.prototype = constructor : [15,16,17,18].filter((1 for (x in [])), 0))) && 0)yield <x><y/></x>;");
tryItOut("if( /x/ ) {yield __parent__;[,]; } else  if (<><x><y/></x></>) {throw @foo; } else {;yield; }");
tryItOut("/*infloop*/for((*)[window]; new RangeError();  /* Comment */(*::*).watch()) 3;");
tryItOut("throw 4. /= -0; const __iterator__;");
tryItOut("/*infloop*/L:for(var constructor; <x><y/></x>['__noSuchMethod__'] = this.zzz.zzz; <{__count__}></{__count__}>.(*::* ? <y><z/></y> : 1.3)) /*for..in*/for(const prototype in  /x/ ) ;");
tryItOut("/*infloop*/do Math.pow while(<x><y/></x>);");
tryItOut("/*for..in*/for(let [__proto__, __iterator__] = (\n({constructor: window})).__noSuchMethod__ in (prop.constructor getter= ({}).__lookupGetter__ += (prop = set))) {{}yield 1e+81; }");
tryItOut("if(0) { if (#3={a:#3#}) {__proto__ }} else this;");
tryItOut("(<x><y/></x>).__defineSetter__");
tryItOut("do continue L; while((true if (<x><y/></x>) |= __parent__+=__count__) && 0);");
tryItOut("<y><z/></y> const prop;");
tryItOut("while((<x><y/></x>) && 0){yield;yield; }");
tryItOut("L: {yield ({a1:1}); }");
tryItOut("with(<><xxx>{__proto__}</xxx></>){while(((__iterator__ = this.*)) && 0){break L;throw #1#; } }");
tryItOut("gc()");
tryItOut("/*infloop*/while(0/0.yoyo(<><x><y/></x></>)){const __noSuchMethod__; }");
tryItOut("");
tryItOut("/*infloop*/for(prop; undefined.__lookupGetter__(\"constructor\").prototype = prototype = <x><y/></x>; typeof (<><x><y/></x></>.__defineSetter__(\"prototype\", [1,2,3,4].slice))) {yield this *= *::* & __noSuchMethod__ = <x/>; }");
tryItOut("/*infloop*/for(({ __iterator__: constructor }) = (<x><y/></x>)(window, __parent__); (this.__defineSetter__(\"__iterator__\", ([1]).__defineSetter__)); *::*) {return; }");
tryItOut("switch( '' ) { case <><x><y/></x></>: yield this;break; switch(this) { default: ;break;  }default: let prop, prop; }");
tryItOut("do /*for..in*//* nogeckoex bug 349964 */ for  each(const prototype in undefined) {gc() } while((prop) && 0);");
tryItOut("continue ;");
tryItOut("L: /*for..in*//* nogeckoex bug 349964 */ for  each(prototype.constructor in <><x><y/></x></>) {export __noSuchMethod__; }");
tryItOut("if((delete ({a1:1})).eval((p={}, (p.z = <x><y/></x>)()))) { if (('fafafa'.replace(/a/g, __noSuchMethod__))) {[1,2,3,4].map } else {yield; }}");
tryItOut("if(__count__) {export prop; } else ;");
tryItOut("export *;");
tryItOut("__proto__ = <><x><y/></x></>;\nexport *;");
tryItOut("/*infloop*/do let prop,  { return; }  = <y><z/></y>; while([15,16,17,18].sort(({__count__ setter: Math.pow }), __noSuchMethod__ = ( \"\" .__lookupGetter__(\"prototype\"))));");
tryItOut("do {L: {(false); } } while((true) && 0);");
tryItOut("L: if(this) yield; else {export *;<x><y/></x>; }");
tryItOut("L:if(({a1:1})) {/*for..in*/for(__parent__ = <x><y/></x> in <x><y/></x>, <x/>) {}; } else {return -3/0; }");
tryItOut("if(__iterator__ = prop.@foo) {return;/*for..in*/for(var [prop, prototype] = this.zzz.zzz in 0x99) {; } } else  if (([[,,z1]])) const prototype = __iterator__;");
tryItOut("with(){; }");
tryItOut("L:if(<><bbb xmlns=\"this.__defineGetter__(\"__parent__\", undefined)\"><ccc:ddd><xxx>{prop}</xxx>yyy</ccc:ddd></bbb></>) { if (((<x><y/></x>.yoyo( '' )))[prototype.__count__ = 0.1]) {__noSuchMethod__(*).watch } else var __parent__;if(@foo) {continue ;export *; }}");
tryItOut("with(((function  setter () { return 3.141592653589793 } )()))gc()");
tryItOut("{{{return; }__count__ = <x><y/></x>; }/*for..in*/for(let [__iterator__, __proto__] = 3/0 in 4.) throw false; }");
tryItOut("while((<y><z/></y>.throw(-0).@foo) && 0){; } const prop;");
tryItOut("/*for..in*/for([__parent__, constructor] = <><ccc:ddd></ccc:ddd></> in (p={}, (p.z = typeof <x><y\n/></x>)())) export *;");
tryItOut("/*for..in*/L:for(__parent__ in ((({}).hasOwnProperty)((#3={a:#3#}__count__)[ /* Comment */window])))/*infloop*/for(__noSuchMethod__; __count__ = try { return __count__ = 0x99; } catch(constructor if (function(){with({}) { gc() } })()) { return prop.__noSuchMethod__ = this; } ; new (0/0)(this.throw( '' ), function ([y]) { })) {/*infloop*/for( /x/g ; <x/>; this) {[ } }");
tryItOut("/*infloop*/while(({ __count__: constructor, __parent__: prop }) = [15,16,17,18].sort(({}).__lookupGetter__, <x><y/></x>))/*for..in*/for(let prototype in <x/> + <><x><y/></x></>) break M;");
tryItOut("yield  '' ;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const (function::function::__count__) in ({__count__:  /x/g })) {export prototype; }");
tryItOut("/*for..in*/L:for(let \t[constructor, prop] = (prototype == this) in <y><z/></y> | undefined) {if(<><x><y/></x></>.valueOf(\"number\")) var __iterator__ = [z1,,], prop; else {let __iterator__, __iterator__ = @foo; }switch([11,12,13,14].sort) { default: if(0x99) {gc() } else  if (<x><y/></x>) __proto__ = <><x><y/></x>/*\n*/</>; else {gc()return false; }case 9: let \f(__noSuchMethod__, ;) { (1.2e3); }break; case ((p={}, (p.z = <><x><y/></x></>)())): break;  } }");
tryItOut("{/*for..in*/L:for(const function::__parent__ = (prototype.prop = __proto__).isPrototypeOf(({prop:  ''  })) in this.@*) return <x><y/\n></x>; }");
tryItOut("continue M; const constructor;");
tryItOut("with({__count__: *::* <<= <x><y/></x>}){export *;({}).hasOwnProperty }");
tryItOut("with(__proto__ = this)/*for..in*/for(const [, , __noSuchMethod__] in ((function(y) { yield y; return 0x99;; yield y; })(eval(\"let (prop) { function ([y]) { }; }\", *))))(<x><y/></x>);");
tryItOut("/*infloop*/L:for(__count__; (*); ({ __count__: constructor, __parent__: prop }) = ({__parent__: <><x><y/></x></>})) {break;yield <><x><y/></x></>; }");
tryItOut("/*for..in*/M:for(var constructor in ((function (__parent__, __noSuchMethod__) { var __parent__, __proto__; } )(__parent__))){__count__, __proto__ = <><x><y/></x></>;throw  \"\" ; }");
tryItOut("/*for..in*/L:for(let constructor.propertyIsEnumerable(\"__count__\").<></> in (__iterator__((({__parent__: undefined }))))) let (__iterator__) { {} }");
tryItOut("if((constructor.propertyIsEnumerable(\"__noSuchMethod__\"))) {continue M; } else  if (__iterator__ = 1.2e3) {export __count__;@foo }");
tryItOut("{L:with({prototype: ((uneval(\r<><x><y/></x></>)))}){__parent__;var __iterator__ = <x/>, __iterator__; } }");
tryItOut("__proto__");
tryItOut("with({__parent__: <x><y/><\t/x>++}){let constructor, __iterator__;export __iterator__; }");
tryItOut("/*infloop*/for(prop = __count__\n++; 3/0\n; #1=[(__noSuchMethod__ = undefined)\f]) throw 1e4;");
tryItOut("/*infloop*/for(__parent__; false; let (__noSuchMethod__ = __noSuchMethod__) window) /*infloop*/for(__iterator__; <><x><y/></x></>; undefined) (1 for (x in []))");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __count__ in <x/>) {continue ;return; }");
tryItOut("/*infloop*/M:for(1e+81; (<><x><y/></x></>()); ) ;");
tryItOut("");
tryItOut("do {prop;return <><x><y/></x></>; } while(((#1=[<x><y/></x>])) && 0);");
tryItOut("/*infloop*/for(function(q) { return q; } += window; (yield __iterator__.__defineSetter__(\"__proto__\", function (__noSuchMethod__) { yield this } )); 5.0000000000000000000000) ");
tryItOut("if(( /x/g .__defineSetter__(\"constructor\", (new Function(\"return;\")))) :: undefined + 033.eval(window += function::__proto__.(undefined))) { } else {throw [];let __iterator__ =  /x/g , __proto__ = __count__; = window, constructor; }");
tryItOut("/*for..in*/for(let (<><{prototype}>yyy</{prototype}></>)((prototype =  /x/g .__defineSetter__(\"prototype\", undefined)).watch(\"<!--yy-->\", ([11,12,13,14].filter).watch)) in ((/a/gi)(window))){}");
tryItOut("return __count__;");
tryItOut("if(__parent__) ");
tryItOut("{}");
tryItOut("(1 for (x in []))\n");
tryItOut("export constructor;let (__count__) { break ; }");
tryItOut("/*infloop*/L:do M:while((eval(\"__noSuchMethod__ = <x><y/></x>\",  /x/ (undefined))) && 0){/*for..in*/for(var __noSuchMethod__ = ({a2:z2}) in  '' ) {gc() } } while((prototype)[ /x/ ]);");
tryItOut("M:switch(<x><y/></x>) { case  /x/ : var __parent__ = <><x><y/></x></>;yield <><x><y/></x></>;return;break;  }");
tryItOut("*throw <><x><y/></x></>;");
tryItOut("if((__parent__ = __count__) .@ \nundefined) { if (__count__.((((eval(\"gc()\",  /x/ )) ? <><x><y/></x></>.watch(\"__iterator__\", true) : gc()).__defineSetter__(\"prototype\", (new (+<><x><y/></x></>//h\n)(([<x><y/></x> for each (prototype in function ([y]) { })]))).__defineSetter__\f)))) gc()} else yield <><x><y/></x></>;");
tryItOut("L: <><x><y/></x></>;");
tryItOut("{if(<x><y/></x>) try { yield this; } catch(constructor) { return; } finally { return prototype; } ;\f else (eval).callyield; }");
tryItOut("let (__noSuchMethod__ = (prop = <><x><y/></x></>).__noSuchMethod__, __proto__) { if(this) return <><x><y/></x></>; else let prototype = __count__; }");
tryItOut("L: throw (p={}, (p.z = @foo)());");
tryItOut("/*infloop*/for(let __parent__; null >= (p={}, (p.z = <x><y/></x>)()); ([] = @foo)) this;");
tryItOut("/*for..in*/for((<y><z/></y>)(*) in this) {return <x><y/></x>; }");
tryItOut("/*for..in*/for(var __count__\t in ((Function)(eval(\"let __count__, __count__;\", <x/>).watch(\"__count__\", *::*))))if(<><x>\r<y/></x></>) throw ; else  if (__noSuchMethod__ = this) {;{} }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __proto__ in ('fafafa'.replace(/a/g, (<x/>).watch) instanceof <y><z/></y>).eval(this.eval( \"\" ) !== new '(window))) /*infloop*/M:for(prototype = this; <{__noSuchMethod__}><!--yy--></{__noSuchMethod__}>.(__iterator__ = constructor); prop.(<x><y/></x>)) {}");
tryItOut("var __parent__ = <x><y/></x>;");
tryItOut("try { (1.2e3); } finally { yield -0; } ");
