tryItOut("with({}) { for(let y in [5,6,7,8]) return; } ");
tryItOut("let(constructor, prop) { with({}) with({}) { /*for..in*/for(var constructor in 3.141592653589793) throw this; } ");
tryItOut("/*infloop*/for(({ prop: ({ __iterator__: __count__ })\t }) = (__parent__ |= <x/>); ( /x/ .__defineGetter__(\"constructor\", Math.sin)); __iterator__ = 3/0 > (this.__defineSetter__(\"__proto__\", (function  __count__ (constructor, __noSuchMethod__)x::__proto__).call))) {}");
tryItOut("{(<><x><y/></x></>);yield; }");
tryItOut("/*for..in*/L:for(const 033.__count__ in prototype.prop =  /x/ ) {constructor = #1=[#1#];gc() }");
tryItOut("if(*) ; else  if (this.__defineGetter__(\"__noSuchMethod__\", __iterator__)) {__noSuchMethod__, constructor = false;__parent__ }");
tryItOut("/*for..in*/for(const prototype in ((@foo)((window .. 1.2e3.watch(\"__parent__\", window)))))throw *::*;");
tryItOut("/*infloop*/M:while(window){throw <><x><y/></x></>; }");
tryItOut("Function");
tryItOut("if(-null) { if ((<x><y/></x>--)) {export *; } else {throw @foo; }}");
tryItOut("with({__iterator__: #3={a:#3#}.__defineSetter__(\"__noSuchMethod__\", <x><y/></x>)}){function(y) { yield y; export __count__;; yield y; }yield <><x><y/></x></>; }");
tryItOut("this.zzz.zzz;");
tryItOut("if( ''  !== __noSuchMethod__ >>>=prop *= null) { if (__iterator__) prototype = 3.141592653589793;} else {yield undefined;yield  /x/ ; }");
tryItOut("with({__count__: <y><z/></y>})return <x><y/></x>;");
tryItOut("/*infloop*/while(<x><y/></x>.(*)){throw <x/>; }");
tryItOut("<x><y/></x>\nreturn <><x><y/></x></>;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(let __noSuchMethod__.__noSuchMethod__ in <><x><y/></x></> += <x><y/></x>) M:switch((new ( /x/ )(prototype, *))) { default: case true ? <><x><y/></x></> : <x/>: break;  }\f const __parent__;");
tryItOut("{gcexport *; }");
tryItOut("if((__noSuchMethod__.__proto__)) { if (new Boolean(<><x><y/></x></>)-- << [z1,,].throw(<x><y/></x>).valueOf(\"number\")) {{(<x/>); const __noSuchMethod__;export *; } }} else {let(__parent__) { let constructor = window; }");
tryItOut("if(<x/> :: undefined.propertyIsEnumerable(\"prop\") !== (function(id) { return id }.propertyIsEnumerable(\"__iterator__\"))) { if (<><>('fafafa'.replace(/a/g, 'haha'.split))</></>) {(window);return; } else return;}");
tryItOut("/*infloop*/for(const __noSuchMethod__|=[[]] = Array(); <y><z/></y> | ; ^= (yield constructor); [1,,]) L:with(( /x/ )(__parent__))({ __proto__: prototype, prototype: __proto__ })");
tryItOut("yield window == <x><y/></x>\n;");
tryItOut("gc()");
tryItOut("L: {const __noSuchMethod__ = 0.1\n__count__, __iterator__ = this;var constructor = <x><y/></x>, __iterator__; }");
tryItOut("__proto__ = <x><y/></x>\n;");
tryItOut("yield;");
tryItOut("return;");
tryItOut("/*for..in*/for(__iterator__ in constructor) {; }");
tryItOut("/*infloop*/do \f{;/*for..in*/M:for([prop, prop] = 'fafafa'.replace(/a/g, (1 for (x in []))) in [z1,,]) {export *; \"\" ; } } while(prototype.prop = <x><y/></x>);");
tryItOut(" { yield undefined } ");
tryItOut("{let constructor;const prototype; }");
tryItOut("switch((uneval(window))) { case 4: break; case prop if (undefined):  }");
tryItOut("/*infloop*/M:do {} while(({}).__lookupGetter__);");
tryItOut("L:with({set: .@foo}){return @foo;throw  /x/ ; }{}");
tryItOut("/*infloop*/while(__noSuchMethod__ = (p={}, (p.z = false)()))if(prototype = this) { if (<x/> ^= false) {Function[,,]; }} else yield <x><y/></x>;");
tryItOut("/*for..in*/for(prop in ((({}).hasOwnProperty)(yield (-1))))function  constructor (__count__, __parent__) { return this } yield <x/>;");
tryItOut("/*for..in*/for( /x/  = <x><y/></x> in <x/>) {(new Function(\"'haha'.split\")) }");
tryItOut("__iterator__");
tryItOut("/*infloop*/for( '' ; <x><y/></x>.__lookupSetter__(\"__proto__\").hasOwnProperty(\"__parent__\"); Array(__proto__, <x/>)++) /*for..in*//* nogeckoex bug 349964 */M: for  each(let prop in 033) __iterator__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __count__ in <><x><y/></\fx></>) break ;");
tryItOut("__noSuchMethod__");
tryItOut("/*for..in*/M:for(var (prop) in @foo <<= undefined) ");
tryItOut("__proto__ =  /x/g , constructor");
tryItOut("throw __count__\nexport __count__;");
tryItOut("export *;");
tryItOut("{/*for..in*//* nogeckoex bug 349964 */ for  each(let //h\n__proto__(*::*) in *::*) {(this); }let (prop, ( /* Comment */undefined)) { gc() } }");
tryItOut("var __proto__;\nexport *;\n");
tryItOut("/*for..in*/for(const [__noSuchMethod__, __proto__] = ((1e-81).__defineSetter__).call(arguments, ) in window) continue ;");
tryItOut("let((false)(prototype) = (window)(), __parent__) ((function(){with({}) { constructor = prototype; } })());");
tryItOut("__noSuchMethod__(<><x><y/></x></>) = prototype;");
tryItOut("prototype = prototype;");
tryItOut("do do yield; while((eval(\"\", <><x><y/></x></>.yoyo(1e4))) && 0); while(((new new (new Function(\"yield;\"))())\t) && 0);");
tryItOut("let (__parent__, __iterator__) { #3={a:#3#}; }");
tryItOut("with(( /* Comment */-1 = prototype.*\n\t))yield;");
tryItOut("/*for..in*/M:for(var [/*\n*/__parent__, prop] = (new new Function(__iterator__.watch(\"constructor\", gc))) in ()) {{}{export __noSuchMethod__;return <x><y/></x>; } }");
tryItOut("(new Function(\"gc()\"))/*for..in*/for(const __parent__ in window) continue M;");
tryItOut("/*for..in*/for(__proto__ = <y><z/></y> in (eval(\"true @ #3={a:#3#}\", (this.__defineSetter__(\"__noSuchMethod__\", /a/gi))).__defineSetter__(\"__count__\", function ([], prototype) { return ((window for (__parent__ in #3={a:#3#}))) } ))) {{yield;const prop; } }");
tryItOut("with({constructor: (prop = [,,z1]) % yield undefined})yield __noSuchMethod__;");
tryItOut("/*infloop*/for(<x><y/></x>.(prop); <x><y/></x> >>>=<x><y/></x>; 1e+81) yield;");
tryItOut("L:do {return;while((<x/>) && 0){false;return; } } while(((uneval(prop.prototype setter= function (__proto__) { function::prototype = -0; } ))) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var prop in (function ([y]) { })()) export *;/*infloop*/do {{} } while(new (gc)().hasOwnProperty(\"prototype\"));prototype ");
tryItOut("this.zzz.zzz;");
tryItOut("<!--if(constructor.__parent__ = false.hasOwnProperty(\"__noSuchMethod__\")) { if (prop = (function ([y]) { })().prop <<= (__parent__.__parent__ = window)) {export __iterator__;do {;export __proto__; } while((null) && 0); } else var __iterator__ =  \"\" ;}");
tryItOut("while((@foo++) && 0){L:if((({ set __count__\n __parent__ \n(__proto__) { yield  ''  } , this: -3/0 }))) {return constructor; } else  if (constructor) 0/0 else {([z1,,]).watch }yield; }");
tryItOut("/*for..in*/for(__noSuchMethod__ in ((([1,2,3,4].map).call)(<x><y/></x> if ( '' ))))M:if([z1].__lookupGetter__(\"__proto__\")) { if (([] * ({a2:z2}))) {yield false; }} else {return;export __proto__; }");
tryItOut("<><x><y/></x></>;\n(this);\n");
tryItOut("L: {(__iterator__); }");
tryItOut("do while(((let (prototype = <><x><y/></x></>, [, ({ __proto__: prop, __parent__: prototype }), ]) new RegExp()) + (p={}, (p.z = <x><y/></x>.__lookupSetter__(\"constructor\"))()).throw(((1.3 ? null :  /x/g  for each (prop in <><x><y/></x></>) for each (__proto__ in 1e-81))))) && 0)export *; while(((false.__lookupSetter__(\"__proto__\")).__noSuchMethod__) && 0);");
tryItOut("let(constructor) { __noSuchMethod__");
tryItOut("switch(new (gc)()) { default: <y><z/></y> }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each((++new (__noSuchMethod__ = prop)) in #0=({__noSuchMethod__: *::*}).@*) true;");
tryItOut("/*infloop*/L:for(prop; yield <x><y/></x>.__proto__ = (#1=[#1#].throw((-0))); (<><x><y/></x></> , <><x><y/></x></> & -0)) const set, prototype;");
tryItOut("/*infloop*/for(let __parent__; [11,12,13,14].map;  /x/ ) throw <x><y/></x>; const __iterator__;");
tryItOut("if(@foo = prototype.(<y><z/></y>)) return this; else  if (<x><y/></x>.__defineGetter__(\"constructor\", /a/gi).unwatch(\"__iterator__\")) __noSuchMethod__ else {__noSuchMethod__;gc() }");
tryItOut("L:switch((__proto__.constructor = *) , ({prototype setter: function(q) { return q; } })) { case 1:  }");
tryItOut("export __count__;\nexport *;\n");
tryItOut("let (__iterator__, ({ __iterator__: , }) = undefined.__lookupSetter__(\"__parent__\")) { /*for..in*/for(const prototype in false) {export __count__;const prop, __noSuchMethod__ = this; } }");
tryItOut("/*infloop*/while((uneval((yield 0/0)))){return <><x><y/></x></>;{} }\n");
tryItOut("return @foo;");
tryItOut("let (__proto__ = ) { let __noSuchMethod__ =  /x/g ; }");
tryItOut("if(__iterator__ =  /x/g .unwatch(\"__noSuchMethod__\")) { if (__noSuchMethod__ = 1e4) {if(*::*) {throw __parent__;__count__; }M:switch(__noSuchMethod__ = eval(\"window\", true)) { case <><xxx {__parent__}={null} /></>: break;  } }} else {export __proto__;/*infloop*/while(__iterator__){prototype } }");
tryItOut("L: {{} }");
tryItOut("let (({ __parent__: __iterator__, __proto__: __proto__.__parent__ }), __noSuchMethod__ = new ( \"\" )(arguments)) { {/*for..in*/for(const __parent__ = [1] in <y><z/></y>, <><x><y/></x></>) throw <x><y/></x>;export *; } }\n");
tryItOut("L: ;");
tryItOut("do throw <><x><y/></x></>; while((this.isPrototypeOf(0.1)) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prop.__parent__ in window) {export *; const __proto__; }");
tryItOut("if(new  '' (<><x><y/></x></>, *)) * else  if (new ((prototype = <x><y/></x\t>))([(\f<x><y/><//*\n*/x>.prop)].map(Math.sin),  '' )) L:with({__parent__: <><x><y/></x></>})const __iterator__;\f else {let (prototype) {  } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const constructor(new (function ()window)(<><x><y/></x></>, this)) in __proto__ = prototype.yoyo(__proto__.(__proto__) & constructor = constructor)) {export prop; }");
tryItOut("{; }");
tryItOut("/*infloop*/L:do {export *; } while(({}).__count__);");
tryItOut("/*for..in*/L:for(prop in new (new Function(\"let <x><y/></x> = <x><y/></x>;\"))()) {}");
tryItOut("/*for..in*/for(let constructor([z1,,] in <y><z/></y>)%= in ({ __proto__: ({ prop: __parent__ }), constructor: ({ constructor: __iterator__, __proto__: constructor }) }) = (prop = __parent__)) /*infloop*/for([] = <x><y/></x>.eval(-0) |= ; [let (prop)  /x/g ].some(({}).__lookupGetter__); 0x99.__lookupSetter__(\"constructor\").unwatch(\"function::__count__\")) {return this; const constructor; }");
tryItOut("do {function () { export __parent__; } \nyield  '' ; } while(((function  each (constructor, prop) { const __proto__ = <y><z/></y>, constructor = *::*; } ).call(undefined, *::*)++) && 0);");
tryItOut("with({}) return (__count__.__iterator__);");
tryItOut("/*infloop*/M:do return; while((3.__lookupGetter__(\"__count__\") if (__noSuchMethod__)));");
tryItOut("if([]) { if (<x><y/></x>) {__iterator__; }} else {export __iterator__;throw *; } const __count__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const constructor in *::*) let prototype;");
tryItOut("if(([11,12,13,14].some)) { if ((new (this.*)(__noSuchMethod__ *= [z1], * *  \"\" ))) try { let constructor; } catch(prototype if <><x><y/></x></>) { yield <x><y/></x>; } catch(__iterator__ if <><x><y/></x></>) { false; }  else yield;}");
tryItOut("while(() && 0)__parent__");
tryItOut("/*for..in*/for(const constructor in __noSuchMethod__.__iterator__) {yield;{} }");
tryItOut("/*infloop*/for( /x/g  ? <y><z/></y> : 0.1; ++ \"\" ; null.__defineGetter__(\"__proto__\", Math.pow)) {yield 1e+81; }\r");
tryItOut("try { throw StopIteration; } finally { let(get = undefined, let =  /x/ ) ((function(){;})()); } ");
tryItOut("/*for..in*/M:for(let constructor = __count__ = typeof prop in window) L:if(*) {throw  /x/ ; } else ;");
tryItOut("L:if((uneval( \"\" ))) { if (<x><y/></x> ^= __parent__) /*for..in*//* nogeckoex bug 349964 */ for  each(const prototype in <x><y/></x>) {yield  \"\" ;throw this; } else  /x/ ;{}}");
tryItOut("/*infloop*/for(var ({ __count__: ({ constructor: __count__, __noSuchMethod__: __noSuchMethod__ }) }) = \n1.2e3; ((yield [[]])); (constructor.isPrototypeOf(@foo))[[[]]]) \t__proto__;\n\n\n");
tryItOut("/*for..in*/L:for(var __count__ = (uneval((<x><y/></x>.__defineGetter__(\"__parent__\", Function).__lookupSetter__(\"__proto__\")))) in (eval(\"*\", @foo))) {yield; }");
tryItOut("/*infloop*/for((__noSuchMethod__%=__proto__); -function ([y]) { }; [[]]) {return;Math.pow }");
tryItOut("\fif(('fafafa'.replace(/a/g, function(y) { yield y; \nbreak ;; yield y; }))) { if ((let (__noSuchMethod__) prototype)[new Math.pow()]) {( /x/ );M:if(this.zzz.zzz) { if (window) <x/>} else <><x><y/></x></> } else {return; \"\" ; }}");
tryItOut("gc()");
tryItOut("L: {__count__; }");
tryItOut("L: {(__proto__); }");
tryItOut("while((((({__noSuchMethod__: <x><y/></x>})), ( { __count__ = @foo, __count__ = this; } (function(id) { return id } for (__proto__ in 3.141592653589793), false)) = [15,16,17,18].some((<y><z/></y>).__defineSetter__, <y><z/></y>) >>>=Number().__lookupSetter__(\"__proto__\") for each (__count__ in new ((__noSuchMethod__ = <x><y/></x>)\t)()) for (prototype in ({__noSuchMethod__: <y><z/></y>,  set __count__() { ( /x/ ); }  })) for (__count__.prototype in this) for (prop in true) for (__proto__ in this))) && 0)var prop, constructor;");
tryItOut("if(__count__.(-3/0)) yield; else  if (window >> <y><z/></y>) {export *;var __parent__, prototype; }");
tryItOut("throw StopIteration;");
tryItOut("/*infloop*/for(let prototype; (eval).call((uneval( \"\" )), (#1=[prop]) = <x><y/></x> :: ({}), <x/> > __iterator__); (uneval(this.__defineSetter__(\"__count__\", (constructor).__defineSetter__)))) {; }");
tryItOut("L:if((<x><y/></x>.__defineSetter__(\"__count__\", function (__iterator__) { return constructor } ) !=  '' )) yield; else  if ([(prop = <y><z/></y>)]) __count__, prototype; else yield <x><y/></x>;");
tryItOut("(false);");
tryItOut("export *; const constructor;");
tryItOut("/*infloop*/M:for(this;  \"\" ; <x/>) {return <><x><y/></x></>; }");
tryItOut("return prototype\n");
tryItOut("/*for..in*/for(const [__iterator__, constructor] = <x/> +=  \"\"  in arguments - <><x><y/></x></>) export prop;");
tryItOut("{}");
tryItOut("M:if((<x><y/></x>(<><x><y/></x></>)).watch(\"__parent__\", true)) ;");
tryItOut("/*infloop*/do if(<x/>) set else  if (void ) {Math.sin } while(([15,16,17,18].sort(/a/gi, constructor.__proto__)));");
tryItOut("with({}) { let(prop) { (({a2:z2})); } ");
tryItOut("return const __iterator__;");
tryItOut("L:with(new ([z1,,])(null) >>> __noSuchMethod__.__noSuchMethod__ getter= (*).watch)yield constructor;");
tryItOut("(this);\nexport __noSuchMethod__;\n const __proto__;");
tryItOut("for(let y in []);");
tryItOut("");
tryItOut("{export *; }");
tryItOut("if((+<><x><y/></x\f></>.throw(@foo))) { if ( /x/ ) {/*infloop*/for(<><><x><y/></x></></>; *.valueOf(\"number\"); 3.*) /*for..in*/for(const prototype in *::*\r) gc()yield; }} else {L: export *; }");
tryItOut("if((yield  \"\" )) { if (-1) {return <><x><y/></x></>;export prototype; } else {(<><x><y/></x></>).__defineSetter__ }}");
tryItOut("{do {} while(((let (constructor) (1e81.hasOwnProperty(\"__iterator__\") &= *::*))) && 0);(this.__defineGetter__(\"prototype\", function (({ __parent__: __parent__, __proto__: __count__ }), __noSuchMethod__) { yield [ \"\"  if ( /x/g )] } )); }");
tryItOut("switch( /x/ .prop =  /x/ ) { case (let (__proto__, constructor = *) (new (*)())): break; default: break ; }");
tryItOut("{}\nexport *;\n");
tryItOut("with((<xxx {prototype}={<x><y/></x>} />.(1e+81.__proto__)).__defineGetter__(\"__count__\", [1,2,3,4].map)){yield; }");
tryItOut("/*infloop*/for(var __noSuchMethod__ = <><x><y/></x></>; 1.3; 0/0) {const __parent__, __proto__;throw <><x><y/></x></>; }");
tryItOut("export __proto__;");
tryItOut("/*for..in*/for(let (function::__proto__) in (((new Function(\"\")))(this.__defineSetter__(\"__parent__\", eval))));");
tryItOut(" for each (__noSuchMethod__ in new <x><y/></x>.hasOwnProperty(\"prototype\")) for each (constructor in new ((*.valueOf(\"number\")))()) if (true--)");
tryItOut("return;");
tryItOut("M:if((@foo ^= null.watch(\"__parent__\", new Function))) {gc()(function ([y]) { })() } else while((eval(\"this\", <><x>\f<y/></x></>)) && 0)const __noSuchMethod__;");
tryItOut("let(try { return; } finally { ; } , constructor =  \"\"  ?  /x/  : ((__iterator__ = *).__lookupSetter__(\"__count__\"))) { throw prototype;");
tryItOut("/*for..in*/L:for(constructor = (Exception(undefined).@foo <=  /* Comment */__count__ = this) in (this.zzz.zzz)) {constructor: false && yield 0x99;.__noSuchMethod__ getter= (function(y) { yield y; let prototype, prototype = <x><y/></x>;; yield y; }).apply;{} }");
tryItOut("L: {yield; }");
tryItOut("{{; } }\n/*infloop*/while((__noSuchMethod__ = yield <y><z/></y>.__iterator__ >>>=[<y><z/></y> for (__proto__ in <x><y/></x>) for each (__count__ in *::*)])){return; }");
tryItOut("if(<><bbb xmlns=\"(p={}, (p.z = this)())\"><!--yy--></bbb></>)  /x/ ; const __proto__;");
tryItOut("if(prototype = @foo) const constructor = *, prop; else  if (window.valueOf(\"number\")) gc() else continue\t L;");
tryItOut("if(<y><z/></y>[__parent__]) { if (__proto__.__proto__) yield [,];} else let __count__ = 1e4, __noSuchMethod__;");
tryItOut("{while((<x><y/></x>) && 0){let __iterator__; } }");
tryItOut("{L: {if(#1#) { if (<><x><y/></x></>) const __count__;} else {}export *; } }");
tryItOut("/*for..in*/L:for(let __parent__ in @foo) {([[1]]); }");
tryItOut("const __noSuchMethod__, prototype");
tryItOut("/*infloop*/for(var ({ prop: ({ __iterator__: __iterator__, constructor: ({ prop: __count__, __parent__: __count__ }) }) }) = <>(__proto__ = )</>; window; (-1)) {yield;/*for..in*//* nogeckoex bug 349964 */ for  each(constructor in window) {yield window;{} } }");
tryItOut("with((( /x/g  /= <x/> >>>=eval(\"/*infloop*/for(var __proto__ = <x><y/></x>; <x><y/></x>; true) const prop = <y><z/></y>;\", #1=({__parent__: \n*::*})) for each (prop in (Math.sin).call(<x><y/></\fx>.((-0)), new (false)( '' ), #3={a:#3#}))))){let prototype = <y><z/></y>, __noSuchMethod__ = <><x><\fy/></x></>; }");
tryItOut("/*infloop*/for((yield *::* && <><x><y/></x></>); new (prototype).__defineSetter__(0/0, (-1)) ?  : <y><z/></y>.@foo; [,,]) {throw undefined;; }\r");
tryItOut("throw __proto__;");
tryItOut("/*for..in*/for(\t<y><z/></y>.__iterator__ in ((function(q) { return q; })(__iterator__.__parent__ getter= [1,2,3,4].slice)))const __noSuchMethod__ = true;");
tryItOut("/*for..in*/for(var __proto__ in <x/>.isPrototypeOf(__parent__)) return;");
tryItOut("break \ngc()");
tryItOut(";");
tryItOut("return\n(<x><y/></x>);");
tryItOut("if((#2=[yield (-0).propertyIsEnumerable(\"prototype\")])) gc()");
tryItOut("export *;");
tryItOut("switch(<y><z/></y>) { case <x><y/></x>: throw true; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __noSuchMethod__ in ((j)[ '' ])) {let prop = undefined, __iterator__;export prop; }");
tryItOut("with(prototype)/*infloop*/for(var ({ __iterator__: [prototype, , __parent__, __count__], __parent__: ({ __proto__: prop, __count__: __proto__ }) }) = (-1)((({}).hasOwnProperty)());  \"\"  >>>=__parent__; constructor.__parent__.prototype) {export *; }");
tryItOut("do {return; } while(({if(window) export *; else  if (false) {export prop; } else {{} } }) && 0);");
tryItOut("M:if(null) {[[1]]let prototype, __parent__; }");
tryItOut("__parent__ = false;");
tryItOut("/*infloop*/do throw undefined;\t while((<x/>).apply.(this.zzz.zzz).hasOwnProperty(\"__noSuchMethod__\"));");
tryItOut("/*for..in*/L:for(var prototype = <><>case 8: var prop = this, __parent__; ? window : true</></> in ({a2:z2})) {gc()yield; }");
tryItOut("let(__parent__) ((function(){gc()})());");
tryItOut("return  '' ;");
tryItOut("{}");
tryItOut("L: {/*for..in*//* nogeckoex bug 349964 */ for  each(let constructor in <x/>) (#2=.2) }");
tryItOut("(<><x><y/></x></>).watch\n(<y><z/></y>)\nbreak L;");
tryItOut("/*for..in*/L:for(var [prototype, __proto__] = <y><z/></y> in constructor) {gc() }");
tryItOut("/*for..in*/for(const __noSuchMethod__ in #1=[#1#]) {}");
tryItOut("do function(q) { return q; }\f while((<><x><y/></x></> += this) && 0);");
tryItOut("constructor = __iterator__;");
tryItOut("if(let (function::__proto__ = <><x><y/></x></>) Date()) if(<y><z/></y>) {return;(function ([y]) { })(); }\n\nM:if(@foo) switch(window) { default: case *::*: yield <x/>;break;  }\n else  if ((-0.throw(<><xxx>{prop}</xxx></>))) {/*infloop*/for(let __parent__ = gc; <xxx {__proto__}={<x><y/></x>} />; ((Function).call(<x><y/></x>,  '' ))) (<y><z/></y>); }");
tryItOut("return 'fafafa'.replace(/a/g, function (__parent__, __count__) { return [,] } );");
tryItOut("/*infloop*/M:while(1.2e3){/*infloop*/for((this)(<><x><y/></x></>,  \"\" ); *::*[[z1,,]];  /x/g ) \t{__parent__ = <x/>; } }");
tryItOut("/*for..in*/L:for(__count__ in ((function (__iterator__)(prototype = ({a1:1})))( '' )))gc()");
tryItOut("try { try { yyy } catch(__iterator__ if (__proto__ = #1=[#1#])) { gc() }  } catch(\fprototype if (function(){this.zzz.zzz;})()) { with({}) { (4.); }  } catch(__count__) { throw __noSuchMethod__; } ");
tryItOut("if(new (__noSuchMethod__.(window))(__proto__.eval(<x><y/></x>))) Function else (<><x><y/></x></>);");
tryItOut("if(033) { if (+* & prototype) gc() else let (__parent__, __iterator__) { var __proto__ = <y><z/></y>, __count__; }}");
tryItOut("L:if(null) { if (constructor) {((function ([y]) { })()); }} else ");
tryItOut("do yield; while((<y><z/></y>.valueOf(\"number\")) && 0);");
tryItOut("with({prototype: (({ prop: constructor }) = [,] <= <x><y/></x>)})L: {return <x><y/></x>;{} }\r");
tryItOut("/*infloop*/for(#0=({a1:1}) == 3/0; eval(\"<x><y/></x>.__defineGetter__(\\\"prop\\\", Math.sin)\", 1e4); [this]) var __proto__ = window;");
tryItOut("L: {}");
tryItOut("if(this.__defineSetter__(\"prop\", 'haha'.split)) { if ((<x><y/></x>.(<x><y/></x>))) {false;; } else {yield; }}return __proto__;");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let try { let(__proto__ = new (__parent__.valueOf(\"number\")[__noSuchMethod__ = __iterator__]), prop) ((function(){__parent__.__parent__ = __proto__;})()); } catch(__noSuchMethod__) { __proto__.prototype = __parent__; } finally { x::__iterator__ = __noSuchMethod__; }  in <><ccc:ddd></ccc:ddd></>) yyy, __proto__ = 3.141592653589793\nyield (this ? @foo : window);");
tryItOut("{([,,]); } const constructor;");
tryItOut("prototype = constructor;");
tryItOut("M:with({__parent__: yield *::*.throw(<x/> ? function ([y]) { } : 5.0000000000000000000000)}){1.3; }");
