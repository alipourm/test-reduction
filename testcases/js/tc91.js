tryItOut("this.zzz.zzz;");
tryItOut("let () { export prop; }");
tryItOut("for(let y in [5,6,7,8]) __count__ = 033");
tryItOut("with( /x/g )yield;");
tryItOut("with({}) { __noSuchMethod__ = constructor; } ");
tryItOut("M:with({__noSuchMethod__: ({__count__: 5.0000000000000000000000})})export __noSuchMethod__;");
tryItOut("return (prototype = true);");
tryItOut("__iterator__");
tryItOut("with({constructor: eval(\"M:with({prop: <><x><y/></x></>}){{}export __count__; }\", (prototype = *::* >> this))}){false;@foo }");
tryItOut("L: {let __iterator__;{return <><x><y/></x></>;yield @foo; } }");
tryItOut("/*infloop*/while(undefined.__defineGetter__(\"__count__\", 'haha'.split)){/*for..in*/for(let [prop, __count__] =  /x/g  in case 0: yield 1.3;break; case  \"\" : export *;break; default: throw  /x/ ;break; return;break; {}break; ) {(1 for (x in []))gc() } }");
tryItOut("continue L\n/*infloop*/while(new [__proto__, , __parent__] = __noSuchMethod__ || prop((false.hasOwnProperty(\"x::__proto__\")--))){/*for..in*/for(__parent__ in -3/0) {; } }");
tryItOut("let constructor\n/*infloop*/for(var __proto__ =  '' ; <x><y/></x>; [1,,]) (undefined);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(var constructor(<x><y/></x>) in <x/>) {yield window;; }");
tryItOut("if((false <<= <y><z/></y>)) {export *;return 1e-81; } else  if (({__count__: <x/> }) <<= __iterator__|=window) {gc() } else window;");
tryItOut("{with({__proto__: ({a1:1})}){return; }; }");
tryItOut("/*infloop*/while((((1 for (x in []))).apply)){yield <><x><y/></x></>;gc() }");
tryItOut("{var __parent__ = prototype, prototype; }\nbreak ;\n");
tryItOut("/*infloop*/for(let prop = function(id) { return id }; constructor;  '' ) {gc()return constructor; }");
tryItOut("gc()");
tryItOut("if([15,16,17,18].filter(__parent__, @foo.eval(prop))) ; else  if ((constructor.constructor)) const prop, __count__; else {throw 0;(__proto__); }");
tryItOut("return");
tryItOut("let (constructor, constructor) { M:if(return [];) return 0x99; else  if (__noSuchMethod__.__defineSetter__(\"constructor\", [1,2,3,4].slice)) {export constructor; } else {let prop = <x><y/></x>, __count__ = <y><z/></y>;/ } }");
tryItOut("L: ({}).__lookupGetter__");
tryItOut("with({}) return;");
tryItOut("with({}) { throw StopIteration; } ");
tryItOut("__proto__ = window, __count__ = <y><z/></y>\ngc()");
tryItOut("return\nexport *;export __proto__;");
tryItOut("with({prototype: ({__iterator__: (( \"\" [let (__noSuchMethod__, prototype) 0x99]) >>>=(p={}, (p.z = (uneval((p={}, (p.z =  /x/ )()))))())),  set __iterator__ __count__ (__noSuchMethod__, __parent__)yield undefined , ([15,16,17,18].some((new Function(\"\")), <y><z/></y>)) })}){/*infloop*/for(<bbb xmlns=\"constructor = <><x><y/></x\f></>\"></bbb>; null; @foo) {const __parent__;; }yield; }");
tryItOut("/*infloop*/while([11,12,13,14].some){const __parent__ = this, prototype = *::*; }");
tryItOut("throw StopIteration;");
tryItOut("let ([__parent__.__proto__, , , ({ __iterator__: prop(__iterator__ = prototype), __noSuchMethod__: constructor })]) {  }");
tryItOut("if(false) {} else  if (<x/>) {( /x/ );{} }");
tryItOut("switch((yield <y><z/></y>)) { default: if(( \"\" )()) L:if(this) { if (<><x><y/></x></>) {return; } else {yield;yield; }} else  if ((constructor.__iterator__ setter= gc((__parent__ = <x/>), [[1]])).__defineSetter__(\"__count__\", (!1e4))) {export __iterator__; }case 5: break; case String(): if(new (Function)(<x\f><y/></x>, <x><y/></x>))  else  if (<><x><y/></x></>.unwatch(\"__parent__\")) break M;case (let prototype = 4., __count__): /*for..in*/for(const prop = (this.isPrototypeOf(<x><y/></x>)) in 1e81) {{}yield; }break; case ~<><x><y/></x></>: yield;break;  }");
tryItOut("/*for..in*/for(var __parent__ in __proto__ >>> (-1) /=  /x/ ) /*for..in*//* nogeckoex bug 349964 */L: for  each(const <><x><y/></x></> in <x><y/></x>) {}");
tryItOut("M:switch((window)) { default: let (setter = <x><y/></x>, __count__ = @foo) { break ; }case ((eval)()): break; case 4: ; }");
tryItOut("/*infloop*/while(<x/>){export *; }");
tryItOut("/*infloop*/while(function  __proto__ () { yield <><x><y/></x></> ? <><x><y/></x></> : undefined } ()){throw prop = window;M:if(undefined) {<x/>;yield; } }");
tryItOut("/*infloop*/M:while(0.1){#3={a:#3#}; }\n\f");
tryItOut("L: {yield @foo; }");
tryItOut("/*infloop*/do while((@foo) && 0)return window; while(new new Function());");
tryItOut("if(@foo.__defineSetter__(\"__proto__\", )) { if (! /x/g ) @foo; else {const prop = <><x><y/></x></>; }}");
tryItOut("/*for..in*/L:for(var [__count__, __iterator__] = (window.__lookupGetter__(\"constructor\")) in <x><y/></x>) {var prototype = *::*; }\n");
tryItOut("L: yield __noSuchMethod__;");
tryItOut("with({}) L:switch(prop.throw(<><x><y\n/></x></>)) { default:  }");
tryItOut("([,,])\nfunction ()try { {} } catch(__proto__) { return; } finally { return; } ");
tryItOut("({}).hasOwnProperty\n<x><y/></x>");
tryItOut("<><x\n><y/></x></>\n");
tryItOut("/*infloop*/L:for(const __noSuchMethod__; *::*.__proto__; constructor.__noSuchMethod__ setter= function (__proto__, __noSuchMethod__) { yield <x/> } ) var prototype, constructor;");
tryItOut("/*infloop*/while(__parent__(<y><z/></y>).__parent__ getter= [1,2,3,4].map); const __noSuchMethod__;");
tryItOut("L: {/*for..in*/for(var prototype = (true ? window : window for each (__proto__ in [[]]) for (__proto__ in <y><z/></y>)).watch(\"constructor\", new Function) in __count__) {} }");
tryItOut("/*infloop*/M:while(([(({}).hasOwnProperty)(#1#, __proto__) if (window - <><x><y/></x></>)]))/*for..in*//* nogeckoex bug 349964 */ for  each(const get.constructor in <y><z/></y>) {var __parent__, constructor = *::*;return <x><y/></x>; }");
tryItOut("{__count__, constructor = #1#;export prototype; }");
tryItOut("L:if( /x/g ) {{}__noSuchMethod__ = -3/0; } else  if (\n(new Iterator(true))) {}");
tryItOut("/*infloop*/for(prop; 1e-81; <><x><y/></x></>) {(this);export __noSuchMethod__; }");
tryItOut("");
tryItOut("do with((window for (__proto__ in this))){yield;yield *; } while((('fafafa'.replace(/a/g, function  __parent__ ()-1)).eval(<><employee id=\"1\"><name>Joe</name><age>20</age></employee></> &&  /x/g )) && 0);");
tryItOut("if(__noSuchMethod__) {yield true;return 3.141592653589793; }");
tryItOut("/*for..in*/L:for(const __noSuchMethod__ = <y><z/></y> in (<x><y/></x> >=  /x/ ).*) if([new (<><x><y/></x></>)(__iterator__<x/>,  /x/ )].filter\f(Math.pow)) {gc } else  if (prototype =  \"\" ) {([z1,,]); } else return true;");
tryItOut("switch(__parent__ = constructor = [[1]]) { default: L:while((*::*) && 0)export *;break; case 9: break; case 6: break;  }");
tryItOut("M:if((constructor = this)) ; else  if (<><x><y/></x></>()) {continue ; }\n");
tryItOut("__iterator__ = prototype;");
tryItOut("/*infloop*/for(var prototype; (!<y><z/></y>); <y><z/></y>.isPrototypeOf( /x/g )) {export *;throw  /x/ ; }");
tryItOut("export *;");
tryItOut("let(__proto__) ((function(){ '' ;})()); const __iterator__;");
tryItOut("/*for..in*/for(__count__ in (((1 for (x in [])))(<xxx>{prop}</xxx>)))if(#1=[#1#]) {export *; } else __count__ = <x/>, prop = this;");
tryItOut("if((new @foo(__count__ = prototype))) { if (<></> >= false.valueOf(\"number\")) {M:do {[1,,]; } while((try { new Function } finally { return; } ) && 0); } else const __iterator__ = <x><y/></\fx>, __noSuchMethod__;}");
tryItOut("if() {{} } else  if (*.eval(__parent__)) {__noSuchMethod__, 3.141592653589793 = <x><y/></x>; } else {{} }");
tryItOut("const __parent__ = __proto__, ;\n;\n");
tryItOut("/*for..in*/for(const ({ __proto__: prototype, __noSuchMethod__: __count__ }) = this.zzz.zzz.__parent__ in <bbb xmlns=\"__parent__\"><x><y/></x><!--yy--></bbb>) {break ;do gc() while(((p={}, (p.z = <y><z/></y>)())) && 0); }");
tryItOut("throw *::*;");
tryItOut("L:if(3/0) yield @foo;{ if (null)  else let prototype = (function ([y]) { })();}");
tryItOut("for(let y in []);");
tryItOut("for(let y in []);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var ((__count__)) in  /x/ ) M:if(__iterator__ = <y><z/></y>) return;");
tryItOut("if(@foo) {this;gc() } else {null;export *; }");
tryItOut("L: gc()");
tryItOut("L:with(<x><y/></x>.(#3={a:#3#})){constructor = __parent__, prop;export *; }");
tryItOut("if(window.propertyIsEnumerable(\"__noSuchMethod__\")) { if (0x99.@foo) return 0.1;} else {}");
tryItOut("if(<><bbb xmlns:ccc=\"<x><y/></x>\"><ccc:eee></ccc:eee></bbb></>) {{}(false); }");
tryItOut("/*infloop*/do { set __parent__ __parent__ (__count__, prototype) { return <y><z/></y> }  } while(this.zzz.zzz[new (function(y) { yield y; ; yield y; })(prop, *::*)]);");
tryItOut("/*for..in*/for(let prototype in (yield *)) {{/*for..in*/for(constructor in ((function (__noSuchMethod__) { <x><y/></x> } )(window))){ } }throw prototype; }");
tryItOut("/*for..in*/for(const __noSuchMethod__ = <x/> in <y><z/></y>) ");
tryItOut("throw null;\nvar prototype = <><x><y/></x></>;return <><x><y/></x></>;\n");
tryItOut("/*infloop*/L:for(((<x><y/></x> % 1e-81).propertyIsEnumerable(\"prop\")); [delete( \"\" ), ] = __parent__; Function(*)) {export *;(true);false }");
tryItOut("/*for..in*/for(var __proto__ in new (<x><y/></x>)(<y><z/></y>, *)--) /*for..in*/M:for(let __count__ in (((prototype))(this.@foo))){throw <x><y/></x>;yield true; }");
tryItOut("do L:with(prop)yield; while(((this /= function(id) { return id } if ({}))) && 0);");
tryItOut("prototype");
tryItOut("/*infloop*/for(const constructor; @foo || <><x><y/></x></\t>; <xxx {__iterator__}={(new this())} />.(<y><z/></y> >>> window)) with(*::*.unwatch(\"__proto__\"))this;");
tryItOut("/*for..in*/for(const [prototype, __proto__] = [][<x><y/></x>] in (-0)) return;");
tryItOut("this.zzz.zzz;");
tryItOut("if((eval(\"M:while((<x><y/></x>.prototype = (({__count__: <x/> }))) && 0)({}).__lookupGetter__\", prototype.__iterator__ setter= false))) {return <x/>;throw <y><z/></y> } else  if ((({prototype setter: this, __count__: <><x><y/></x></> }))) /*infloop*/while(<!--yy-->){export __proto__; } else return;");
tryItOut("if(undefined) { if ( '' ) return;} else {var __proto__ = <x><y/>\t</x>, __proto__; }");
tryItOut("/*for..in*/for(let prototype = ((p={}, (p.z = prop)())) in -1) ().__defineSetter__");
tryItOut("/*infloop*/while( /x/ ++)__proto__;");
tryItOut("with((!({})))gc()");
tryItOut("/*for..in*/for(let constructor = <x/> , true in (1e4).watch()) if(prop = prototype) { if ((*::*.throw(null)\f)) { } else {yield; }}");
tryItOut("if(( \"\" [@foo])) { if ([z1] || true) __parent__; else {return false;prop; }}");
tryItOut("with({({ __iterator__: prop }): (let (prototype = 1e-81, __count__) window)})");
tryItOut("");
tryItOut("try { throw prop; } finally { prototype = constructor; } ");
tryItOut("const prop =  /x/g ;");
tryItOut("break ;\nM:while((this.zzz.zzz) && 0)do {return this;export *; } while((true) && 0);\n");
tryItOut("if(new Array()) {<y><z/></y>;prototype = prototype; } else  if (__count__) {let each, function::prototype; } else yield;");
tryItOut("do {} while((new ({}).__lookupGetter__()) && 0);");
tryItOut("M:if(((this.__defineSetter__(\"__parent__\", 'haha'.split)))) { } else  if ((new (function  __proto__ ()setter)((constructor = window)))) {return; }");
tryItOut("if(eval(\"export __parent__;\", <x><y/></x>.yoyo(*::*))) {} else  if ((prototype)(<><x><y/></x></>.watch(\"__iterator__\", (__noSuchMethod__).call)).eval( /* Comment */([11,12,13,14].some))) {gc()return; }");
tryItOut("let ([, __proto__, prototype, __noSuchMethod__, prototype] = ([,,] <<= *)) { continue L; }");
tryItOut("L:if(<x/>.__defineGetter__(\"__proto__\", <><x><y/></x></>).eval(*::* in this)) if(({__iterator__: <><x><y/></x></>})) (<y><z/></y>); else  if (((p={}, (p.z = [z1] /= true)()))) let __parent__, __count__ = <y><z/></y>; else  if (<x/>) {do {export *; } while((\n@foo) && 0);; } else throw __proto__;");
tryItOut("if( { export __count__; } ) let constructor, __iterator__;");
tryItOut("get = prop;");
tryItOut("L:with({__proto__: [] = (* if (undefined)).propertyIsEnumerable(\"function::__proto__\")})/*for..in*/for((constructor) in each) {([]).__defineSetter__ }\n/*for..in*/for(let __proto__ in <>__iterator__['function::__count__']</> >>= yield) with([<x><y/></x> && 1e81])const prototype;\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const constructor in (p={}, (p.z = new (undefined)(__parent__))())) L:if((__noSuchMethod__ = 4.)) {var prop = *::*, __iterator__;return []; } else  if ([(-1) if (1e+81)]) {{}gc() } else throw <><x>\f<y/></x></>;");
tryItOut("M:if(3/0) { if (5.0000000000000000000000 / undefined) yield; else export prototype;}");
tryItOut("let (constructor) { break L; }");
tryItOut("L:if(__parent__) var prop = <><x><y/></x></>;");
tryItOut("/*infloop*/for(__proto__ = (__iterator__ = .2); <y><z/></y> .@ (-1); window) var __iterator__ = *::*;with(RegExp(@foo).__lookupSetter__(\"constructor\").eval(<x><y/></x>.__lookupGetter__(\"prototype\"))){({}).hasOwnPropertyreturn; }");
tryItOut("while(((({}).__lookupGetter__).call) && 0)if(<y><z/></y>) {export *; } else  if (<><x><y/></x></>/*\n*/) {const prop, constructor; }");
tryItOut("L: /*infloop*/do arguments; while(undefined);");
tryItOut("continue ;\n<><x><y/></x></>\n\n");
tryItOut("constructor = false");
tryItOut("try { return __proto__ = @foo; } catch(__parent__) { let(constructor =  \"\" , __iterator__) ((function(){yield;})()); } finally { with({}) (undefined); } ");
tryItOut("/*infloop*/for( = (function  __noSuchMethod__ () { yield  /x/g  } )(); <y><z/></y>; try { return (<x><y/></x>.eval(try { return; } finally { throw <><x><y/></x></>; } )); } catch(constructor) { return <x><y/></x>; } finally { with({}) ; } ) while((<><x><y/></x></>) && 0){__noSuchMethod__ = <x><y/></x>, __count__ = this;;yield this; }");
tryItOut("this.zzz.zzz;");
tryItOut("with({}) prop = __count__-=(__count__ &= [1]), __count__;");
tryItOut("yield\nyield __parent__;");
tryItOut("L: {/*for..in*/M:for(var [prop, __proto__] = * in null) {break ; } } const prop;");
tryItOut("/*infloop*/for(const __noSuchMethod__; ({a2:z2}); ({ __count__: ({ prop: prototype }), ((uneval( /x/g  % .2))).1e+81: __proto__ }) = new (({}).hasOwnProperty).apply()) {yield __noSuchMethod__ = (#1=[#1#].watch(\"prototype\", [1,2,3,4].map)); }");
tryItOut("/*infloop*/for(let __proto__; <x/>.eval((__iterator__(<><x><y/></x></>))); function  __parent__ (__iterator__)-3/0) gc()");
tryItOut("break L;");
tryItOut("let(__noSuchMethod__, __noSuchMethod__ = <><x><y/></x></>) ((function(){__noSuchMethod__ = __proto__;})());");
tryItOut("/*infloop*/while(new Error())");
tryItOut("if(<><\f>yyy</></>) { if ((__parent__.unwatch(\"prop\"))) yield  /x/g ;} else {switch((({__count__: this }))) { case 8: while((arguments) && 0)( /x/ );break; __noSuchMethod__;break; return 0/0;break; [1,2,3,4].map }var __proto__; }");
tryItOut("/*infloop*/while((<x/>).call(<x><y/></x>, ))export __parent__;");
tryItOut("{__parent__ = [[1]]; }");
tryItOut("{L: {function(q) { return q; } } }");
tryItOut("/*infloop*/for(let prototype; window; 1e-81) export __count__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(const __iterator__ in window) \n{} const __iterator__;");
tryItOut("with({}) return <>default: case 1e4.isPrototypeOf(prototype): break; break; </>;");
tryItOut("export *\n");
tryItOut("yield 'fafafa'.replace(/a/g, ({}).__lookupGetter__);");
tryItOut("if(window) {throw  /x/g ; } else  if ((([[1]] <  /x/ ).watch(\"prototype\", Function))) /*for..in*/for(var prop = false.* in <x/>) {[,,z1];export __count__; }");
tryItOut("switch(*) { case (this.zzz.zzz): case 7: break; return;break; case 2: if(window) return; else  if ([1]) export __proto__; else {;throw __noSuchMethod__ setter: Math.pow; }/*for..in*/for(var prototype = this in prop) export *;break; throw @foo;break; export __parent__; }");
tryItOut("L: {L:if(window) { if (this.@foo) return null;} else {; } }");
tryItOut("{}");
tryItOut("/*for..in*/for([__proto__, __noSuchMethod__] = <>-1</>.isPrototypeOf(this++) in __parent__.prototype) {__noSuchMethod__, __proto__; const __count__;{} }");
tryItOut("L: /*infloop*/while(<x><y/></x>){yield;__count__ = <><x><y/></x></>, __proto__ = 1e-81; }");
tryItOut("with(*::*){throw window; }");
tryItOut("if(false) return 1e81\nyield  /x/ ;");
tryItOut("if( /x/g .__count__) { if ((3.141592653589793).apply) } else continue ;");
tryItOut("/*infloop*/for(var __count__; <x><y/></x>.(this); (__proto__-=*)) export prop;{}");
tryItOut("if(<x/>.unwatch(\"prototype\")) { if ((new  /x/g (-3/0, function::__count__)).__defineGetter__(\"__iterator__\", this)) if(<x/>) return; else gc()}");
tryItOut("/*infloop*/for(0/0; 1.2e3; @foo) {export *;return __count__; }");
tryItOut("/*infloop*/for(let constructor; (false++); (prototype = __noSuchMethod__.@foo)) {return;[1,2,3,4].slice }");
tryItOut("let(prototype, __parent__( \"\" ) = __noSuchMethod__.prop = (yield this)) ((function(){with({}) { return ((p={}, (p.z = constructor = false)())); } })());");
tryItOut("/*for..in*/for(var (<x/>.__lookupGetter__(\"__iterator__\"))['__proto__'] in __parent__ = window) {with(window){yield this; } }");
tryItOut("gc()\nlet __iterator__ = window;\n");
tryItOut("export constructor\n");
tryItOut("/*infloop*/for(yield this <<= 1.3; <>.2</>; (new (<x><y/></x>).__defineSetter__( /x/ , __count__) @ __count__ = prototype)) if(this) { if (<x><y/></x>) (*::*); else { }}continue M;");
tryItOut("L: const constructor =  /x/ ;");
tryItOut("yield;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let getter in <y><z/></y>) (*);");
tryItOut("M:if(({__count__ getter: Math.pow, __parent__: <><x><y/></x></>.* })) {function (prop, __proto__)function ([y]) { }(<><x><y/></x></>); } else  if (\n__noSuchMethod__) {false;export prop; } else throw window; const __proto__;");
tryItOut("throw __proto__;let constructor, __count__;continue L;");
tryItOut("yield <x/>; const __count__;");
tryItOut("if((<><x\t><y/></x></> -= 1.3)) { } else  if (window.isPrototypeOf(<x><y/></x>)) yield; else {gc() } const __parent__;");
tryItOut("");
tryItOut("/*infloop*/do {return; } while(<y><z/></y> ^= <bbb xmlns=\"(RangeError(<y><z/></y>, undefined) instanceof __parent__ = <><x><y/></x></>)\"><ccc:ddd>yyy</ccc:ddd></bbb>);");
tryItOut("if(((({prop setter:  /x/g , __iterator__ setter: 'haha'.split }))--)) { if (function (constructor, __proto__) {  } ) /*for..in*/for(var <x><y/></x> in ((gc)(<x><y/></x>))){;({}).__lookupGetter__ }} else {export *; }");
tryItOut("{return function(id) { return id };<x><y/></x><x><y/></x><x><y/></x> }");
tryItOut("M:switch(new this(*, 1.2e3).hasOwnProperty(\"__iterator__\")) { default: M:if(__iterator__(prop) = (prototype.( /* Comment */<><x><y/></x></>))) { if (new (++<x/>)()) gc()} else export *; }");
tryItOut("/*for..in*/M:for([prototype, prototype] = ( /* Comment */-function(id) { return id }) in ({}).hasOwnProperty(__iterator__)) export prop;\nthrow StopIteration;\n");
tryItOut("L: {return (eval(\" /x/g \", [,]));throw  \"\" ; }");
tryItOut("M:if((__noSuchMethod__ = <><x><y/></x></>)[eval(\"throw window;\", *::*)] %= [, ] = ({__noSuchMethod__: ( /x/g  for (default: {}break;  in <><x><y/></x></>)) })) { if (({prop: {}, prototype: <x/> })) } else {throw StopIteration;if((3/0)(__proto__, false)) let prop; }");
tryItOut("/*for..in*/for(let __count__ in <x><y/></x>) x::__parent__ = this, __parent__ = <x><y/></x>\n;");
tryItOut("let(__iterator__) { 'haha'.split\nbreak L;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let (((function ([y]) { })().eval(<><x><y/></x></>)))(eval(\"__count__ = <><x><y/></x></>, __proto__ = *;\", constructor)) in <xxx {constructor}={({__noSuchMethod__:  \"\" })} />) {/*for..in*/for(const __count__ in ((Math.sin)(<x/>)))yield;Function }");
tryItOut("M:with({prototype: (this.zzz.zzz)}){{yield  '' ;return constructor; }\n }");
tryItOut("L:if((new RangeError())) { if ([z1,,]) {break L;<><x><y/></x></>; }} else {}");
tryItOut("/*infloop*/M:for([1,,]; <><x><y/></x></>; false) yield;/*for..in*/for(let prop in  /x/ ) ");
tryItOut("L:if(Error({}.__defineSetter__(\"constructor\", gc))) {return; }");
tryItOut("__parent__ = __iterator__;");
tryItOut("if((this.__defineSetter__(\"__proto__\", [1,2,3,4].map))) {for(let y in []);{while(((p={}, (p.z = 1e+81)())) && 0);with(0/0){; } } }");
tryItOut("for(let y in [5,6,7,8]) return -1 &= <x><y/></x>;");
tryItOut("this.zzz.zzz;");
tryItOut("return ({__noSuchMethod__: <><x><y/></x></>});");
tryItOut("return;");
tryItOut("return undefined;");
tryItOut("M:if((this.hasOwnProperty(\"__iterator__\"))) { if ([window].map(Math.pow))  else {({}).hasOwnProperty }}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __noSuchMethod__ in  \"\" .__noSuchMethod__ =  \"\" .__lookupGetter__(\"prototype\")) {true;return #1#; }");
tryItOut("gc()");
tryItOut("if(function(y) { yield y; return;; yield y; }()) { if (constructor) yield; else {}}");
tryItOut("return;");
tryItOut("/*infloop*/for((prototype.constructor = (-0)); ((yield __proto__)); (uneval(__noSuchMethod__)).@foo) {L: {export *;throw null; }gc() }");
tryItOut("if(<><x><y/></x></> for each (prop in  /x/g )) (*);{const \t__count__ = window, __noSuchMethod__ = [,,]; }");
tryItOut("with(__iterator__)__noSuchMethod__;\n__parent__, __noSuchMethod__\n");
tryItOut("throw  /x/g \n/*infloop*/for(let __count__; ((__count__ = undefined).valueOf(\"number\")); @foo.throw(@foo\t)--) {yield; }");
tryItOut("/*infloop*/for(prop =  \"\" ; <><x><y/></x></> @ null + ({a1:1}); \f)  \"\" ");
tryItOut(";");
tryItOut("if(0 for each (prop in <><x><y/></x></>) for (prototype.__parent__ in [z1,,]) for (prop in <><x><y/></x></>) ^= new (<y><z/></y>)()) { if ((new \t(gc)(3/0) % prop)) for(let y in []); else {yield;if(window.__proto__) { if (__noSuchMethod__ = <x><y/></x>) {<x><y/></x>;export __parent__; } else {\freturn; }} }}");
