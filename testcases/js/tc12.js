tryItOut("/*for..in*/for([prototype, constructor] = new ((<x><y/></x> for (constructor in [])))(1e-81 , <x><y/></x>)() in export __parent__.yoyo(new (*::*)( '' )).__defineSetter__(\"__parent__\", (1 for (x in [])))) {for(let y in [5,6,7,8]) return __iterator__; }");
tryItOut("__iterator__: new function (__iterator__) { yield -0 } ()");
tryItOut("continue ;");
tryItOut("let __parent__;");
tryItOut("/*infloop*/M:for(let __noSuchMethod__; <x><y/></x>; __parent__) {yield <x/>; } const __count__;");
tryItOut("while((this.__defineGetter__(\"__parent__\", function (prop) { (({a2:z2})); } )) && 0)throw __iterator__;");
tryItOut("{yield  /x/ ;L: {break ; } }");
tryItOut("{break ;(<><x><y/></x></>); }");
tryItOut("yield *::*.__noSuchMethod__.*;");
tryItOut("L: {if(__count__) let __noSuchMethod__ = .2, __count__ = [1,,]; const prop;export *; }");
tryItOut("//h\nwith(-0\n)switch(((yield <y><z/></y>))) { default: break; break; break; case [*::* for each (prototype in __iterator__)]: <x/>;case 1: gc()break;  }");
tryItOut("with({prototype: __iterator__-=*::*})let __iterator__, constructor;");
tryItOut("{const [] = <><x><y/></x></>, prototype = <><x><y/></x></>; }");
tryItOut("L:if((new [,]( /x/g , window))) 0/0");
tryItOut("{{} }");
tryItOut("with({__count__: (constructor.valueOf(\"number\"))})[z1,,];");
tryItOut("export *;");
tryItOut("L: export constructor;");
tryItOut("/*infloop*/do if(<x/>) return __noSuchMethod__; else 0; while(__proto__ = []);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prop in this if (window)) /*infloop*/M:for(const __count__; <\fx><y/></x> instanceof 1e+81; ([].__iterator__)) var __count__;");
tryItOut("export *; const ({ __count__: [({ __proto__: __count__ })] });");
tryItOut("if((p={}, (p.z = (({}).__lookupGetter__(<><x><y/></x></>)))())) {return window.__defineSetter__(\"__parent__\", null); } else  if (0.1) {export *; }");
tryItOut("let (({ __noSuchMethod__: ({ prototype: ({ __parent__: constructor, constructor: __count__ }) }), prototype: __noSuchMethod__ })) { undefined; }");
tryItOut("return;\nwith({__iterator__: ({__iterator__: <x><y/></x> })})({this.prop{/*infloop*/for(let __iterator__;  '' ; @foo) ({}).hasOwnProperty })\n");
tryItOut("/*for..in*/for(__proto__ in  /x/ ) {undefinedbreak L; }");
tryItOut("/*infloop*/for(const prototype; __count__.(4.); __parent__ .@ 3.141592653589793) {export __iterator__;Math.sin } const __parent__;");
tryItOut("L:while((((<x/>))) && 0){return; }");
tryItOut("/*infloop*/L:while(this.__defineGetter__(\"__parent__\", Function))");
tryItOut("{if(this.zzz.zzz) {export *;var __iterator__ = undefined; } else {({}).__defineSetter__ }/*for..in*/for(let __noSuchMethod__ in ((eval)(this))); }");
tryItOut("/*infloop*/M:while(<>yyy</>){if(__iterator__) {var __iterator__ =  /x/ ;yield undefined; } else continue ;export *; const constructor; }");
tryItOut("return *::*");
tryItOut("if(new  /x/ ()) {} else  if (({}).__defineSetter__(\"prototype\", [1,2,3,4].map)) {gc()window }");
tryItOut("M:if(((function::__count__ = @foo)\n) ? let (__parent__, constructor = <x><y/></x>) (function  __count__ (__proto__, __iterator__) { return this } ).call(3, ) : <xxx>{__count__}</xxx>.((__proto__ = __proto__))) /*for..in*//* nogeckoex bug 349964 */ for  each(var <>__count__</>.__noSuchMethod__ in (gc())) {yield  '' ; } else  if (__noSuchMethod__) ; else {/*infloop*/for(<x><y/></x>; ; (yield window)) {__noSuchMethod__ = 3.141592653589793, __noSuchMethod__ = #1#;gc() } }");
tryItOut("prop, prop = true");
tryItOut("");
tryItOut("");
tryItOut("switch(prototype = prop) { case <x/>(__iterator__ = @foo, <><x><y/></x></>): break;  }");
tryItOut("L: { }{}\nyield [[1]];\n");
tryItOut("gc()");
tryItOut("M:if(__iterator__%={}) { if ((__noSuchMethod__*::*(/))  else yield (-0);}\nlet (__proto__, __iterator__ = ({})) { (this); }\n");
tryItOut("/*infloop*/for(<x><y/></x>; ; (__count__ =  \"\" )) break L;");
tryItOut("{}\nreturn ({a2:z2});\n");
tryItOut("L: /*infloop*/do var constructor; while( /x/g  >>>=constructor);");
tryItOut("break L;");
tryItOut("/*infloop*/for(var __noSuchMethod__; this; true) export __proto__;");
tryItOut("yield this");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const prop in (new true(<x><y/></x>))) return //h\n(<x/>.@foo);break \nexport *;");
tryItOut("\tconst constructor;\nexport __parent__;\n");
tryItOut("/*infloop*/while(({__parent__: #1=<><x><y/></x></>, <>[({a2:z2})]</><bbb xmlns:ccc=\"__parent__\"><ccc:eee></ccc:eee></bbb><ccc:ddd><ccc:ddd><ccc:ddd></ccc:ddd></ccc:ddd></ccc:ddd>window  }).isPrototypeOf(prop/@foo))throw <><x><y/></x></>;");
tryItOut("export *;");
tryItOut("/*for..in*/for(var [__parent__, __count__] = @foo.__parent__ in <x><y/></x>) break L; const __proto__;");
tryItOut("if(break M\t) { if (this.__defineGetter__(\"__iterator__\", function () { yield @foo } \t)) ; else let (__noSuchMethod__, __parent__ = window) { continue ; }}");
tryItOut("/*for..in*/M:for(__parent__ in (((__iterator__).watch).call(<y><z/></y>, ))) {{} }");
tryItOut("{(*);throw false;\t }");
tryItOut("/*infloop*/for(prop |= <><x><y/></x></>; ({}); __count__ = __count__: <x><y/></x>) ;");
tryItOut("\n__noSuchMethod__ = __iterator__;");
tryItOut("return;");
tryItOut("with((window %  '' ).@foo){return null; }");
tryItOut("/*infloop*/for(@foo ? <x><y/></x> : -1; <x><y/></x> % <><x><y/></x></>; -({__noSuchMethod__: (*::* if (*::*)), prototype getter: 3.141592653589793 })) {export *;throw <y><z/></y>; }");
tryItOut("__count__");
tryItOut("/*for..in*/for(let __count__ = <x><y/></x> - <y><z/></y> in __iterator__) {1e4;return; }");
tryItOut("for(let y in []);");
tryItOut("");
tryItOut("for(let y in [5,6,7,8]) return __iterator__ =  /x/g  <<= this.__defineGetter__(\"function::__noSuchMethod__\", [1,2,3,4].map);var __proto__, __parent__ = window;");
tryItOut("if(({ __proto__: prototype, __iterator__: ({ __parent__: prop }) }) = (uneval((new false([,], 3/0)).watch(\"__parent__\", function(q) { return q; })))) if(window) { if ((<x/>\n)) ;} else {; } else  if ((+@foo.throw(((__parent__)(*, [1]))))) {/*for..in*//* nogeckoex bug 349964 */ for  each(let function::prop in <><x><y/></x></>) {const prototype = undefined, __noSuchMethod__ =  /x/ ;yield; } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __iterator__ in <x/>) {var x::__noSuchMethod__; }");
tryItOut("if(__noSuchMethod__ = __parent__.__defineSetter__(\"prop\", gc)) {if(<y><z/></y>) { if (null) \n{; } else {export *; }} } else  if (\n4..__iterator__) while(([[]]) && 0){function  __count__ ( get prototype getter () {  } )nullyield <><x><y/></x></>; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__noSuchMethod__ in [11,12,13,14].filter) if(<xxx {constructor}={(eval)} />) {{} } else {export __parent__;null; }");
tryItOut("constructor = __proto__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(__count__ in <><x><y/></x></>) {let __proto__, __parent__;gc() }");
tryItOut("if(<><x><y/\f></x></>.hasOwnProperty(\"__iterator__\")) (null); else  if (\n<x/>) let prototype; else yield;");
tryItOut("([[1]]);continue M;");
tryItOut("while((([15,16,17,18].filter(function () '' , -0))) && 0)return 3.141592653589793;");
tryItOut("var __count__, delete;");
tryItOut("with({__proto__: prototype}){return; }");
tryItOut("do return; while(((({__parent__: constructor,  get __parent__ __parent__ (prototype) { return null }  }).__lookupGetter__(\"__iterator__\"))) && 0);");
tryItOut("L: ");
tryItOut("/*for..in*/for(var prop in ((function ()let (__noSuchMethod__) window)([ /x/ ].map( \"\" )))){if(<y><z/></y> >> 1e81)  else  if (Error(5.0000000000000000000000,  /x/g )) {export prop;; } else {gc() }M:with({__noSuchMethod__: ({})}) }");
tryItOut("while((<><x><y/></x></>) && 0){yield  /x/ ;export *; }");
tryItOut("L:while(((++#1#)) && 0){/*infloop*/L:for(const prop = (<y><z/></y> if (*)); ('fafafa'.replace(/a/g, function  prototype (__count__) { return  ''  } )); __iterator__ .. <><x><y/></x></>) <y><z/></y>; }");
tryItOut("/*for..in*/L:for(const prototype in ((<> </>)(()))){yield <x/>; }");
tryItOut("gc()\nconstructor, __noSuchMethod__\n const [__proto__, __iterator__, ({ __noSuchMethod__: [, __noSuchMethod__, ({ prototype: __parent__, constructor: ({ __iterator__:  { /a/gi } , __iterator__: ({ getter: prop, __count__: __noSuchMethod__ }) }) })], __iterator__: constructor }), __parent__];");
tryItOut("if(((({}))[<><x><y/></x></>] .@x:: false.@*.unwatch(\"prop\"))) { if (<y><z/></y>.watch(\"__iterator__\", this)) {if(prop) {(*);\f } } else {var __parent__ = undefined;continue L; }}");
tryItOut("L: if(this.__defineSetter__(\"prop\", function (prototype) { return <><x><y/></x></> } )) { if (<><x><y/></x></>.isPrototypeOf(<y><z/></y>)) {(-1); } else {}}");
tryItOut("try { with({}) { throw get; }  } catch(constructor) { with({}) { __noSuchMethod__ = __parent__; }  } ");
tryItOut("__parent__ = __count__\r;");
tryItOut("export *\nexport __iterator__;");
tryItOut("throw __noSuchMethod__;");
tryItOut("__iterator__ = __proto__;");
tryItOut("{{}gc() }");
tryItOut("let (__iterator__) { if(<><x><y/></x></>) {return []; } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let constructor.__count__ in (uneval(<><x><y/></x></>)) = (this.__defineSetter__(\"__parent__\", (*::*).watch))) {{}yield; }");
tryItOut("/*for..in*/for((prop-=constructor.prototype setter= function  __proto__ (prototype, __proto__ = *::*)0.1 *= *), __proto__ = <><x><y/></x></>.eval(([,,z1])(<y><z/></y>)) = true ? <x><y/></x> : 5.0000000000000000000000 in (prop = [[1]]//h\n).__defineSetter__(\"__iterator__\", (function(y) { yield y; (prototype).watch; yield y; }).call)) {if((false + *::*)) ; else {(__iterator__); /x/ ; } }");
tryItOut("let (__noSuchMethod__) { ; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __iterator__ in __noSuchMethod__) export *;");
tryItOut("yield\n");
tryItOut("with({constructor: Exception(arguments || null)})const __parent__;");
tryItOut("{{} }");
tryItOut("/*infloop*/M:for(<x>\n<y/></x> /=  /x/g ; <><bbb xmlns:ccc=\" \"\" \"><ccc:eee></ccc:eee></bbb></>; C) {__noSuchMethod__, prop;{break ;return; } }");
tryItOut("/*infloop*/while(--<y><z/></y>\n)gc()");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prototype.prop in function(id) { return id }) throw [,,z1];\n { yield this <= ({a2:z2}) } \n");
tryItOut("throw StopIteration;");
tryItOut("switch([__parent__ = (prototype.__parent__)].map((eval(\"/*for..in*/for(const __iterator__ in ((([1,2,3,4].slice).call)(this)))var prototype;\", 1.2e3)))) { default: \t__proto__ = __iterator__.__proto__ setter= (new Function(\"let __proto__ = <><x><y/></x></>, __count__ = <><x><y/></x></>;\")), __count__ = #1#;break; case function(id) { return id } .. <x/>: break; case __parent__.__noSuchMethod__: /*infloop*/for(const __noSuchMethod__ = <x/>; *::*; window) yield;return;(#3={a:#3#});break;  }");
tryItOut("__count__ = delete;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(var [11,12,13,14].some['prop'] in  \"\" ) {{/*for..in*/L:for(const prop = (@foo\n) in <><x><y/></x></>) {\f(__parent__);const __noSuchMethod__; } } }");
tryItOut("switch((#0=[( '' )].prototype).__iterator__ = (({ constructor: [], prototype: ({ prop: __parent__, __count__: x::__iterator__ }) }) = this.@*)) { case 9: case ((false for (<x><y/></x> in window))): case  '' .valueOf(\"number\"): break; break; default:  }");
tryItOut("throw __noSuchMethod__; const prop;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__ in <><x><y/></x></>) {return; }\t");
tryItOut("if([15,16,17,18].filter(gc, ('fafafa'.replace(/a/g, ((new Function(\"return __proto__;\"))).call))) <<= <x><y/></x> >>> 0/0) return\n(prop); else {gc()({}).hasOwnProperty }");
tryItOut("with({}) { for(let y in [5,6,7,8]) \n } ");
tryItOut("__iterator__ = __iterator__;");
tryItOut("L:if( '' ) {<x/> && window;with(false){return; } } else {/*infloop*/do {\texport prototype; } while(true);return; }");
tryItOut("/*infloop*/for(const constructor; __parent__++ .@*:: ({__proto__: <x><y/></x>}); new ( \"\" )(*::*)) {(<x/>); }");
tryItOut("/*for..in*/(export prototype;)");
tryItOut("/*infloop*/L:for(let prototype; this; prop) var __proto__ = , __iterator__;");
tryItOut("/*for..in*/for(let [__noSuchMethod__, x::__parent__] = () in <x><y/></x>[ /x/ ]) yield;");
tryItOut("const __proto__ = <x/>;");
tryItOut("throw <><x><y/></x></>;");
tryItOut("switch(eval(\"{}\", *)) { default: ; }");
tryItOut("switch((([<x/> for (__proto__ in <x/>)] for each (__parent__ in __iterator__.yoyo(<><x><y/></x></>))))) { case 4: break;  }");
tryItOut("/*infloop*/for((new  '' ( /x/g )); <x><y/></x>; false)  { {} } ");
tryItOut("gc() const prop;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(const [, ] in 3.141592653589793) yield;");
tryItOut("/*infloop*/L:for(var __noSuchMethod__ = (__proto__ .@*:: prototype) :: (({constructor getter: function  __proto__ (prop, __proto__)false, __parent__: null })); <><xxx>{__iterator__}</xxx><x><y/></x>yyy</>; __parent__ = *::*.__count__) {function(q) { return q; } }");
tryItOut("if((this)((try { yield <x/>; } catch(__iterator__ if (this.__defineSetter__(\"prototype\", function () { return; } ))) { return <x>/<y/__noSuchMethod__</x>; } catch(prop) { yield <x><y/></x>; } ))) yield <y><z/></y>; else  if ((uneval( /x/g ))) /*for..in*/L\f:for(let [get, prop] = <x/> in 3.141592653589793) {throw <x/>; }\n{let prototype = -0, __proto__ = *;export *; }\n");
tryItOut("throw StopIteration;");
tryItOut("/*infloop*/for((new <x><y/></x>); (const __noSuchMethod__ =  '' ).prototype; ~<y><z/></y>.@foo) yield;");
tryItOut("__iterator__ = function::__proto__;");
tryItOut(";");
tryItOut("/*for..in*/for(let [__iterator__, constructor] = __parent__ = <x><y/></x> in <x><y/></x>) break M");
tryItOut("});");
tryItOut("/*infloop*/for(let __proto__; new (new Function)(this.zzz.zzz, __noSuchMethod__.valueOf(\"number\")).@*; (null | 3.141592653589793)) {return <x><y/></x>\ncontinue ; }");
tryItOut("/*infloop*/for( '' ; @foo;  \"\" ) export __proto__;");
tryItOut("let __proto__ = window, __noSuchMethod__ =  \"\" ;");
tryItOut("/*infloop*/for(({ __noSuchMethod__: prop }) = (constructor = constructor);  /x/ ; new ({})()) /*infloop*/for(window for (__count__ in <x><y/></x>) && 0x99--; ((<y><z/></y>|=*.watch(\"__noSuchMethod__\", [z1]))( = __proto__) = 0[true]); <zzz>(constructor.((__proto__ = prop)))</zzz>) yield  '' ;");
tryItOut("switch(this.zzz.zzz) { default: constructor = <x><y/></x>;break;  }");
tryItOut("{} const __count__;");
tryItOut("if(*) {export prototype; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var ({ __proto__: ({ __proto__: [, [], ], prototype: constructor }) }) in (yield (new function(y) { yield y; var __noSuchMethod__, __proto__ = [1];; yield y; }(, <x><y/></x>)))) \t{{}/*infloop*/for((constructor = *::*); <><x><y/></x></>.watch(\"__iterator__\", null); <x><y/></x>) {let constructor = 1.3; } }");
tryItOut("export *;\nwindow;\n");
tryItOut("do yield; while((return) && 0);");
tryItOut("export *;( \"\" );");
tryItOut("return;{}");
tryItOut("let (__count__, __proto__ = constructor) { do [1,2,3,4].slice while((<x><y/></x>) && 0); }");
tryItOut("if(this.zzz.zzz) L:if(false) return <x><y/></x>;");
tryItOut("{const __noSuchMethod__ = window;{} }");
tryItOut("/*infloop*/for(const constructor; undefined; __parent__) {; }");
tryItOut("if((function (__count__) /x/ ).call(<><x><y/></x></>, )) /a/gi else  if (__iterator__.prototype getter= -3/0) ; else ");
tryItOut("this.zzz.zzz;");
tryItOut("constructor = constructor;");
tryItOut("if((true -= <><x><y/></x></>)) {}");
tryItOut("this.zzz.zzz;");
tryItOut("if((constructor())) {, prop; } else {let __parent__, __parent__;return prop; }");
tryItOut("/*infloop*/do {throw  \"\" ; } while(window);");
tryItOut("throw window");
tryItOut("export *;");
tryItOut("/*infloop*/for(var __iterator__; eval(\"return;\",  /x/g ) ?  /* Comment */3.141592653589793 : new (function(q) { return q; })(<><x><y/></x></>, true); (({ __proto__: constructor }) = [11,12,13,14].sort)) {__parent__ }");
tryItOut("throw StopIteration;");
tryItOut("\t;\nlet prototype, __iterator__ = 0.1;\n");
tryItOut("L:if((* if (\f \"\" ))) {export *;let function  __proto__ (__iterator__, __proto__) { <y><z/></y>; } , __noSuchMethod__ = @foo; } else  if \n(prop%=get) {var prototype;return this; } else var prototype = <x><y/></x>, prototype = null;");
tryItOut("if( \"\" ) {prototype = *continue M; } else  if (undefined) {var __parent__; } else constructor, prototypethrow [z1]");
tryItOut("if(__iterator__ = ({ __noSuchMethod__: [__iterator__], constructor: ({ __iterator__: ({ prop: constructor }) }) })) /*for..in*//* nogeckoex bug 349964 */M: for  each(const __count__\f in  '' ) {{}{} } else  if (constructor getter: gc) {with({prototype: prototype = <y><z/></y>}){/*infloop*/while(<x><y/></x>)return; } } else {[1,2,3,4].map }");
tryItOut("Function");
tryItOut("/*infloop*/while(<x><y/></x>.(<><x><y/></x></>)){{throw false; } }");
tryItOut("constructor, prototype = yield ({});");
tryItOut("if((function(y) { yield y; yield function ([y]) { };; yield y; })) { if ((<x/>.yoyo(1.2e3)).yoyo((<x/>)(window))) with(this.__defineSetter__(\"prop\", ({}).hasOwnProperty)){constructor; }} else {const constructor, __iterator__;\n[1,2,3,4].mapreturn; }");
tryItOut("/*infloop*/while(<><x><y/></x></>){constructor, __parent__ = [z1,,]; }");
tryItOut("if(({__proto__ getter: new Function })) continue ; else  if (<y><z/></y>) {(<y><z/></y>);{const __noSuchMethod__ = <x><y/></x>, __proto__ = <x/>; } } else <!--yy-->");
tryItOut("with({}) { __iterator__ = __count__; } ");
tryItOut("do {__iterator__export *; } while(((\nnew ({}))) && 0);");
tryItOut("{const prototype =  \"\" , __noSuchMethod__ = <x/>;switch(((function ([y]) { })() ? <><x><y/></x></> : [1,,])) { default: export *;case (<><x><y/></x></>.valueOf(\"number\")):  } }");
tryItOut("let (constructor = <x><y/></x>, __noSuchMethod__) { /*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in <x><y/></x>) {export *;yield; } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each\f(var __count__ in ((prototype.constructor = *)--)) throw prop;");
tryItOut("if(__iterator__.__proto__ = __count__) { if ((/a/gi)(false++).__defineSetter__(\"__proto__\", ({}).hasOwnProperty)) {(<y><z/></y>);<x><y/></x>; }} else {{}yield; }if(<><x><y/></x></>) (-0); else  if ([]) <><x><y/></x></>;");
tryItOut("/*infloop*/for(var __parent__; ( \"\" \n.__iterator__ = 'haha'.split.__parent__); prop.constructor setter= gc) {M:while((<y><z/></y>) && 0){{}throw  \"\" ; }try { ( /x/ ); } catch(__count__) { export __noSuchMethod__; }  }");
tryItOut("throw __iterator__;");
tryItOut("L: {{} }");
tryItOut("do {export *;break L; } while((window) && 0);");
tryItOut("L:if([<>yyy</>.(false.__noSuchMethod__)].filter(eval)) {switch(*) { default:  }__count__ = this, prototype; } else  if (__count__.__proto__ = false) throw <><x><y/></x></>;");
tryItOut("while((#0=new *::*(<x><y/></x>, true)) && 0)/*infloop*/for(var prop = __noSuchMethod__; <><x><y/></x></>; <><x><y/></x></>) {yield;var prototype; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __noSuchMethod__ in 0x99) export *;");
tryItOut("return (({ set prototype(prototype)<x/>, __parent__: __iterator__ }));");
tryItOut("let __proto__, constructor;");
tryItOut("");
tryItOut("if( typeof .__defineSetter__(\"prop\", (1 for (x in [])))) with({__proto__: prop.constructor setter= [1,2,3,4].map}){export *; }");
tryItOut(" if (0.1)");
tryItOut("L:if([11,12,13,14].some) <!--yy--> else  if (prop[\t(function::prototype = <x><y/></x>)]) return *.isPrototypeOf( \"\" );");
tryItOut("if((__parent__ = <>(@foo.__proto__ = null.__iterator__ = <x/>\f)</>)) {break L;/*infloop*/for(let prop = __parent__; {};  /x/ ) export prototype; }");
tryItOut("Math.pow\nMath.sin\n\n");
tryItOut("/*infloop*/while('fafafa'.replace(/a/g, Math.pow))this.zzz.zzz;");
tryItOut("if(this) <x><y/></x>\nreturn *;");
tryItOut("\nL:do export *; while(( \"\" ) && 0);");
tryItOut("if(prop) { if (window || @foo.__lookupGetter__(\"prototype\")) throw null;} else break M;");
tryItOut("with({}) {  } ");
tryItOut("return <y><z/></y>;");
tryItOut("{* = window;return; }");
tryItOut("M:if(eval(\"(<y><z/></y>.yoyo(<ccc:ddd><x><y/></x></ccc:ddd>))\", [0x99])) /*infloop*/do {export constructor;; } while(yield let (__parent__ = 3.141592653589793, __noSuchMethod__ = this) (new Function(\"(*);\"))( /x/ ));");
tryItOut("if((4..watch(\"prototype\", ({}).__lookupGetter__)) && this.eval( \"\" )) {} else  if ((__iterator__ = null)) {(<x/>); }");
tryItOut("M:if(__proto__) { if ((yield (null)(<><x><y/></x></>))) L:while((033) && 0)export *; else {break ; }}");
