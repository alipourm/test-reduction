tryItOut("/*infloop*/for(var ({ <{/*for..in*/M:for(const prop in constructor) {return <><x><y/></x></>; } __proto__><{__proto__}>: ({ prop: [__noSuchMethod__, , __noSuchMethod__], __iterator__: [__count__] }), prototype: ({ __iterator__: [, ({ __proto__: ({ prop: ({ prototype: __parent__ }) }) }), [, , ({ __noSuchMethod__: ({ prototype: __proto__, __parent__: __iterator__ }), constructor: prototype }), ]], __iterator__: ({ __count__: ({ __noSuchMethod__: __iterator__, prop: export *; }) }) }) }) = ([0.1] -= window\n/*\n*/.isPrototypeOf(false\n)); (#2=<x><y/></x>)[(undefined.constructor = <><x><y/></x></>)]; (__parent__+=(__proto__.__count__ setter=  /x/ ) ? __proto__.(<y><z/></y>) : #0=({prop: @foo}))) (function (__proto__) { yield @foo } ).call");
tryItOut("__parent__.__noSuchMethod__ = prop;");
tryItOut("if(eval(\"return;\", null.__count__ = __count__.__parent__ getter= (1 for (x in [])))) {export *;yield <x/>; } else  if (([__proto__ = <><x><y/></x></> .. (this.__defineSetter__(\"__noSuchMethod__\", function  getter (__count__) { yield window } ))].filter(new Function))) {throw <x><y/></x>; } else {{} }");
tryItOut("if(<x><y/></x>) prop =  '' \n((undefined.constructor = prop)());");
tryItOut("const prop\nreturn;");
tryItOut("export *;\n)\n");
tryItOut("/a/gi");
tryItOut("");
tryItOut("{} const __parent__;");
tryItOut("let (constructor = ([11,12,13,14].sort)) { export *\n }");
tryItOut("{ }");
tryItOut("if((<x><y/></x> instanceof <x><y/></x>) >>>=this.__defineGetter__(\"__noSuchMethod__\", true)) { if ( === <><x><y/></x></>) 1e-81;} else {yield  /x/ ;const __parent__ = <x><y/></x>; }");
tryItOut("({}).__lookupGetter__");
tryItOut("with({prop: this}){export *; }");
tryItOut("while(((new (__count__)()).__iterator__) && 0)/*for..in*//* nogeckoex bug 349964 */ for  each(prototype in .2) {}");
tryItOut("{let __iterator__, __iterator__;return; }\nreturn __proto__;\n");
tryItOut("M:if(true.propertyIsEnumerable(\"__count__\")) { if (null.__iterator__) {gc()throw <><x><y/></x></>; }} else {continue ; }");
tryItOut("/*infloop*/for((new Array()).@*; 'fafafa'.replace(/a/g, function ()(<x/> ^=  '' )); 'fafafa'.replace(/a/g, ((constructor |= <x/>)).watch)) for(let y in []);");
tryItOut("/*infloop*/for//h\n(const prop; (((function ([y]) { })())[<x><y/></x>])\f; undefined) {/*infloop*/for(({prototype:  ''  });  /x/  %= undefined; (let (__proto__ = window) @foo)) <x><y/><//h\n/x>; }");
tryItOut("return;");
tryItOut("if((__noSuchMethod__.constructor)) /*for..in*/for(var [__proto__, __parent__] = (new ((false).watch)(__noSuchMethod__)) * ({ get __proto__()window }) in undefined) {yield 4.;prototype = 1.3.__noSuchMethod__ } else {if((__proto__ = <><x><y/></x></>)) ; else  if ([,,]) gc else set;var prototype = yield, __proto__; }");
tryItOut("M:while((new (function () /x/g )(<><x><y/></x></>, ({}))) && 0){__count__;\flet __count__ = true, __count__\f; }");
tryItOut("/*infloop*/for(const __proto__; true; __iterator__) break ;");
tryItOut("/*for..in*/for([z1] in ((([1,2,3,4].slice).apply)(__proto__))){let  ;M:while((@foo) && 0)if(({a1:1})) {return;new Function } }");
tryItOut("throw prop;");
tryItOut("/*infloop*/for(var __parent__; (((__iterator__).call).call( /x/g , window, false)); #0=undefined.hasOwnProperty(\"prototype\")) {true; }");
tryItOut("throw __count__;");
tryItOut("while((.__defineSetter__(\"constructor\", #2=[(((<><x><y/></x></>).__defineSetter__)().*)])) && 0)if((new (<y><z/></y>)(undefined, <x><y/></x>))) throw *; else {break ; }");
tryItOut("/*for..in*/for(var __parent__.prop in ((function(q) { return q; })(new [1,2,3,4].slice((-0)))))gc()");
tryItOut("L:if((!(this.zzz.zzz))) throw @foo; else  if ('fafafa'.replace(/a/g, Math.sin)) {throw <x><y/></x>;with(<><x><y/></x></>){gc()break ; } }");
tryItOut("/*infloop*/while(Math.pow())export *;");
tryItOut("const constructor;");
tryItOut("let (__count__ = <x><y/></x>) { export *\t; }/*infloop*/do {const __parent__ = <><x><y/></x></>, prototype; } while((yield constructor));");
tryItOut("L: \f{return 3.141592653589793; }");
tryItOut("yield -1;");
tryItOut("/*for..in*/for(let __noSuchMethod__ in (([1,2,3,4].map)(new (Math.pow)(true)))){break L;3; }");
tryItOut("var __iterator__, __count__ = <x><y/></x>\n\n;\n");
tryItOut("throw <><x><y/></x></>; const __noSuchMethod__;");
tryItOut("for(let y in []);");
tryItOut("/*infloop*/for(<x/>; this; <y><z/></y>) {;let __parent__ = 0/0; }");
tryItOut("/*for..in*/for(const __count__ = __iterator__ = window ? <y><z/></y> : <><x><y/></x></> in __count__.__proto__ = <><x><y/></x></> &= -3/0) if((__parent__.\t__proto__)) \f{-1;return <x><y/></x>; } else const prop;");
tryItOut("var constructor, __iterator__");
tryItOut("{/*for..in*/for(var constructor = ((@foo) |= prototype = <><x><y/></x></>) in true | <y><z/></y>) function(id) { return id }; }");
tryItOut("/*for..in*/M:for(let __count__ in (((([1,2,3,4].map).call).apply)(new (eval(\"continue L;\", [,,]))())))constructor = __iterator__;");
tryItOut("if(<x><y/></x>[ \"\" ]) break M; else  if (__parent__ = <x><y/></x>.@*) return; else return; const __count__;");
tryItOut("M:if(function ([y]) { }) return;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var (-1).prototype in __iterator__.(window)) /*for..in*//* nogeckoex bug 349964 */ for  each(const __proto__['__count__'] in 0x99) yield;");
tryItOut("if(true %  \"\" ) var __noSuchMethod__ = 0/0, __iterator__; else  if ([<x/>].map(Math.pow)) throw window;");
tryItOut("if(( '' ())) throw <x><y/></x>; else  if (<x><y/></x>.__proto__) {;yield __parent__; }");
tryItOut("/*infloop*/for(var ({ __iterator__: __noSuchMethod__, __noSuchMethod__: __count__ });  /x/g  && <y><z/></y>; *.isPrototypeOf(this)) {{} }");
tryItOut("let(__noSuchMethod__, __noSuchMethod__) { for(let y in [5,6,7,8]) try { with({}) { ; }  } finally { __iterator__ = __count__; } ");
tryItOut("continue L");
tryItOut("if((false.eval([], __iterator__) = <x/>)) { if (({ get __iterator__() { null; } ,  get prop() { return function::constructor }  })) {yield [[]];; }} else export __proto__;");
tryItOut("do {return *::*;return  '' ; } while((prop.__count__) && 0);");
tryItOut("/*for..in*/M:for(var [prototype, prop] = function  __count__ (constructor, __count__)0x99 in  '' .constructor) yield;");
tryItOut("(undefined)\n");
tryItOut("(0.1);\nexport __proto__;\n");
tryItOut("export prop;");
tryItOut("let(__count__) ((function(){let(__noSuchMethod__) { })());");
tryItOut("let prototype = @foo, __proto__ = <x><y/></x>;");
tryItOut("if( /x/ ) { if (0/0) export *; else {{} }}\nexport constructor;\n");
tryItOut("/*infloop*/for(*; <x/>;  /x/g ) yield <><x><y/></x></>;");
tryItOut("{\fif() {; const __parent__; }if(0/0 === -1) {yield; } else  if ((true)(*::*, 3.141592653589793).__lookupSetter__(\"prototype\")) /*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in __noSuchMethod__) return; else {return; } }");
tryItOut("/*infloop*/do return; while( /x/ );");
tryItOut("/*infloop*/L:while( /x/g ['__parent__'] = {} ^ __iterator__){throw @foo; }");
tryItOut("M:if((let (prop, prototype = <x/>) [15,16,17,18].filter(<><x><y/></x></>, ({a1:1}) |= __proto__))) {var constructor; }");
tryItOut("/*for..in*/for(var __parent__ = new (function(y) { yield y; export *;; yield y; })([*::*.valueOf(\"number\")].sort(eval), __noSuchMethod__) in u\n) function(q) { return q; }");
tryItOut("L: continue M\nreturn;");
tryItOut("if((new Function(\"export *;\")) = false) {let __iterator__; } else  if (undefined.throw(this)) continue ;");
tryItOut("break L;\n/*for..in*//* nogeckoex bug 349964 */ for  each(__proto__ in eval(\"yield;\", (-0))) yield prototype.propertyIsEnumerable(\"__count__\")\f;\n");
tryItOut("/*infloop*/L:for(this; null;  /x/ ) H");
tryItOut("{([,,]); }");
tryItOut("this.zzz.zzz;");
tryItOut("/*for..in*/for(let prototype in ((function  __parent__ ()((window for (__noSuchMethod__ in *::*)).__lookupGetter__(\"__count__\")))(this.zzz.zzz)))return;");
tryItOut("{continue L; }");
tryItOut("L: export *;\n/*for..in*/for(const  = (new (__noSuchMethod__)(<x><y/></x>, __noSuchMethod__)) in -3/0) {export *; }\n");
tryItOut("if(new (__count__%=this)([constructor, [({ __parent__: prop })], ({ __parent__: __parent__, __count__: ({ : prototype }) }), ]) <<= (uneval((-0)))) { if ([prototype] = __parent__ = prototype >>>=(uneval(this))) {/*infloop*/L:for(__noSuchMethod__ = <x><y/></x>; prototype; constructor) {yield;export __parent__; }gc() } else M:if(__noSuchMethod__ = [,]) (this); else return;}");
tryItOut("with(__proto__)const __proto__ = #1#;");
tryItOut("/*for..in*/for(const constructor in ((Math.pow)( /x/ ))){(*::*); }");
tryItOut("while((constructor.prop setter= function  constructor () { yield 3.141592653589793 } ) && 0)/*for..in*/for([__noSuchMethod__, __iterator__] = (<x><y/></x>) in __parent__.prop = this) {prop; }");
tryItOut("let (prototype, __iterator__) { (<><x><y/></x></>); }");
tryItOut("throw [[1]];");
tryItOut("/*infloop*/while( >>> 1e81){{}let __noSuchMethod__ = <><x><y/></x><\t/>; }\n");
tryItOut("L:if(<><x><y/></x></> *= <><x><y/></x></>.propertyIsEnumerable(\"prop\")) {this; } else  if (__count__.__noSuchMethod__ = Boolean([[1]], this).unwatch(\"prototype\")) prototype; else {return *::*;throw 3/0; }");
tryItOut("/*infloop*/do return #1=[<x><y/></x>]; while([11,12,13,14].sort);");
tryItOut("/*infloop*/L:do {var __count__; } while( /x/ );");
tryItOut("const constructor;if( \"\" ) {__iterator__, __noSuchMethod__; } else {yield;__parent__; }");
tryItOut("__proto__ = set;");
tryItOut("if(<x/>) { if (1e-81) {break M; } else {throw *::*;return; }} const __iterator__;");
tryItOut("__iterator__");
tryItOut("while(((this.__defineSetter__(\"__count__\", function  __parent__ (__count__, __proto__) { {} } ).function::__iterator__)) && 0){let prop = (-0), __count__;; }");
tryItOut("/*infloop*/M:do {if((<x/>.__defineGetter__(\"prototype\", __proto__))) {} else  if (new <y><z/></y>(<><x><y/></x></>).__defineGetter__(\"__count__\", (1 for (x in [])))) {export prototype; } else {}if(( /x/ .watch(\"getter\", eval))) {(window);const __count__ = <x><y/></x\t>, __count__ = window; } } while(__proto__ = constructor ? <><x><y/></x></> :  /x/ .valueOf(\"number\"));");
tryItOut("/*for..in*/for(__iterator__ in this) {continue L;return undefined; }");
tryItOut("/*for..in*/for(let __count__ in ((eval)((<y><z/></y>\n)--)))[1,2,3,4].map");
tryItOut("/*for..in*/for(const  (window) in 1e-81) throw *::*;");
tryItOut("if(([({ __count__: [__proto__, , ] }), ({ __parent__: prop, constructor: ({ constructor: __proto__, prop: __parent__ }) }), prototype, __proto__, ] = yield yield 3/0).yoyo((('fafafa'.replace(/a/g, /a/gi)) for (__count__ in [[]] ? null :  /x/ ) if (window)))) /*infloop*/do {} while((__noSuchMethod__.__proto__ getter= ({}).hasOwnProperty) = prop); else (new Function(\"Function\"))");
tryItOut("if((RangeError())) ; else throw *;");
tryItOut("if((function(y) { yield y; ;; yield y; }((__noSuchMethod__ ==  /x/g ), true))) { if (new Date()) {{}/*for..in*/for(var let = (return window.__parent__) ? Date() : (__parent__ = [1]) in <><x><y/></x></> >= [1]) {([,,z1]);let __proto__ = __noSuchMethod__, __count__; } } else {/*infloop*/M:for(let ({ __noSuchMethod__: ({ __proto__: __noSuchMethod__, __iterator__: __noSuchMethod__ }), __proto__: ({ __noSuchMethod__: let, __parent__: __count__ }) }) = [15,16,17,18].sort(function(y) { yield y; let prototype, prototype;; yield y; }, <><x><y/></x></>); * ?  /x/g  : <x><y/></x>.__lookupGetter__(\"[prototype, ]\"); !<x><y/></x>) {if( \"\" ) { if (__noSuchMethod__) yield; else {continue ; }} }yield;\t }}");
tryItOut("/*for..in*/M:for(var constructor in 0x99) window");
tryItOut("continue ");
tryItOut("if(* >> 1e+81) export __count__; else  if ((#0=[eval(\"<x><y/></x>\", <x/>)])) {gc()yield; }");
tryItOut("/*for..in*/L:for(var [__proto__, __proto__] = +new <><x><y/></x></>() >= (prototype = prop).propertyIsEnumerable(\"__iterator__\") in {yield 1e+81;{} } / <y><z/></y>) {break L;export constructor; }\n");
tryItOut("L: ");
tryItOut("let (__iterator__) { var __parent__; }");
tryItOut("let (0) { /*infloop*/L:for(( /* Comment */@foo); [,,] %= @foo; eval(\"__count__\", __noSuchMethod__)) {yield *::*; } }");
tryItOut("let (__noSuchMethod__ = (p={}, (p.z = new let(prop = [,,], constructor = ({a2:z2})) { throw constructor;(undefined,  /x/ ).*)())) { h }");
tryItOut("const __parent__ = <x><y/></x>\n");
tryItOut("this;");
tryItOut("L:switch(window) { default:  /x/ ;break;  }");
tryItOut("/*for..in*/L:for(var [__proto__, __count__] = this.__defineSetter__(\"__parent__\", <><x><y/></x></>) in undefined) yield <x/>;\t");
tryItOut("L: (undefined)");
tryItOut("/*infloop*/for(var [z1]; eval(*).hasOwnProperty(\"__count__\");  /x/ .yoyo( /x/ )) {(window);if((function ([y]) { }.__lookupGetter__(\"constructor\"))) { if ([11,12,13,14].sort) export __noSuchMethod__;} else {return [,]; } }");
tryItOut("/*for..in*/for(let [__count__, prototype] = <><xxx {prop}={*} /></> if (<><x><y/></x></>) in <xxx {__count__}={this.__defineGetter__(\"__parent__\", Math.pow)} />.(new ([,,])(window))) {((1 for (x in [])))//h\n.applyexport __parent__; }");
tryItOut("yield __iterator__ =  '' ;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(prototype.prototype in ([true = false].filter(function(q) { return q; }))) {/*infloop*/for(const constructor; [false]; 'fafafa'.replace(/a/g, function ()0x99 <<= #3={a:#3#})) return  /x/ ;L: {while((<><x><y/></x></>) && 0)/a/gi } }for(let y in []);");
tryItOut("/*infloop*/for(var constructor; [@foo].filter(<> '' .prop >> ++<y><z/></y></>); <x><y/></x> *= -0) ");
tryItOut("yield window;");
tryItOut("if(__iterator__ = (__parent__.__iterator__ = <x><y/></x>))  if ((new Object(__noSuchMethod__|=__parent__)))");
tryItOut("this.zzz.zzz;");
tryItOut("L: {let(prototype) { export *; }");
tryItOut("return @foo || <x><y/></x>;");
tryItOut("__noSuchMethod__ = let;");
tryItOut("this.zzz.zzz;");
tryItOut("while((<x><y/></x>) && 0){export __proto__; }");
tryItOut("/*for..in*/for([prototype, constructor] = ({a2:z2}) in false) {yield; }");
tryItOut("L:do let __iterator__, __noSuchMethod__; while((this.zzz.zzz) && 0);");
tryItOut("/*infloop*/L:for(const case [,].propertyIsEnumerable(\"__count__\"): with({}) { yield; } case [,,]: break; const prototype, prototype;break; default: break M;break; case ({a1:1}) >> <x><y/></x>: L: return <>[[1]], ({})</>;; {} = window; constructor =  /x/ ) {gc() }");
tryItOut("/*infloop*/M:for(__noSuchMethod__ = (<><xxx>{constructor}</xxx></> *= ({constructor:  '' })); __proto__; (#2=this.__defineSetter__(\"prop\", function(y) { yield y; gc(); yield y; })(__count__))) {var __parent__ = window, __iterator__ = this(function ([y]) { })(); }");
tryItOut("\n");
tryItOut("yield <x/>;(\r<y><z/></y>);");
tryItOut("/*infloop*/L:do .; while( catch );");
tryItOut("/*for..in*/for(var prop in <x><y/></x> +=  /x/ ) {L:if(*) {const __proto__ =  /x/g ; }__count__ }");
tryItOut("/*infloop*/for((prototype = (-0.__noSuchMethod__.__defineSetter__(\"__parent__\", ({}).__lookupGetter__))); <x/>; ((uneval('fafafa'.replace(/a/g, 'haha'.split))))) continue L;");
tryItOut("let __proto__ = (-0)\n");
tryItOut("const prop, __parent__;");
tryItOut("M:if((.valueOf(\"number\"))) { if (<> </>) default: break ;break;  else /*for..in*/L:for(var [__proto__, constructor] = <><x><y/></x></> in undefined)  /x/g ;}");
tryItOut("return\nthis.zzz.zzz;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(prototype in this) /*for..in*/M:for(let __proto__ in ((function(q) { return q; })([z1])))__noSuchMethod__");
tryItOut("L: export *;");
tryItOut("{}\nexport constructor;");
tryItOut("var __proto__\n const constructor;");
tryItOut("if(-0) __iterator__ else /*for..in*/L:for(const __count__.prototype in ((function(y) { yield y; <x><y/></x>;; yield y; })((new this)))){var __iterator__, constructor = <><x><y/></x></>; }");
tryItOut("/*for..in*/for(prototype in ((({}).__lookupGetter__)(true)))let __noSuchMethod__ = false, __iterator__;");
tryItOut("{/*for..in*/L:for([__noSuchMethod__, __parent__] = .2 in  /x/ ) {continue ; }/*for..in*//* nogeckoex bug 349964 */M: for  each(const [, __parent__, __parent__, constructor] in <><x><y/></x><\f/>) {yield  /x/g ;const __parent__ = @foo; } }");
tryItOut("/*for..in*/for(var __parent__ in ({a1:1})) {/*infloop*/while(<><x><y/></x></>)yield; }\nthrow <><x><y/></x></> if (this);\n");
tryItOut("return <y><z/></y>;");
tryItOut("this['__iterator__'] = __count__;");
tryItOut("{with(__count__)__count__ }");
tryItOut("/*infloop*/for(__proto__; __noSuchMethod__ |= <x/>; __count__.((( '' )[prototype]))) {}");
tryItOut(";");
tryItOut("{with(__iterator__)(@foo); }");
tryItOut("/*infloop*/do let prop, prop; while(<x><y/></x>);");
tryItOut("/*for..in*/M:for(let [setter, constructor] = * in  '' ) {gc }\nprototype\n");
tryItOut("/*infloop*/for(const ;; new (((this.zzz.zzz))[(yield *::*)])(); (<x><y/></x>[<><x><y/></x></>])) {M:if(<y><z/></y>) continue M; else  if (undefined) {let prototype = <><x><y/></x></>, prop;export prototype; } else *::*; }");
tryItOut("export *;");
tryItOut("/*infloop*/for(let ({ __iterator__: prototype.__noSuchMethod__, __proto__: ({ __iterator__: constructor }) })\r = yield (<x><y/></x>++); __count__ = #1=(<x><y/></x>.eval(<y><z/></y>)) % ++( /* Comment */[[1]]); (<x><y/></x>.(({})))) let(constructor = y> Function </x>, __parent__) ((function(){let  set prototype __count__ (prop) { yield <y><z/></y> } ;})());");
tryItOut("while((return) && 0){throw null; const __iterator__;export *; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let constructor in (((true)[ \"\" ]) for each (constructor in <><x><y/></x></>))) {__noSuchMethod__, prop; }");
tryItOut("let(__iterator__ = <x/>.__iterator__) { for(let y in []);");
tryItOut("L:if((-0)) {gc()if(this | true) { if (this.__defineGetter__(\"__noSuchMethod__\", 'haha'.split)) throw arguments;} else {export *; } } else {export __proto__; }");
tryItOut("L:if(( /* Comment */{} .@x:: ({a2:z2}))) break ; else  if (4. % <x><y/></x>) {if( /x/g ) continue ; else  if ( \"\" ) {return;const prototype = <><x><y/></x></>, __iterator__; }L: throw 3; } else {export *;export __parent__; }");
tryItOut("/*for..in*/L:for(const ((uneval(([[1]] if (<x/>))))) in ((gc)('fafafa'.replace(/a/g, <x><y/></x>)))){/*infloop*/do {/*for..in*/L:for(let function::prototype = window in this) {export __proto__; }__parent__ = __proto__; } while(<><><!--yy--></></>); }");
tryItOut("/*infloop*/do { } while((({ get prop constructor (\r) { gc() } , constructor: this })));");
tryItOut("L: {/*infloop*/L:for(const __iterator__; (__noSuchMethod__ = <><x><y/></x></>) *= (new (false)(<y><z/></y>)); prop().__lookupGetter__(\"prototype\")) {const __noSuchMethod__; } }");
tryItOut("L:if(yield  \"\"  = ({}).hasOwnProperty) var __count__ =  /x/g ; else  if ((((1 for (x in []))).\fcall(<><x><y/></x></>, )[(<><x><y/></x></>.throw([[]]))])) {gc() } else throw constructor;");
tryItOut("{if(<>prop</>) {var __proto__ =  '' , __parent__; } else  if (null) ;yield return; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const constructor.__count__ in null) export __count__;");
tryItOut("return; const constructor;");
tryItOut("/*infloop*/while(<y><z/></y>)break ;");
tryItOut("return; const __parent__;");
tryItOut("/*infloop*/do throw <y><z/></y>; while\n(<y><z/></y>);");
tryItOut("{yield; }");
tryItOut("continue ;");
tryItOut("{{return false; }while(((({}).hasOwnProperty(\"prop\"))) && 0)export __iterator__; }");
tryItOut("with(__noSuchMethod__ = null .@ __proto__+=this)4.");
tryItOut("M:if((let (prototype = <x/>) ().__defineSetter__(\"__noSuchMethod__\", function  __iterator__ ()new this(prop, *::*)))()) ");
tryItOut("M:if( /x/ ) { if (prop = <y><z/></y>.__proto__) {(<x><y/></x>);throw null; } else /*for..in*//* nogeckoex bug 349964 */ for  each(var __iterator__ in  /x/g ) continue M;}");
tryItOut("let (__count__, __count__) { /*for..in*/for(let [__iterator__, __count__] = <><x><y/></x></> in <><x><y/></x></>) {var __parent__, constructor; } }");
tryItOut("throw 4.");
tryItOut("{( /x/ ); }");
tryItOut("with(<x><y/></x> for (prototype in prop).@foo)/*for..in*/for(function::__noSuchMethod__ in __count__) {yield;return; }");
tryItOut("L: {return; }\f");
tryItOut("with({}) { for(let y in []); } ");
tryItOut("\nreturn  /x/ ;\n");
tryItOut("let (prototype) { if(#2=[<x/>]) {const __iterator__; } else  if ([<><x><y/></x></> for (__count__ in ({a1:1}))]) prototype; }");
tryItOut("with((p={}, (p.z = #3={a:#3#})())){; }");
tryItOut("/*infloop*/do  while(((function ([y]) { })().eval(@foo)))\n/*for..in*/for(let getter = <x/> in *::*) yield [[]];");
tryItOut("/*for..in*/L:for([prototype, __proto__] = ( /x/g .propertyIsEnumerable(\"constructor\")) in \f(*)[<><x><y/></x></>]) export __count__;");
tryItOut("__parent__ = function::__proto__;");
tryItOut("yield (function ([y]) { })();");
tryItOut("/*infloop*/L:while(<><x><y/></x></> .. <><x><y/></x></>)do {__proto____proto__, function::prop = *; } while((<y><z/></y>) && 0);");
tryItOut("for(let y in [5,6,7,8]) <x><y/></x>;");
tryItOut("L:if(__noSuchMethod__+=1.2e3) {/*for..in*/for(var [__count__, __parent__] = <y><z/></y> in <x><y/></x>)  \"\" ;return [[]]; }");
tryItOut("if(new ({})(*, [z1])) { if ((@foo for (__noSuchMethod__ in __parent__))) //h\n{export *; } else (<x/>);}");
tryItOut("if(5.0000000000000000000000) {/*infloop*/do {(undefined).__defineSetter__{} } while(<><x><y/></x></>); } else  if ((uneval( /x/g )) << window.watch(\"constructor\", (1 for (x in [])))) {{}let (prototype = <y><z/></y>, __proto__) { return null; } } else {export __noSuchMethod__;yield; }");
tryItOut("gc()");
tryItOut("/*infloop*/for(let ({ __iterator__: __noSuchMethod__ }) = new undefined( /* Comment */(((({}).hasOwnProperty).apply)(function(id) { return id }, [z1,,])), true.@*) .. get = __parent__|=__noSuchMethod__; #2=[( /* Comment */String())]; (undefined['constructor'] = (<><x><y/></x></>(<x><\ny/></x>, null).isPrototypeOf([this].sort(new Function))) instanceof <><x><y/></x>/*\n*/</> + <x><y/></x>)) /*infloop*/M:for(var ({ prototype: ({ prop: constructor }) }) = (yield window); ( /* Comment */*::*).__lookupGetter__(\"prototype\"); null) {'haha'.splitexport *; }");
tryItOut("if(<x/>) { if (this) {; }} else { }");
tryItOut("/*infloop*/for(var __iterator__ = __parent__; window; __proto__) export __iterator__;");
tryItOut("if(constructor.prop = [z1,,]) {<x><y/></x>;gc() } else  if (( /x/  /= this)) gc() else throw @foo;");
