tryItOut("function (__iterator__) { return [z1] } ");
tryItOut("let(__count__ = yield  '' , prop = <{constructor}>yyy</{constructor}>) ((function(){(*::*)(1.3 -= [z1,,]) = __proto__;})());");
tryItOut("gc()\ntrue\nyield;");
tryItOut("if((#2=[ \"\"  === *])((this = function ([y]) { }), undefined)) let (__count__, __parent__) { (__proto__); } else  if (Object()) {/*for..in*/M:for(const [__noSuchMethod__, prop] = #1=[#1#] in this) {gc() }return  /x/g ; }");
tryItOut("M:do var prototype, prop = undefined; while((.__defineGetter__(\"function::prop\", ({}).__lookupGetter__)) && 0);");
tryItOut("__count__ = prototype;");
tryItOut("L: {const __iterator__ = *;return prop; }");
tryItOut("Math.sin;");
tryItOut("with({__parent__: ((p={}, (p.z = false)())).propertyIsEnumerable(\"__proto__\")})gc()");
tryItOut("return;");
tryItOut("/*for..in*/M:for(const prototype = <x><y/></x> .@ <x/> in __parent__ = <><x><y/></x>\f</>) /*for..in*//* nogeckoex bug 349964 */ for  each/*\n*/(const prototype in this) {export __noSuchMethod__;const __count__; }");
tryItOut("L: continue L;");
tryItOut("return;");
tryItOut("/*infloop*/L:do {{}<x><y/></x>; } while(@foo);");
tryItOut("export __proto__\n");
tryItOut("/*infloop*/for( /* Comment */__noSuchMethod__; yield <><x><y/></x></>; constructor <<= 3/0) L: L: {throw @foo; }");
tryItOut("/*infloop*/for(var prototype = <> </>.__count__ = (__proto__.__proto__); ((this /= #1#))[new RangeError()]; __proto__.constructor = ((uneval(__proto__)))) yield __noSuchMethod__;");
tryItOut("/*infloop*/do {yield; } while(undefined);");
tryItOut("if((constructor = [11,12,13,14].some).prop = *::*.@foo) {yield  \"\" ; } else  if (eval(\"__count__\", window) + window) {gc() }");
tryItOut("/*for..in*/L:for(var prototype in ((new Function)(({a2:z2}))))");
tryItOut("/*for..in*/for(let [__noSuchMethod__, __parent__] = this.zzz.zzz in new (new Function)((yield = <x><y/></x>),  /x/g )) ((<>*</>.(<x/>)));");
tryItOut("/*for..in*/M:for(constructor in ((new Function)( ''  >>= <><x><y/></x></>))){throw *::*;throw null; }");
tryItOut("let (({ prototype: ({ delete: [[, , , , ], ({ __proto__: [, , , __noSuchMethod__, constructor] }), , ] }) }) = (<x><y/></x> ?  \"\"  : #3={a:#3#}), __count__ = <y><z/></y>.yoyo( /x/ )) { for(let y in []); }");
tryItOut("L: constructor = this.zzz.zzz");
tryItOut("let(constructor = <x/>, __count__) { {}");
tryItOut("/*for..in*/L:for(const (__iterator__) in (\t(Math.sin)([[]] | window)))yield [,,z1];");
tryItOut("");
tryItOut("with({}) { __parent__ = __count__; } ");
tryItOut("do {let __iterator__, __parent__ = false; } while((*.propertyIsEnumerable(\"constructor\")) && 0);");
tryItOut("{let (__proto__ = __count__) {  } }");
tryItOut("__parent__ = <y><z/></y>yield false;");
tryItOut("if([( /x/ --)].some((function(y) { yield y; ;; yield y; }).call)) { if ([[]] ^= function(id) { return id }) {<x><y/></x>; }} else {{}__noSuchMethod__, __parent__ = undefined; }");
tryItOut("{/*for..in*/for(let __iterator__ in ((/a/gi)([,,z1]))){export *; }continue ; }");
tryItOut("yield <><x><y/></x></>;");
tryItOut("/*infloop*/for([,,z1]--.valueOf(\"number\") ? 3/0 = (p={}, (p.z = <><x><y/></x></>)()) : 'fafafa'.replace(/a/g, [1,2,3,4].map); @foo.__iterator__; prototype.__noSuchMethod__) {return;{} }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __proto__ in ({a2:z2})) yield 1;");
tryItOut("L: yield [z1];");
tryItOut("while((([ /x/ ].sort(function (prototype, __count__) { return <><x><y/></x></> } ))) && 0){export *;/*for..in*/for(var constructor = {} in  /x/g ) export *; }");
tryItOut("while((<x><y/></x>) && 0)(Math.pow).call");
tryItOut("if((\nfunction(id) { return id } <= <><x><y/></x></>)) { if (*::*) {export function::__parent__; } else {const __proto__, prop;return; }}");
tryItOut("{} const constructor;");
tryItOut("/*infloop*/M:for(const __proto__; __noSuchMethod__-=__parent__;  /x/g ) yield ({a2:z2});");
tryItOut("throw __proto__;");
tryItOut("/*infloop*/M:while(<x/>.constructor){throw (__parent__ = (window)[<><x><y/></x></>]);var __noSuchMethod__ = *::*;{} }");
tryItOut("M:if(({ __parent__: __count__, __noSuchMethod__: __iterator__ }) = prototype) { if (this) var constructor; else { }}\nexport *;\n");
tryItOut("throw (-1)L: {continue L; }");
tryItOut("continue M; const __parent__;");
tryItOut("let (__count__, prop) { switch(window) { case 2: throw false;break;  } }");
tryItOut("/*for..in*/for(let false['prop'] in ((\ffunction(q) { return q; })(<y><z/></y>)))let constructor, __iterator__;");
tryItOut("try { <bbb xmlns=\"<y><z/></y>\"></bbb><!--yy--> = constructor; } catch(__noSuchMethod__) { with({}) { try { 'haha'.split } catch(prototype)\t { throw @foo; } finally { throw  /x/g ; }  }  } finally { return; } ");
tryItOut("/*for..in*/M:for(let __parent__ in (((new Function(\"gc()\")))(yield  /x/ ))){return; }");
tryItOut("export constructor; const __iterator__;");
tryItOut("/*infloop*/for(__noSuchMethod__; this.__lookupGetter__(\"__proto__\"); \n((p={}, (p.z = *)()))) {{} }");
tryItOut("with({__parent__: __parent__}){gc() }");
tryItOut("{yield <x/>;gc() }");
tryItOut("return prop; const __proto__;");
tryItOut("yield (-1);");
tryItOut("L:if(try { break M; } catch(__count__ if [,,z1]) { return function(id) { return id }; } catch(__iterator__ if (function(){const __parent__ = @foo, __iterator__;})()) { Function } ) export *;");
tryItOut("return default: let constructor, __noSuchMethod__;break; yield;break; ;;");
tryItOut("with({__parent__: [,]}){var prototype = prototype, __iterator__ = @foo;continue L; }");
tryItOut("let prop, constructor\ncontinue ;");
tryItOut("");
tryItOut("return;");
tryItOut("{{return <x><y/></x>;gc() }/*for..in*/for(var [__count__, prototype] = new (null)(4..__noSuchMethod__) in window) {export *; } }");
tryItOut("if((p={}, (p.z = (new window(1e81, *)))())) {export *;break ; } else {gcyield; }");
tryItOut("M:do {<x><y/></x>return  /x/ ; } while((<employee id=\"1\"><name>Joe</name><age>20</age></employee>.(\f([15,16,17,18].filter( /x/g , *)))) && 0);");
tryItOut("export __iterator__; const prototype;");
tryItOut("/*infloop*/L:for(var __proto__ = this; constructor; 3.141592653589793) {<x><y/></x> }");
tryItOut("L:if(__noSuchMethod__ = *::*) { if (([({prototype: __iterator__, prototype: null })].sort(Math.sin))) yield;} else ");
tryItOut("return <><x><y/></x></>");
tryItOut("yield this\n/*for..in*//* nogeckoex bug 349964 */M: for  each(let constructor in  /* Comment */#3={a:#3#}.__lookupSetter__\r(\"constructor\")) let constructor;");
tryItOut("/*for..in*/for(var __noSuchMethod__.__count__ in (((((undefined.eval(~<x><y/></x>))())).watch)((<x/> .@ prop.watch(\"prop\", (new Function(\"return;\"))))))){export *;let prop; }");
tryItOut("prop;");
tryItOut("/*for..in*/for(__proto__ = this.prop = (void 0/0) in __parent__.prototype+=(case null: export __parent__;default: break; break; break; return;break; break; )) {if(<x/>) {;throw default: break; ; } else  if ( \"\" ) {this; }yield; }");
tryItOut("if((__noSuchMethod__ = constructor) if ( \"\" )) {M:if(setter.watch(\"__noSuchMethod__\", function ()this) ? ((@foo)) : (false\f.watch(\"prop\", function(q) { return q; }))) { if (this.zzz.zzz) {export *; } else { /x/ ; }}/*for..in*/M:for(var __count__ in [z1,,]) {\nthrow <><x><y/></x></>;yield; } } else  if ('fafafa'.replace(/a/g, (new <x><y/></x>(__proto__, window)).__defineSetter__)) {{}\n/*infloop*/for(var __iterator__ = -1; this; <y><z/></y>) let __noSuchMethod__ = <x><y/></x>, __noSuchMethod__;if(null) {continue M;\tyield; } else  if (__noSuchMethod__) {yield; } } else {return /*\n*/('fafafa'.replace(/a/g,  '' )) , ; }");
tryItOut("do let prototype, __proto__; while((x::__parent__) && 0);");
tryItOut("/*infloop*/for(const __noSuchMethod__ = <><x><y/></x></>; []; undefined) yield #1=[#1#];");
tryItOut("if(((prototype-=constructor) ? (Date()) : __iterator__ = __noSuchMethod__)) {.2 } else  if (this) export *; else  /x/ ;");
tryItOut("M:if((p={}, (p.z = <><> </></>)())) {{__proto__ = <><x><y/></x></>, constructor;yield; } } else yield <x><y/></x>;");
tryItOut("if(<><x><y/></x></>) {continue M; } else  if (*::*) {yield window;yield *::*; } else constructor = (-0), prop;");
tryItOut("/*for..in*/for(__iterator__ in ((new Function)(<x/>))){let window; }");
tryItOut("return;");
tryItOut("for(let y in []);");
tryItOut("if((function ([y]) { })()) (__proto__); else {with({}) { yield ((undefined if (<x><y/></x>))); } return [1,,]; }");
tryItOut("do function  prototype (__iterator__, __noSuchMethod__)<x><y/></x> while((true) && 0)\nyield;");
tryItOut("L: {return  /x/ ; }");
tryItOut("if((*::*\n)) {if(<y><z/></y>) prop else  if ( '' ) yield; else export __parent__;export __proto__; } else  if ((#0=({__parent__: [<x/>.yoyo(<y><z/></y>)]}))) yield; else let let;");
tryItOut("/*infloop*/case 8: ");
tryItOut("/*for..in*/for(let __iterator__ in ((Math.sin)([11,12,13,14].some))){{}(__parent__); }");
tryItOut("M:if(new <y><z/></y>()) {]gc() } else  if (<x><y/></x>.__lookupGetter__(\"__proto__\")) {{}/*for..in*/for(prototype =  /x/  in #1#) {} } else {return this;yield; const -0; }");
tryItOut("let prototype, __parent__;yield @foo;");
tryItOut("if(new Math.sin({})) {(__iterator__); } else  if ((__proto__.prototype)) {return; } else {var __count__; }");
tryItOut("yield <><x><y/></x></>");
tryItOut("/*infloop*/for(let prop; this.__defineGetter__(\"__proto__\", (function(q) { return q; }).apply); this.zzz.zzz) [1,2,3,4].map");
tryItOut("if({var __count__ = <><x><y/></x></>; } =  /x/ .unwatch(\"__noSuchMethod__\")) { if (*::* - (-0)) __proto__, prototype = this;} else return;");
tryItOut("/*for..in*/for(const __proto__.prop in new (this)()) {/*infloop*/M:for(let constructor = <><x><y/></x></>.@*; return <><x><y/></x></>; prop = (null)) {return; } }");
tryItOut("let (__proto__ = ((<x><y/></x>.(1.2e3)).__lookupGetter__(\"__noSuchMethod__\"))) { /*for..in*//* nogeckoex bug 349964 */ for  each( '' .@*.__parent__ in [1,,]) M:if( /x/g ) {(1 for (x in [])) } }");
tryItOut("L:if(__count__) { if (null.hasOwnProperty(\"__iterator__\")) {break M; } else {if(0/0) yield; }}");
tryItOut("/*infloop*/for([@foo.yoyo(<x><y/></x>)].filter((this.zzz.zzz).__defineSetter__); (({a2:z2}).propertyIsEnumerable(\"__iterator__\").constructor); (eval).call(-0x99, true ? <><x><y/></x></> : <x/>)\n) if(\n<><x><y/></x></>) { if (<><!--yy--></>) { } else const __proto__;}");
tryItOut("/*for..in*/for(const __proto__ in ((function (__proto__, __noSuchMethod__) { return false } )(prop))){return *::*; }");
tryItOut("/*for..in*/for(var [__proto__, __iterator__] = window.\thasOwnProperty(\"__count__\") in <><x><y/></\fx></>) {/*for..in*//* nogeckoex bug 349964 */L: for  each(let prototype in __count__) {function(y) { yield y; (<x/>);; yield y; }let prop = <x><y/></x>; } }");
tryItOut("{return  '' ;if(#1#) { get __noSuchMethod__ constructor (__count__) { yield (<x><y/></x> :: <x><y/></x>) }  } }");
tryItOut("{yield true; }");
tryItOut("throw StopIteration;");
tryItOut("M:with({constructor: new function(q) { return q; }()(new (window)(__proto__), *::*)}){if((this.__defineSetter__(\"__noSuchMethod__\", Math.sin))) {(<x><y/></x>); } else  if (((<><x><y/></x></>)(<x><y/></x> .@x:: constructor).__lookupSetter__(\"__iterator__\"))) break M; else {throw <><x><y/></x></>;gc() } }");
tryItOut("/*for..in*/for(prop =  in <x><y/></x>) \nexport *;");
tryItOut("#3={a:#3#};\nthrow undefined;\n");
tryItOut("{if( '' .isPrototypeOf(this)) { if (constructor) { } else {(<><x><y/></x></>);continue L; }} }");
tryItOut("/*infloop*/L:while(let (__parent__ = __parent__) {  }.hasOwnProperty(\"__iterator__\"))throw __proto__;");
tryItOut("while(([[]]) && 0){/*for..in*/for(let prototype in false) gc() const __noSuchMethod__; }");
tryItOut("let(__noSuchMethod__ = <><x><y/></x></>) { export *;");
tryItOut("with({__proto__.prototype: ({}.throw(<><x><y/></x></> instanceof (x::constructor.__lookupSetter__(\"prototype\")) >>>=__iterator__ = @foo))}){if(this.watch(\"let\", ({}).__lookupGetter__)) {window; }if((<><x><y/></x></>\t >>> <x><y/></x>)) { if (__count__.function::__noSuchMethod__ getter= (<x><y/></x> >>= window).__defineSetter__) return;} else {return [];return undefined; } }");
tryItOut("this.zzz.zzz;");
tryItOut("/*for..in*/M:for(const [__count__, constructor] = ({ get prototype(__parent__, __proto__)({ __proto__: ({ __count__: prop, prototype: prop }) }) = [[]] }) in <>[<><x><y/></x></>]</>) {L: yield;yield;\nconstructor\n }");
tryItOut("L:if(('fafafa'.replace(/a/g, Function))) <y><z/></y>;");
tryItOut("{/*for..in*/for(const [__proto__, __parent__] = this.zzz.zzz in @foo) {return;const __iterator__ =  '' , __count__ = *::*; }try { with({}) 6 } catch(__iterator__) { const __count__ = __parent__; } finally { yield [15,16,17,18].filter([1,2,3,4].map, null); }  }");
tryItOut("let (__proto__, __noSuchMethod__) { M:do {throw <x><y/></x>;export *; } while((*::* ? @foo :  if (<x><y/></x>)) && 0); }\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(const (<>({a2:z2})</>)(( \"\"  &= -0)) in ({ __count__: __noSuchMethod__, __count__: [__proto__, , constructor, , ] }) = __proto__) {(<x><y/></x>);; }");
tryItOut("let (__iterator__) { export prototype; }");
tryItOut("/*for..in*/for([prototype, __noSuchMethod__] = this.__defineGetter__(\"constructor\", /a/gi) * eval(\" /x/ \", <x/>) in <x/>(<x/>)) {}");
tryItOut("yield __count__ instanceof undefined;");
tryItOut("throw prop;");
tryItOut("/*infloop*/while(__parent__ = __count__){(new Function(\"return;\")) }");
tryItOut("var prop, __count__ = [1];");
tryItOut("/*for..in*/L:for(const __count__ = prop - undefined in let (prototype) this.__defineSetter__(\"__parent__\", 0.1.throw(({})))) //h\nif((new false(<><x><y/></x></>.propertyIsEnumerable(\"constructor\")))) {return;; } else  if (__proto__.prop = <><\tx><y/></x></> >>>=this != (({__parent__:  /x/ ,  set prototype constructor () { return <x><y/></x> }  }))) return #1=[#1#]; else function  __parent__ () { return  /x/g  } ");
tryItOut("L: {yield; }");
tryItOut("this.zzz.zzz;");
tryItOut("return;\nif((__proto__.__count__ getter= new Function)) export *; else  if ([11,12,13,14].some)  else {[,,z1];break ; }\n");
tryItOut("/*infloop*/for(let __noSuchMethod__; ({\f__proto__:  /x/  }).valueOf(\"number\"); __parent__ = <y><z/></y>) let (__count__, __iterator__) {  /x/g ; }");
tryItOut("do {yield;var __count__ = <y><z/></y>, export __parent__;; } while((null for each (__parent__ in <x><y/></x>)) && 0);");
tryItOut("/*for..in*/for(var x::__proto__ in ((function(y) { yield y; @foo %= <x/>;; yield y; })( /x/g .@foo))){prototype }");
tryItOut("if(new ([1,2,3,4].slice)((1 for (x in []))( /x/g , @foo))) M:if(new ( /x/ .__defineGetter__(\"__iterator__\", function () { return * } ))()) { if ((__iterator__ = false)) export *; else }");
tryItOut("{}");
tryItOut("try { const prop = true; } catch(prototype if (function(){{}})()) { const prop = __proto__, __count__, __iterator__ = 0x99; } catch(constructor) { {} } finally { yield <x><y/></x>; } ");
tryItOut("/*infloop*/while((#2\t=[ /x/g ] ^ (*::*.__lookupSetter__(\"prototype\"))))return;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __count__ in window) {;{} }");
tryItOut("do gc()\nreturn <><x><y/></x></>; while(((({ set prototype()(([, , __count__] = ({ __parent__: prop, __parent__: __parent__ }))),  get constructor __proto__ (__parent__, __parent__) { yield __count__ }  }))) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prototype in __count__ = ({ set __iterator__(constructor) { yield eval(\" '' \", <y><z/></y>) } , __proto__: new null() })) /*for..in*/L:for(let (__proto__) in false) {}");
tryItOut("/*infloop*/while(this.__defineGetter__(\"constructor\", function (__noSuchMethod__) { return @foo } ).__count__ = window(window, this))<>@foo.yoyo(eval(\"yield  \\\"\\\" ;\", (let (function::function::prototype = <y><z/></y>, __proto__) #3={a:#3#})))</>");
tryItOut("return\n");
tryItOut("/*infloop*/for(let __parent__ = (__iterator__+=undefined); __proto__.isPrototypeOf(true);  /x/g ) {}gc()");
tryItOut("{gc() }");
tryItOut("/*for..in*/for(const [__iterator__, undefined] = RangeError() in <><bbb xmlns:ccc=\"1e+81\"><ccc:eee></ccc:eee></bbb></>) {return\n/*infloop*/while(this){yield;yield; }[z1,,]; }");
tryItOut("/*for..in*/for(let __iterator__ = ({ set prototype(__parent__, __proto__) { yield <y><z/></y> }  }) in constructor) let (__proto__ = 1.2e3, constructor = null) { gc() }");
tryItOut("L: {L: return;{/*for..in*/M:for(var prototype = null in false) Math.powcontinue ; } }");
tryItOut("yield (((p={}, (p.z = 1e+81)()) for each (constructor in window) for (__proto__ in <x><y/></x>) for each (__noSuchMethod__ in <//h\nx><y/></x>)));");
tryItOut("switch(undefined > ({})) { case 1: break; default: continue ;break; <x/>;break;  }");
tryItOut("/*for..in*/for(const (([15,16,17,18].sort(({}).hasOwnProperty, prototype.__defineSetter__(\"constructor\", prop)/*\n*/)))(break M) in ((function () { while((null.__defineSetter__(\"prop\",  /x/ )) && 0)export \tconstructor; } )(*)))while(((Math.pow(__parent__))) && 0){}");
tryItOut("with({}) { break M; } ");
tryItOut("{/*infloop*/L:for((new function  __proto__ (__proto__) { return window } (({ constructor: __iterator__ }) = <x/>)); #1=({a2:z2}); new Function()) break ; }");
tryItOut("{const __proto__, __noSuchMethod__; }");
tryItOut("{/*for..in*/L:for(__noSuchMethod__ = (<y><z/></y>['__proto__'] =  /x/ .hasOwnProperty(\"prototype\")) in ({__count__ setter: (<><x><y/></x></>).__defineSetter__ })) continue L; }");
tryItOut("M:if(!( /x/g  >> null)) ; else  if ((__iterator__.__count__).propertyIsEnumerable(\"prototype\")) {if((<><x><y/></x></>.__defineGetter__(\"__count__\", Function)) >>= ((uneval(<x><y/></x>)))) {/*infloop*/M:do {break ;let __noSuchMethod__ = <x><y/></x>, constructor; } while(this); } else  if ((({x::constructor: (new Function).call(<><x><y/></x></>, )}))[(@foo >= *::*)]) {export __proto__; } else {yield; } } else {nullyield __noSuchMethod__ = \n0; }");
tryItOut("/*infloop*/for(const __proto__; (yield <><x><y/></x></>).yoyo(this.@*); @foo) var __iterator__ = true;");
tryItOut("for(let y in []);");
tryItOut("/*for..in*/for([constructor, __proto__] = ({ prop: ({ constructor: __parent__ }) })\n = !-3/0 in ()) ");
tryItOut("return");
tryItOut("throw __noSuchMethod__;");
tryItOut("{{} }");
tryItOut("M:while((prop = <x/>) && 0)M:with({constructor: <y><z/></y>}){0x99; }");
tryItOut("/*infloop*/do yield; while((constructor = *));");
tryItOut("with({}) { return (3/0.__noSuchMethod__ =  \"\" ); } ");
tryItOut("/*infloop*/while(Array()){if([1,2,3,4].slice()) {; } else  if (__iterator__) function (__proto__)[1] }");
tryItOut("/*infloop*/for(let __proto__; <x/>; __noSuchMethod__) break L\nthrow <y><z/></y>;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let prototype in true) {return; }");
tryItOut("if(#3={a:#3#})  else  if (<><x><y/></x></>) {throw <y><z/></y>; }");
tryItOut("{break L; }");
tryItOut("with((<><x><y/></x></> |= <x/>))(<><x><y/></x></>);");
tryItOut("/*for..in*/for(let prototype = (({prop: Number(<x/>.unwatch(\"__parent__\")) })) in __noSuchMethod__ = true) ;");
tryItOut("let (__proto__ = 0/0 ? <y><z/></y> :  '' , __count__ = (yield null)) { __iterator__; }");
tryItOut("if([15,16,17,18].filter(<y><z/></y>.__lookupSetter__(\"__count__\"), <x><y/></x>.eval(*) >>= this instanceof false)) return null; else  if ((([15,16,17,18].some(function(y) { yield y; ;; yield y; }, let (__proto__) this)) :: __iterator__.__defineSetter__(\"__iterator__\", (new Function(\"export constructor;\"))))) {prop;yield; }");
tryItOut("if(window) return; else {return set;var __noSuchMethod__ =  /x/ , __proto__ = 3/0; }");
tryItOut("{/*for..in*//* nogeckoex bug 349964 */ for  each(let ({ __noSuchMethod__: ({ prop: function::__iterator__, __count__: prototype }) }) in (__proto__)[[[]]]) let prop, __count__ = __proto__; }");
tryItOut("{export *; }");
tryItOut("if(__iterator__ = undefined) { if (( /x/ )) {break ; }} else {return; }");
tryItOut("with({}) return;");
tryItOut("if(new Boolean(<y><z/></y>)) {__noSuchMethod__, prop =  /x/g ;throw <x><y/></x>; } else  if (<><x><y/></x></> -= [,,]) {export __count__;export prop; }");
tryItOut("/*for..in*/for(const __proto__ = [[]] in <><x><y/></x></> ? [,,z1] : prop) {let __noSuchMethod__ = yield, __noSuchMethod__; }");
tryItOut("do {prototype, prop;function(q) { return q; } } while(( /x/ ) && 0)");
tryItOut("/*infloop*/L:for(var [] = (__iterator__) = -window;  /x/ .@*; new (prop)()) {M:if(<y><z/></y>) gc() else  if (__parent__) (({a2:z2})); else {;return <x><y/></x>; } }");
tryItOut("/*for..in*/L:for(var [__noSuchMethod__, __parent__] = (++<x/>) in <x/>.unwatch(\"__iterator__\")) /*for..in*/for(prop in  \"\" ) ;");
tryItOut("");
tryItOut("(<y><z/></y>);function  __iterator__ (__count__, __iterator__) { return <><x><y/></x></> } ");
tryItOut("M:if(function ([y]) { }) { if (new (this)(<x><y/></x>)) let constructor;} else {gc() }{throw @foo; }switch(*) { case 2: yield;break;  }");
tryItOut("/*infloop*/while(<x><y/></x>.([,,z1])){break ; }\n");
tryItOut(" const getter;");
tryItOut("/*for..in*/for([__iterator__, prototype] = ({__iterator__: continue ;}) in  /* Comment */this) if(*) {([z1]); } else export *;");
tryItOut("L:if([z1,,]) {let __iterator__;export *; }");
tryItOut("/*infloop*/for(var prototype; [11,12,13,14].filter; prop = this) {/*for..in*//* nogeckoex bug 349964 */M: for  each(var __noSuchMethod__ in 1e+81) return  /x/ ;{} }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(true in <{__count__}><x><y/></x> </{__count__}>) {return; }");
tryItOut("{(prototype); }");
tryItOut("if(<x/>.__count__.__defineGetter__(\"__count__\", eval)) {const prop = true;if( \"\" ) /*\n*/{export prop;<x><y/></x> } } else throw  \"\" ;");
tryItOut("if((new (p={}, (p.z = *::*)())(gc(\nundefined), (getter = 4.)))) { if (new ((this.zzz.zzz)[((yield -1))])((constructor.prototype))) {<><x><y/></x></>;const __iterator__, __count__;([1,,]); }} else {__proto__, prototype;if(false) {__iterator__ = __parent__;gc() }if(prop =  '' ) constructor = true; else  if ((( /x/  if (*::*)))) {yield (-1);return <><x><y/></x></>; } }");
tryItOut(" const prop;");
tryItOut("for(let y in []);");
tryItOut("L:if(__proto__(<><x><y/></x></>, <x/>)) /*for..in*/for(var __parent__ in __proto__ =  /x/g ) {{}; } else continue L;");
tryItOut("if((true.__count__ = __count__))  for (__iterator__ in <><x><y/></x></>) else  if (<xxx {__parent__}={prototype} />) {export *;(<y><z/></y>); }");
tryItOut("__proto__: ({})");
tryItOut("return;");
tryItOut("/*infloop*/for(let constructor; new new (function(q) { return q; })(); ()) {/*infloop*/for(var prop = null; 3.141592653589793; #3={a:#3#}) {new Function } }");
