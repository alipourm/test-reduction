tryItOut("/*infloop*/for(__parent__; false = #1=[#1#]; window for (__noSuchMethod__.__iterator__ in ()) for each (__noSuchMethod__ in #3={a:#3#}) for each (__iterator__ in ({})) for (__noSuchMethod__ in 4.): (({}).__lookupGetter__())) {if((<x><y/><\f/x>.watch(\"__count__\", function (__count__) { return 5.0000000000000000000000 } )).constructor) export prop; else  if (<><x><y/></x></>.__noSuchMethod__ = <x><y/></x>) {gc()yield; } else return; }");
tryItOut("for(let y in []);");
tryItOut("/*infloop*/for(__count__; *::*; (({__parent__: function(q) { return q; }, __noSuchMethod__: (({__parent__: prop ^= false\t }).throw((4..hasOwnProperty(\"__count__\")))) }))) /*infloop*/do {export *; } while(this.__defineSetter__(\"constructor\", (Function).apply));");
tryItOut("if((({let getter: ({}).hasOwnProperty }))) export __parent__;");
tryItOut("export *;while((<><x><y/></x></>) && 0)yield window;");
tryItOut("/*infloop*/do let (prop = <x><y/></x>) { \t__count__; } while(window);");
tryItOut("if(1e-81.propertyIsEnumerable(\"prop\") === 3/0) { if ((new ([1])())) {{}[1,2,3,4].map } else const __noSuchMethod__;}");
tryItOut("__parent__\n");
tryItOut("/*infloop*/while(eval(\"(true).watch\", ({a1:1})))let constructor;");
tryItOut("if((yield <><x><y/></x></>.@foo)) {export *;\n } else  if (!<x/>.__iterator__ = true) if(false) throw -0;");
tryItOut("while((#2=[\r<x><y/></x>]) && 0){let prop, prototype; }");
tryItOut("/*for..in*/for(let __parent__ in ((1e4)(({} ? <x><y/></x> : null))))<>\f<x><y/></x></>");
tryItOut("do {export __noSuchMethod__;let __count__ = false, __count__; } while((.2.@*) && 0);");
tryItOut("export *;");
tryItOut("return;");
tryItOut("L:  { yield (let (prototype = *::*) <x/>) for each (__count__ in prop) for each (__noSuchMethod__ in (function ([y]) { })()) for each (constructor in 3) } ");
tryItOut("/*\n*/try { for(let y in [5,6,7,8]) throw __proto__; } catch(__count__) { throw StopIteration; } finally { for(let y in [5,6,7,8]) with({}) { yield __noSuchMethod__; }  } ");
tryItOut("if((true).call(*::*, )) { if (<y><z/></y> > (yield true)) {if(true) { if ([,]) export 3/0;} else export *;__iterator__ = undefined; }} else {yield; }");
tryItOut("try { continue M } finally { <x><y/></x>['prop'] = constructor; } ");
tryItOut("var prop;");
tryItOut("/*infloop*/for(let ({ constructor: (__proto__ = <x/>) }) = (this.__defineGetter__(\"prototype\", Math.pow)); window; constructor) if(<><x><y/></x></> !== <y><z/></y>) { if (typeof <x/>) return; else {{} }}");
tryItOut("yield;");
tryItOut("export __parent__;");
tryItOut("with({}) throw constructor\n");
tryItOut("L:if([] for (__count__ in <x><y/></x>).hasOwnProperty(\"<x/>\").hasOwnProperty(\"__parent__\"))  \"\"  else ;");
tryItOut("if( '' ) { if (((constructor).prototype = RegExp() .@ (__iterator__ = [prototype, ]))) {__iterator__ = @foo;continue L; } else {(<x><y/></x>); }}");
tryItOut("/*infloop*/M:for(constructor =  /x/ ; (-1); __iterator__) {continue L;continue ; }");
tryItOut("/*for..in*/M:for(let __noSuchMethod__ in (((<y><z/></y> <<= <x><y/></x>))(false.__proto__\f)))\t{export *; }");
tryItOut("/*for..in*/L:for(const [__proto__, __noSuchMethod__] = (delete false) in prop.prop getter= ({}).hasOwnProperty) {var __proto__ = false, __count__ = <x><y/></x>;throw <><x><y/></x></>; }");
tryItOut("yield yield <x/>;");
tryItOut("while((undefined) && 0)/*for..in*//* nogeckoex bug 349964 */ for  each(prop in __iterator__) (gc).call");
tryItOut("let([__count__, __parent__, __noSuchMethod__, __parent__, constructor]) { return;");
tryItOut("__proto__");
tryItOut("/*for..in*/M:for(var #2=[this].__noSuchMethod__ in <x/>) gc()");
tryItOut("{function::__count__\n }");
tryItOut("/*infloop*/for(let __noSuchMethod__; <><x><y/></x></>;  \"\" ) {( /x/g ).__defineSetter__return; }");
tryItOut("switch((__count__ = <x><y/></x> - prototype)(prototype.prop = prop = undefined)) { case 7: /*infloop*/L:for(let ({ prop: __noSuchMethod__ }) = ++(this.__defineSetter__(\"constructor\", Math.pow)); <zzz> \"\" </zzz>;  '' .prop) export prototype;break; ;\nyield @foo;\n }");
tryItOut("try { const __proto__ = __parent__; } catch(__count__) { return 4.; } finally { gc() } ");
tryItOut("/*for..in*/for(__parent__ in ((function () { export constructor\n } )((__count__)())))let(prototype) ((function(){__noSuchMethod__.constructor = __proto__;})());");
tryItOut("var ({ constructor: __proto__, __count__: __parent__ }) = (__proto__.__parent__) for each (prototype in (<x><y/></x>)()) if (this);");
tryItOut("while(( /x/  >>= <><x><y/></x></>.hasOwnProperty(\"__iterator__\").prop = (<y><z/></y>())) && 0)export *;");
tryItOut("if(@foo) { if ((-0)) {<x><y/></x>;; }} else {throw false;[1,2,3,4].map }");
tryItOut("{{} }");
tryItOut("let (__proto__, __count__ = <><x><y/></x></> .@*:: 3/0) { /*for..in*/for(var __iterator__ in  /x/ )  }");
tryItOut("for(let y in [5,6,7,8]) switch(({a1:1})) { case 7: break;  }");
tryItOut("if(prop) { if (prototype.(<x><y/></x>) in  ''  ? (__count__ = 1.3) : new Object(undefined, null)) {;let __iterator__; }} else {export prototype; }");
tryItOut("/*infloop*/for(false; (__noSuchMethod__ = <><x><y/></x></>); eval(\"<><x><y/></x></>\", <x/>)) (window);");
tryItOut("with({}) { throw __noSuchMethod__; } ");
tryItOut("for(let y in [5,6,7,8]) throw StopIteration;");
tryItOut(" if (__count__.constructor getter= function \t(__parent__, prop) { default: case <><x><y/></x></>: const __parent__ = *::*;break; __noSuchMethod__, __proto__;case 2: return;case 2:  } )");
tryItOut("if(yield __noSuchMethod__.__iterator__) {/*for..in*//* nogeckoex bug 349964 */L: for  each(prototype in window) {; } } else  if ((#0=({__parent__: undefined , <y><z/></y>}))) {let __noSuchMethod__ = <x/>;export prototype; }");
tryItOut("/*infloop*/while(eval(\"gc()\",  '' ))<y><z/></y>;function (prototype) { return 1e81 } ");
tryItOut("/*infloop*/for(((__iterator__ = false).yoyo(prototype = constructor)); 'haha'.split; (__count__)) /*for..in*/for(let x::__noSuchMethod__ in  /x/ ) {gc() }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __parent__ in <y><z/></y>) {/*for..in*/L:for(var __iterator__ in (((new Function(\"yield 033;\")))(false))){yield; } }");
tryItOut("M:if('fafafa'.replace(/a/g, Math.pow)) {<><x><y/></x></>;let throw  /x/ ;; } else *");
tryItOut("/*for..in*/L:for(var __iterator__ =  \"\"  in <x/>) return");
tryItOut("/*for..in*/for(let (prototype)(window--)\t in true) ");
tryItOut("if(prototype) __proto__ else  if (this) export __iterator__;");
tryItOut("var prop, prop; const __parent__;");
tryItOut("/*for..in*/for(var constructor = 1.3 in (this.zzz.zzz)) {{}{} }");
tryItOut("{(<x/>); }\n");
tryItOut("{throw <y><z/></y>;export prop; }");
tryItOut("if(<y><z/></y>) (<x><y/></x>); else  if (* .. <><x><y/></x>\t</>) {/*for..in*//* nogeckoex bug 349964 */ for  each(let __proto__ in \t[[1]]) {; }L: {yield;; } }");
tryItOut("{return;if(true) { if (<x/>) {}} else constructor }");
tryItOut("prop = __iterator__;");
tryItOut("L:if(prop += (@foo.throw([[1]]))) {{continue L; }yield 0.1; } else throw (new (null)(undefined, null));");
tryItOut("/*infloop*/while(\f__count__.__parent__ = this--.eval(~((false.isPrototypeOf(window))())))M:with({__parent__: <><x><y/></x></>})return;");
tryItOut("/*infloop*/for([,,].eval(-3/0).__proto__; window; [15,16,17,18].map(((({a1:1}) .. null) ^= 'fafafa'.replace(/a/g, (new Function(\";\")))).watch, new ((new ([,,z1])(*, __iterator__)))(prototype = <><x><y/></x></>))) {yield (0/0 &  \"\" ); }");
tryItOut("/*infloop*/for(prototype; __proto__ =  \"\" ; this %= window) ");
tryItOut("(true).watch");
tryItOut("with({}) { constructor = __parent__; } ");
tryItOut("L: export prototype;");
tryItOut("with({prototype: #3={a:#3#}})const prop;do {return this;; } while((0/0) && 0);");
tryItOut("/*for..in*/for([prop, __noSuchMethod__] = <x><y/></x> in (-1)) <x><y/></x>;");
tryItOut("yield 3.isPrototypeOf(<><x><y/></x></>);");
tryItOut("/*for..in*/for(__iterator__ in (((1 for (x in [])))(((<><x><y/></x></> if ([1])))))){L: { }gc() }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__count__ in ) ");
tryItOut("let (({ __count__: __parent__, constructor: ({ __parent__: __count__, __noSuchMethod__: ({ constructor: ({ function::__noSuchMethod__: \f__iterator__ }) }) }) }), function::prototype) { /*for..in*/for(__iterator__ in ((new Function)(*::*\f))){return;var __proto__; } }");
tryItOut("if([15,16,17,18].filter((function  constructor (__noSuchMethod__, prototype) { return [] } ).call, <>[</>)) ( '' ); else  if ([(window >>= <x><y/></x>)]) return; else {return;return false; }");
tryItOut("/*infloop*/L:for(var ({ prop: ({ __proto__: __count__ }), __parent__: __count__ }) = __iterator__.__parent__; \nthis; this.zzz.zzz) M:switch(__parent__.__defineSetter__(\"prototype\", Function)) { default: gc()break;  }");
tryItOut("if(__noSuchMethod__.(<x><y/></x>)) //h\nprop; else  if ((yield <><x><y/></x></>--)) yield [1,,]; else gc()");
tryItOut("\nreturn;\n");
tryItOut("let (({ function::__parent__: function::__count__ }))/*\n*/ { {return *;export __count__; } }");
tryItOut("/*infloop*/for(var constructor: this.__defineGetter__(\"constructor\", <><x><y/></x></>) for each (constructor in [11,12,13,14].map) = ((new Function(\"export __count__;\")))(); ((eval(\"/*for..in*//* nogeckoex bug 349964 */ for  each(let __count__ in 0.1) {continue M;prop, prototype; }\", true))()).propertyIsEnumerable(\"constructor\"); new function(y) { yield y; return; const __iterator__;; yield y; }( \"\"  /= -0(), .prototype = (__parent__.(<x><y/></x>)).watch(\"__proto__\", /a/gi))) /*for..in*/M:for(const \f__noSuchMethod__ in this) {yield;export __iterator__; }");
tryItOut("if(<><bbb xmlns=\"prototype\"><ccc:ddd>yyy</ccc:ddd></bbb></>) {} else {return; }");
tryItOut("prototype = prototype;");
tryItOut("");
tryItOut("throw __proto__;");
tryItOut("prototype, __noSuchMethod__; const __noSuchMethod__;");
tryItOut("export constructor\n");
tryItOut("throw __iterator__;");
tryItOut("/*for..in*/for(const __proto__ = (({ get __count__ x::__parent__ (__iterator__) { yield __iterator__.valueOf(\"number\") } , __iterator__ getter: <x><y/></x> })) in <><x><y/></x></>.__lookupSetter__(\"setter\")) {L:if([1,,]) { if (<><x><y/></x></>) yield;} else {<x><y/></x>;prop =  '' ; }eval }");
tryItOut("gc");
tryItOut("/*infloop*/L:for((-0); <x/>; false) {}");
tryItOut("L:if(1e4) {export *; }");
tryItOut(";yield;");
tryItOut("/*infloop*/for(const __proto__; (new ({}).hasOwnProperty(\nconstructor *= (-1),  \"\" )); <employee id=\"1\"><name>Joe</name><age>20</age></employee>.(new Array((new false), window))) /*for..in*/for(let __count__ = <><x><y/></x></> in true) {/*for..in*/for(var __iterator__ = <x/> in <y><z/></y>) {/a/gilet __iterator__ = <x><y/></x>; } }");
tryItOut("L:if((prototype.( ''  === [[1]]))) { if (0) ;} else {return; }");
tryItOut("if( /x/g ) var prop; else  if (<x/>) {continue ; } const __noSuchMethod__");
tryItOut("var __count__;");
tryItOut("M:if([[], , __noSuchMethod__, ({ __proto__: __parent__, prop: ({ __count__/*: [, constructor, , x::__noSuchMethod__, []]__parent__ }) })] = ( /x/ .unwatch(\"__noSuchMethod__\"))) { if (prototype = <x/> .@x:: {}) {var __count__ = <x><y/></x>, prototype; }} else return;");
tryItOut("{continue M;return; } const __count__;");
tryItOut("/*infloop*/do export undefined; while((__parent__ = 'fafafa'.replace(/a/g, <x><y/></x>)));");
tryItOut("{/*infloop*/M:do {throw [1];return ({}); } while((yield (new (<y><z/></y>)(<y><z/></y>))));{throw 1e4; } }");
tryItOut("/*infloop*/for(true; null; <x><y/></x>) {}");
tryItOut("{{}/*infloop*/do  while(<x><y/></x>); }");
tryItOut("if(\n<y><z/></y> ? __proto__([,,]) = (<x/> -=  '' ) : <x><y/></x>.(window) + ) {if(*) { if ( get prop() { yield ([((<><x><y/></x></> for (constructor in [1,,])))].filter(function  constructor ()__iterator__)) } ) {export prop; }} else continue M;const prop, __noSuchMethod__; } else yield false");
tryItOut("if(window.prototype) let(prop, __count__) { (<x/>); else  if ((p={}, (p.z = __count__)())) {yield; } else {if(([[,]].filter(eval))) { if (<x><y/></x>.eval(<y><z/></y>)) {var __iterator__, __proto__; }} else {{}const prototype, __proto__ = *::*; }let __noSuchMethod__; }");
tryItOut("/*infloop*/do {return <><x><y/></x></>;__parent__ = __noSuchMethod__, __proto__ = *; } while(*::*);");
tryItOut("if(new new Object()()) { if (({__parent__: @foo})) {let (__proto__ = <x/>) { [1,,]; } }} else {yield <x/>;\nyield *::*;\n }");
tryItOut("/*for..in*/for(var [__iterator__, __noSuchMethod__] = new (new [z1](<y><z/></y>, <x> __noSuchMethod__(<x><y/></x>)< ` /></x>)) in <x><y/></x>) {export __proto__; }");
tryItOut("if((new prototype.__count__( /x/g  + @foo))) { if (((yield -1))) {yield *::*\n }} else while((<x><y/></x>) && 0)");
tryItOut("/*for..in*/for(var __count__ = new *(<x><y/></x>, 1e4) in [,,z1]) with({prototype: this < undefined}){export *; }");
tryItOut("window.throw([[]]).prototype = __count__;\nprototype, __iterator__ = arguments;\n");
tryItOut("if(constructor) {{}yield; } else yield  \"\" ;");
tryItOut("do  while((<><!--yy--></>.(((new Function(\";\")))().__parent__)) && 0)\n");
tryItOut("yield\n");
tryItOut("/*infloop*/L:for(let (\f({ constructor: __parent__ }), <xxx {__iterator__}={this} /> = -1) let (__noSuchMethod__ = prop) [,,]; <y><z/></y>.propertyIsEnumerable(\t\"prop\"); [11,12,13,14].filter) {with({constructor:  '' })throw <y><z/></y>; }");
tryItOut("/*infloop*/L:for(let function::__noSuchMethod__ = prototype = prototype; ( \"\"  ? <x/> : -1); Iterator(*::*)) let __count__ = <x><y/></x>, constructor = undefined;");
tryItOut("/*for..in*/for(__noSuchMethod__ =  /* Comment */<x><y/></x> in new (<y><z/></y>)()) /*for..in*//* nogeckoex bug 349964 */L: for  each(const constructor in <x><y/></x>) {function(q) { return q; } }");
tryItOut("{__proto__, prop;{} }");
tryItOut("/*infloop*/M:for(new new function(y) { yield y; yield <y><z/></y>;; yield y; }( '' .throw(-0))();  /x/g ; #0=[3.141592653589793]) {{{}\nthrow this;\n } }");
tryItOut("switch(([<y><z/></y>])) { default: break; case 7: for(let y in [5,6,7,8]) yield  /x/g  for each (prototype in null);break; case 0:  \"\"  }");
tryItOut("let(__iterator__, __noSuchMethod__) ((function(){with({}) { gc() } })());");
tryItOut("if((({__proto__:  /x/ }).eval([[1]]\n))) { if (\n[z1]) {yield;constructor; } else }");
tryItOut("break ; const __parent__;");
tryItOut("L:do ; while(( /x/ ) && 0);");
tryItOut("let __count__ =  '' ; const prop;");
tryItOut("/*infloop*/for([, , __proto__, ({ constructor: ({ __parent__: constructor }), __proto__: __count__ })] = __iterator__ =  '' .hasOwnProperty(\"__iterator__\"); window; <y><z/></y>) {{}if(<><x><y/></x></>\n) export __proto__; else  if ((new <x/>(<x><y/></x>))) {} }");
tryItOut("/*for..in*/L:for(var [({ __parent__: prototype, __parent__: constructor }), constructor] = [false] in this) {var export __iterator__;, __count__; }");
tryItOut("with(--constructor = *::*)case default: : function  constructor (__count__)*break; case 9: __noSuchMethod__;break; ");
tryItOut("L:if(({ get prop(__iterator__, prototype) { yield <><>*::*</></> } , prototype setter: function (constructor, __iterator__) { return __proto__ __iterator__ = __count__, ((({}).__lookupGetter__)(prop)) = 0 }  })++) L:if(__iterator__) {;\f }");
tryItOut("for(let y in []);");
tryItOut("{__count__ = <><x><y/></x></>;; }");
tryItOut("");
tryItOut("/*for..in*/for(const __noSuchMethod__ = <x><y/></x> in __count__) {yield;var constructor = <y><z/></y>; }");
tryItOut("/*for..in*/for(var prop = @foo === -0 in __count__) gc()");
tryItOut("/*for..in*/M:for(var __parent__ in ((new ({}).hasOwnProperty(true))((<y><z/></y> >> 1e81.propertyIsEnumerable(\"__proto__\"))))){const __parent__, __proto__;(<x><y/></x>); }");
tryItOut("/*infloop*/for(this.__noSuchMethod__;  \"\" ; (({__iterator__: @foo, function::__noSuchMethod__ setter: Function }))) ");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(__parent__.prop in ({__count__ getter: [1,2,3,4].slice, __count__ setter: prototype })) {with({__proto__: }){(null); } }");
tryItOut("{gc()gc() }");
tryItOut("return;");
tryItOut("if((__noSuchMethod__ | <y><z/></y>)) return; else  if (({}), (\nprototype)) {gc() } else {return; }\n(constructor = []);\n");
tryItOut("with(<xxx>{__noSuchMethod__}</xxx>){;(undefined); }");
tryItOut("/*infloop*/M:for\f(let __parent__; undefined >>>=[[1]]; function(q) { return q; }) if(5.0000000000000000000000) { if (<x><y/></x>) { } else {return 3/0;<x/>; }}");
tryItOut("while((constructor = <x><y/></x>) && 0)yield;");
tryItOut("var prototype = [z1,,]\n/*for..in*/for([prototype, __parent__] = yield [[]] in [11,12,13,14].map) let prototype = #3={a:#3#}, __parent__ = <y><z/></y>;");
tryItOut("if([15,16,17,18].map(function(y) { yield y; const __count__;; yield y; }, -3/0)) /*infloop*/L:do {export prop;__count__; } while(prototype.__proto__); else  if (<x/>.__proto__) L: yield *::*; const prototype;");
tryItOut("while((\fwindow.__proto__.throw([1,,].@foo)) && 0)return *::*");
tryItOut("/*for..in*/for(const prototype in ((function(y) { yield y; ;; yield y; })(1e4 -= *::*))){__proto__ = <x><y/></x>, __parent__ = constructor }");
tryItOut("/*for..in*/for(__iterator__ = __proto__+=*::*.valueOf(\"number\") in \f '' ) {__parent__; }");
tryItOut("/*for..in*/for([prop, __count__] = __parent__.((-0) * #3={a:#3#}) in <y><z/></y>) break M;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __noSuchMethod__ in <y><z/></y>) {return; }");
tryItOut("while((__parent__.prop = function(id) { return id }) && 0)if([z1,,].throw(1.2e3).__lookupGetter__(\"prop\")) {throw  /x/ ;gc() }");
tryItOut("L: {export *;{} }");
tryItOut("function(y) { yield y; return *;; yield y; }\n/*infloop*/while((({ get __proto__ __proto__ (__parent__) { export __parent__; }  }))){yield;const __count__ = @foo; }");
tryItOut("/*for..in*/for(let __parent__ in ((new Function)(<y><z/></y>))){u }");
tryItOut("L: export __noSuchMethod__;");
tryItOut("/*infloop*/for( '' ; false; ({a2:z2})) {yield @foo;throw  '' ; }");
tryItOut("M:if(.isPrototypeOf(<x/>.watch(\"__proto__\", <x/>))) {break L;yield; } else let (prop) { return 1e4; }");
tryItOut("/*infloop*/while(([] | <><x><y/></x></>.yoyo(this.__defineSetter__(\"constructor\", Math.pow))).isPrototypeOf((({prop: <x/>})))){{}export *; }");
tryItOut("throw StopIteration;");
tryItOut("with({__iterator__: this}){return;prototype = <><x><y/></x></>; }");
tryItOut("return;try { throw undefined; } catch(__count__) { prop, prop; } finally { return; } ");
tryItOut("if((*::*.throw(<x/>))) /*infloop*/L:for( /* Comment */#0=({__noSuchMethod__: *}); <\tzzz>[1]</zzz>.( ''  >>>  '' ); (this = <x><y/></x>\f)) *::*\f; else  if (this.__defineGetter__(\"__proto__\"@foo[<y><z/></y>] , new  '' (*, false))) {let __iterator__ = <><x><y/></x></>;export __noSuchMethod__; } else yield 3.141592653589793");
tryItOut("{/*for..in*/for([__parent__, []] = <zzz>'haha'.split(<><x><y/></x></>, prop)</zzz> in __iterator__%=window) export __iterator__;\nyield;\n }");
tryItOut("{continue ;yield; }");
tryItOut("M:switch( '' ) { default: break;  }");
tryItOut("with({constructor: <><{__iterator__}>yyy</{__iterator__}></>})return <x><y/></x>\n");
tryItOut("prop = __parent__;");
tryItOut("");
tryItOut("/*for..in*/for(let __noSuchMethod__ = ++ /* Comment */<x/> in (@foo)[__count__].constructor = eval(\"<><x><y/></x></>.propertyIsEnumerable(\\\"__parent__\\\")\", <x><y/></x> % #1=[#1#]).throw((eval(\"yield __iterator__;\", --*)))) {/*for..in*/for([__iterator__, prototype] = <><x><y/></x></> in  /x/ ) const __iterator__;with({}) yield (__noSuchMethod__ = __iterator__); }");
tryItOut("throw __proto__;");
tryItOut("throw StopIteration;");
tryItOut("M:while((<><x><y/></x></>) && 0){export __noSuchMethod__;export __count__; }\nif(\fthis) { if (({a2:z2})) {return =; } else {( /x/ ); }}");
tryItOut("prototype = __proto__;");
tryItOut("/*infloop*/do export *; while((eval(\"__proto__\", __noSuchMethod__)++));");
tryItOut("/*infloop*/for(this; ([<y><z/></y>] |= <x/> for (prop in [z1,,])) &= eval(\"([[1]]);\", <x><y/></x> = (-1)); eval(\";\",  /x/ )) if(new RegExp([,,], undefined)) var __count__, prototype; else yield <y><z/></y>;");
tryItOut("with(<x/> .@ @foo){break ; }");
tryItOut("/*infloop*/do if(<><x\t><y/></x></> !== <x><y/></x>) { if (Boolean().__noSuchMethod__ = [11,12,13,14].sort) {}} else {export constructor; } while(-3/0.__lookupGetter__(\"prototype\"));");
tryItOut("export __iterator__\ndo {continue ;(3/0).watch } while(((new Function(\"gc()\"))) && 0);\nlet(({ prop: [, __iterator__, __noSuchMethod__, ], prototype: __count__ }) = Object(), __iterator__ = @foo) ((function(){try { {} } catch(__proto__) { ; } })());\n");
tryItOut("if(true.throw(null.prototype = +<><x><y/></x></>).propertyIsEnumerable(\"__parent__\")) { if ((({ set prototype() { (@foo); }  })).hasOwnProperty(\"prop\")) export *; const prop; else if(*) {__proto__; } else  if (<><x><y/></x></>) {} else let prop, __count__ = __iterator__, constructor = false;}");
tryItOut("return false;");
tryItOut("L:if(new (new Function)(1.3.__lookupGetter__(\"prop\"))) {/*infloop*/for(let constructor = ({constructor getter: [<><x><y/></x></>] }); <{__proto__}><!--yy--></{__proto__}>; (((eval).apply).call(<xxx {function::__parent__}={prop = 5.0000000000000000000000} />, yield  /x/g , <x><y/></x>.(3).hasOwnProperty(\"prop\")))) if(<y><z/></y>) break ; else  if (<><x><y/></x></>) ; } else \t{return\ncontinue ; }");
tryItOut("L:with({prototype: window}){{}yield; }");
tryItOut("if(\n*, undefined) { if (__noSuchMethod__-=__proto__)  for each (constructor in (<x><y/></x> >>= #3={a:#3#})) for (('fafafa'.replace(/a/g, [1,2,3,4].map))(__proto__.__noSuchMethod__ = (({a1:1}) |=  /x/ )) in (new (<><x><y/></x></>)(\f({}), this))) for each (prototype in this) if (@foo) else {var prop = window, __iterator__;__proto__ = <y><z/></y>; }}");
tryItOut("{function ([y]) { };yield #3={a:#3#}; }");
tryItOut("if(prototype = this) {__iterator__ = __count__, prototype = <x><y/></x>;throw <><x><y/></x></>; } else  if (this.zzz.zzz) {(@foo);export <x/>; }");
tryItOut("/*infloop*/L:for(constructor; #1=[*]; Function(false, arguments)) constructor = prop;");
tryItOut("var __iterator__ = window;\nyield this;\nreturn this;");
tryItOut("__proto__ = [window for (constructor in <><x><y/></x></>)]\n, \n@foo;");
tryItOut("(1 for (x in [])) const prototype;");
tryItOut("constructor = __noSuchMethod__;");
tryItOut("/*for..in*/for([prototype, constructor] = window in (function ([y]) { })() > void __count__) if(<x><y/></x>.(<><x><y/></x></>)) {let prop = *, __iterator__ = window; } else  if ((yield (__parent__ = *))) return; else return;");
tryItOut("{{const function::constructor = undefined;const prototype, prop; }do const __iterator__; while((<><x><y/></x></>) && 0); }");
tryItOut("if() throw  \"\" ; else throw undefined;");
tryItOut("L: L: __proto__, case 3: if(<><x><y/></x></> >= <x><y/></x>\r) { if ( \"\" ) __iterator__ = <x><y/></x>, __count__;} else {export prototype; }break; break; ");
tryItOut("L: do {prototype, prop = false;gc() } while((1e4) && 0);");
tryItOut("/*infloop*/for((p={}, (p.z = window)()) === (* -=  \"\" ) ? [15,16,17,18].map((new Function(\"{(null);{} }\")), new 0/0) : RangeError(); (<x><y/></x> .. +<><x><y/></x></>); ~4..yoyo(3.141592653589793.__lookupSetter__(\"__proto__\"))) /*infloop*/for(({ prop: ({ __count__: prop, prop: __iterator__ }) }) = eval(\"<x/> ^  \\\"\\\" \", prop !== prototype); prototype; return;) {yield *; }");
tryItOut("/*for..in*/for(var constructor in function(id) { return id }) let(({ __count__: __proto__, prop: __count__ }), __parent__) ((function(){for(let y in []);})());");
