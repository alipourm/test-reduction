tryItOut("yield window;");
tryItOut("/*infloop*/L:for(var __proto__; <><x><y/></x></>.unwatch(\"__parent__\"); prototype.(undefined)) if(undefined) {({}); /x/  } else  if ( '' ) {yield window;{} }");
tryItOut("if(<{__count__}></{__count__}>) {throw <x><y/></x>;; } else  if (yield #1#) {( '' ); } else ;");
tryItOut("export *;with({}) yield __iterator__;");
tryItOut("L: {var __noSuchMethod__;prototype; }");
tryItOut("switch((~(-0))((<x><y/></x> for each (__proto__ in @foo, prototype)))) { case ({ __iterator__: __count__, __proto__: __noSuchMethod__ }) = prop.(true): /*infloop*/M:while(__parent__ = __count__){let prop = true, __parent__;throw <x/>; } }");
tryItOut("{if() { if (prop ? this.__defineSetter__(\"__iterator__\", function (prototype, __noSuchMethod__) { return  /x/g ; } ) : <x\f><y/></x>\n) gc} else {let prop; } }");
tryItOut("M:if(({prototype: ({ __proto__: [, __noSuchMethod__] }) = this.watch(\"__count__\", 'haha'.split).yoyo(false) })) {{{} } } else {/*for..in*/for(var [__parent__, __proto__] = prop.prototype in @foo.watch(\"__noSuchMethod__\", ([z1,,]).apply)) function::constructor }");
tryItOut("var constructor;");
tryItOut("if(<y><z/></y>) gc() else {<><x><y/></x></>;(window); }");
tryItOut("if((<x><y/></x>.__lookupGetter__(\"constructor\")) ? <x><y/></x>() : *.__defineSetter__(\"constructor\", <x><y/></x>)) { if (yield <x><y/></x>) yield; else yield *::*;}");
tryItOut("/*for..in*/for(const __parent__ = this.zzz.zzz in constructor.__proto__ setter= function  prop (constructor, __count__) { return this }  += new (/a/gi)(({}))) {;gc() }");
tryItOut("while((__count__) && 0){yield;return; }");
tryItOut("gc()\n/*infloop*/L:do (<x/>); while(<x><y/></x>);\n");
tryItOut("/*for..in*/for(let [prototype, constructor] = ([15,16,17,18].sort('haha'.split, [])) >>> #1=[#1#][ /x/g ] in <x/>) while((5.0000000000000000000000) && 0){const __count__ =  get constructor(get, __iterator__) { export *; } , __noSuchMethod__;yield; }");
tryItOut("/*infloop*/for(const ({ __count__: __parent__ }) = prototype = <x><y/></x>; (this.hasOwnProperty(\"__count__\")).prop; <y><z/></y> if (__iterator__)) {gc()/*infloop*/L:while(@foo){} }");
tryItOut("{return; }");
tryItOut("while((__iterator__.__iterator__ getter=  \"\" ) && 0){*::*; }'");
tryItOut("L: {}");
tryItOut("/*infloop*/for(let constructor = __iterator__.__noSuchMethod__ getter= Function.eval(<y><z/></y>.propertyIsEnumerable(\"__proto__\")); prop = 1e-81; <\tx><y/></x>.unwatch(\"__noSuchMethod__\")) <><x><y/></x></>;");
tryItOut("{export *;export constructor; }");
tryItOut("{M:with([<y><z/></y>].filter(null)){yield; } }");
tryItOut("/*infloop*/L:for(__count__ = ({a2:z2}); __proto__(@foo) = __proto__;  /* Comment */(constructor = *)) /*infloop*/M:while( /x/ )/*infloop*/for(constructor.__count__ getter=  /x/ ; <y><z/></y>; Array(__iterator__,  '' )) { \"\" ;; }");
tryItOut("let (__noSuchMethod__ = @foo--, prototype) { gc() }");
tryItOut("/*for..in*/for([__count__, constructor] = ({__parent__ setter: ({}).hasOwnProperty }) in ([this] instanceof new (function (prop, __parent__) {  } )())(<x><y/></x> if ( '' ))) break ;");
tryItOut("if(Error(({__count__ getter: new Function, prototype: ~ ''  }) === (new false(null, __count__))[(__count__)])) (this.__defineGetter__(\"__iterator__\", gc)); else {/*infloop*/do {{} } while(this); }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each((__noSuchMethod__) in \n-1) /*for..in*/for( { throw function ([y]) { }; }  = prototype = <><x><y/></x></> in <x/>) export *\n");
tryItOut("M:if((<x><y/><\f/x> + <><x><y/></x></>)[<x><y/></x>]) const __proto__ = 033, prop = __parent__;");
tryItOut("");
tryItOut("break L\n");
tryItOut("/*with({__parent__(yield <x><y/></x>): __proto__ < <y><z/></y>");
tryItOut("/*infloop*/for(let constructor = ({constructor: ({a2:z2}) << <x><y/></x>}); <>[@foo]</>.(+<><x><y/></x></>); __count__ = false.@foo) let __iterator__, prototype;");
tryItOut("L:if('<><x><y/></x></>++)  __noSuchMethod__ getter: gc  else  if ((prototype = delete) ? __parent__|=((yield (<x><y/></x>.eval(false)))) : ('fafafa'.replace(/a/g, eval))*::*throw StopIteration;");
tryItOut("/*for..in*/for(var getter = ([1,2,3,4].slice).call(( /x/g  ?  /x/g  :  /x/g ), #1=[-3/0]) in  /x/ ) export __parent__;");
tryItOut("with((__proto__ = <><x><y/></x></>))let (x::__iterator__, prop =  '' ) { gc() }");
tryItOut("prototype = <x/> if((__iterator__ < [-3/0]){yield <><x><y/></x></>; } else  if prop = *() {with({constructor: #3={a:#3#}}){/a/giyield; } }");
tryItOut("if(((gc).call( /x/ , ))) { if ([z1] ^= [z1,,]) {yield; }} else gc()");
tryItOut("let (constructor = true) { \tthrow <><x><y/></x></>; }/*for..in*/for(let __parent__ in prop = window) {continue L;this; }");
tryItOut("M:do {throw __proto__;gc() } while((++this.__defineGetter__(\"__proto__\", function(y) { yield y;  /x/ ;; yield y; })) && 0);");
tryItOut("with({constructor: __parent__.__proto__}){if(<><x><y/></x></>) { if (@foo) *::*;} else {} }");
tryItOut("/*for..in*/for(const __proto__ in ((((((1 for (x in []))).call(arguments, .2, undefined)).__lookupGetter__(\"prop\")).watch)(@foo instanceof #1=[#1#].valueOf(\"number\"))))window;/*for..in*//* nogeckoex bug 349964 */ for  each(__noSuchMethod__ in __count__ = prototype) export constructor;");
tryItOut("let(__noSuchMethod__ = (__noSuchMethod__--)) { yield __iterator__;");
tryItOut("do {yield false; } while(((#0=[3/0])) && 0);");
tryItOut("if(3.141592653589793)  else  if ( \"\" .hasOwnProperty(\"prop\")) {}");
tryItOut("if((Function(true.valueOf(\"number\")))) M:if((({prop: window }))) export __parent__; else {} }");
tryItOut("/*infloop*/L:do export __noSuchMethod__; while((__iterator__.__parent__ = #1#));");
tryItOut("yield; const __proto__;");
tryItOut("breakMtry { yield; } catch(constructor if (function(){let __iterator__, __iterator__ = __noSuchMethod__;})()) { let yield, __proto__ = __count__; } finally { \fyield  '' ; }  \n/*infloop*/for(-this; ([z1,,][<y><z/></y>]); <x/>) {throw this;return; }");
tryItOut("do {L: /*infloop*/for(__iterator__; *; undefined) gc() } while((typeof arguments) && 0);");
tryItOut("while((true.unwatch(\"prop\")) && 0)if(prototype) {export __proto__; } else {yield <y><z/></y>;gc() }");
tryItOut("if(((p={}, (p.z = <><x><y/></x></> <= prototype)()))) {L:if(<y><z/></y> >> #3={a:#3#} |= <x><y/></x>(false)) yield; else  if (<x/>) {/*infloop*/for(__iterator__; true; 1.3) <y><z/></y>; } } else  if ((this.__defineSetter__(\"prototype\", (new Function(\"return;\")))) = __iterator__ = prop) with((<x/> *= @foo.yoyo(<x><y/></x>))){((constructor).__defineSetter__).call } else {const prop =  /x/g , prop\n{} }");
tryItOut("yield let (__iterator__ = prototype) prop.constructor;");
tryItOut("with( /* Comment */<x><y/></x>){{ { [1,2,3,4].slice } yield <><x><y/></x></>; }\n(*);\n }");
tryItOut("M:do {} while((new Exception(null, <y><z/></y>)) && 0);");
tryItOut("/*for..in*/for(let __iterator__ in ((*::*)([15,16,17,18].some(Function, 1e-81))))break L;");
tryItOut("L:if((#2=({__parent__: <x><y/></x>}))) {/*for..in*//* nogeckoex bug 349964 */ for  each(let constructor in <y><z/></y>) this\n } else  if ([<x><y/></x>.propertyIsEnumerable(\"function::__count__\")].map('haha'.split)) ");
tryItOut("with((({ prototype: [] }) = <xxx>{__parent__}</xxx>))*::*;");
tryItOut("gc()\n{gc() }");
tryItOut("continue ;\n\n");
tryItOut("/*infloop*/do {M:if((yield <><x><y/></x></>)) /*infloop*/L:do (__count__); while(5.0000000000000000000000); else  if (null) { } } while( /x/  for each (prototype in <x><y/></x>));");
tryItOut("/*infloop*/while(<x/>.@foo)let let __noSuchMethod__ = __iterator__, function::constructor; = <><x><y/></x></>, prop;");
tryItOut("yield;");
tryItOut("/*infloop*/for((<x><y/></x>.( ).propertyIsEnumerable(\"prop\")); ([15,16,17,18].sort( \"\" .valueOf(\"number\"), this.zzz.zzz)); delete ({__noSuchMethod__: ({a1:1}), prototype getter: prototype = <><x><y/></x></> }).__lookupGetter__(\"__noSuchMethod__\")) {export __count__; }");
tryItOut("try { yield prop; } catch(__proto__) { yield prototype; } finally { export __noSuchMethod__; } ");
tryItOut("{return;gc() }");
tryItOut("if((__iterator__ = [1])) {} else return;");
tryItOut("/*infloop*/L:for(const __noSuchMethod__; window; <x><y/></x>) {var prototype = @foo, prop; }");
tryItOut("{prototype } const constructor;");
tryItOut("/*infloop*/(<zzz><><x><y/></x></></zzz>).apply");
tryItOut("L: __count__\nconst __parent__, function::constructor;");
tryItOut("(true);");
tryItOut("{gc()return; }");
tryItOut("/*infloop*/while(__noSuchMethod__)return;");
tryItOut("L:if((((({prototype: *::*})) >>>=[15,16,17,18].some(( \"\" ).watch, [z1]) for (__iterator__ in undefined) for (__iterator__ in <y><z/></y>) for (({ prop: __noSuchMethod__ }), prop in @foo) for each (__count__ in [])))) { if (new function  prototype (__iterator__) { return; } ().__lookupGetter__(\"prototype\")) {yield (function ([y]) { })();{do throw 0; while((constructor) && 0);*::* } } else if( /* Comment */3/0) { if ((__count__ = this) || 0.__lookupGetter__(\"__iterator__\")) } else {constructor = window; }}");
tryItOut("M\f:do {let __noSuchMethod__, prototype = null;return; } while((yield false) && 0);");
tryItOut("/*for..in*/M:for(let [constructor, constructor] =  ''  in false) export __count__;");
tryItOut("{{} }");
tryItOut("gc() const __proto__;");
tryItOut("if(__iterator__) {false;try { yield -3/0; } catch(__noSuchMethod__) { (<y><z/></y>).watch }  }");
tryItOut("with({__iterator__: (__proto__).__count__ = Function(<x><y/></x>)})do {yield <><x><y/></x></>; } while((window) && 0);");
tryItOut("/*for..in*/for(let [prototype, __proto__] = __parent__.(<x><y/></x>) in  /x/ ) {;yield *; }");
tryItOut(" set prototype __proto__ (constructor, function::prototype) { while((prototype = <y><z/></y>) && 0){var prop; } } ");
tryItOut("/a/gi");
tryItOut("export *");
tryItOut("if(0/0) { if (false.valueOf(\"number\")++ === this >>>  \"\"  .@ (<x><y/></x>.hasOwnProperty(\"prop\"))) let (__iterator__, __proto__ = <x><y/></x>) { export *; } else export __iterator__;}");
tryItOut("/*infloop*/for(let getter; (yield (let (__iterator__, let = {throw <x><y/></x>; }) *::*)); new String(((prop.watch(\"__parent__\", (gc).apply) for (prototype in <y><z/></y>) if (false))))) {while((((<x/>.yoyo(eval)) ? [(new (Function)())].some(5.0000000000000000000000) :  /* Comment */([false]))) && 0){return;(new Function(\"export __proto__;\")) } }");
tryItOut("{M:switch((Function).call(<x><y/></x>, @foo, this)) { case 9: return;break; const __count__, __noSuchMethod__; } }");
tryItOut("while((gc()) && 0){/*for..in*//* nogeckoex bug 349964 */ for  each(var ({ constructor: constructor }) in ((uneval(#1=[#1#])))) {/*infloop*/M:while(this){export *;gc() } } }");
tryItOut("L: {switch({}) { default:  }; }");
tryItOut(" const prototype;");
tryItOut("throw prop;");
tryItOut("with({prop: (prop.prop getter= *::* ? \tnew (<y><z/></y>)( /x/ ) : [window.yoyo(<x><y/></x>) if (@foo)])})with(#1#)yield @foo;");
tryItOut("if(#1=[#1#] - constructor = this) {gc() } else  if ([11,12,13,14].some) return; else let (x:: /x/g  = this.__defineGetter__(\"constructor\", eval)) { __proto__ = [15,16,17,18].sort(/a/gi, new 033 .@*::  /x/ ()) }");
tryItOut("M:do {yield;\n } while(((.__defineSetter__(\"prop\", (new Function(\"let __iterator__ = (function ([y]) { })();\"))))) && 0);");
tryItOut("if(Object(this, undefined)) {L: {yield; }this.__defineGetter__(\"prototype\", [1,2,3,4].map) = ({constructor: window, prop: this }); } else  if (#2=({__noSuchMethod__: ((this.__defineSetter__(\"__count__\", eval)))})) {/*for..in*/for(var prototype = -3/0 in *::*) yield;let (__count__) { throw ({a2:z2}); } }");
tryItOut("const __parent__ = </*x><y/></x>\n");
tryItOut("let(throw prototype;) { __parent__ = new Math.sin((* >= <><x><y/></x></>));");
tryItOut("switch(*::*) { case (new (function (x::__count__, __count__) { if(undefined) {} else  if (({a1:1})) {} else {var __noSuchMethod__; } } )(({prototype: __proto__ = <x/> }), *.hasOwnProperty(\"__iterator__\"))): break; case ((<ccc:ddd><!--yy--></ccc:ddd>.(<><x><y/></x></>.eval(this))))(<>[,,z1]</>) = \n<><><x><y/></x></></>: gcdefault: break; break; case 2: break; if(__noSuchMethod__) { if ( /x/ ) {(<x><y/></x>);gc() } else {;export *; }}case 5: let __noSuchMethod__ =  \"\" , prototype; }");
tryItOut("yield <><x><y/></x></>;");
tryItOut("while((@foo) && 0){/*for..in*/M:for(const __noSuchMethod__ in ((function(y) { yield y; var prototype, prop;; yield y; })(<x><y/></x>))): __noSuchMethod__ }");
tryItOut("/*infloop*/M:do __count__ while(({__parent__: <y><z/></y>}));");
tryItOut("with({}) __noSuchMethod__ = __noSuchMethod__;");
tryItOut("Function");
tryItOut("yield;");
tryItOut("/*for..in*/for(\fvar [__iterator__, prototype] = yield =  /x/  in <x/>) {<y><z/></y>;yield;yield; }");
tryItOut("while((( /x/  in <x><y/></x>)) && 0){(window);continue ; }");
tryItOut("if( /x/g ) { if (<y><z/></y>) new Function} else __noSuchMethod__ = undefined");
tryItOut("gc()");
tryItOut("yield (__count__ = <><x><y/></x></>);");
tryItOut("if((([[]])(033) = constructor)(this[this], <><bbb xmlns:ccc=\"({a2:z2})\"><ccc:eee></ccc:eee></bbb></>)) { if (new 'haha'.split(__noSuchMethod__)) {throw \f<x><y/></x>;break ; } else { }}");
tryItOut("/*infloop*/do {let ({ __proto__: [prototype, __proto__], constructor: ({ __noSuchMethod__: __noSuchMethod__ }) }); } while(this | 1e4 for ((@foo % *::*)(<y><z/></y> if (null)) in constructor = prop));");
tryItOut("/*infloop*/L:for((prototype =  \"\" .__defineGetter__(\"__noSuchMethod__\", [1,2,3,4].slice)); (__iterator__.watch(\"constructor\", <x><y/></x>)).eval(0/0.__defineSetter__(\"__parent__\", --null /= arguments)); (({}).__lookupGetter__)((prototype = (uneval(window))))) {{*;export constructor; }\ngc()\n__parent__; }");
tryItOut("/*for..in*/for(__noSuchMethod__ in ((*::*).call(window, <x><y/></x>))) {<x><y/></x>;L:if(this.__defineSetter__(\"__count__\", function \t(\f__iterator__) { arguments; } )) ( '' ); else  if ((window)[this]) {[1,2,3,4].slice } }");
tryItOut("if(eval(\"yield constructor;\",  /x/g )) const __proto__ = 1.2e3;");
tryItOut("/*for..in*/for(let __count__ in <><x><y/></x></>.__defineGetter__(\"__noSuchMethod__\", (function (__noSuchMethod__)*).call).yoyo(continue M)) if((<><x><y/></x></>())[@foo]) {{ }(<><x><y/></x></>).__defineSetter__ }");
tryItOut("if(([[]])[[(p={}, (p.z =  \"\" )())]]\t) { if (((yield <x/>))) {__noSuchMethod__, __proto__ = #3={a:#3#};yield [,,]; }} else (<x/>).__defineSetter__");
tryItOut("/*infloop*/for((gc).call( /x/ , ); ( /* Comment */1e81.throw( \"\" .__lookupGetter__(\"__noSuchMethod__\")));  /x/ ) prop;");
tryItOut("/*infloop*/for(var __noSuchMethod__; (let (<><x><y/></x></> = (function ([y]) { })()) window); <y><z/></y>) throw <x><y/></x>;");
tryItOut("/*infloop*/for(({ __parent__: prop(5.0000000000000000000000) }) = ([15,16,17,18].filter((Math.pow).call, this)) < __iterator__.__proto__ = ~this; (__parent__.__iterator__ = <x/>['__parent__'] = __noSuchMethod__.__proto__ = const __iterator__;); new null([ '' ])) /*infloop*/M:for(prop; (uneval(*)); ((this)[#3={a:#3#}])) let __parent__ = yield\ngc()");
tryItOut("this.zzz.zzz;");
tryItOut("/*for..in*/for(function::__iterator__ in 0.1 ::  \"\" ) {export prop\n(<x/>)\n\nexport prop;yield; }");
tryItOut("/*infloop*/for(var __iterator__; <x><y/></x>; [,,z1]) {(<><x><y/></x></>); }");
tryItOut("export *\n");
tryItOut("/*for..in*/for([__iterator__, __iterator__] = <x><y/></x>.(<x><y/></x>) in (__count__ = (delete <x><y/></x>)[(prototype = -0)])) ");
tryItOut("if( /* Comment */<><employee id=\"1\"><name>Joe</name><age>20</age></employee></>) {/*for..in*/for(var <employee id=\"1\"><name>Joe</name><age>20</age></employee> in ({a2:z2})) true; }");
tryItOut("?");
tryItOut("/*infloop*/do /*infloop*/for(var prototype = <y><z/></y>; prototype; [,,]) {constructor = true, __noSuchMethod__ = <x><y/></x>; } while([this].map([1,2,3,4].map));\n/*infloop*/for(__count__ = (new (Math.pow)(new function (prop, prop)\f<><x><y/></x></>(<>({ (window)(true)\t: ({ prop: __proto__, __noSuchMethod__: ({ __parent__: [__count__, ] }) }), __iterator__: , ] })</>, #3={a:#3#}),  /x/g )).__lookupSetter__(\"__parent__\"); [<><x><y/></x></>].sort((*).watch); Exception()) {return  /x/ ;*; }\n");
tryItOut("if(<><x><y/></x></>) {throw [,]; } else  if (__count__) {const prop;gc() } else continue M;");
tryItOut("with({}) let(({ constructor: [] }) = (__noSuchMethod__ = window)) { throw __iterator__;");
tryItOut("L: {return  { ; } ;break ; }");
tryItOut("if('fafafa'.replace(/a/g, [1,2,3,4].map)) yield this; else {let __parent__, prototype = [,];(window).watch }");
tryItOut("do {function ()<x><y/\t></x>return this; } while((__parent__.*::*) && 0);");
tryItOut("/*infloop*/do {const __parent__ = ;while((({__parent__: [1] })) && 0)switch(<x><y/></x>.__defineSetter__(\"__iterator__\", __iterator__)) { default: export prop;let __parent__, __noSuchMethod__ = <x><y/></x>; } } while(~(prop.constructor));");
tryItOut("with(this.__defineSetter__(\"constructor\", ((__count__ = this))))/*infloop*/M:for(const ({ __count__: ({ __iterator__: ({ constructor: __parent__, constructor: __parent__ }), __noSuchMethod__: prototype }), __iterator__: ({ prototype: __noSuchMethod__, __count__: __parent__ }) }); --<x/>; [__iterator__] if (__count__) in this.zzz.zzz) { '' break L; }");
tryItOut("{}");
tryItOut("if(prototype.prop) {return [,,z1];gc() }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in new Function(<x><y/></x>)) throw this.__defineGetter__(\"__parent__\", function \t()undefined);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let constructor in *::*.@foo.throw(( \"\" ()))) if(undefined.throw(#1#)) { if ((function::__parent__.unwatch(\"__iterator__\"))) {(this); } else {export *;var __count__, __iterator__; }}");
tryItOut("try { this.zzz.zzz; } catch(__count__) { with({}) { constructor = <x><y/></x>; }  } ");
tryItOut("for(let y in [5,6,7,8]) with({}) { yield ({a1:1}); } ");
tryItOut("with([11,12,13,14].sort)var __noSuchMethod__;");
tryItOut("switch(gc( '' )) { default: break; break;  }");
tryItOut("/*for..in*/for([__proto__, __noSuchMethod__] = __count__ in <><x><y/></x></>.__lookupGetter__(\"__proto__\") << delete <x><y/></x>) {/*for..in*/for(var [constructor, __count__] = (__noSuchMethod__(@foo)%=window) in <x><y/></x>) M:if(undefined)  else  if (*::*) break M;\t }");
tryItOut("(1 for (x in []))");
tryItOut("/*infloop*/for((uneval(this)) ? ((1e4.__parent__).hasOwnProperty(\"prop\") ? ((__noSuchMethod__null))([[15,16,17,18].sort(function () { ; } ,  /x/g )], <x/>.*) : (({a1:1}) > ({})).prototype) : false; ((yield this.zzz.zzz)); (eval(\"new (this)(1e-81, <x><y/></x>)\", (({__noSuchMethod__: @foo})))).__defineSetter__(\"constructor\", null <<= null)) ");
tryItOut("yield;return;");
tryItOut("yield;");
tryItOut("if([__proto__, , ] = [prop]) {;yield; } else export *;");
tryItOut("for(let y in []);");
tryItOut("export *\nthrow  \"\" ;");
tryItOut("/*for..in*/L:for(({ constructor: ({ __noSuchMethod__: [, __iterator__.function::__count__], prop: ({ prototype: ({ constructor: __count__ }), __iterator__: __noSuchMethod__ }) }) }) in (((<><zzz>constructor</zzz></>).__defineSetter__)(<><x><y/></x></>.__lookupGetter__(\"constructor\"\f).eval(true.__defineSetter__(\"prop\", (1 for (x in [])))))))prop, prop");
tryItOut("with({}) { return; } ");
tryItOut("{}\n");
tryItOut("L: {if(<x><y/></x>) export *; else  if (3/0) {1e81; } else {this<x><y/></x>; }if(0.1) { if (this) {<><x><y/></x></>; }} else yield  \"\" ; }");
tryItOut("if(((yield  /x/ .__lookupSetter__(\"__parent__\") .@x:: <><x><y/></x></> instanceof  /x/g .yoyo(let (__iterator__ = <y><z/></y>, constructor = <x><y/></x>) (<><x></*\n*/y/></x></>.watch(\"__proto__\", (033).__defineSetter__)))))) {(0x99);yield <y><z/></y>; } else  if ((*::*.propertyIsEnumerable(\"constructor\") & this.zzz.zzz)) {throw __iterator__;return null; } else {prop = <x><y/></x>, __iterator__ = *; }");
tryItOut("/*for..in*/for(const __proto__.constructor in <><x><y/></x></>) {continue ; }");
tryItOut("{ /x/  }");
tryItOut("yield;(([1,2,3,4].slice(constructor, prototype));");
tryItOut("if(new Function(<y><z/></y>)) /*infloop*/for(__noSuchMethod__; [@foo].sort(undefined); (<><x><y/></x></>.__defineSetter__(\"prototype\", <y><z/></y>))) {__parent__ = [,];break ; } else  if (({constructor: *::* })) with({null: __count__}){ }");
tryItOut("/*infloop*/for((this.__defineSetter__(\"prop\", function (__count__, constructor)[])); ({__noSuchMethod__: prop =  \"\"  + 4.}) .@  \"\" ; (\tconstructor = this.__defineGetter__(\"__noSuchMethod__\", gc))) {L:while((-1) && 0)({a2:z2}) }");
tryItOut("/*for..in*/for(var __count__ =  \"\"  == <>\n<x><y/></x></> in  /x/ ) if( /x/g ) {} else  if (<y><z/></y>) {({}).hasOwnProperty } else ; const __noSuchMethod__;");
tryItOut("this.zzz.zzz;");
tryItOut("/*infloop*/L:for(let __count__ =  \"\" .unwatch(\"__parent__\").hasOwnProperty(\"__count__\"); (prop.__noSuchMethod__ setter= function ()prop = -1.valueOf(\"number\")); 'fafafa'.replace(/a/g, (new Function(\"var prototype = __count__, __proto__ = null;\")))) {/*infloop*/do return <y><z/></y>; while([11,12,13,14].map);yield window; }");
tryItOut("var __proto__;");
tryItOut("let(__count__ = ((yield <y><z/></y>))) { ((__noSuchMethod__ && *::*))/*\n*/;");
tryItOut("if((yyy.(Boolean(<x><y/></x>, <y><z/></y>)))) { if (( /* Comment */<x><y/></x> * prop.prop = <><x><y/></x></>)) if(null.yoyo(-1)) {export *;var constructor =  /x/ , __count__; } else  if (new <x><y/></x>) { }} else while((*) && 0){let prop = true, __proto__;({}); }");
tryItOut("L:with({__count__: 4..__lookupGetter__\t(\"prototype\")})if(<y><z/></y>) {{} } else {{}((function (window, __noSuchMethod__) { gc() } ).apply).apply }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__proto__ in (5.0000000000000000000000['__iterator__']|=Number(window, <><x><y/></x></>))) __count__ = prototype;");
tryItOut("__noSuchMethod__");
tryItOut("/*infloop*/for(__count__; __proto__; let (__iterator__) <><x><y/></x></>) {var prop = <x><y/></x>, __noSuchMethod__ =  \"\" ;yield; }");
tryItOut("{yield; }");
tryItOut("/*infloop*/for(<x/>(); <><x><y/></x></>(<x><y/></x\f>, [,,]); __proto__.prototype =  /x/ ) ({}).hasOwnProperty");
tryItOut("/*for..in*/M:for(__iterator__ = undefined >>>=__iterator__.yoyo(<x><y/></x>.(<x/>)) in this) {export __count__;throw undefined; }");
tryItOut("\tdo {return null; const *::*;; } while(( '' ) && 0);");
tryItOut("let (__proto__ = __noSuchMethod__, __parent__) { this; }");
tryItOut("/*for..in*/for(const function::__noSuchMethod__ in this) {const __parent__ =  '' , __parent__;<x><y/></x> } set prop(__noSuchMethod__) { return * }  = -1;");
tryItOut("with(*){yield; }");
tryItOut("if(new (<x/>)()) {;const __count__; } else  if (__count__) {let __iterator__; }");
tryItOut("let (prototype = (<x/>.__count__)) { yield function ([y]) { }; }");
tryItOut("with({}) { with({}) let(prototype) ((function(){for(let y in [5,6,7,8]) ;})()); } ");
tryItOut("try { throw StopIteration; } finally { yield ((function(y) { yield y; ; yield y; })()); } ");
tryItOut("if(()) {var __noSuchMethod__;export __iterator__; } else {/*infloop*/for(let [, __proto__, ] =  /x/ ; new RangeError( /x/ ); [<y><z/></y>].sort((<x><y/></x>).watch)) {;; } }");
tryItOut("/*infloop*/while((let (__count__, __noSuchMethod__)  /x/ ))if(__proto__ =  ''  <<= (return (function ([y]) { })())) {if(*) {var __count__, __proto__; } else ;yield; } else  if ((<x><y/></x>(function ([y]) { }, <><x><y/></x></>))) {__proto__; } else {export constructor;const prototype; }");
tryItOut("let(constructor = <><x><y/></x></>) { {}");
tryItOut("/*for..in*/L:for(prop in ((Math.pow)('haha'.split)))/*infloop*/for(const __iterator__; <><x><y/></x></>; window) export __count__;");
tryItOut("/*infloop*/do {yield #3={a:#3#}; } while(<x/>);\n/*for..in*//* nogeckoex bug 349964 */ for  each(var prototype in __proto__|=<x/>) prop, constructor = *::*\n");
tryItOut("/*for..in*/for(var [__count__, __iterator__] = <><x><y/></x></> in 3) let prototype = 3;");
tryItOut("/*infloop*/L:do (<x><y/></x>); while((yield 0.1 , <><x><y/></x></>));");
tryItOut("for(let y in []);");
tryItOut("switch(prop) { case this: function(q) { return q; }break;  }\n");
tryItOut("L:if(\n(prop = true)) { if (<><employee id=\"1\"><name>Joe</name><age>20</age></employee></>) { { yield --*::* < prototype = __iterator__ }  } else {L:if(true) {{}throw  '' ; }{} }}");
tryItOut("L:if((this.zzz.zzz)) { if ([1].throw(<x><y/></x>)) prop, __noSuchMethod__;} else export *;");
tryItOut("return new (gc)();");
tryItOut("{{throw <x><y/></x>;<x/>; }\nexport __parent__;L:if(new (new Function(\"\\nvar __count__ = __iterator__;, __proto__;\"))()) { if ((__parent__|= \"\" )) yield; else {export *;; }} }");
tryItOut("try { return; } finally { continue L; } ");
tryItOut("with((prop = __noSuchMethod__++))\f({}).hasOwnProperty");
tryItOut("/*infloop*/do switch(<x/>) { default: {}break; case __parent__: break; case 3: case [,,z1]: case 3: break; case 5: break; break; case <>#1#</>: const __iterator__ = function::__proto__;break; new Functionbreak; return;continue ;break;  } while(<x/>.throw(*));");
tryItOut("/*for..in*/M:for([this['__count__'], constructor] = ((function ([y]) { })().yoyo(<y><z/></y>)) in constructor) {yield; }");
tryItOut("__iterator__ = __noSuchMethod__;");
tryItOut("export *;\n{prop; }\n");
