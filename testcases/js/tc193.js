tryItOut("break \n");
tryItOut("do {if( '' ) {; } else  if (prop) ([z1]); else yield;throw #1#; } while(([] = [prop, constructor]) && 0);");
tryItOut("if((window >= __iterator__)) {var __parent__ = {}, __count__ = #3={a:#3#}; } else {;yield; }");
tryItOut("return ({a1:1}) <<= [[]];");
tryItOut("yield this.zzz.zzz;");
tryItOut("if(([z1,,]).__defineSetter__((new (function ([y]) { })()))) break ;");
tryItOut("/*infloop*/while(__noSuchMethod__%=function::prop){if(<x><y/></x>) {export *; } else gc()\tvar constructor = __count__; }");
tryItOut("M:if( \"\" ) {export __noSuchMethod__; } else {yield;export constructor; }");
tryItOut("L:while((((uneval(new function (prop) { return true } (<x><y/></x>.(.2),  \"\" )))).__parent__ = (this.zzz.zzz .@*:: (let (__proto__, __count__ = ({a1:1})) prop)).valueOf(\"number\")) && 0)if((Exception(each .@*:: this >>= prototype))) { if ((<><x><y/></x></>).__defineSetter__()) {export function::__parent__; } else {export *;yield <><x><y/></x></>; }}");
tryItOut("with(<x/>.unwatch(\"prop\")){;\r }");
tryItOut("[[]]");
tryItOut("let( = (<><x><y/></x></> = <x/>), prototype = <y><z/></y>) { throw prototype;");
tryItOut("/*infloop*/for(var __iterator__ = \n[z1,,]; (__noSuchMethod__ = yield <x/>); .eval([z1,,])) {yield (function ([y]) { })(); }");
tryItOut("M:while(((__iterator__ ? __count__ : 1.2e3)) && 0){/*for..in*//* nogeckoex bug 349964 */ for  each(let this.__defineGetter__(\"__iterator__\", eval).__iterator__ in (({a1:1}) - null)) {/*infloop*/for(let prototype\f; prototype;  /x/ ) export __count__;export *; } }");
tryItOut("return <x><y/></x>[<x><y/></x>] ? (null.valueOf(\"number\")) : __count__.constructor = window;");
tryItOut("var __count__;\n(undefined);\n\n");
tryItOut("let (prop) { (({a2:z2})); const prop; }");
tryItOut("/*infloop*/do gc() while(window);");
tryItOut("gc()");
tryItOut("let (prop) { export __proto__; }");
tryItOut("/*infloop*/for(new eval(1e-81 >>= <x><y/></x>); ('fafafa'.replace(/a/g, gc)); yield window) {return;__proto__; }\f");
tryItOut("if((({ get __count__ prototype ()<x><y/></x> |  \"\"  }))) { if (Math.pow(__parent__, *::*)) /*infloop*/for(<x/>; undefined; 1.3) {{}(let )__parent__ = *; }} else if(1e4) return *::*; else {break M; }");
tryItOut("with(<x><y/></x> << <y><z/></y>.unwatch(\"__proto__\"))gc()");
tryItOut("L: {/*for..in*/for(var (__proto__) in ((1.3)(new Array(this)))){let __noSuchMethod__; } }");
tryItOut("if(constructor) {{} } else  if (new function(q) { return q; }() = [ /x/g  if (<><x><y/></x>//h\n</>)].eval(yield (<x><y/></x>.(<x/>)))) export *;");
tryItOut("do __count__; while(((Math.sin)(<><x><y/></x></>)) && 0);");
tryItOut("/*infloop*/while([z1].unwatch(\"__parent__\"))return\n");
tryItOut("L:switch(prop.((throw __noSuchMethod__ = prop))) { case <x/>: if(window[function ([y]) { }])  else var prototype = <><x><y/></x></>;break;  }");
tryItOut("if(constructor.([1,2,3,4].map).__lookupSetter__(\"prototype\").isPrototypeOf(__parent__ = __proto__.__lookupGetter__(\"__iterator__\"))) { if (([15,16,17,18].map(function  function::function::__parent__ (__iterator__, __count__) { return @foo } , __count__.prototype = 1e4))) {(true);export __proto__\n; }} else return <><x><y/></x></>;");
tryItOut("*::* = __proto__.__parent__;");
tryItOut("export __parent__;");
tryItOut("* <<  ''  = constructor;");
tryItOut("try { return; } catch(__proto__) { ; } ");
tryItOut("/*for..in*/M:for(const #2=({prop: window}).__lookupGetter__(\"__proto__\")['__iterator__'] in ((function::__parent__.(undefined for each (prototype in undefined)))(__iterator__.__iterator__ setter= [1,2,3,4].map ? ({ get __noSuchMethod__ __parent__ (constructor, prototype)<><x><y/></x></> %= <><x><y/></x></>,  set constructor prototype () { return (<x><y/></x>.@foo) }  }) : new Array({{} }))))\r");
tryItOut("/*for..in*/for(var [__proto__, x::__noSuchMethod__] = null in *::*) yield;");
tryItOut("let(__parent__) ((function(){let(prop) { break ;})());");
tryItOut("export __noSuchMethod__");
tryItOut("do {throw null;continue M;\n<x/>;\n } while((eval(\"let __proto__;\", <x/>)) && 0);");
tryItOut("{throw this;/*for..in*/for(var function::constructor in ((({}).__lookupGetter__)(<><x><y/></x></>))\f){yield <x/>; } }");
tryItOut("var __noSuchMethod__;\n[,];\n");
tryItOut("if((prototype = false) , (({ __count__: __parent__, __noSuchMethod__: ({ __iterator__: prototype }) }) = __noSuchMethod__)) break L; else  if ([<><xxx {prop}={this -= 0} /></>].map(function(y) { yield y; ({}).__lookupGetter__; yield y; })) __count__");
tryItOut("/*for..in*/L:for(let (this)(function ([y]) { }) in (([1,2,3,4].slice)((this.__defineGetter__(\"__proto__\", [[1]]))))) set __noSuchMethod__ __noSuchMethod__ () { return __iterator__ } ");
tryItOut("/*for..in*/for(let [__count__, prop] = this.zzz.zzz in \n(__count__.valueOf(\"number\")) .. getter.constructor getter= ([1,2,3,4].map).apply) /*infloop*/do (1e4); while(@foo);");
tryItOut("(<><x><y/></x></>);");
tryItOut("[,];");
tryItOut("/*for..in*/for(__iterator__ = (eval) in null === #3={a:#3#}) return;");
tryItOut("M:if(this >> 1e81) { if (<><x><y/></x></>.*) continue ;} else {break L;__iterator__; }");
tryItOut("with({}) throw StopIteration;");
tryItOut("{}");
tryItOut("{ }");
tryItOut("let([, , , , ] = this.__lookupSetter__(\"7\"), __noSuchMethod__) { with({}) yield <><x><y/></x></>;");
tryItOut("");
tryItOut("with({__parent__: (({prop: @foo}))});");
tryItOut("L:if((<><x><y/></x></>.@foo)[function::prototype = constructor]) { if (__count__.__parent__) yield window;} else export *;");
tryItOut("if(*::*) { if ((yield <x><y/></x>)) {/*infloop*/L:for(prototype; (uneval(<><x><y/></x></>)); constructor) (@foo); } else (<y><z/></y>);}");
tryItOut("if(1.2e3 ? <x/> : <x><y/></x>) {let __noSuchMethod__ = window, __proto__;eval } else ");
tryItOut("/*for..in*/M:for(prop.constructor in undefined.__lookupGetter__(\"prototype\")) \fexport *\n");
tryItOut("L:if((new *::*(window))) /*for..in*/for(const __iterator__ = __proto__ === #1# in <> { yield window } </>) {; }");
tryItOut("if(this <<=  /x/g ) ; else  if ((__iterator__.(([(undefined)(0) for (/ in __proto__) for each ( get prototype __parent__ (__iterator__, (3/0);) { gc() }  in function ([y]) { })]))) || new (1 for (x in []))()) {const constructor, __iterator__ = this;/*infloop*/for(const prototype; __iterator__ = default: ;break; ; eval(\";\", window)) default: return;break; prop;case 0: switch(@foo) { default: gc()break;  }break;  } else delete.__noSuchMethod__ = (uneval(undefined)), __iterator__ = __iterator__gc()new Function");
tryItOut("/*for..in*/for(let __count__.prop in __noSuchMethod__ for (window in __iterator__)) return;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(prop in <x><y/></x>) {(<x><y/></x>);0x99; }");
tryItOut("with({prototype: function (__proto__, prop) { ((function ([y]) { })()); } ( /x/g , window) = <x><y/></x> !== constructor})break M;\nreturn __iterator__;\n");
tryItOut("prototype = __iterator__\n");
tryItOut("if(<x><y/></x>.isPrototypeOf(window)) { }");
tryItOut("/*infloop*/M:do {var prop, __count__;yield ((p={}, (p.z = <x><y/></x>)())); } while(__proto__.__defineSetter__(\"__parent__\", [1,2,3,4].slice));");
tryItOut("L: {(function  __noSuchMethod__ () { return <x><y/></x> } ).apply/*for..in*/for(var __count__ = 0/0 in __iterator__) {__noSuchMethod__ =  /x/ , __noSuchMethod__; } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each((__parent__) in  \"\" .yoyo(<x><y/></x>)) {/*infloop*/for(const __noSuchMethod__ = prop = [,,z1]; this ? <><x><y/></x></> : <><x><y/></x></>; get) {return;export *; }let (__proto__ = [,,z1]) { (this); } }");
tryItOut("let (__iterator__ = //h\n<><x><y/></x></>) { yield; }");
tryItOut("let(__parent__ = 1e+81) { this.zzz.zzz;");
tryItOut("yield window; const prop;export *;");
tryItOut("with({__noSuchMethod__: new ((false.propertyIsEnumerable(\"constructor\")))()}){return\n__iterator__ = 0x99;return (function ([y]) { })(); }");
tryItOut("prototype: *::*");
tryItOut("{throw *::*; const prototype; }");
tryItOut("yield;(new Function(\"__proto__;\"))");
tryItOut("/*for..in*/for(let __count__ = window.valueOf(\"number\") in [,]) return;");
tryItOut("if((p={}, (p.z = [window for (__iterator__ in <x/>)])())) yield  /x/ \nyield; else {/*for..in*/\nfor(const [__proto__, prototype] = *::* in (-0)) {throw *;return <><x><y/></x></>; } }");
tryItOut("/*infloop*/M:while((__proto__ = __iterator__).__defineGetter__(\"__count__\", function(y) { yield y; continue M;; yield y; }))with({prototype: ((({ __parent__: [], __proto__: [prop, ({ getter: __parent__, prop: prototype })] })))[window === <x><y/></x>]}){gc()var setter = <x/>; }");
tryItOut("L: {break M;{export *;yield; } }");
tryItOut("prop = __iterator__;");
tryItOut("/*for..in*/for(const 5.0000000000000000000000.__noSuchMethod__ in prototype) /*infloop*/for(let function::constructor; false; <><x><y/></x></>) {}");
tryItOut("/*infloop*/M:for(*; <x><y/></x>;  /x/g ) {return;gc() }\nwith(yield window){export setter; }\n");
tryItOut("if((__iterator__.(__noSuchMethod__ =  /x/ ))) prototype = <x><y/></x>\nthrow <x><y/></x>; else  if ([*::* @ *::*])  { yield this.__defineGetter__(\"prop\", [1,2,3,4].map) }  else {with({__noSuchMethod__:  \"\" })return *::*;do var prop; while((*::*) && 0); }");
tryItOut("L:switch(this.__defineSetter__(\"__count__\", (function ([y]) { })()).unwatch(\"__iterator__\")) { default: break;  }");
tryItOut("/*infloop*/M:for(let(__parent__) { with({}) ; <bbb xmlns=\"[15,16,17,18].some((1 for (x in [])), <><x><y/></x></>)\"></bbb>; new <x><y/></x>([,,])) ;");
tryItOut("yield;\nexport *;\n");
tryItOut("/*for..in*/for((\n /x/g .__count__) in ((Math.pow)((Error(, [(true .@*:: *)].filter(function  __iterator__ (__iterator__, function::constructor) { export __count__; } ))))))let(__count__ = window) ((function(){return;})());");
tryItOut("undefined;\n<x><y///h\n></x>;\n");
tryItOut(";");
tryItOut("if((prop = [ '' ].filter(3.141592653589793))) {L:while((0) && 0){prototype, __proto__ = <><x><y/></x></>; }return } else {; }");
tryItOut("export __proto__;");
tryItOut("/*for..in*/for(let prop in <x><y/></x>) break M;");
tryItOut("let prototype\nwhile((<><x><y/></x></>) && 0){;export *; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(prop in 0/0) {var prototype;3/0; }");
tryItOut("with({}) try { throw prototype; } catch(__noSuchMethod__ if (function(){return;})()) { this.zzz.zzz; } catch(prop) { throw StopIteration; } finally { with({}) { yield <><x><y/></x></>; }  } ");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const prototype in ()) {}");
tryItOut("this.zzz.zzz;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __proto__ in __count__) export *;");
tryItOut("let prop = window;");
tryItOut("while(( '' ) && 0){Math.pow }");
tryItOut("if((__noSuchMethod__.__iterator__ = this.valueOf(\"number\"))) var prototype, __iterator__;");
tryItOut(";");
tryItOut(";\n/*for..in*/for(const __iterator__ = prototype in <><x><y/></x></>) break M;\n");
tryItOut("export *; const __iterator__;");
tryItOut("/*for..in*/for(let __count__ in <x><y/></x>.(-1)) /*for..in*/M:for(__count__ = <x><y/></x> in [,]) {; }");
tryItOut("if(<><x><y/></x></> ? <x><y/></x> : this[@foo.throw(null)]) { if ([1,,]) let prop = constructor, prop;} else yield <y><z/></y> / constructor;");
tryItOut("/*infloop*/for(({}.watch(\"constructor\", ( /x/g ).__defineSetter__)) % __iterator__ in [,]; (yield <x><y/></x>)[__count__ = false]; delete (__parent__.@foo)) {/*infloop*/L:for(( /x/g  >= @foo .. 3.141592653589793); \r<bbb xmlns:ccc=\"[1]\"><ccc:eee></ccc:eee></bbb>; ( ''  .. <y><z/></y>)) <><x><y/></x></>;yield __parent__; }");
tryItOut("M:if((1e81 = this.zzz.zzz.eval(new String(*::*)))) { if (let (__proto__ = <><x><y/></x></>) <x/>.isPrototypeOf(prop = ([11,12,13,14].map\n)))  { {} }  else {let (constructor) { return; }throw <x><y/></x>; }}");
tryItOut("/*for..in*/for(const prop in ((function(y) { yield y; throw true;; yield y; })(new null))){throw [[1]]; }");
tryItOut("{/*infloop*/for(false; <x><y/></x>; <><x><y/></x></>) const function::this = <><x><y/></x></>; }");
tryItOut("M:with({__iterator__: [15,16,17,18].map(new Function, @foo)})gc()");
tryItOut("L:while(((yield (-1)).prototype) && 0){if(false) {prop, prototype; } else  if ([,,z1]) {return; }var __iterator__; }");
tryItOut("with((yield = null if ((-1)))){throw @foo; }");
tryItOut("with(undefined)/*for..in*/for(let __noSuchMethod__ in (((new Function(\"throw null;\")))(undefined)))");
tryItOut("/*infloop*/for(eval(\" \\\"\\\" \", this); <xxx>{__noSuchMethod__}</xxx>; 3.throw( '' ) .@*:: new function (__parent__, prototype)*::*(__iterator__)) {yield; }");
tryItOut("if(@foo) yield  '' ; else {break ; }\n{}\n");
tryItOut("({ prop: ({ function::constructor: __parent__ }), __iterator__: [] })");
tryItOut("/*infloop*/for( \"\" ; function ([y]) { }.watch(\"__proto__\", gc); <y><z/></y>\f--) export *;");
tryItOut("let (__iterator__ = <y><z/></y>) { gc }");
tryItOut("with((constructor.constructor getter= (window).call) .@  /x/g )throw yield null;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __iterator__ in <x><><x><y/></x></> < <y><z/></y>yprototype /</>) {{} }");
tryItOut("if([undefined in <><x><y/></x></>]) {; } else  if (!this) {return; } else export *;");
tryItOut("/*infloop*/for(yield; __iterator__.<bbb xmlns=\"\n__parent__\"> { return <x><y/></x> } </bbb>; __iterator__.prototype = new true(this, [,])) {if(0.1) ; else { \"\" ; }prototype; }");
tryItOut("/*infloop*/M:for(({ prop: constructor, __count__: ({ prototype: __proto__, constructor: ({ prop: ({ __noSuchMethod__: prototype, __parent__: [, , ] }) }) }) }) = this.__defineSetter__(\"prototype\", new Function)[[,,z1] ? false : <><x><y/></x></> .@x:: (new RegExp())]; ((uneval(<x><y/></x>)) !== *); \n({constructor getter: function(q) { return q; } })) with({__parent__: prop = ([11,12,13,14].filter) <<= false})([z1]);");
tryItOut("yield;");
tryItOut(" /x/g ;");
tryItOut("{const constructor = 0/0;/*for..in*/\tM:for(let [constructor, <y><z/></y>] = ~(this.__defineSetter__(\"__parent__\", 5.0000000000000000000000)) in <x><y/></x>) continue ; }");
tryItOut("/*for..in*/M:for([__count__, __count__] = __iterator__ ^= prop in __parent__)  /x/ ;gc()");
tryItOut("__noSuchMethod__ = __iterator__;");
tryItOut("this.zzz.zzz;");
tryItOut("L:if([[1]].__lookupSetter__(\"__noSuchMethod__\")) {let ([[]]) { gc() } } else  if ( /x/ .__iterator__) /*infloop*/while(new (function ()true).apply(( /x/g .propertyIsEnumerable(\"__proto__\")))){gc()/*for..in*/L:for(var [__proto__, __iterator__] = prototype.hasOwnProperty(\"__parent__\") in \t@foo) {__count__, __noSuchMethod__; } }");
tryItOut("/*for..in*/for(const [prop, __count__] = (({ get __count__(__iterator__, __parent__) { return (<><x><y/></x></>(*, <y><z/></y>)) }  })).throw((yield yield window)) in this) let __count__ = <><x><y/></x></>, __noSuchMethod__ = true;");
tryItOut("for(let y in [5,6,7,8]) constructor = prototype;");
tryItOut("/*infloop*/for('fafafa'.replace(/a/g, <x/>) | prop = *--; (<x><y/></x>)[<x><y/></x>] || yield *; __proto__.__count__ = prop.__count__ !== [[z1].*]) {/*infloop*/for(typeof <x><y/></x>; new (<><x><y/></x></>)( /x/ , [1]); this.__defineGetter__(\"prop\", function(y) { yield y; ; yield y; })) {} propreturn; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __parent__.prop in this.zzz.zzz) switch((__proto__ = <y><z/></y>)) { default: /*for..in*/for(__count__ in ((gc)([1,,]))){export *; }break;  }");
tryItOut("/*infloop*/L:for(let [, , __iterator__] = this; ( /* Comment */[[1]]); eval(\"throw __count__;\", 0.1)) throw <><x><y/></x</>;return this;");
tryItOut("/*for..in*/L:for(let __proto__ = __count__ = <><x><y/></x></> in (new ((this)(<><x><y/></x></>))() @ (__count__ = __proto__).unwatch(\"prototype\"))) M:if((<><x><y/></x></>.*)) { if ((({__noSuchMethod__: __noSuchMethod__ = *::*}))) {var __parent__ = null; }} else return __count__;");
tryItOut("\n");
tryItOut("/*for..in*/M:for(const [__parent__, __proto__] = __noSuchMethod__ = this in 033) if(<x/>) { if (1.3) __proto__} else return\nyield;");
tryItOut("([])\n");
tryItOut("if((uneval('haha'.split(this.__defineGetter__(\"prototype\", new Function))))) { if (yield 0) L:if([11,12,13,14].some) {yield 5.0000000000000000000000; }} else {const __noSuchMethod__ =  '' ; }");
tryItOut("/*for..in*/for(var __noSuchMethod__((<x><y/></x>)) in ((function  __count__ (__proto__, __proto__)this)(<><><employee id=\"1\"><name>Joe</name><age>20</age></employee></></>))){while(((__proto__) = (-0)) && 0){if((({}).hasOwnProperty)(<><x><y/></x></>, <><x><y/></x></>)) (<y><z/></y>); else {throw <x/>;let __count__;\t } } }");
tryItOut("/*infloop*/while(yield (<y><z/></y> ^ [1,,])[({prop: <><x><y/></\rx></>, __iterator__: (function ([y]) { })() })]){if(* * prop) {constructor } else  if (__count__) continue M; else {export *; } }");
tryItOut("/*for..in*/for(var __parent__ in ((((prop = [prop])|=this.zzz.zzz))((uneval(__noSuchMethod__.constructor setter= 'haha'.split += @foo)) - ((<y><z/></y> instanceof arguments).__lookupSetter__(\"prop\")) & (prop =  /x/g ))))/*infloop*/do {break ; } while(([15,16,17,18].filter((new Function(\"export '*;\")), __count__)));");
tryItOut("throw StopIteration;");
tryItOut("gc()\n(-0);\n");
tryItOut("/*for..in*/for(const //h\n[__proto__, function::prop] = __noSuchMethod__ = (((constructor |  \"\" ).eval(eval(\"var prototype = prop, __noSuchMethod__;\", window)))(({__proto__ setter: function  __iterator__ (constructor, __parent__)<x><y/></x> }).hasOwnProperty(\"__proto__\"),  '' )) in (uneval(0/0\n))) this ? [[]] : this;");
tryItOut("(033);");
tryItOut("yield <y><z/></y>;\n/*for..in*/for(var prop in null) { }\n");
tryItOut("if(__proto__ = 3) ; else  if ((this.zzz.zzz)) {yield prototype;gc() } else {{} }");
tryItOut("if( /x/g ) {( /x/ ); } else if(*) 3/0 else  if (<><x><y/></x></>) throw function(id) { return id }; else {yield this;\tconstructor, __iterator__ = __iterator__; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const prop in (this.zzz.zzz)) {/*infloop*/M:do return; while( /x/ ); }");
tryItOut("M:if([z1]) { if (3/0) continue M;} else {; }");
tryItOut("M:if(({__count__: ({__proto__: this.__defineGetter__(\"delete\", function  prop (__iterator__)\t { return __proto__ } ), prototype getter: function  __count__ (constructor, constructor) { return  /x/g  }  })})) {return; } else  if ((__parent__.prop setter= function (x::prop, __iterator__) { throw <x><y/></x>; }  for each (__parent__ in 1e-81) for (prototype in prototype))) {{} }");
tryItOut("/*for..in*/for(let __parent__ in ((new (new Function(\";\"))(<><x><y/></x></>))(((({}).__lookupGetter__)(new (@foo)(@foo, {}))))))prop");
tryItOut("L:if((({__proto__: [[]] }))) {{}{return <x/>;(#1=[#1#]); } } else  if (1e+81) {yield window;{\rreturn; } }");
tryItOut("/*for..in*/L:for(const [__noSuchMethod__, __parent__] = <><x><y/></x></> in <y><z/></y>) {export *;export *; }");
tryItOut("{if(typeof null) {(<y><z/></y>); } else {yield; }//h\nprop, constructor; }");
tryItOut("{break ; }\n\f<xxx>{__parent__}</xxx>\n");
tryItOut("M:if(@foo) { if (<x><y/></x>) break L;} else {{} }/*\n*/");
tryItOut("{gc() }");
tryItOut("/*for..in*/for(const __parent__ in this) export __count__;");
tryItOut("/*for..in*/for(const prototype in (( /x/g )(<y><z/></y>))){const prototype, prototype; }");
tryItOut("L:if(<y><z/></y>) { if ((prototype.__parent__)) {throw false;{} } else { }}");
tryItOut("do {export constructor; } while((<x/>) && 0);");
tryItOut("/*for..in*/for(__proto__ = this in true) let __count__ = true, __noSuchMethod__;if( '' ) gc() else  if (-0) {export *; }");
tryItOut("do for(let y in [5,6,7,8]) let __parent__, __noSuchMethod__ = window; while(( { yield * } ) && 0);");
tryItOut("yield  '' \n");
tryItOut("if(({prototype: __iterator__ :: __noSuchMethod__, constructor: ({ get __proto__(__count__, prop) {  }  }) })) /*infloop*/for(window; -0; <x><y/></x>) export __count__; else yield;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const function ([y]) { }['x::prop'] in false) { }");
tryItOut("L: \t/*infloop*/for(@foo; <x/>; window) ");
tryItOut("/*infloop*/while((__parent__ = <y><z/></y>.watch(\"__iterator__\", (1 for (x in []))))){Math.pow }");
tryItOut("/*infloop*/M:for(var __noSuchMethod__; (__parent__, __proto__.__defineGetter__(\"prototype\", [1,2,3,4].map)); (({ __noSuchMethod__: prototype }) = (window)) > \n<><x><y/></x></>) {/*for..in*/M:for(__proto__ = <><x><y/></x></> in <><x><y/></x></>) {export *;export __parent__; } }");
tryItOut("let __parent__ = <y><z/></y>;\nyield <x><y/></x>;\n");
tryItOut("{return; }");
tryItOut("while((true) && 0)(0);");
tryItOut("/*for..in*/for(var ([[[]]].sort(({}).__lookupGetter__))(this) in arguments['__iterator__'] = __proto__) let(prototype) { yield;");
tryItOut("/*for..in*/for(var prototype = let (prop) <y><z/></y> in #1#.yoyo(delete (yield this))) if(<x><y/></x>.([z1,,]).@foo) {continue ; }");
tryItOut("if(this.zzz.zzz) yield; else  if (new ([1,2,3,4].slice)((0.1.hasOwnProperty(\"__noSuchMethod__\")))) {if(<x/>) {export *;throw <><x><y/></x></>; } else {throw  /x/ ; }yield *::*; } else (-3/0);");
tryItOut("if((((((<><x><y/></x></>)[<x/>]) for (<><x><y/></x></>['__proto__'] in __count__) for (__proto__ in <y><z/></y>)))(__parent__))) {export *;gc() } else { }");
tryItOut("yield;\ngc()\n");
tryItOut("yield\n/*infloop*/L:do break L; while(<><x><y/></x></>);");
tryItOut("/*infloop*/M:for(const prop; __iterator__.(window); (new ([,,z1])(4., ({a2:z2}))).__count__ = __iterator__.prototype getter= <><x><y/></x></>) let prop, __count__;");
tryItOut("if(null) *; else gc()");
tryItOut("L: {return; }");
tryItOut("export *;const __parent__ = [[1]], __iterator__;");
tryItOut("if(((function(y) { yield y; gc(); yield y; })((#3={a:#3#} >>> <x/>)))) \f{ if ((null.isPrototypeOf(*::*).valueOf(\"number\").__defineSetter__(\"__proto__\", function (__proto__) { ; } ))) const __count__;} else /*infloop*/for(({ __proto__: [] }) = (\n<y><z/></y>.@*); __proto__ = <y><z/></y>; (constructor).call((--), __noSuchMethod__.constructor = this)) {break M; }");
tryItOut("(((\t{__noSuchMethod__: *::*})))(this.__defineGetter__(\"__noSuchMethod__\", <y><z/></y>)) = x::prototype;");
tryItOut("do {let prop, <x/> = function::prop;; } while((undefined.__proto__) && 0);");
tryItOut("/*for..in*/for(let [__noSuchMethod__, __count__] = window %= (-0) in yield <y><z/></y>) {/*for..in*/for(const __count__ = window ? window : *::* in <x/>) prototype, __noSuchMethod__;throw <><x><y/></x></>; }");
tryItOut("{var x::prototype; }");
tryItOut("(<y><z/></y>).watch const prototype;");
tryItOut("/*infloop*/while([z1].__count__ =  \"\" )(<y><z/></y>);");
tryItOut("while((([11,12,13,14].some.isPrototypeOf((window - <x><y/></x>)).__lookupSetter__(\"__proto__\"))) && 0)continue L;");
tryItOut("while(((gc)( \"\" )/*\n*/ ? (window.yoyo(__noSuchMethod__)) : prop.valueOf(\"number\")) && 0)while((([[]].eval(*::*))) && 0)*::*;");
tryItOut("/*infloop*/for(Number(); 1.2e3 instanceof true; this./*\n*/__defineGetter__(\"__proto__\", prototype: (let (__noSuchMethod__ = this) undefined))) /*infloop*/for(var function::__count__; null.hasOwnProperty(\"__noSuchMethod__\"); *) {yield;constructor: (({__parent__: [z1] })) }");
tryItOut("L: return\n");
tryItOut("if((({ __parent__: __parent__, prop: __parent__ }) = ((p={}, (p.z = __proto__)())))) constructor;");
tryItOut("{(@foo); }");
tryItOut("constructor = prototype;");
tryItOut("with({__parent__: yield [15,16,17,18].sort(function ()this, undefined)})yield 1e-81;\nthrow  '' ;\n");
