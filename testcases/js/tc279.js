tryItOut("M:if(case try { (false); } finally { ; } : break; break; ) {yield; } else  if (3/0) ;");
tryItOut("L: let __count__, prop;\n/*for..in*//* nogeckoex bug 349964 */ for  each(constructor in <y><z/></y>) gc()\n");
tryItOut("let(__iterator__ = (this.isPrototypeOf(<x><y/></x>).*), __noSuchMethod__ = (<x><y/></x>)) ((function(){})());");
tryItOut("if((typeof <><x><y/></x></>.valueOf(\"number\"))) \f{var prop;L: ( '' ); } else  if (null) {return *::*;if(<x/>) {} else  if (<><x><y/></x></>) {let __iterator__ = 0.1, constructor =  /x/ ;__noSuchMethod__ } else {constructor, __iterator__ } }");
tryItOut("with({}) yield (null for (__noSuchMethod__ in 3/0));");
tryItOut("gc()\n{}\n");
tryItOut("if([15,16,17,18].filter('haha'.split, <x/>.hasOwnProperty(\"__count__\"))) {do {yield; } while((<x><y/></x>) && 0);export *; } else export *;");
tryItOut("for(let y in [5,6,7,8]) try { yield; } finally { {} } ");
tryItOut("L: yield undefined(prototype);");
tryItOut("with({prototype: (\n<y><z/></y>).watch}){return ([] - <y><z/></y>);var constructor; }");
tryItOut("/*infloop*/for(const prop = <x/>; undefined; __iterator__) {continue L;(__count__); }");
tryItOut("/*infloop*/M:do __count__ while(@foo)\n");
tryItOut("/*for..in*/for(__proto__ in ((({}).__lookupGetter__)(( /* Comment */ \"\"  if ( '' ))))){const __parent__ = 0x99;-0; }\n");
tryItOut("if(Error(constructor, -1) ? ({ __proto__: __count__, __count__: constructor }) = 0/0.hasOwnProperty(\"constructor\") : (p={}, (p.z = (-<x/>))())) { if (((*.__parent__).__lookupSetter__(\"prop\")) >> <><bbb xmlns:ccc=\"((gc).call(this, <x><y/></x>, <y><z/></y>) && <x><y/></x>.__lookupSetter__(\"__parent__\"))\"><ccc:eee></ccc:eee></bbb></>) {if(<><x><y/></x></>.yoyo({}) === eval(\"yield false;\", <y><z/></y>).((function ([y]) { })()++)) {return <><x><y/></x></>;return  /x/g ; } else return; } else {{Function }/*for..in*/for(__count__ in ((((1e+81.__defineGetter__(\"__count__\", gc))).watch)(this.__defineSetter__(\"__count__\", @foo)))){{}(function (prop, prototype) { export __noSuchMethod__; } ).apply } }}");
tryItOut("/*infloop*/do {(3.141592653589793);var __iterator__; } while((new (<x><y/></x>)()));");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(<><x><y/></x></> + <y><z/></y>['prototype'] in (eval(\"true\", null.hasOwnProperty(\"prop\")))) /*infloop*/for(({ __count__: ({ __noSuchMethod__: __noSuchMethod__ }), __proto__: ({ prop: __count__, prototype: prototype }) }) = #0=[<x><y/></x>]; (new function  __iterator__ () {  } (new window(<y><z/></y>), this)); window) return;");
tryItOut("/*infloop*/while(__proto__.constructor);");
tryItOut("M:switch([1,,]) { case 9: throw  '' ;break;  }");
tryItOut("for(let y in [5,6,7,8]) return 1.2e3;");
tryItOut("/*infloop*/for(this.__defineSetter__(\"function::__parent__\", ({}).hasOwnProperty); this.__defineGetter__(\"__proto__\", [1,2,3,4].map); <x/> for each (__noSuchMethod__ in  /x/ )) {;var constructor, __parent__; }");
tryItOut("/*infloop*/M:while(({__iterator__: (gc()) })){function () { return __parent__ }  }\nthrow 0.1;\n");
tryItOut("__count__ = constructor;");
tryItOut("/*infloop*/for(let prototype; new ((([<x><y/></x>].map(new Function))).__defineSetter__)(<><x><y/></x></> === 033.__defineGetter__(\"__proto__\", Math.sin)); <x/>) (<x><y/></x> >>>=window);");
tryItOut("");
tryItOut("/*for..in*/for(const [__noSuchMethod__, prototype] = <x/> in <x><y/></x>) {;yield; }");
tryItOut("yield\n");
tryItOut("if(3/0.prop = false ^ (eval(\"(-0) ? <x><y/></x> : [,,]\", this.propertyIsEnumerable(\"__iterator__\")))) L: { } const x::__noSuchMethod__; else {let (__proto__) { (*::*); } }");
tryItOut("if((-1)) { if (__iterator__ = this) {\tvar prop, __parent__;yield; } else return;}");
tryItOut("/*infloop*/L:while(<bbb xmlns=\"yield true\"><xxx {__noSuchMethod__}={<x/>} /> </bbb> ^ __noSuchMethod__){return; }");
tryItOut("break L;export *;");
tryItOut("constructor");
tryItOut("/*infloop*/for(false.__lookupGetter__(\"__noSuchMethod__\"); (({prototype: *::* })); *::*.yoyo(<x><y/></x>)) {}");
tryItOut("(false)");
tryItOut("yield;\nvar __iterator__, prototype = <><x><y/></x></>;\n");
tryItOut("while((((__parent__ = {} = (this.zzz.zzz)).__count__) !== ({ __iterator__: constructor, __parent__: __noSuchMethod__ }) =  \"\" ()) && 0)/*for..in*/for(const (__parent__)(<><x><y/></x></>) in [z1,,]) export *;");
tryItOut("/*infloop*/for(prototype |= new <><x><y/></x></>(); [((p={}, (p.z = *)()))].sort(function(q) { return q; }); #1= /x/g ) {yield; }\nif(<><x><y/></x></>) {prop, __noSuchMethod__ } else  if (<y><z/></y>) { } else {yield __parent__; }");
tryItOut("throw __count__;");
tryItOut("M:with(<x/> = (__parent__.constructor getter= eval))<x><y/></x>;");
tryItOut("return <x><y/></x>;");
tryItOut("L:if(<><x><y/></x></>) {continue ; }\n");
tryItOut("{return;throw <><x\f><y/></x></>; }");
tryItOut("switch([,,z1]) { case window: (prop);break;  }");
tryItOut("/*infloop*/M:for(__parent__; __iterator__;  /x/g  % 0) {yield;(3/0); }");
tryItOut("L:if(new Boolean(<x><y/></x>)) {;const __noSuchMethod__ =  /x/g , __count__; } else  if ((033.hasOwnProperty(\"__count__\"))) yield;");
tryItOut("/*infloop*/L:while( /x/  < @foo)let prop, __parent__;");
tryItOut("L:do /*for..in*//* nogeckoex bug 349964 */M: for  each(let (((__noSuchMethod__.watch(\"__noSuchMethod__\", gc)))([,,z1])) in <x><y/></x>.__parent__ getter= function (__noSuchMethod__)undefined) {while(( /x/g .valueOf(\"number\")) && 0){throw <x/>; } } while((()) && 0);");
tryItOut("if( '' ) yield <x><y/></x>; else {continue M;yield; }");
tryItOut("yield;");
tryItOut("yield window; const __parent__;");
tryItOut("return  if ((1e81)[<><x><y/></x></>]);");
tryItOut("/*infloop*/L:for((throw window); prop.\t__lookupGetter__(\".2\"); __parent__ = <><x><y/></x></) {let (prop = (<><x><y/></x></>.__noSuchMethod__ = ({a1:1})), prop = (prototype = this)) { M:if( '' ) { if ([1,,]) {constructor = -3/0, prototype;return; }} else {{} } }/*infloop*/L:for(var __count__ = this; this; <x><y/></x>) {var prototype = this, function::__noSuchMethod__;(*); }return prototype%=3/0; }");
tryItOut("{with({}) { for(let y in []); } (function  prop () { return 3/0 } ).apply }");
tryItOut("L: break ;");
tryItOut("M:if(<y><z/></y>) { if (__noSuchMethod__) {throw <x/>;( '' ); }} else continue \n");
tryItOut("throw prop;");
tryItOut("/*for..in*/for([constructor, __count__] = (\f<><x><y/></x></>.isPrototypeOf(({})))[( ''  - #3={a:#3#} >>>=function(id) { return id })] in (function ([y]) { })()) yield;");
tryItOut("while((export __parent__) && 0)/*infloop*/do  while(#0=this); const prop;");
tryItOut("L: {export __proto__;const __proto__, __parent__ = null; }\n");
tryItOut("/*infloop*/for(var __count__; window.unwatch(\"prop\"); 1e4) {return <x/>;(; }");
tryItOut("/*for..in*/try { yyy } finally { (({a1:1})); } for(const __noSuchMethod__ = [new false()].some({{}; }) in ({ __iterator__: __parent__, prop: __count__ }) = [__count__, __parent__, , , __proto__]) /*for..in*//* nogeckoex bug 349964 */\f for  each(prototype in <x><y/></x>) (__parent__);");
tryItOut("do {; } while((this , false) && 0);");
tryItOut("{}");
tryItOut("/*infloop*/for(<ccc:ddd><!--yy--></ccc:ddd>\n; <><>__noSuchMethod__</></>; 0.1) while((*) && 0){gc()[1,,]; }");
tryItOut("if(((this.unwatch(\"__count__\")))((new (-1)())) = (*::*)) (<y><z/></y>); else  if (*) throw __iterator__;");
tryItOut("/*infloop*/for(const <employee id=\"1\"><name>Joe</name><age>20</age></employee>['__parent__'] = __proto__ = ({ __noSuchMethod__: ({ __count__: __parent__ }) }); ([15,16,17,18].some(({}).hasOwnProperty, [15,16,17,18].filter(true, 0x99.__proto__))); new function(y) { yield y; {}; yield y; }()) {function(y) { yield y; (__count__);; yield y; } }");
tryItOut("/*infloop*/for((__count__.__iterator__ getter= 'haha'.split); ((__count__ = <x/>)(__parent__, __count__)); __noSuchMethod__ = <><x><y/></x></> <<= <zzz>*</zzz>.(undefined.propertyIsEnumerable(\"prop\"))) {yield; }");
tryItOut("while((this.__lookupSetter__(\"__proto__\")) && 0){([[1]]);if([1]) { if (033) {yield; }} else {gc()(null); } }");
tryItOut("return (prototype = ((uneval(prop.eval(*::*)))));");
tryItOut("/*infloop*/while((({__noSuchMethod__: <><x><y/></x></>})))return;return;");
tryItOut("return __iterator__;");
tryItOut("/*infloop*/for(__proto__; (#1=[({prototype: @foo\n,  set __noSuchMethod__(__parent__) { yield (<y><z/></y>.eval(undefined)) for each (__proto__ in __proto__) for each (prop in constructor) }  })]); (__count__ = false).watch(\"__count__\", [1,2,3,4].slice)) throw StopIteration;");
tryItOut("export constructor;");
tryItOut("switch(<><x><y/></x></>) { case #3={a:#3#}: break; case 0: break; ;break; @foo;break; gc()case 0: return;break; break; case <><x><y/></x></>: break; default: gc()break; case 6: break ;case 2: case 3: ({}).__lookupGetter__break;  }");
tryItOut("if(<x><y/></x>) { if (<x><y/></x>) {;export __proto__; }} else {var __count__, __iterator__;export __count__; }");
tryItOut("{/*for..in*/for(var __parent__ = function(id) { return id } in false) throw prototypegc() }");
tryItOut("/*infloop*/for((~this , new ( /x/g ).__defineSetter__(window));  /x/g .watch(\"prop\", (gc).apply); __parent__ = __count__) *::*;");
tryItOut("try { for(let y in []); } catch(__proto__) { with({}) { try { return null; } finally { return 0x99; }  }  } finally { for(let y in []); } ");
tryItOut("M:if(window\n) {yield null;; } else  if (Error(<x><y/></x>)) this; else \nwith({__count__: [11,12,13,14].filter}){if(<x><y/></x> %  '' ) { if ('fafafa'.replace(/a/g, new Function)) {yield __noSuchMethod__; }} else const prototype; }\n");
tryItOut("while((({prop: prototype =  instanceof })) && 0){return; }");
tryItOut("switch(((<x><y/></x>.__lookupGetter__(\"__proto__\"))(window, <><x><y/></x></>))) { case 5: break; break;  }");
tryItOut("while(((RegExp().unwatch(\"function::constructor\"))) && 0)/*infloop*/while(this.__defineGetter__(\"constructor\", eval))<><x><y/></x></>;");
tryItOut("do {this } while((@foo) && 0);");
tryItOut("throw StopIteration;");
tryItOut("{{;gc() } }");
tryItOut("yield (({__iterator__ setter: Math.pow, __count__: ({a2:z2}) }));");
tryItOut("/*infloop*/for((__parent__.([1])); <x/>; eval(new Iterator()--, new #0=(new Function(\";\"))((eval(\"{}\", undefined)), window >>>  \"\" ))) ((__iterator__.__proto__));");
tryItOut("for(let y in []);");
tryItOut("return\nreturn;");
tryItOut("(( /x/ )[__proto__])\n");
tryItOut("/*infloop*/for((-1) < window; (this.__defineSetter__(\"constructor\", true)); __proto__ = (yield <x/>)) {gc() }");
tryItOut("/*for..in*/for(const __proto__ = ({ prop: __proto__, prop: constructor }) = 5.0000000000000000000000.propertyIsEnumerable(\"__iterator__\") in *::*) export __iterator__;");
tryItOut("__count__ = constructor, __iterator__ = [,,z1];");
tryItOut("/*infloop*/M:for(let __parent__; ({ __proto__: __proto__, x::setter: __iterator__ }) = //h\n[11,12,13,14].some; <x/>) {switch(( /x/ )()) { case 3: (@foo);break; case 0: export *;break;  }switch(__proto__ setter: function(y) { yield y; return;; yield y; }.eval(1.3)) { case <><x><y/></x></> ? <x><y/></x> : <x><y/></x>: break;  } }");
tryItOut("with({constructor: __noSuchMethod__ = ('fafafa'.replace(/a/g, Math.sin))}){return;export *; }");
tryItOut("L:with(yield;.__parent__ = <x/>.*)return <y><z/></y>;");
tryItOut("/*for..in*/for(var prop = <x><y/></x>.throw(__parent__).constructor =  /x/g ++ in (__noSuchMethod__ = )) {(<x><y/></x>.prototype = <><x><y/></x></>); }");
tryItOut("if(this.__defineGetter__(\"__parent__\", Function)) { if ({if( if ( \"\" )) { if (*) var __noSuchMethod__ = [z1,,]; else {yield <><x><y/></x></>\t; }}return; }) ;} else export *\nexport *;");
tryItOut("let (constructor, constructor) { while(( \"\" ) && 0){;var constructor = <><x><y/></x></>; } }");
tryItOut("{return;yield; }");
tryItOut("/*infloop*/for(prototype = (({prototype: ([,,z1].eval(<x><y/></x>))}))[[1,,].__lookupGetter__(\"__parent__\") .@*:: <y><z/></y> % [,,z1]]; [,,z1] == *; [11,12,13,14].some) __iterator__ = this;");
tryItOut("L: [1,2,3,4].slice");
tryItOut("M:switch(!false) { default: case 6: break; case <y><z/></y>: return;\n\ncase 7: break; case 3: yield <x><y/></x>; }");
tryItOut("if( \"\" ) { if (<x><y/></x>) {throw  /x/g ; }} else {[1,2,3,4].slice; }");
tryItOut("/*infloop*/while(window)if(+<><x><y/></x></>) let __iterator__ = <><x><y/></x></>; else ((function ([y]) { })());");
tryItOut("/*for..in*/for(let prop =  in this) [z1];for(let y in [5,6,7,8]) throw StopIteration;");
tryItOut("L: /*infloop*/L:for(new function(q) { return q; }(*.__proto__.eval((-0[<><x><y/></x></>]))); (yield  \"\" ).__proto__; (\n1e-81)) {/*for..in*/for(const prototype in <y><z/></y>) {continue ;break ; }Math.sin\n }");
tryItOut("var constructor = <y><z/></y>");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __iterator__ in this.zzz.zzz) {break L;__noSuchMethod__ }");
tryItOut("{/a/gigc() }");
tryItOut("let (prop) { {} }");
tryItOut("if(@foo) export __count__; else  if (prototype = (<y><z/></y>.__count__)) {while((@foo) && 0){{}yield; }yield [z1]; } else const __parent__ = <x><y/></x>, prop = (-0);");
tryItOut("if((({ get __parent__ __proto__ (__proto__)new ()((<y><z/></y> in <x><y/></x>), 0) }))) { if (#1#.valueOf(\"number\")) {/*for..in*/for(var constructor in ((Math.pow)(__noSuchMethod__.prop = true))){return; } }}\f else export *;");
tryItOut("export *;");
tryItOut("/*infloop*/L:for(__count__; <><x><y/></x></>; window) {throw <><x><y/></x></>; }");
tryItOut("{export *;const __proto__; }");
tryItOut("{/*for..in*/for(var __iterator__ in  \"\" ) {null;return; } }");
tryItOut("throw StopIteration;");
tryItOut("break M;let prop = <x><y/></x>;");
tryItOut("with({}) with({}) { with({}) return [*::* if ( /x/g )]; } ");
tryItOut("let(prop) ((function(){with({}) { (<x><y/></x>); } })());");
tryItOut("return;");
tryItOut("if(*::* :: <y><z/></y>) { if (<x><y/></x>) let __parent__, constructor; else {gc() }}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(__proto__.__iterator__ in new false(<><x><y/></x></>,  \"\" )) {<bbb xmlns=\"([1,,][<y><z/></y>])\"><ccc:ddd><!--yy--></ccc:ddd></bbb>p }");
tryItOut("/*infloop*/for(let prop; (true in <x><y/></x>) ^ (__parent__ = <><x><y/></x></>); ((constructor++) ? eval(\"gc()\", -0) : this / window :: undefined.__defineSetter__(\"__iterator__\", (function(id) { return id }).__defineSetter__))) if(<x><y/></x>) { if (<><x><y/></x></>) var __iterator__; else {constructor;yield  '' ; }}");
tryItOut("/*for..in*/L:for(var __proto__ in ((__iterator__)(__parent__ = prop))){export __count__;yield; }");
tryItOut("M:if(<x/>) {return <x><y/></x>; } else  if (<x><y/></x>) {yield;export __count__; } else {return; }");
tryItOut("do {export *; } while((let (prototype) (((arguments).apply).call(<x><y/></x>, )--)) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prop(<y><z/></y>) in <y><z/></y>\f * this) export __iterator__; const __parent__;");
tryItOut("/*for..in*/for(let prototype = <y><z/></y> %= ((3/0.isPrototypeOf(undefined)) - --<y><z/></y>( '' )) in __count__ / 4. = [, \t, , __count__, (prop.__proto__ = __noSuchMethod__)['__parent__']]) {/*for..in*//* nogeckoex bug 349964 */ for  each(const prop.prop in <x/>) {const __parent__;yield; } }");
tryItOut("with({}) { with({}) { return constructor: .2; }  }  const __count__;");
tryItOut("export __count__;\n( /x/ );\n");
tryItOut("with({__noSuchMethod__: 3.141592653589793}){return;gc() }");
tryItOut("throw __iterator__");
tryItOut("L: ");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(delete in (#3={a:#3#} if (null))) do export ; while((let (__count__, prop =  /x/ ) 0x99) && 0)\n(<x/>);");
tryItOut("/*for..in*/for(let prototype in ((Math.pow)(eval(\"{/*for..in*/for(__noSuchMethod__ in @foo) {return; } }\", [,] == *)))){L:if(<x><y/></x>) <x><y/></x>; const prototype;gc() }");
tryItOut("if(window(function::__parent__)) export __iterator__;");
tryItOut(" /x/g ;");
tryItOut("/*infloop*/M:for(prototype; ((uneval(__count__.prop = <x/>.valueOf(\"number\")))); [15,16,17,18].map(Math.sin, eval(\"true\", this))) {if(null.unwatch(\"__proto__\")) { if (this.__defineGetter__(\"__parent__\", new Function)) (*);} else ( /x/g ); }");
tryItOut("this.zzz.zzz;");
tryItOut("__iterator__");
tryItOut("if((<y><z/></y>).call([,], <x><y/></x>, true)) L:with([15,16,17,18].some(function  __parent__ (__noSuchMethod__) { return [1,,] } , undefined)){/*infloop*/do constructor; while(function ([y]) { });break ; }");
tryItOut("/*infloop*/while(){Functionvar __noSuchMethod__, __iterator__ = .2; }");
tryItOut("M:while((prop = (__parent__ || undefined)) && 0)__noSuchMethod__, __noSuchMethod__;");
tryItOut("if(('fafafa'.replace(/a/g, (new Function(\"export __parent__;\"))))) /*for..in*//* nogeckoex bug 349964 */ for  each(var __proto__ in <><x><y/></x></>) {{}undefined; } else  if (1e81.__defineSetter__(\"prototype\", 'haha'.split)) {;{return; } } else {with({__count__: ( /* Comment */<y><z/></y>)})gc() }");
tryItOut("/*infloop*/L:do {var constructor, __parent__;\fexport __iterator__; } while( /x/g );\nyield;\n");
tryItOut("return __noSuchMethod__;\n/*for..in*/for(__noSuchMethod__ in (([1,2,3,4].slice)(typeof delete)))gc()\n");
tryItOut("switch((<><x><y/></x></> >> <><x><y/></x></>)) { default: return  '' ;;break; case 4:  }");
tryItOut("if(eval) { if (<xxx {({ __iterator__: ({ constructor: __parent__, constructor: __noSuchMethod__ }) })}={(<><x><y/></x></> -  \"\" ).eval(yield @foo)} />) return;} else var __noSuchMethod__, false = <x/>;");
tryItOut("switch(*::*) { case (<x><y/></x> >>>=#3={a:#3#}) % <><x><y/></x></>( \"\" , <x><y/></x>): return <><x><y/></x></> ^=  '' ;break;  }");
tryItOut("/*for..in*/for(__proto__.setter in (prototype%=__iterator__ = <><x><y/></x></>()).throw(__parent__).__count__) with([(prop = window)].filter(Math.pow).prop){return;export *; }");
tryItOut("/*for..in*/for(var __parent__ in (--undefined if (try { yield <><x><y/></x></>; } catch(constructor if (function(){yield;})()) { __parent__ } catch(prototype if (function(){return;})()) { let try { <><x><y/></x></>; } catch(prototype) { __parent__ = <x/>; } ; } finally {  } ))) {/*for..in*/for(const *['__count__'] in ((function  prop (prop, prototype)[1])((({ get prop() { gc() } \r, prop setter: Function }))))){let __proto__ = function ([y]) { }, __parent__;let prop = __proto__, __iterator__; }gc() }");
tryItOut("if(([,] &= )) { if (({ prop: ({ __noSuchMethod__: prop, prop: __iterator__ }) }) = <bbb xmlns:ccc=\"window\"><ccc:eee></ccc:eee></bbb>) {let __iterator__ = __count__, __iterator__ = *::*;{} }} else {if(__iterator__) \r{ if (<y><z/></y>) {yield [[]];; } else {prop.* }} }");
tryItOut("L:if(new (this)()) { if (<y><z/></y>.__defineSetter__(\"__iterator__\", [1,2,3,4].slice)) {return; } else {<><x><y/></x></>; }}\nyield 3/0;\n");
tryItOut("M:do {} while((arguments.__noSuchMethod__ for (__count__ in <x/>) if (prototype).isPrototypeOf((<x/>--))) && 0);");
tryItOut("if((let (__parent__) new <x><y/></x>(undefined))) { if (([11,12,13,14].sort)) return this;} else <x><y/></x>;");
tryItOut("/*for..in*/for(const (*)(window) in __count__) {function\f (constructor, prop) {  } var __count__, function::prop =  '' ; }");
tryItOut("if((*) >>>=(yield false)) {return;({}).hasOwnProperty }");
tryItOut("/*infloop*/for(null; @foo; [,,]) (__iterator__);");
tryItOut("with({prop: undefined}){export *;gc() } const  for each (prototype in <x><y/></x>) for each (__proto__ in <x><y/></x>) if (null);");
tryItOut("throw prop;");
tryItOut("export prop;/*for..in*/M:for(constructor = __proto__ = __noSuchMethod__ = <x/> in <y><z/></y>) {export __parent__;yield; }");
tryItOut("yield <x><y/></x>");
tryItOut("continue \nexport __iterator__;");
tryItOut("/*for..in*/L:for([prototype, __iterator__] = 033 in true) {throw [[1]]; }");
tryItOut("<y><z/></y> ? __proto__ : undefined['__proto__']");
tryItOut("if((prop.prop)) /*infloop*/while(null)yield <x><y/></x>;");
tryItOut("/*infloop*/for(const __count__; <x><y/></x>.(__count__); new function  __parent__ () { return __iterator__ } (function  __count__ (prop) { {} } (window), <x><y/></x>)) export *\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(constructor in __count__ =  /x/g ) {gc()window; }");
tryItOut("if(({ __parent__: ({ prop: __count__, __noSuchMethod__: __iterator__ }) }) = ({ __parent__: ({ __noSuchMethod__: prototype }) }).__defineSetter__(\"constructor\", ((new (1.2e3)()).yoyo((null.throw(undefined)))).watch)) {Math.sin }");
tryItOut("with( set __iterator__ __count__ (constructor) { return ({ constructor: [] }) = this.__defineSetter__(\"constructor\", function  __noSuchMethod__ (prototype)#1#) } ){gc()let __proto__; }");
tryItOut("this.zzz.zzz;");
tryItOut("prototype\n");
tryItOut("this.zzz.zzz;");
tryItOut("with([] = <x><y/></x> @ #1#){<y><z/></y> }");
tryItOut("/*for..in*/L:for(const constructor in window) let __iterator__ = <><x><y/></x></>, __noSuchMethod__;\nreturn;\n");
tryItOut("break ;\nexport *;\n");
tryItOut("var __proto__ = <><x><y/></x></>;");
tryItOut("let(prop) { for(let y in [5,6,7,8]) throw __parent__;");
tryItOut("/*for..in*/for(var try { this.zzz.zzz; } catch(prop) { yield [,,z1]; }  =  /* Comment */this in #0=({__proto__: Math.sin})) throw 3/0\n");
tryItOut(";const prop = true, __parent__;");
tryItOut("do M:if( /x/ .__defineSetter__(\"__iterator__\", (new Function(\"gc\")))) (__noSuchMethod__); else {/*infloop*/for(let set; <x><y/></x>;  \"\" ) {yield null; } } while(((-0) ^= false().__defineSetter__(\"__noSuchMethod__\", [1,2,3,4].slice) <<= ( set __noSuchMethod__(({ constructor: [, , ], __iterator__: ({ __iterator__: __noSuchMethod__, prop: [] }) }), ({ (/__parent__: ({ __noSuchMethod__: constructor })(/__noSuchMethod__: constructor {yield; }  })) { let __proto__ = 3/0, prop = window; }  % this >> prototype)) && 0);");
tryItOut("M:if(<><!--yy--></>) {throw <y><z/></y>;\n } else return;");
tryItOut("/*infloop*/for(let __proto__ = *::*; <x/>; (@foo.*)) {gc()__parent__ }");
tryItOut("let(__noSuchMethod__) ((function(){return <x><y/></x>;})());");
tryItOut("for(let y in [5,6,7,8]) let(__noSuchMethod__, __proto__ = eval(\"prop\", 0)) { \ftry { gc() } finally { <y><z/></y> } ");
tryItOut("let(prototype = __noSuchMethod__ = window()) { for(let y in []);");
tryItOut("y");
tryItOut("with({__proto__:  \"\"  <= ({__noSuchMethod__: new *(<x/>)})}){arguments; }");
tryItOut("continue M; const constructor;");
tryItOut("/*for..in*/for(const prototype = (function  ({ __proto__: __proto__ }) (__parent__, __parent__)*()) in  /x/ ) {M:if(__count__ = [1,,].unwatch(\"__proto__\")) { if (prototype = -3/0) {break ; } else {;return; }}return; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const /*\n*/__noSuchMethod__ in @foo) export __proto__;");
tryItOut("__proto__ = __parent__;");
tryItOut("switch(5.0000000000000000000000) { default:  }\n/*for..in*/for(let __noSuchMethod__ = {}.__proto__ = false.@foo in null) {/a/gireturn window; }\n");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __count__ in 3) {yield;break M; }");
tryItOut("yield new Date( \"\" , <x><y/></x>);");
tryItOut("throw __parent__;");
tryItOut("L: {prototype = (true)[ '' ], constructor = 5.0000000000000000000000;/*for..in*/M:for(let __proto__ = const __iterator__, constructor in new *(033, window)) \tif(undefined) <y><z/></y> else  if (this) {return  /x/ ;{} } else {; } }");
tryItOut("/*for..in*/for(let constructor = (new (undefined , window)(({__parent__: this }), <y><z/></y>) .@ ( \"\"  & 4.)) in new (<><x><y/></x><\r/>)(window, window)) throw StopIteration;");
