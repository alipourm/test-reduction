tryItOut("M:if((({ prop: ({ constructor: prototype }) }) = [ enum  if (*)])) {{(-3/0);yield; } }");
tryItOut("/*infloop*/for(const ({ __count__: [], __parent__: [__noSuchMethod__, __noSuchMethod__, , constructor, [, ({ constructor: [constructor, __parent__], constructor: prototype })]] }) = this; gc();  /x/ ++) yield;");
tryItOut("if(({__proto__: !<x/>.__lookupSetter__(\"__iterator__\"),  get constructor(__parent__) { return new Boolean(3, this) }  })) break ;");
tryItOut("return __noSuchMethod__;\nyield;\n");
tryItOut("/*infloop*/for(const __iterator__ = ({prototype: [z1,,]}); <><x><y/></x>(//.isPrototypeOf(<x/>); new <x/>( '' )) yield;");
tryItOut("with([z1]){/*infloop*/do var __noSuchMethod__, __proto__ = <x><y/></x>; while(constructor);return -3/0; }");
tryItOut("with({__proto__: <><xxx {constructor}={(new ('fafafa'.replace(/a/g, ({}).hasOwnProperty))())} /></>})if(__proto__ = 1e4) function::__count__ = constructor, constructor; else  const __proto__;");
tryItOut("if((uneval((function ([y]) { })()++))) {let __iterator__ = <y><z/></y>; }");
tryItOut("if(({})) { if (this) throw window;} else {let prop, constructor = false; }");
tryItOut("/a/gi");
tryItOut("switch(undefined = false * *::*) { default: break; case 1: break;  }");
tryItOut("return <y><z/></y>;");
tryItOut("L: ");
tryItOut("if(<y><z/></y>) {{} } else  if () {{__proto__ } } else gc()");
tryItOut("/*infloop*/for(prototype = <><x>\f<y/></x></> <<= __iterator__ = __noSuchMethod__.let; (x::constructor for each (__iterator__ in __proto__)).watch(\"prop\", /a/gi); \n<x><y/></x>) while((<y><z/></y>) && 0)while((({})) && 0){continue ;yield *; }");
tryItOut("yield  '' \nyield;");
tryItOut("if((uneval(false))) { if ((<><x><y/></x></>.__proto__)) Math.pow} else yield;");
tryItOut("/*for..in*/for(prototype = __iterator__ = ((yield window)) , <x><y/></x> in ) {/*for..in*/L:for(var [constructor, __proto__] = ( /* Comment */__iterator__.isPrototypeOf(@foo)) in <x><y/></x>) {var __proto__ = *; } }");
tryItOut("return [yield 0.1 == <x><y/></x> || *::* for (__count__ in .2) if (__noSuchMethod__)];");
tryItOut("__count__ = constructor;");
tryItOut(";");
tryItOut("if(eval(\"gc()\\nexport __noSuchMethod__;\", prototype = [,,])) /*for..in*/for(let __parent__.prop in ((eval)( /* Comment */([1,2,3,4].map).apply))){return; } else  if ((new function(y) { yield y; [1,,]; yield y; }( \"\" , *).__count__)) {}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var prop.constructor in __count__-=__count__) {L:while((<x/>) && 0){constructor{} }[1,2,3,4].map }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__ in this) {;<><x><y/></x></>; }");
tryItOut("throw <x/>\n");
tryItOut("if(prototype.__iterator__ setter= Function) { if ((__noSuchMethod__.__noSuchMethod__ = <x><y/></x>)) {throw null; }} else {yield <x/>;return; }");
tryItOut("if((arguments.__lookupGetter__(\"prototype\"))[{} ? <x/> : window]) {/*infloop*/L:do undefined while(([15,16,17,18].map(<y><z/></y>, function(id) { return id }))); } else  if ((eval(\"export prototype;\", (new Array(<x><y/></x>.(<y><z/></y>)))) -= 1.3)) throw 1e81;");
tryItOut("/*for..in*/L:for(var __proto__ = (this.zzz.zzz) in []) {{}; }");
tryItOut("if(*) { if (new function(y) { yield y; ; yield y; }()) throw window\nvar __parent__ =  '' , __count__; else {\rL:with(-0){if(false) (<x><y/></x>); else var prototype = <x><y/></x>; } }}");
tryItOut("L: {export *;break L; }");
tryItOut("M:switch(((__proto__.eval(<><x><y/></x></>).throw(({prop: <><x><y/></x></>}))))[(__noSuchMethod__.__noSuchMethod__ getter= [1,2,3,4].map)]) { case 3: L:if(@foo\n) { if (window(yield;))  else break L;}break; ;case true |= null & prop = @foo: case 4: /*for..in*/for(var __parent__ in (((@foo).watch)(4..@foo)))export *;break; default:  }");
tryItOut("/*infloop*/for(let __iterator__ = this;  \"\"  ^=  /x/g ; (prop = @foo)) continue ; const __count__;");
tryItOut("/*infloop*/L:for(~([] > <x><y/></x>); ((this = <y><z/></y>) ? new Function : ); __proto__ = (-1) ?  /x/g  : undefined) continue ;");
tryItOut("");
tryItOut("if((delete 1e-81 >>  '' .valueOf(\"number\"))) {return true; } else  if ('fafafa'.replace(/a/g, 4. ? true : @foo)) { } else /*for..in*/for(var [__proto__, x::constructor] = ({ get __iterator__(__noSuchMethod__) { return window }  }) in 0.1) {return;export __noSuchMethod__; }");
tryItOut("switch(__proto__ = undefined) { case 6: throw <\r><x><y/></x></>;break; case 9: /*for..in*/for(var constructor = <><x><y/></x></> in prototype) continue L;/*infloop*/for(<y><z/></y>; <x><y/></x>; null) continue ;break;  }");
tryItOut("/*for..in*/for(const __iterator__ in __iterator__.__proto__ = [1]) export *;");
tryItOut("/*for..in*/L:for(const prototype in ((function(q) { return q; })(__noSuchMethod__))){eval }");
tryItOut("/*infloop*/for(const prop = new ((uneval(((yield <x><y/></x>))[{}.__defineSetter__(\"prototype\", ({}).__lookupGetter__)])))(); (function  __iterator__ (__iterator__) { gc() } )(((uneval())), [[1]])[constructor = export prototype]; (new (Function)(<x/>) % (eval).call(null ?  \"\"  : 1.3.valueOf(\"number\"), ))) __parent__");
tryItOut("/*for..in*/for(var __noSuchMethod__ = (new <><x><y/></x></>()) in constructor) {L: {let __proto__; }const prototype; }");
tryItOut("M:if( \"\" ) {__proto__, __iterator__ = window; } else  if (*::*) return null;");
tryItOut("{export __count__; }");
tryItOut("with({}) __count__ = __iterator__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __noSuchMethod__.__defineGetter__\f(\"prototype\", for(let y in [5,6,7,8]) ;) in this) (<x><y/></x>)");
tryItOut("while((let (__noSuchMethod__, prop = <><ccc:ddd><ccc:ddd><x><y/></x></ccc:ddd></ccc:ddd></>) __parent__) && 0){/*for..in*/for(const __iterator__ in (((new Function(\"/*infloop*/while(window)var prop =  /x/g , constructor;\")))([11,12,13,14].sort))){gc()yield; } }");
tryItOut("while((('fafafa'.replace(/a/g, (new Function(\"yield;\"))).unwatch(\"__noSuchMethod__\").__lookupGetter__(\"__noSuchMethod__\"))) && 0)throw __proto__;");
tryItOut("return  /* Comment *//*\n*/(p={}, (p.z = this.__defineGetter__(\"__iterator__\", <><x><y/></x></>))());");
tryItOut("([]);");
tryItOut("if(({__parent__ getter: function ()<x><y/></x>,  get constructor() { let __noSuchMethod__; }  })) { if (((window.watch(\"function::constructor\", (<x><y/></x>).__defineSetter__)))) {yield /*\n*/<><x><y/></x></>; } else yield;}");
tryItOut("if(--<><x><y/></x></> >>>  /x/g ) {M:if((uneval(<><x><y/></x></>))) __noSuchMethod__ else break ; } else  if (((yield eval(\"L: {{yield <y><z/></y>;\\f }throw  \\\"\\\" ; }\", *)))) /*for..in*//* nogeckoex bug 349964 */ for  each(var constructor(true) in prototype) {} else {export prop; }");
tryItOut("throw StopIteration;");
tryItOut("false");
tryItOut("while((__parent__) && 0)constructor =  \"\" , __proto__ = <><x><y/></x></>;");
tryItOut("/*for..in*/for(let prop in  '' ) {export prop; }");
tryItOut("/*infloop*/for(var constructor = #1=[#1#]; constructor; <><x><y/></x></>.eval(null) ^ this) {/*for..in*/for(let __noSuchMethod__ = prototype in [z1,,]) {throw window;throw __count__; } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prototype in 1e+81) let __noSuchMethod__ = true;");
tryItOut("export *;function::__count__, __proto__");
tryItOut("if((<><x><y/></x></>.propertyIsEnumerable(\"prop\")))  else  if (* /= -1) ;");
tryItOut("/*infloop*/L:for(new RegExp(1e+81++, __proto__); ((constructor = prototype) % #2=*); ( '' (1.2e3, null))) throw  '' ;");
tryItOut("/*for..in*/M:for(var __parent__ = ((({}).hasOwnProperty)(let __proto__ = <x><y/></x>;)) in yield 5.0000000000000000000000) return;");
tryItOut("if(prop) {export prop; } else  if ((this)(([<x><y/></x>].some(new Function)), this)) switch(1e4 << [,]) { case 2: return;break;  } else yield;");
tryItOut("for(let y in [5,6,7,8]) constructor = __noSuchMethod__;");
tryItOut("/*infloop*/do {throw true;with((__parent__ = <y><z/></y>))return <><x><y/></x></>; } while(3);");
tryItOut("M:if(<><x><y/></x></>) {([1]); } else gc()");
tryItOut("let (constructor = __noSuchMethod__ = __proto__ = each) { return;let prop, prototype = window; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(const prototype in *::*) yield;");
tryItOut("while((( \"\" )(4., <x><y/></x>) | this.__defineSetter__(\"prototype\", constructor)) && 0)prop = ({__parent__: #3={a:#3#}})");
tryItOut("(new Function(\"throw <><x><y/></x></>;\"))\nexport prototype\t;\n\n");
tryItOut("while((eval(\"[z1,,]\", #1#).constructor = #1=delete  \"\" ) && 0)export __count__;");
tryItOut("/*infloop*/while(*::*){export __parent__;__parent__ = <>\f<x><y/></x></>, __parent__ = this; }");
tryItOut("M:if(((<>\f<x><y/></x></>)(@foo) = prototype = window))  else return <y><z/></y>;");
tryItOut("yield ({a2:z2});export *;");
tryItOut("/*infloop*/do {} while(((*)(<x/>, default: gc()break; case @foo: case <y><z/></y>: break; case 1: case 8: -0;break; <y><z/></y>;break; )));");
tryItOut("if(__proto__ = *::* .@*:: this.__defineSetter__(\"prototype\", (<x><y/></x>).__defineSetter__)) { if (this.zzz.zzz) {return 3.141592653589793;return  /x/ ; }} else { }");
tryItOut("let(constructor = __proto__ = [,,z1], __iterator__) ((function(){return let (__iterator__ = this, __iterator__ = [,])  '' ;})());");
tryItOut("constructor.constructor = prop;");
tryItOut("/*for..in*/for(__count__ = ([1,2,3,4].map().__defineGetter__(\"__iterator__\",  '' ).throw(__noSuchMethod__.prop)) in [z1,,]) /*infloop*/for(function () { <x><y/></x> } ; (this.__defineSetter__(\"prop\", (1 for (x in [])))); __parent__ = *.__lookupGetter__(\"constructor\")) /*for..in*/for(var __proto__ in ((function  prop (__noSuchMethod__, __iterator__) { yield <x/> } \t)((({constructor: <x><y/></x>})))))( /x/ );");
tryItOut("L:if(const prototype = <><x><y/></x></>) { if ([1]) throw 1e-81; const ; else export *;}");
tryItOut("{}\nreturn <x><y/></x>;");
tryItOut("/*for..in*/for({;export __iterator__; } in (([1,2,3,4].map)(undefined)))yield;");
tryItOut("prototype = (prototype) = __count__ < constructor, [z1]");
tryItOut("if(__count__.__proto__ >>>=*) { if ((1.2e3)) return; else {return; }}");
tryItOut("if([let (prototype) undefined if (<><x><y/></x></>)]) { if (().*) return; else /*for..in*/\fL:for(const __noSuchMethod__ = __proto__.__parent__ = <x><y/></x>.(<><x><y/></x></>) in <x>\f<y/></x>) {[1,2,3,4].map }}");
tryItOut("/*for..in*/for(let __noSuchMethod__ = this.__defineGetter__(\"prototype\", [1,2,3,4].map) in <x/>) {( /x/g );export constructor; }");
tryItOut("/*for..in*/for(let __noSuchMethod__ in (new <x/>())) const __parent__ = window;");
tryItOut("throw __count__;");
tryItOut("if(__proto__.__iterator__) { if (prop) {var __noSuchMethod__; }} else {yield this; }");
tryItOut("{}");
tryItOut("yield [__proto__].some(Function);");
tryItOut("L:with((1e-81.__lookupSetter__(\"prototype\"))){/*infloop*/do throw <><x><y/></x></>; while(! '' );do {} while((<><x><y/></x></> > __noSuchMethod__) && 0); }");
tryItOut("if([constructor.prop getter= function(q) { return q; } >> <><x><y/></x></>.__defineGetter__(\"__parent__\", *) if (prop = window)]) { if (__iterator__.prop = (__iterator__)) /*infloop*/L:do (true); while([15,16,17,18].some(Function, <><x><y/></x></>));} else return __parent__(<x/>);");
tryItOut("/*for..in*/for(var __count__ =  /x/  in 4.) {export *; }");
tryItOut("/*infloop*/do {this.zzz.zzz; } while(new ([1,2,3,4].slice)( '' ) /= this.yoyo(this));");
tryItOut("with({__parent__: ({__noSuchMethod__: @foo,  get __count__(__iterator__) { yield {} }  })}){let prop = window, constructor = 0.1; }");
tryItOut("{/*infloop*/while([[]])let __iterator__ = __noSuchMethod__, __parent__;\nif(((__iterator__ >>>=<x><y/></x>) %= (window.prop = prototype) <= 1e-81.valueOf(\"number\")) %= __parent__.__defineSetter__(\"__proto__\", (function(y) { yield y; yield;; yield y; }).call)) { if (__count__ = yield  /x/ ) continue M; else {<><x><y/></x></>; }} }");
tryItOut("/*infloop*/for(__parent__; (Math.pow).call(~#1=[#1#], <x><y/></x>.propertyIsEnumerable(\"__noSuchMethod__\"))['prototype'] = let (prototype, constructor = false) <x/>; (- /x/ )) {(arguments); if (*) }");
tryItOut("while(({}) && 0){let __count__;export *; }");
tryItOut("/*for..in*/for(var ((<x/>)[false]).__noSuchMethod__ in \fprototype = constructor) do {let __count__, constructor;gc() } while(((-0) /=  '' ) && 0);");
tryItOut("if((-0.__defineSetter__(\"constructor\", ({}).__lookupGetter__).eval(__proto__ = #3={a:#3#}))) export *; else export *\n({});");
tryItOut("let(__parent__ = (__noSuchMethod__ = *::*), constructor) { (1 for (x in []))");
tryItOut("/*for..in*/for(const ( /x/g .__lookupSetter__(\"__noSuchMethod__\") = 3.141592653589793)(#2=({constructor:  \"\" }).@*) in this.__defineGetter__(\"__proto__\", constructor).__parent__) return;");
tryItOut("/*infloop*/for(let prop; new ( '' )(<x><y/></x>, window); \n<><x><y/></x></>[ \"\" ]) export constructor;");
tryItOut("with( '' )/a/gi\f");
tryItOut("/*infloop*/L:do yield; while( /x/g );");
tryItOut("return");
tryItOut("*;");
tryItOut("L: {/*for..in*/for(let prototype in ((*)([[]])))continue ;arguments; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(const ({ __proto__: ({ prototype: constructor }) }) in <y><z/></y> ?  /x/  : <x><y/></x> ? null.unwatch(\"prototype\") : this %= <y><z/></y>) {var prop =  /x/ , __noSuchMethod__ }");
tryItOut("M:if(undefined << <y><z/></y>) {gc() } else  if \f(\nthis.__defineSetter__(\"__iterator__\", ({}).hasOwnProperty)) {prop; }");
tryItOut("with((<x><y/></x>.__proto__.propertyIsEnumerable(\"__parent__\"))){export __noSuchMethod__;/*infloop*/M:for(let prop = []; case 5: break; yield;; @foo) {let prop, prototype = <x><y/></x>;return; } }");
tryItOut("let (\r+ /x/g  =  \"\"  instanceof ({a1:1})) { gc() }");
tryItOut("case (<><x><y/></x></>.__lookupSetter__(\"<><employee id=\\\"1\\\"><name>Joe</name><age>20</age></employee></>\")): continue L;break; default: let(constructor = <><x><y/></x></>, constructor) { ;break; ( \"\" ).__defineSetter__/*infloop*/L:for(('fafafa'.replace(/a/g, __noSuchMethod__)); __iterator__ =  /x/g ; window) {[1,2,3,4].map }break; ");
tryItOut("if(this--) {export x::prop;/*for..in*/for(var <><x><y/></x></>.prop in ((<x><y/></x>)((prototype = <x><y/></x>)))); } else  if (__iterator__.isPrototypeOf(let (__proto__ = this, __parent__) arguments)) {yield #1=[#1#];export *; } else yield");
tryItOut("export __count__;");
tryItOut("continue M; const __noSuchMethod__;");
tryItOut("/*for..in*/for(let [__proto__, constructor] = ((function () { return  ''  } ).call(<><x><y/></x></>, window, this) / [3]) in [,,z1]) continue M;");
tryItOut("let prop =  /x/g , prototype;\n;\n");
tryItOut("switch(@foo - ({}) = *::*) { case this++: break; <x/>;break; L:with((<x/>)[ '' ])__proto__break; var __iterator__;break; /*for..in*/for(var [__proto__, __noSuchMethod__] = *.propertyIsEnumerable(\"constructor\") in <x/>) {}break; case (({ function::constructor: constructor, __parent__: constructor }) = (3 /= 0x99)): export *;break;  }\n");
tryItOut("default: break M;break; return window;const __noSuchMethod__ getter: (Math.pow).apply = 1.2e3, __proto__ = {};case prototype: const __noSuchMethod__;break; break; throw window;return @foo;case prototype: gc()break; throw 033;break; ");
tryItOut("/*for..in*/L:for(__count__ in (([,])(\n({})))){yield true; }\nL: this.zzz.zzz;");
tryItOut("/*for..in*/for(const prototype in ((function (__parent__) { L: {break ;([1,2,3,4].map).call } } )((typeof <x><y/></x>.__noSuchMethod__))))/*for..in*//* nogeckoex bug 349964 */ for  each(var __proto__ in __parent__.__parent__ getter= /a/gi) __iterator__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let function::__proto__ in 'fafafa'.replace(/a/g, ([1,2,3,4].slice).apply)) let constructor = ((<y><z/></y>).__defineSetter__).call(\n@foo, #1# = <x/>);");
tryItOut("{L:with((new 3.*((prototype = this), <x/> >>= this)))constructor, constructor;; }");
tryItOut("with(if(3) throw *::*; else {yield  \"\" ;(window); }){/*infloop*/M:for((__proto__ = prop); <x/>.__lookupGetter__(\"__count__\"); prop * __proto__.(*)) {throw <x/>; }yield 3.141592653589793; }");
tryItOut("/*for..in*/M:for(let  \"\" .constructor in RegExp(let (__iterator__ = window, prop = <><x><y/></x></>) prop)) throw StopIteration;");
tryItOut("export *;");
tryItOut("return null;");
tryItOut("/*infloop*/L:while((new (/a/gi)(0)))function (__proto__, __proto__) { return <x><y/></x> } ");
tryItOut("if((new RangeError( '' , <><x><y/></x></>))) { if (__iterator__ = <y><z/></y>) gc() else {export *;yield this; }}/*for..in*/for(let prop =  /x/ .__lookupSetter__(\"prop\") in <x/>) gc()");
tryItOut("/*infloop*/L:for(__noSuchMethod__.eval(__proto__ = <><x><y/></x></>); <xxx>{constructor}</xxx>; (__count__.(<x><y/></x>) in ([11,12,13,14].sort))) yield  '' ;");
tryItOut("M:if(<y><z/></y>) {__iterator__ = [];L:do {eval } while((({a1:1})) && 0); } else  if ((*::* >>  '' --.propertyIsEnumerable(\"prop\"))) eval else {throw [15,16,17,18].map(__parent__, -1).__defineSetter__(\"__iterator__\", Math.sin); }");
tryItOut("return;");
tryItOut("return yield (null , <x><y/></x>);");
tryItOut("while((.2) && 0){let __count__ = <><x><y/></x></>, __count__ = <x><y/></x>; }");
tryItOut("/*infloop*/for(constructor; 3.141592653589793; window *= ({ __parent__: __noSuchMethod__ }) = this.__defineSetter__(\"yield\", function  constructor ()this)) {let(__iterator__, prototype = #3={a:#3#}) { for(let y in [5,6,7,8]) yield;yield; }");
tryItOut("if(<y><z/></y>) { if () {export *;export *; }} else {function  __noSuchMethod__ () { return constructor }  }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(prop in <y><z/></y>) {}");
tryItOut("if([<y><z/></y>].sort(false).__proto__) {{}with({}) throw StopIteration; } else  if (<x><y/></x> % this for (__parent__ in undefined .@ <x/>) if ( '' ) >>= ({function::__noSuchMethod__: (),  get __noSuchMethod__(__count__) {  }  }).yoyo(~<x><y/></x>)) {M:if((((/a/gi).call)(yield arguments, prop))) default: case 1: yield  '' ;break;  else {export prototype; }\t }");
tryItOut("let(__iterator__ = [15,16,17,18].map((gc).apply, <x><y/></x>), __noSuchMethod__) { this.zzz.zzz\n");
tryItOut("while(( '' ) && 0)/*infloop*/L:while( \"\" ){export constructor; }");
tryItOut("L: if(<x/>) { if (false ? constructor : 1e+81) continue ; else {;const __proto__, prop\f; }}");
tryItOut("if(3.hasOwnProperty(\"__proto__\")) {export *; }");
tryItOut("if(<><x><y/></x></>) {export prop; } else  if (<y><z/></y>) continue L; else gc()\n");
tryItOut("while((true) && 0);");
tryItOut("with({__count__:  '' })break ;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(const __parent__.__iterator__ in __proto__.(<y><z/></y>)) gc()");
tryItOut("/*for..in*/M:for(let __proto__ in (([1,2,3,4].slice)((1 for (x in []))() ^ [1,,].isPrototypeOf(undefined)))){(__count__.([1,2,3,4].map())); }");
tryItOut("if((<><x><y/></x></> == function(id) { return id })[*]) { if (new new (this)(*::*, [z1,,])(((new Function(\"gc()\"))).call)) {return } else if(window) {return  /x/ ;; }\f else  if (constructor) { /x/ ;constructor, prototype; }}");
tryItOut("for(let y in [])\n\t\n/*infloop*/for((true--); ( /* Comment */ '' ); <x><y/></x>[<><x><y/></x></>]) ( '' );");
tryItOut("L:do {__count__;let (prop) { if(@foo) gc else  if (<y><z/></y>) {window; } else {return this; } } } while(((([<><x><y/></x></> for each (__noSuchMethod__ in <x/>)].eval( /x/ )).hasOwnProperty(\"__count__\"))) && 0);");
tryItOut("/*for..in*/for(({ prop: ({ __count__: constructor }) }) in <{constructor}>yyy</{constructor}>.(this > __noSuchMethod__)) {return (p={}, (p.z =  '' )());prop }");
tryItOut("do *; while((__parent__) && 0);");
tryItOut("if(prop =  '' ) {yield; } else export __noSuchMethod__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(const prototype in ( /x/g .__count__ | prop.__lookupSetter__(\"__count__\"))(constructor = <x><y/></x> >>>=033, (false)(__noSuchMethod__,  /x/g ))) {/*for..in*/L:for(__iterator__ =  /x/  in window) export __count__; }");
tryItOut("/*infloop*/for(const ({ __noSuchMethod__: __parent__ }) = (1 for (x in [])); ({ get __count__ __count__ () { return <><x><y/></x></> >>> window } ,  get constructor(__iterator__, __noSuchMethod__) { return __noSuchMethod__ = 0x99 }  }); (window in [z1,,].eval(-0.@foo))) {if(*) 1.2e3; }");
tryItOut("return;");
tryItOut("var __iterator__ = this;\ngc()\n");
tryItOut("/*infloop*/for(prototype; ([15,16,17,18].sort('haha'.split, ([__count__].filter(<x><y/></x>)).__proto__ = <x><y/></x> @ function(id) { return id })); eval(\"throw false;\",  /x/ )) {return;var __iterator__ = [z1]; const constructor; }\nlet (__iterator__, __iterator__) { x::__proto__, constructor; }");
tryItOut("/*infloop*/L:for(__noSuchMethod__; <><xxx {__noSuchMethod__}={eval(\" /x/ \",  /x/ )} /></>; 0x99 :: [,,]) yield;");
tryItOut("(__proto__());\nyield __parent__.(.2);\n");
tryItOut("/*for..in*/for(prototype = prop = true in 5.0000000000000000000000) var __iterator__ =  /x/ ;");
tryItOut("with({constructor: __noSuchMethod__ | *}){return 3/0;\n(#3={a:#3#});\n }");
tryItOut("return <x><y/></x>--(<x><y/></x>.(__parent__)).__lookupSetter__(\"prop\") && (this.zzz.zzz);");
tryItOut("return try { throw 4.; } catch(function::__parent__ if (function(){const __proto__, try { yield __noSuchMethod__; } catch(constructor if <x/>) {  } catch(constructor) { return <x><y/></x>; } finally { export *; } ;})()) { [,,z1]; } catch(__proto__) { return; } ;");
tryItOut("if(new Error((yield <x/>\n))) if() { if (<y><z/></y>) const __count__;} else {const __proto__;gc() } else const ;");
tryItOut("/*for..in*/for(__parent__.prototype in (((1 for (x in [])))(yield (<x><y/></x>\n)))){; }\nif(false) { if (0x99) {const __proto__; }} else {export __noSuchMethod__; }");
tryItOut("/*infloop*/do with({__noSuchMethod__: yield = __noSuchMethod__})const prop, __parent__; while((let (__proto__, constructor) eval(\"__iterator__ = 033\", [1,,] ? __parent__ : <x><y/></x>)));");
tryItOut("if((new (function (__proto__) { return /*\n*/constructor } )(((({}).__lookupGetter__)()), 'fafafa'.replace(/a/g, function () { yield <xxx>{__proto__}</xxx> } )))) const __noSuchMethod__ = 1e+81; else continue ;");
tryItOut("export prop;\nyield\n\n");
tryItOut("with([15,16,17,18].filter(Math.pow,  /x/ .hasOwnProperty(\"__noSuchMethod__\")))/*for..in*/for(var __noSuchMethod__ in eval(\"<x/>\", <><x/></>)) undefined");
tryItOut("while((constructor) && 0)");
tryItOut("__noSuchMethod__");
tryItOut("/*infloop*/M:do continue L; while(5.0000000000000000000000 >>>= '' );");
tryItOut("with({}) { this.zzz.zzz; } ");
tryItOut("__proto__ = [1];");
tryItOut("break M;;__proto__");
tryItOut("break M;\ngc()\n");
tryItOut("switch((( + (new Boolean()))[<><x><y/></x></>.hasOwnProperty(\"prop\")])) { default: case 7: {prop }break; case \n-3/0: Math.sinbreak; case 7: break; break; <y><z/></y>;case (( /x/g  ^= prototype if (*::*))).constructor: break; __noSuchMethod__ = undefined;break; (<><x><y/></x></>);break;  }");
tryItOut("/*for..in*/for(__count__ in (((var prototype = this;).watch)()))return;");
tryItOut("/*for..in*/M:for(__noSuchMethod__ = (__iterator__ if ([[]] >= /></x>)) in (new ([, , prop, ] = __noSuchMethod__ instanceof <><x><y/></x></>)(<>try { return; } finally { with({}) { (<><x><y/></x></>).watch }  } </>, __count__.__noSuchMethod__))) {L:if(constructor) {export __parent__; } else  if (false) {yield; } else {throw [[1]];__count__ = null, __count__ = false; } }");
tryItOut("/*infloop*/M:while((window for (__count__ in false))){}\nyield;\n");
tryItOut("/*for..in*/for(constructor.__parent__ in <x><y/></x>.yoyo([[]])) yield;");
tryItOut("L: {return @foo; }");
tryItOut("/*infloop*/while((uneval(<x><y/></x>.__lookupSetter__(\"__parent__\")))){var prototype; }");
tryItOut("M:do {(window); } while((*) && 0);");
tryItOut("switch((([1,2,3,4].map)++)) { default: /*infloop*/M:for(({ __count__: __noSuchMethod__,  /x/g : constructor }) = <><x><y/></x></>; @foo.__defineGetter__(\"__proto__\", Math.pow); [,,] .@ <y><z/></y>) {throw __parent__; }case <y><z/></y> = \fnew (function(y) { yield y; let __iterator__ =  /x/g ;; yield y; })((function(y) { yield y; /*infloop*/__proto__: +<x><y/></x>; yield y; })([11,12,13,14].filter)): propbreak;  }");
tryItOut("M:do {return <x/>; } while(() && 0);");
tryItOut("{}");
tryItOut("if( /x/g \f) {while((1e4 &= <><x><y/></\fx></>) && 0){<x/>; } } else  if ([11,12,13,14].filter) {return;return <x><y/></x>; } else if(<><x><y/></x></>.yoyo(*) .. this) {return null;var __parent__, __noSuchMethod__; } else {/*infloop*/L:do return ; while(__noSuchMethod__ = <y><z/></y>); }");
tryItOut("do /*infloop*/L:while((uneval(<><x><y/></x></>))){yield <x/>; } while((((Function).call( '' , )).hasOwnProperty(\"__parent__\")) && 0);");
tryItOut("L: {var prototype = this; }");
tryItOut("var __proto__ = window; const prototype;");
tryItOut("yield prop.(null);");
tryItOut("if([15,16,17,18].sort((<><x><y/></x></>).__defineSetter__, [[]])) export *; else continue ;");
tryItOut("do {window;(undefined); } while((({prop: window })()(([prototype for (__parent__ in <x/>)]).hasOwnProperty(\"__iterator__\"), ([,,]()))) && 0);");
tryItOut("return;");
tryItOut("(arguments);");
tryItOut("do {let constructor;var __iterator__ = <y><z/></y>; } while((-<><x><y/></x></>) && 0);");
tryItOut("for(let y in []);");
tryItOut("while(({}) && 0)yield;");
