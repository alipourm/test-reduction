tryItOut("(if(__noSuchMethod__.\tisPrototypeOf(.2)) {; }) else  __count__ = null if ((Math.sin) function::__count__: <x><y/></x>) return; else {yield __iterator__; }");
tryItOut("while((window) && 0){var __proto__ = <>constructor = ({}), prop =  /x/ </>; }");
tryItOut("L: {Math.pow }");
tryItOut("let (({ __noSuchMethod__: __noSuchMethod__, __proto__: __iterator__ })) { [1,2,3,4].map }");
tryItOut("return;\ncontinue ;\n");
tryItOut("/*infloop*/L:for(var ({ prop: ({ __iterator__: __count__, __noSuchMethod__: prop }), __count__: __noSuchMethod__ }) = 3 |= null; ((prop).call)(); Error(constructor = *::*, <x><y/></x>)) {/*for..in*/L:for(const delete in <y><z/></y>) [1,2,3,4].mapyield; }");
tryItOut("/*infloop*/M:for(new RegExp( /x/ ); ({ set x::__count__(prop, __proto__) { yield prototype = constructor }  }); ({ __parent__: constructor, __proto__: ({ constructor: constructor, __parent__: __iterator__ }) }) = <x><y/></x>.unwatch(\"__count__\")) {/*infloop*/do {export *; } while(((uneval( \"\" .x::prop)))); }");
tryItOut("if( \"\" ) false; else {export __noSuchMethod__;([z1]); }");
tryItOut("if( '' ) __noSuchMethod__; else  if ([,,z1]) @foo");
tryItOut("L: {var __parent__ = [,,z1], __noSuchMethod__ = #3={a:#3#};return  /x/g ; }");
tryItOut("gc()\n");
tryItOut("yield <><x><y/></x></>.__defineSetter__(\"prototype\", true);");
tryItOut("return;");
tryItOut("/*for..in*/L:for(let prop = <x><y/></x> in <><x><y/></x></>) continue ;");
tryItOut("/*infloop*/for(\t({__count__: ({a2:z2})});  /x/ .yoyo(<x><y/></x>); this.zzz.zzz) {yield;yield 033; }");
tryItOut("return <x><y/></x> ? <><x><y/></x></> :  /x/g ;");
tryItOut("/*for..in*/for(var __noSuchMethod__ in ((function(y) { yield y; /*infloop*/L:while(<x><y/></x>){yield 3.141592653589793;__noSuchMethod__ = false; }; yield y; })(yield *::*))){gc()export __count__; }");
tryItOut("M:if(-1.valueOf(\"number\")) export *; else  if ((__proto__ = (<x><y/></x> >> ({}))).yoyo((<x><y/></x> ? <x><y/></x> :  '' )((<x/>(window)), <><x><y/></x></>))) <><x><y/></x></>; else {}");
tryItOut("return;export __count__;");
tryItOut("/*for..in*/M:for(const \n__parent__ = Object(<><x><y/></x></>) in (-1)--) ");
tryItOut("__count__ = prototype;");
tryItOut("/*infloop*/L:for((false.__defineSetter__(\"function::prop\", ({}).__lookupGetter__)); (({prototype: undefined }).__iterator__); (uneval(#0=__noSuchMethod__))) let (constructor) { const __noSuchMethod__, __count__; }");
tryItOut("/*infloop*/for(<y><z/></y>; (undefined++)(({__iterator__: *}), ('fafafa'.replace(/a/g, <x><y/></x>) - window ^= 1e4));  /* Comment */<><ccc:ddd> </ccc:ddd></>) {3.141592653589793 }");
tryItOut("while(((new 1e-81())) && 0)return;");
tryItOut("throw StopIteration;");
tryItOut("if(<x/>) {do {return;; } while(((__parent__ = ({}) ,  '' )) && 0); } else  if ((({}).__lookupGetter__)(3/0)) {(new Function(\"gc()\"))export *; } else gc()");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(prototype in prototype = (++*::*)) {if([[]]) { if ( /x/g ) {;gc() }} else {(delete);let __count__, __parent__; } }");
tryItOut("if(prototype.__noSuchMethod__ = (p={}, (p.z = gc())())) { if (*) /*for..in*/M:for(let [__count__, prototype] = #2=[window.__iterator__] in __iterator__) ;} else {if(null) {{}__parent__, __noSuchMethod__ = __noSuchMethod__\n4. } else export *; }");
tryItOut("/*infloop*/for([<x/>].filter(eval); eval(\"<x><y/></x>\", [,,]); *::*\n) {}");
tryItOut("Math.pow");
tryItOut("do {break M;L:if(__parent__) return; else {(__noSuchMethod__);throw true; } } while(([]) && 0);");
tryItOut("/*for..in*/L:for(const __iterator__ in ((function (__parent__) { return (uneval(<x/>)) } )([15,16,17,18].some(null, this))))this.zzz.zzz;");
tryItOut("try {  } catch(__count__ if new Number()) { let(({ constructor: [[[], ({ __count__: __count__, __count__: ({ __iterator__: ({ __parent__: __iterator__ }) }) }), , ]], __iterator__: ({ ({ __parent__: ({ constructor: __parent__ }), __count__: ({ __parent__: constructor }) }): ({ __iterator__: [] }) }) }) = (this.zzz.zzz)) { for(let y in []); } catch(constructor) { with({}) { __proto__.constructor = __count__; }  } ");
tryItOut("function  prototype (__parent__) { return <><x><y/></x></> } ");
tryItOut("if(new ((*::* @ undefined))(<ccc:ddd> </ccc:ddd>)) {Functionyield; } else  if ((__noSuchMethod__ =  \"\" )) /*for..in*/M:for(__noSuchMethod__ in <x/>) break L;");
tryItOut("/*infloop*/while(@foo !== <><x><y/></x></>.__lookupGetter__(\"__count__\"))yield\nL:while(((__noSuchMethod__ < <><x><y/></x></>).delete) && 0){return 033; }");
tryItOut("let __proto__, __proto__ =  /x/g ;");
tryItOut("this.zzz.zzz;");
tryItOut("{this.zzz.zzz; }");
tryItOut("/*for..in*/for(constructor = (__count__ = prototype) in  \"\" ) ");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let this in  /x/g ) /*for..in*/for(\tconstructor.__proto__ in ((/a/gi)((([1,2,3,4].slice).apply).call(;, window))))return;");
tryItOut("do export prototype; while((#3={a:#3#}) && 0);");
tryItOut("/*infloop*/while(prop)with({}) throw StopIteration;");
tryItOut("with({constructor: constructor.(((Math.pow).apply)(0.1, <><x><y/></x></>))}){(-1)( __noSuchMethod__#3={a:#3#}); }");
tryItOut("export *\n");
tryItOut("yield <x><y/></x>\nyield <><x><y/></x></\r>;");
tryItOut("{\nyield <y><z/></y>;function  prop () \"\"  }");
tryItOut("if((({__parent__: [], __proto__: <x><y/></x> }).hasOwnProperty(\"__iterator__\"))) if(Boolean(5.0000000000000000000000, <x/>) |= <x/>) /*for..in*/for(prototype in ((eval)(<><x><y/></x></>))){return; } else  if (eval(\"(\\n \\\"\\\" )\", undefined |= <x/>).@foo) /*infloop*/for(__proto__; __iterator__; __parent__) {true; } else {eval\nbreak L;yield; }");
tryItOut("/*infloop*/for((new  '' (#1=[#1#], prop = *::*.hasOwnProperty(\"__iterator__\"))); <y><z/></y>; eval(\"<><x><y/></x></>\", 0/0)().propertyIsEnumerable(\"__count__\")) {export __proto__;@foo; }");
tryItOut("{<x/>; }");
tryItOut("for(let y in [5,6,7,8]) ");
tryItOut("prototype = __noSuchMethod__;");
tryItOut("/*infloop*/for((__parent__ = __count__ for each (constructor in  /x/ )); __proto__ = (let (__count__, prop) 4.); __iterator__ = __iterator__ *= __noSuchMethod__ .@ (__count__ = <x><y/></x>, __count__)) {{}\nFunction }");
tryItOut("if(__noSuchMethod__|=#1#) { } else  if ((__count__ = prop).isPrototypeOf((#2=({__noSuchMethod__: *})))) {__iterator__, constructor;yield; } else {return prop;export __count__; }");
tryItOut("/*for..in*/for(const __noSuchMethod__ = let (__iterator__ = {}, __iterator__ = __iterator__) (<x><y/></x>/*\n*/.(<x><y/></x>)) in <><x><y/></x></> ? <><x><y/></x></> : window) {; }");
tryItOut("!");
tryItOut("do {let constructor = *; } while(([[1]].some([1,2,3,4].slice)) && 0);");
tryItOut("/*for..in*/for(const __proto__ in (((new Function(\"(<y><z/></y>);\")))(undefined))){L:if((<><x><y/></x></>)) { if (constructor-=this) {(null); } else L: function (__proto__, constructor) { yield this } }; }");
tryItOut("/*infloop*/M:while(__proto__){{}return; }");
tryItOut("let (__count__) { const prop = <x/>, __proto__ = window; }");
tryItOut("do {return;gc()\n } while((*) && 0);");
tryItOut("export prop;");
tryItOut("L: {/*infloop*/do {(<><x><y/></x></>); } while(( /* Comment */undefined));; }");
tryItOut("/*infloop*/for(*; <x/>; <><x><y/></x></>) throw .2\nconstructor, __noSuchMethod__;\nexport __count__;\n");
tryItOut("yield <>(function  __parent__ () { yield <y><z/></y> } ).call</>;");
tryItOut("prop;\nlet prop = false, __proto__;\n");
tryItOut("return [,,z1];");
tryItOut("if(<x><y/></x>) { if (<y><z/></y>) {prop }} else {this; }");
tryItOut("");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var (#2=({__proto__: <x/>})).__noSuchMethod__ in 'fafafa'.replace(/a/g, (function  __parent__ (__iterator__) { var prototype; } ).call)) /*infloop*/while([, prototype, , ({ __noSuchMethod__: __parent__ }), __noSuchMethod__] = __iterator__);");
tryItOut("with(new ([1.3].some(__noSuchMethod__))()){gc()yield __proto__; }");
tryItOut("let (prop = (true)[*::*]) { let (__proto__, constructor) { L: let __noSuchMethod__; } }");
tryItOut("let __parent__ = <x><y/></x>;\n[,,z1];\n");
tryItOut("{export prop; }");
tryItOut("throw  \"\" ;\nlet prop = <x><y/></x>, __count__ = 4.;\n\n");
tryItOut("__noSuchMethod__, constructor = prototype;");
tryItOut("/*for..in*/L:for(prototype = ([1,,] & (( \"\"  .@*::  /x/g ).__proto__)) in __iterator__ = eval(\"do let __proto__ = <y><z/></y>, __parent__; while(((({}).__lookupGetter__)) && 0);\", *::*)) with({__count__.__noSuchMethod__: (new ({}).hasOwnProperty(*::*, prototype))})export *;\nyield;\n");
tryItOut("(false)\n{yield @foo; }");
tryItOut("while(((uneval( /x/ )).yoyo(0x99)) && 0)let (prototype) { var __parent__ = *, __noSuchMethod__ = 033; }");
tryItOut("let prototype\n");
tryItOut("/*infloop*/M:while(prop = __noSuchMethod__)/*for..in*/M:for(prototype = __noSuchMethod__ in undefined) {return <><x><y/></x></>;return; }");
tryItOut("/*infloop*/for(var prop; {} <=  /x/g  | __noSuchMethod__ = @foo; new Date()) {/*for..in*/M:for(prop in ((function  __count__ (\u2028, set = [[]];, __iterator__) { yield <x><y/></x> } )(__parent__))){yield  \"\" ; } }");
tryItOut("throw [,];return *::*;");
tryItOut("/*infloop*/do gc() const __noSuchMethod__; while( '' );");
tryItOut("__count__ = __proto__;");
tryItOut("/*for..in*/for(let __count__ in (((function (__parent__)*).apply)(new ([])(undefined, <y><z/></y>)))){/*for..in*/for(const __proto__ in ((function (__parent__, prop) { return  /x/g  } )(<y><z/></y>)))__count__ }");
tryItOut("do continue M; while((<x><y/></x>) && 0);");
tryItOut("/*infloop*/for(var __count__ = __iterator__ ?  ''  : <x><y/></x> ? <x><y/></x>.(<x><y/></x>) : __proto__ &= __proto__; ( /x/  - <y><z/></y>); this && @foo) /*for..in*/L:for([__noSuchMethod__, window] = <><x><y/></x></> in __iterator__) ");
tryItOut("try { for(let y in []); } catch(__iterator__) { try { prop = __count__; } finally { __noSuchMethod__ = prop; }  } finally { __iterator__ = __iterator__; } ");
tryItOut("with({function::__parent__: Object().watch(\"prototype\", ({}).__lookupGetter__)}){with({__iterator__: function::__count__}){ } }");
tryItOut("return <employee id=\"1\"><name>Joe</name><age>20</age></employee>.__lookupSetter__(\"prop\");");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __parent__ in  \"\"  /= undefined) break<!--  M;");
tryItOut("M:do {*::*L:do gc() while(((<><x><y/></x></>)(\f<x><y/></x>, continue ;)) && 0); } while((( '' )[((Math.pow).call(*::*, <><x><y/></x></>))]) && 0);");
tryItOut("if([<><x><y/></x></> for (prop in <y><z/></y>)]) {return;(1e81); }");
tryItOut("/*for..in*/for(let __proto__ in ((<x><y/></x>)(window))){(@foo).watch({a1:1}); }");
tryItOut("if(<><zzz>((yield __noSuchMethod__))</zzz></>) {/*infloop*/L:for(var [] = (Math.pow(this)); ((1 for (x in []))).call((-1), ); prop , *) {yield;throw 0x99; } } else  if ( \"\"  = typeof  \"\" [(uneval(false))]) {/*for..in*/for(const __noSuchMethod__ in this) .2, <x><y/></x>gc() } else {yield; }");
tryItOut("/*infloop*/for(*; [1,,].@foo; <><x><y/></x></>.__noSuchMethod__ = <y><z/></y>) gc()");
tryItOut("this.zzz.zzz;");
tryItOut("/*infloop*/while(Date(<x><y/></x>, prototype)){{} }");
tryItOut("/*infloop*/for(@foo <<= <><x><y/></x></>.eval( /x/g ).throw(new (*::*).__defineSetter__())\f; @foo < <employee id=\"1\"><name>Joe</name><age>20</age></employee>; ) /*for..in*/for(let [__parent__, prop] = this in <x/>) (<x><y/></x>);");
tryItOut("/*infloop*/M:for(var prop; prop.__noSuchMethod__ getter= ({}).__lookupGetter__; <x/>) {prop = 5.0000000000000000000000;return;\t }");
tryItOut("with(prop = <><x><y/></x></> ? constructor = <x><y/></x> : typeof this *= (undefined)())/*infloop*/L:for([[1]]; <x><y/></x>;  \"\" ) ;");
tryItOut("gc()\nexport prop;\n");
tryItOut("L:if( \"\" ) (#3={a:#3#}); else  if (<x><y/></x>.__defineGetter__(\"__parent__\", Math.pow)) ; else {export __parent__;return true; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var prop in yield 1e4) {{(__proto__);return; } }");
tryItOut("/*for..in*/for(__count__ = constructor.@* in @foo) const __iterator__ = <x><y/></x>;yield;");
tryItOut("/*for..in*/M:for(const [__parent__, __count__] = ((__count__ = arguments)[(Function)(__parent__, [1,,])]) in [,,z1]) {/*infloop*/M:for( \"\" ; <x><y/></x>; <><x><y/></x></>) const __iterator__ = null; }");
tryItOut("do {__proto__, function::prototypelet (__parent__, constructor) { yield __proto__; } } while(([15,16,17,18].sort(let (prototype = [z1,,]) false, [null].filter(({}).hasOwnProperty).hasOwnProperty(\"__iterator__\")).watch(\"__parent__\", function (__proto__, __parent__) { yield (new Math.pow()) } )) && 0);");
tryItOut("with(__count__ (<xxx>{__noSuchMethod__}</xxx>.(*::*(<><x><y/></x></>)) if (@foo))){/*infloop*/for(const ({ __iterator__: __iterator__ }) = ((true).call(<y><z/></y>, undefined)); false - <x><y/></x>; ({__count__:  /x/g , prototype getter: 1e81 })) L:do export prop; while((0/0) && 0);{M:if(this) {; } else  if (<x><y/></x>) {throw <><x><y/></x></>;; } } }");
tryItOut("continue M; const __parent__;");
tryItOut("/*infloop*/while(5.0000000000000000000000)yield;");
tryItOut("if(({__count__: false, __proto__: __parent__ })) { if ((gc)) [1,2,3,4].map} else var constructor = null, constructor = [,];");
tryItOut("switch(({ __iterator__: ({ prop: __parent__, prototype: [[__iterator__, ], [, , ], , \t] }) }) = (yield (new (function (__count__)function ([y]) { })(\t(Math.pow)(<><x><y/></x></>, <x><y/></x>)) :: <x/> instanceof window %= undefined))) { case * <= 1.3: break; break; default: break;  }");
tryItOut("/*for..in*/for(const (prototype) in [__count__ = <><x><y/></x></>]) {{L: /*infloop*/for(var __proto__ = *::*; arguments; (-1)) yield <><x><y/><\f/x></>; }\n }");
tryItOut("if((new (undefined)(3.141592653589793.__lookupSetter__(\"prop\"), (p={}, (p.z = (this.__defineSetter__(\"__count__\", (1 for (x in [])))))())))) { if (this) (prop.__lookupSetter__(\"__proto__\")); else /*for..in*/for(var [__parent__, __noSuchMethod__] = typeof window in <><x><y/></x></> %= <x><y/></x>) if(RegExp()) {} else  if (this.__defineSetter__(\"prop\", (1 for (x in [])))) {{} }}");
tryItOut("/*for..in*/try {  } catch(constructor if undefined) { yield; } catch(prop) { -1; } finally { yield; } ");
tryItOut("/*for..in*/for(const prop = (((function::prototype = prototype).prop = *) |= null.hasOwnProperty(\"__count__\")).__proto__ = [11,12,13,14].some in @foo.eval((-0))) M:if(<><x><y/></x></>) return <><x><y/></x></>; else  if (1.3) {var __iterator__ = [[]], __parent__ = <x><y/></x>; }");
tryItOut("break M;");
tryItOut("with(arguments)");
tryItOut("var constructor; const __parent__;");
tryItOut("if(true) {export constructor; } else {export __parent__; }");
tryItOut("{let __parent__ = [,,z1]; }\n");
tryItOut("/*infloop*/while(window){(*::*);yield  \"\" ; }");
tryItOut("/*infloop*/for(Error((__iterator__ =  /* Comment */<y><z/></y>.__defineGetter__(\"prototype\", new Function))); (!(-0)); (window >= <x/>.hasOwnProperty(\"prototype\")).@foo) /*infloop*/for(constructor; (new RegExp( \"\" , __proto__)); (function  yield ()[]()) return;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __iterator__ in window\r) if( /x/g ) { if (window) return [1];; else {Function }}");
tryItOut("while((!{}) && 0){switch(this(*)) { case 5: break; default: break;  } }");
tryItOut("var __proto__");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(const __iterator__ in ((uneval(@foo))).throw([1e-81/*\n*/])) {( '' ); }");
tryItOut("/*for..in*/for(let  /x/g .__noSuchMethod__ in <x/>) false;");
tryItOut("/*for..in*/for(prototype = __proto__|=<><><bbb xmlns:ccc=\" '' \"><ccc:eee></ccc:eee></bbb><!--yy--></></> in new (gc)() || 5.0000000000000000000000[window]) export __proto__;");
tryItOut("switch(null) { default:  }");
tryItOut("return ([11,12,13,14].filter);/*for..in*/for(const [prop, constructor] = (constructor.('fafafa'.replace(/a/g, function  __count__ (prototype) { yield prop } ))) in <x><y/></x>) {switch(<><x><y/></x></>) { case 3: yield #1#;break; default: continue ;break; case @foo:  }return ({}); }");
tryItOut("/*infloop*/while((yield <>/*\n*/<x><y/></x></>).eval(new Exception()))");
tryItOut("throw StopIteration;");
tryItOut("if(window) {const constructor = @foo, prototype; /x/ ; } else  if (<x><y/></x>) const constructor = __count__;");
tryItOut("yield *::*.valueOf(\"number\");");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var prop in (<x><y/></x> != window.watch(\"__parent__\", Math.pow))) {export *; }");
tryItOut("/*for..in*/for(var __count__ = <><x><y/></x></>.watch(\"__proto__\", /a/gi) in [({a2:z2})].some(function(q) { return q; })) {(prop).watch\n }");
tryItOut("L: {;const constructor =  /x/g , __parent__; }");
tryItOut("with({__count__: let (__iterator__) 3/0})true");
tryItOut("/*for..in*/M:for(prototype in ((( '' ).__defineSetter__)(-0))){}\n;");
tryItOut("L: {/*infloop*/try { throw StopIteration; } catch(__count__ if (function(){prototype = __iterator__;})()) { throw StopIteration; } finally { export constructor; } while(<><x><y/></x></>){throw @foo; } }");
tryItOut("M:if(this.zzz.zzz.isPrototypeOf(prop = ({ __parent__: prototype }))) {{}throw <><x><y/></x></>; } else  if (((constructor)-=*::*.__iterator__)) /*for..in*/for(let prop = window.__proto__ in <x/>) {<x><y/></x>;; } else if((this.__defineGetter__(\"__noSuchMethod__\", undefined).__proto__)) constructor; else {yield __noSuchMethod__; }");
tryItOut("if(( \"\" \n >= (__proto__ && function ([y]) { }))) { if (__proto__.__noSuchMethod__) break ;} else /*infloop*/for(var __proto__ =  \"\" ; this; <><x><y/></x></>) {;prototype; }");
tryItOut("/*for..in*/for(let __iterator__.__parent__ in (((1 for (x in [])))(new ((( \"\"  for each (__proto__ = prototype in this))))(({}).__lookupGetter__(prototype), <y><z/></y>) ? ([15,16,17,18].sort(function(y) { yield y; throw <y><z/></y>;; yield y; }, *.__defineSetter__(\"__count__\", ((1e-81).__defineSetter__).apply))) : yield (<y><z/></y>. \"\" ))))yield [,,] :: 1.3;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(var __noSuchMethod__ in (({ prop: prop, __count__: __iterator__ }) = undefined.__lookupSetter__(\"__noSuchMethod__\"))) {const __parent__;with({prop: (yield //h\n0/0.constructor)})gc() }");
tryItOut("/*for..in*/for(if(null) { if (<x><y/></x>) } else {break L;yield; }.prototype in ((Math.pow)(([]))))return <x><y/></x>;");
tryItOut("if(({function::__noSuchMethod__ getter: function  __count__ () { *; }  })) {return; } else  if (033 = true) { for each (__proto__ in <y><z/></y>) for (constructor in <y><z/></y>) }");
tryItOut("L: {switch(<>({ __parent__: constructor }) = (true ? (-0) : (-1))[x::prototype.prop]</>) { case 2: /*for..in*//* nogeckoex bug 349964 */ for  each(prototype in  /x/g ) {}break;  }return 0.1 ? <x/> : -3/0; }");
tryItOut("for(let y in []);");
tryItOut("{throw <><x><y/></x></>;(prop); }");
tryItOut("/*infloop*/for(({ __parent__: ({ function::prop: prop }), __iterator__: ({ __noSuchMethod__: __count__.__parent__, __count__: ({ constructor: [__parent__, ({ __noSuchMethod__: ({ __parent__: ({ prop: __count__, constructor:  }), function::prototype: ({ constructor: prototype, prototype: __parent__ }) }), prototype: prop(<x/>) }), , constructor] }) }) }) = (function (__parent__)<x/>++).call( /x/g , ); [(({__iterator__ getter: ({}).hasOwnProperty, __count__: <x/> }))].valueOf(\"number\") / (({prop getter: [1,2,3,4].map }))\n; <><><!--yy--><\f/></>) if((this.__defineGetter__(\"prop\", Function)).unwatch(\"prototype\")) /*infloop*/M:while(5.0000000000000000000000){return;let __iterator__, __count__; } else  if (new (function ([y]) { })() + yield;(this)) export __proto__; else constructor;");
tryItOut("<><x><y/></x></>.prop");
tryItOut("if(constructor = <><x><y/></x></>) { if ([new Error(this, <x><y/></x>)].sort(eval(\"\\n<y><z/></y>\", [15,16,17,18].sort(new Function, <><x><y/></x></>)) &= (p={}, (p.z =  '' .yoyo([1]))()))) {(constructor);if( /x/g ) {new Function{} } }} else if(1e-81 /= - '' ) {Function } else  if (<><x><y/></x></>.__defineGetter__(\"prop\", <><x><y/></x></>).__lookupGetter__(\"__iterator__\")) { }//h\n else return [1];");
tryItOut("/*for..in*/M:for(delete =  \"\"  in (*::*)(<><x><y/></x></>, 1e+81)) {if([[1]]) { if (<><x><y/></x></>) (*);} else  }");
tryItOut("/*for..in*/for(var [__noSuchMethod__, __noSuchMethod__] = constructor.(<x/>)\n in [15,16,17,18].some(prototype.prototype, (((<><x><y/></x></>).watch)(*::*)))) {throw __count__ = window;if(<x><y/></x>) <><x><y/></x></>; else {break L; } }");
tryItOut("with({constructor: window , @foo.throw(eval)})export constructor;");
tryItOut("let() ((function(){})());");
tryItOut("return;");
tryItOut("/*for..in*/for(let __parent__ in (((<y><z/></y>).apply)(*::*)))throw this;");
tryItOut("return this;");
tryItOut("/*infloop*/M:for(-3/0; new Function((yield -3/0).hasOwnProperty(\"__proto__\"), (<x><y/></x>.( /x/g ).__lookupGetter__(\"prototype\"))); (gc)) export __count__;");
tryItOut("/*for..in*/for(constructor = [, , ].((<x><y/></x>.eval(<><x><y/></x></>))) in [z1]) undefined = __iterator__;");
tryItOut("if(<x/>) { if (window) return; else gc()}");
tryItOut("for(let y in []);");
tryItOut("/*for..in*/M:for(const (prototype) in (let (prop = true) __noSuchMethod__) in 'fafafa'.replace(/a/g, [1,2,3,4].slice).valueOf(\"number\")) return;");
tryItOut("if(new (({}).__lookupGetter__)()) {constructor, __parent__ = [[]]; } else  if (^) with({__count__: <x><y/></x>})var __proto__, __count__; else let __proto__ = this, __proto__;");
tryItOut("/*infloop*/for(window; 1e4; *) {yield;var constructor; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prop in #1#) return 1.3;");
tryItOut("/*for..in*/L:for(const let = (({__parent__ setter: __iterator__function () { {} }  })) in prototype = <x><y/></x>.hasOwnProperty(\"prototype\").valueOf(\"number\")) if([, __count__, __iterator__, __parent__, __iterator__] = <><x><y/></x></>.valueOf(\"number\")) { if ([11,12,13,14].sort >>= void __count__) yield;} else break L;");
tryItOut("L:if(<><x><y/></x></> / (({__parent__: window}))) {{}const function::prop = 1e4, prototype = arguments; } else  if ([] = (return) > __parent__ = 1e+81) {export *;yield  \"\" ; }");
tryItOut("/*infloop*/L:for(var constructor = <x/>; __noSuchMethod__; this) window;");
tryItOut("let (__parent__( /x/g )) { with({__parent__: <y><z/></y>}){;window; } }");
tryItOut("if(__proto__) {gc()/*infloop*/for(const __noSuchMethod__ = ( /x/g )(); __noSuchMethod__ = <><{__iterator__}> </{__iterator__}></>; window if ((function ([y]) { })()).@*) {yield <><x><y/></x></>;window } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__count__ in <x/>) continue M;\nL: {var __noSuchMethod__ = constructor\t; }\n");
tryItOut("with({prop: <x/>}){function::prop }");
tryItOut("/*infloop*/L:for((#1=@foo); ({a1:1}) %= __iterator__ * __count__.__proto__ = @foo; \n<x><y/></x>) {if(<x><y/></x>) return this; else  if (<ccc:ddd></ccc:ddd>) null; else yield prototype;'haha'.split }");
tryItOut("if(*) {var __proto__ = 0x99, each; }");
tryItOut("/*infloop*/do gc() while((( \"\" )()))");
tryItOut("yield\n/*infloop*/L:for(__iterator__; __iterator__ = constructor; ({function::prop setter: new Function, __count__ })) gc()");
tryItOut("for(let y in [5,6,7,8]) return <x><y/></x>.(-1) = (new false({}));");
tryItOut("if(* ? (#0=[#1# !== window]) : [(\n<><x><y/></x></>)]) /*for..in*/L:for(var [constructor, __count__] = @foo in undefined) const __parent__; else  if (((yield [yield  \"\"  if (-0)]))) {const {export prop; };export __proto__; }");
tryItOut("let(prototype, __iterator__ = (<><x><y/></x></>).isPrototypeOf(false.valueOf(\"number\"))) { for(let y in [5,6,7,8]) throw StopIteration;");
tryItOut("with(*.__defineGetter__(\"__parent__\", undefined)){return  /x/g ;export *; }");
tryItOut("yield prototype.__parent__ \tgetter= function  prop ([__count__], prop) { return window } ;");
tryItOut("/*infloop*/L:do { } while(yield false.@*);");
tryItOut("let(prop = <x><y/></x>) { this.zzz.zzz;");
tryItOut("M:if((this.@*)) { if ((prototype = false)) default: break; break; case (__count__-=<><x><y/></x></>): ;} else throw <x/>;");
tryItOut("{with({null['__parent__']: [(uneval(__noSuchMethod__))].map(Math.pow).@foo});throw 1e81\n }");
tryItOut("/*infloop*/for(let __parent__;  '' ; <><x><y/></x></>) {continue ; }");
tryItOut("export *;");
tryItOut("do {yield; } while(( '' ) && 0);");
tryItOut("/*infloop*/for(__count__; (new 'haha'.split()); (null.isPrototypeOf(*)).(<y><z/></y>)) {yield\n }");
tryItOut("if(this.__defineGetter__(\"get\", new Function)) <employee id=\"1\"><name>Joe</name><age>20</age></employee></*\n*/x><y/></x>  else return;");
tryItOut("while((({yield: ((new Function).apply).call( /x/g , <x><y/></x>) })) && 0)export *;");
tryItOut("return <x/>;");
tryItOut("{}");
tryItOut("const __iterator__ = 0, __count__; const getter;");
tryItOut("export *\nMath.sin\n");
tryItOut("{{}yield 1.2e3; }");
