
tryItOut("<><bbb xmlns=\"3/0\"><!--yy--></bbb></>;M:if( /x/g .__defineGetter__(\"prototype\",  /x/ )) switch([z1]) { case <x><y/></x>:  }");
tryItOut("with({}) with({}) { yield @foo; } ");
tryItOut("__iterator__ = prop;");
tryItOut("{throw <x/>;function(id) { return id } }");
tryItOut("var __proto__");
tryItOut("/*infloop*/for(let __iterator__ =  for (__noSuchMethod__ in undefined); (\n '' ); x::constructor = this) {return *;/*\n*/(true); }\n/*infloop*/for(const getter; this;  '' ) {break M; }");
tryItOut("__noSuchMethod__ = prop;");
tryItOut("/*infloop*/L:do v while( /x/ (window));");
tryItOut("let(({ __parent__: ({ __noSuchMethod__: __proto__, __iterator__: __iterator__ }), constructor: [] }), []) ((function(){return;})());");
tryItOut("{thisthrow @foo; }");
tryItOut("export *;L: throw *;");
tryItOut("with({constructor: <x><y/></x>}){throw <x><y/></x>;prototype }");
tryItOut("/*infloop*/while(*::*.@*)gc()");
tryItOut("throw <><x\t><y/></x></>;\n\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __noSuchMethod__.__noSuchMethod__ in (function () { return this; } )()) {gc() }");
tryItOut("/*infloop*/do {L:if( /* Comment */<y><z/></y>) { if (1e81) {<x><y/></x>;export *; } else }\tif((<x><y/></x>( '' , <><x><y/></x></>))) let prop, __count__ = {}; else  if (constructor = window) {throw  '' ; } } while(__parent__ = <><x><y/></x></>.prop);");
tryItOut("if(true) return;\n{}\f\n");
tryItOut("yield;\n([1,2,3,4].map).apply\n");
tryItOut("with({__proto__:  /* Comment */prototype.__count__ setter= -null}){/*infloop*/for(let __proto__; ( ''  @ __parent__); (window)(<x>\t<y/></x>, [1])) {/*for..in*/for(const prop = <x><y/></x> in 0/0) {;var __iterator__; }yield <><x><y/></x></>; }var __proto__; }");
tryItOut("return <x><y/></x>;");
tryItOut("/*infloop*/M:for(const [, prop] = <x/>; new Error(__iterator__, ({})); __proto__ =  /x/g ) {; }");
tryItOut("[({ get: ({ __proto__: __parent__, __count__:  }), __iterator__: ({ case 9: yield;break; case yield *::*: throw @foocase Array(<y><z/></y>, @foo): <x/>;break; default: return;break; case (new (undefined / @foo)(new (<x><y/></x>)(), undefined)): break; : ({ constructor: __count__, __iterator__: \t({ prop: [] }) }) }) }), __proto__] = prop; const __iterator__;");
tryItOut("if(let __iterator__ = 3/0, __noSuchMethod__ = this) { if (3/0.unwatch(\"prop\")) false; else L:if(<x/>) { } else  if ( /x/ ) ((function  __parent__ (constructor, __iterator__) { return <y><z/></y> } ).apply).apply}\f");
tryItOut("<employee id=\"1\"><name>Joe</name><age>20</age></employee>");
tryItOut("{yield; }\f");
tryItOut("return;");
tryItOut("do ({}).hasOwnProperty while((null , -3/0) && 0);");
tryItOut("yield null instanceof *;");
tryItOut("/*infloop*/while(<><x><y/></x></>){yield; }");
tryItOut("prototype = __proto__;{{export *; }with({prop: ([,].__noSuchMethod__)}){return;export __proto__; } }");
tryItOut("if(({__proto__: (0/0).call([], ) })) {gc() } else {gc()let __noSuchMethod__ = <><x>\r<y/\t></x></>, (new Function(\"continue ;\")) = false; }");
tryItOut("{\texport *; }");
tryItOut("/*infloop*/do yield [1]; while(__noSuchMethod__);");
tryItOut("throw StopIteration;");
tryItOut("{{} }");
tryItOut("/*infloop*/for(new Function(); (delete [1]).isPrototypeOf((function  __iterator__ () { return <x/> } ).apply); <x><y/></x> .. <x><y/></x>) break \n");
tryItOut("let(get = constructor.(x::__count__), constructor) ((function(){return;})());");
tryItOut("with({__parent__: <x/>.__lookupSetter__(\"prototype\")}){export *;yield; }");
tryItOut("throw 3;\nyield;\n");
tryItOut("");
tryItOut("/*for..in*/for(var [__iterator__, __proto__] = (yield __noSuchMethod__) in  /x/  % [[1]][<x/> %= 033]) {/*infloop*/L:for(prototype; __count__ = undefined;  '' ) {return <x><y/></x>; }if(this) { if (#1=[#1#]) {throw __iterator__; } else {return; }} }");
tryItOut("let (prototype = false.__defineGetter__(\"prop\", 3)) { {} }");
tryItOut("{__noSuchMethod__ = <x/> }");
tryItOut("throw __proto__;");
tryItOut("L:if(__iterator__ = <x><y/></x>) return <><x><y/></x></>; else  if (*) <><x><y/></x></>; else var prototype, __proto__ = false;");
tryItOut("{yield;return __parent__; }\t\nvar __proto__ = 1.2e3, prop;");
tryItOut("if( '' ) {let prop; } else  if ( /x/g ) {return undefined; } else ");
tryItOut("return;{let prototype getter: function(q) { return q; };return; }");
tryItOut("if([15,16,17,18].some(function (prop) { return <x><y/></x>; } , this)) {return; } else  if (true) {L:do {var \t(<><x><y/></x></>).__defineSetter__; } while((<y><z/></y>) && 0); } else {var prototype, __count__;var getter, __noSuchMethod__ = __parent__; }");
tryItOut("if(constructor = __parent__) /*for..in*//* nogeckoex bug 349964 */M: for  each(prop in *) yield <><x><y/></x></>; else  if (prototype = prop) /*for..in*/M:for(let __noSuchMethod__ in *) {(-1);return; }");
tryItOut("L:if(arguments) /*\n*/return  '' ; else  if (<y><z/></y>) {yield; } else {let prototype, __iterator__;const __parent__; }");
tryItOut("if((delete <x><y/></x>) %= <x><y/></x>.unwatch(\"__noSuchMethod__\")) {(null);export *; }");
tryItOut("for(let y in [5,6,7,8]) var __iterator__ = [,];");
tryItOut("{/*\n*/{continue M;while((0) && 0){continue ; } } }");
tryItOut("let (prop, __iterator__ = <>this</>.((\nprop))) { this.zzz.zzz; }");
tryItOut("if(((uneval(<y><z/></y>.eval(@foo))))) {yield <x><y/></x>; } else  if ((<y><z/></y> % this)) let prototype;");
tryItOut("this.zzz.zzz;");
tryItOut("/*infloop*/M:for(new (-1)\f(false) <<= (prop.( /x/g )); __noSuchMethod__.prop; (constructor = *)) {prototype; }");
tryItOut("with((__parent__|='fafafa'.replace(/a/g, (true).watch) <= <><x><y/></x></> ? @foo : <x><y/></x>))/*infloop*/L:for(prop; <y><z/></y>; *(<><x><y/></x></>, (-0)).eval(* if (1.2e3))) {yield false\n((new Function(\"gc()\"))).apply }");
tryItOut("/*for..in*/for(var __parent__ in (((((uneval( \"\" )).throw(new (undefined).call(<><x><y/></x></>, <y><z/></y>)())) <<= ({ __noSuchMethod__: ({ prototype: __count__, prototype: __proto__ }), __proto__: ({ __noSuchMethod__: __noSuchMethod__ }) }) = <y><z/></y>).call)(( '' (<y><z/></y>)).valueOf(\"number\") ^= prototype.constructor setter= x::x::__iterator__)))const prototype, __count__;");
tryItOut("return this.__defineGetter__(\"prototype\", (new Function(\"with(prop){yield true; }\")));");
tryItOut("export *\n");
tryItOut("/*infloop*/for(__count__; this.__defineSetter__(\"__parent__\", gc); __iterator__ .@*:: {}.throw(0/0)) {/*infloop*/for(({ __count__: prototype }) = #1#.__lookupSetter__(\"__proto__\").__lookupGetter__(\"constructor\"); setter-=__noSuchMethod__; __noSuchMethod__.prop setter= Function) {yield;export __proto__; } }");
tryItOut("if(typeof this.__defineSetter__(\"prop\", Function)) ; else  if (~[@foo].filter((<x><y/></x>).watch)) /*for..in*/for(var [prototype, prototype] = (undefined |= 0.1) in  { break L; } ) {let prototype = function ([y]) { }, __proto__; }");
tryItOut("let __iterator__ = null, __iterator__ = (function ([y]) { })();if(typeof <x><y/></x>) {export *; }");
tryItOut("/*infloop*/M:do {{continue ; } } while(<><x><y/></x></> !== window);");
tryItOut("switch(__noSuchMethod__ :: -3/0) { case this: ;break;  }let(constructor = (let (__proto__ = this, prop) <x><y/></x>), __proto__ = <x/>) ((function(){for(let y in [5,6,7,8]) let __proto__, constructor;})());");
tryItOut("return ({__iterator__ setter: function  __count__ () { export __noSuchMethod__; }  });");
tryItOut("L: {if(null) (<><x><y/></x></>);/*infloop*/for(var ({ __count__: __noSuchMethod__, __iterator__: __proto__ }) = new @foo(undefined); [];  /x/g  > 1e+81) {export *; } }");
tryItOut("if(( /* Comment */<x><y/></x>\n)) ({}).hasOwnProperty else  if (__count__.__noSuchMethod__) M:if(<y><z/></y>) { if (#3={a:#3#}) export __noSuchMethod__;} else {(*);<x><y/></x>; }");
tryItOut("/*infloop*/for(const __proto__; <y><z/></y>.__proto__ ^= (-this); \tnew *.__iterator__) { }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __count__ in false) gc()");
tryItOut("while((()) && 0){{} }");
tryItOut("");
tryItOut("/*for..in*/for(var [__parent__, constructor] = true in <x/>) \ngc()");
tryItOut("for(let y in [5,6,7,8]) return (p={}, (p.z = #2= /x/  || 3/0)());");
tryItOut("[1]v");
tryItOut("switch(constructor = this) { case 6: break; /*for..in*/M:for(prop = window in window) {(new Function(\"<><x><y/></x></>;\")) }break; break; break; default: break;  }");
tryItOut("if(((window %= null(({ if (0x99): this })) >>> [[]]--)\n)) ([new undefined(<x><y/></x>, <y><z/></y>)]); else {__parent__ =  /x/g ;/a/gi }");
tryItOut("/*infloop*/for(__parent__ = 1e+81; ((function ([y]) { })().eval(<><x><y/></x></>)); (<x/>.__defineGetter__(\"__iterator__\", [1,2,3,4].slice))) {; }\n");
tryItOut("/*for..in*/for(let prop = [1,,] in prototype) {export __iterator__; }");
tryItOut("with({}) for(let y in []);");
tryItOut("return;");
tryItOut("L: *::*;");
tryItOut("try { var __noSuchMethod__; } catch(prop) { throw <><x><y/></x></>; } ");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(prop(undefined) in <x><y/></x>) {;prop }");
tryItOut("this.zzz.zzz;");
tryItOut(" get constructor(__proto__, constructor)new Array()\n");
tryItOut("/*infloop*/for(*; __iterator__; {}) {{}<><x><y/></x></\t>; }");
tryItOut("(@foo);");
tryItOut("throw StopIteration;");
tryItOut("M:if((({}).hasOwnProperty)()) {throw <><x><y/></x></>;\nlet constructor;\n } else  if (((this.__defineSetter__(\"prototype\", /a/gi) for (prototype in <x/>) for (__parent__ in  '' ))) >>> ([11,12,13,14].some).valueOf(\"number\")) {{} } else let prop = <x/>\nvar constructor = <x><y/></x>, __parent__;");
tryItOut("if(#0=({prototype: 4..*})) {const __parent__ = <x/> = @foo, __parent__;export __iterator__; } else {if([11,12,13,14].sort) { if (false) {throw @foo;yield; } else {Functionprototype: 1e4 }} }");
tryItOut("yield (p={}, (p.z = 'fafafa'.replace(/a/g, function () { yield  /x/  } ))());");
tryItOut("yield window; const constructor;");
tryItOut("export *;");
tryItOut("/*for..in*/for(var __proto__ in (true = *::*)) {{}return; }");
tryItOut("{/*infloop*/for(({ get constructor prop (__parent__, __parent__)[z1] }); window >>= @foo; [,].valueOf(\"number\")) Math.sin;3/0 }");
tryItOut("/*infloop*/M:for(({ __count__: __parent__, __proto__: __proto__ }) = __proto__; <{prop}><bbb xmlns:ccc=\"__iterator__.prop\"><ccc:eee></ccc:eee></bbb><ccc:ddd> </ccc:ddd></{prop}>; <>(new [1,2,3,4].map(\f<x><y/></x>, <><x><y/></x></>))</>) {{}yield; }");
tryItOut("if(([11,12,13,14].sort)) { if ((<><x><y/></x></>.watch(\"__iterator__\", function (__noSuchMethod__, __iterator__) { yield <><x><y/></x></> } ))) return; else break L;}");
tryItOut("/*for..in*/for(const prototype in //h\n(((1 for (x in [])))(({}).__lookupGetter__()))){/*for..in*/for(var [__iterator__, __noSuchMethod__] = #0=[prototype = __noSuchMethod__.valueOf(\"number\")] in ({constructor: 'fafafa'.replace(/a/g, (#1=[#1#]).call), __proto__ getter: undefined })) {; } }");
tryItOut("L: {/*infloop*/for(let [, ] = ( /* Comment */<><\nx><y/></x></>); (uneval(<x/>)); @foo) {{} } }");
tryItOut("gc()");
tryItOut("/*infloop*/for(const undefined = (yield new (@foo)()) + __iterator__ === 1e+81; <><x><y/></x></> >> arguments; <><x><y/></x></> | true) L:if(constructor = (eval)()) { if (new (1.2e3).watch()) return; else {throw false;export __count__; }}\n");
tryItOut("if(yield [1] if (window)) { if (__noSuchMethod__ = ({ constructor: prototype })) {}} else /*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__ in <><x><y/></x></>) {([1,2,3,4].slice).applyreturn; }");
tryItOut("if((yield [15,16,17,18].map(function ()*, 1e81))) {var __parent__ = [z1,,], __iterator__ = __proto__ =  \"\" ;gc() } else  if (function  __iterator__ (__parent__) { {} } (@foo)) {return; } else throw this;");
tryItOut("L:if((/a/gi).call(<y><z/></y>, )) {; } else  if (false.__defineGetter__(\"__count__\",  /x/g )) {yield; } else {var __count__;throw <><x><y/></x></>; }");
tryItOut("{}yield;");
tryItOut("(<y><z/></y>)\nyield this;");
tryItOut("/*infloop*/do do {__iterator__;'haha'.split } while((false) && 0); while(__count__ = constructor = __count__);");
tryItOut("with({}) for(let y in []);");
tryItOut("M:if(true) { if (constructor = 0x99 = ) yield; else {(__noSuchMethod__); }}");
tryItOut("let(constructor = __count__.(__noSuchMethod__ = <x/>)) { try { return let (__noSuchMethod__ = *::*) (new (false)()); } catch(__noSuchMethod__) { let(({ prototype: __parent__, prop: __parent__ }), __proto__ = <x><y/></x>) { /*infloop*/for(let __noSuchMethod__ = this; [z1,,]; null) {export __parent__; } } finally { try { for(let y in []); } catch(prototype if constructor.__parent__ setter= (Math.pow).apply) { try {  \"\" ; } catch(constructor if undefined) { let prototype = true; } catch(__parent__ if null) { break L; }  } catch(prop) { let(__noSuchMethod__) ((function(){yield;})()); }  } ");
tryItOut("/*infloop*/while(3.141592653589793)__count__;");
tryItOut("{this;return <x/>; }");
tryItOut("L:while(([,] && <x/>.@foo) && 0){return __parent__;__parent__ }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var ({ prop: ({ __parent__: ({ each: [] }), ( /x/g ((p={}, (p.z = null)()))): ({ __count__: ({ __noSuchMethod__: __iterator__, __noSuchMethod__: undefined }) }) }) }) in (uneval((<x><y/></x>.({}))))\n) ();");
tryItOut("<x/>; const constructor;");
tryItOut("/*for..in*/for(const [constructor, prop] = (constructor.__proto__) in <y><z/></y>) export *;");
tryItOut("switch((__iterator__.(([~<><x><y/></x></> for each (prop in <x/>)][(#1=({__count__: __count__}).valueOf(\"number\"))])))) { default: break; do {} while(((( /x/g ))) && 0);break;  }");
tryItOut("L:switch(prop) { default: /*for..in*/for(__count__, __proto__\f in ((/a/gi)( /x/ ))){{}(0.1).__defineSetter__ }export *;break; case (function (__count__, __iterator__)#1#):  }");
tryItOut("let (export *;) { {/*for..in*/for(var prototype = this .. @foo in ({}) -= 3.141592653589793) L:if(__proto__) export *; } }");
tryItOut("return;");
tryItOut("break L\n{}\n\nexport *;\n");
tryItOut("if([<x><y/></x> for (prop in window)]) ; else  if (<x><y/></x>) {yield __proto__;- } else ( /x/g );");
tryItOut("if((new ({}).hasOwnProperty(RangeError( \"\" )))) { if (+function(id) { return id }) yield; else {with({__iterator__: <x><y/></x>}){const prop; } }}");
tryItOut("if(true) { if (0) export *;} else gc()\nfalse\n");
tryItOut("[1,2,3,4].slice");
tryItOut("/*for..in*/for(var ({ __count__: constructor, constructor: __proto__ }) in null) {yield true;return; } const __noSuchMethod__;");
tryItOut("L:if(<x><y/></x>) export *; else  if (true) {(1 for (x in [])) } else {export __iterator__; }");
tryItOut("with({}) __proto__ = prototype;");
tryItOut("{{}\nvar __noSuchMethod__ = <x/>, __parent__;\n/*infloop*/for(var __iterator__ = (<><x><y/></x></> * <><x><y/></x>\f</>); 1.3; (*::* .@*:: @foo)) export prototype; }");
tryItOut("try { return; } finally { return this; } ");
tryItOut("/*for..in*/for(let constructor in (uneval(function(id) { return id } >>= arguments))) {if() { if (undefined.__defineGetter__(\"prop\", ([]).watch)) {let prop;throw <><x><y/></x></>; } else {export *; }}let __iterator__, constructor = <x><y/></x>; }");
tryItOut("while(( /x/ ) && 0){export __parent__;export *; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__parent__.__proto__ in null) {export __noSuchMethod__; /x/g ; }");
tryItOut("/*infloop*/for(const prop = (((new Function(\"throw 1.2e3;\"))).call((this++), )); yield <x/>\n; Date(<x><y/></x> = __count__)) {*::*;let prop; }");
tryItOut("L: /*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__.__iterator__ in 3) while(( '' ) && 0){var __iterator__; }");
tryItOut("L:with((({ set __proto__ __iterator__ (({ __count__: [, __iterator__], __iterator__: ({ __parent__: prototype, __count__: __count__ }) }), __noSuchMethod__) {  }  })))let prototype = __proto__, __proto__ = [z1,,];");
tryItOut("if(<y><z/></y>) { if (prop) {break ; }} else ({a2:z2})");
tryItOut("if(function(id) { return id }++) { if (3 &= window) const prop;} else break ;<x/>;");
tryItOut("/*for..in*/for(const [__parent__, prop] = (new (Math.sin)((uneval(delete this)))) in ()) {export __iterator__; }");
tryItOut("{continue ;<x><y/></x>; }");
tryItOut("let __noSuchMethod__ =  '' , throw this;\n");
tryItOut("switch((<x><y/></x>)[undefined] % (__parent__.__defineSetter__(\"prototype\", (<x/>).watch)).__defineGetter__(\"__parent__\", (/a/gi).apply)) { case 8: M:do var get = window, prototype; while((__count__.__proto__ setter= function  __iterator__ () { [1,2,3,4].slice } ) && 0); }");
tryItOut("/*infloop*/M:for(var  if (0x99) = [(function ([y]) { })() if (033)]; [yield window for each (prop in undefined) for each (constructor in @foo)]; yield __proto__) ;");
tryItOut("export *;");
tryItOut("switch(#1=[*]) { case 4: yield @foo;case constructor =  /x/g : const __parent__ = 1e81, __proto__;break; case 5:  }");
tryItOut("{export prop;yield; }");
tryItOut("/*infloop*/while(<y><z/></y>.isPrototypeOf(this)){/*for..in*/for(var __proto__ = 1.3 ? -3/0 : *::* in undefined) if( /x/g ) {continue ;export *; } else  if (*::*) {gc() } else yield;if(__parent__) export *; else {yield <x><y/></x>;throw 1e+81; } }");
tryItOut("if( '' --) { if (new RegExp(__parent__ = this, <><x><y/></x></>) ^= __parent__ = *::*) {const __count__, __proto__ = null;yield  '' ; }} else {export <x/>;/*for..in*/for(const __parent__ = (this.__defineGetter__(\"__noSuchMethod__\", \n({}).hasOwnProperty)) in __iterator__) {{} /x/ ; } }");
tryItOut("with({}) { throw __iterator__; } ");
tryItOut("let (__count__ = ({__count__: (prototype.prop)})) { var __proto__, __iterator__ = window;\n{}\n }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each((__proto__) in __proto__.__iterator__ setter= function  constructor (__parent__, prototype) { yield  ''  } ) ");
tryItOut("{<x/>;(true); }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */\f for  each(const constructor in (__iterator__)[<x><y/></x>]) throw <x><y/></x>;");
tryItOut("if((__count__)|=prototype.(true) && ) if(({a1:1})) {export *; } else  if (#1#) {export *;<><x><y/></x></> } else {} else  if ([<x><y/></x>] .@*:: ([{}]) + new (__count__ = <><x><y/></x></>)((this.__defineGetter__(\"__iterator__\", (__iterator__).__defineSetter__)))) yield __noSuchMethod__;");
tryItOut("return ([1].*);");
tryItOut("if(*) { if (([11,12,13,14].filter)) {let __parent__, __noSuchMethod__;gc() } else yield *::*;}");
tryItOut("L: {break\f ; }");
tryItOut("throw __count__;");
tryItOut("if((1e81\n).unwatch(\"__noSuchMethod__\") / function::__count__) {yield;__iterator__, prototype; }");
tryItOut("yield\n( get __proto__ __noSuchMethod__ () { yield eval(\"/*infloop*/M:while(true){constructor =  '' ; }\", prop.__count__ getter= 5.0000000000000000000000) } );throw <x><y/></x>;");
tryItOut("/*for..in*/for(let __count__ in ((Math.sin)(window)))(true);");
tryItOut("{}");
tryItOut("if((yield (this.__defineGetter__(\"prop\", (1 for (x in [])))))) { if (<x><y/></x>.valueOf(\"number\") *= (p={}, (p.z = <x><y/></x>)())) {return; } else export prototype;}");
tryItOut("L: {__noSuchMethod__; }");
tryItOut("let(({ prop: __parent__ }), __noSuchMethod__ = <y><z/></y>) ((function(){throw prototype;})());");
tryItOut("/*for..in*/for(prototype in ((function () { yield (0/0) } )(<bbb xmlns:ccc=\"undefined\"><ccc:eee></ccc:eee></bbb>)))(<><x><y/></x></>);\n\n");
tryItOut("return;(function  prop (__noSuchMethod__) \"\" ).call");
tryItOut("if(__noSuchMethod__ if (<y><z/></y>)) {throw @foo;gc() }");
tryItOut("{const __parent__ = <y><z/></y>; }");
tryItOut("if([]) {export __iterator__; } else yield  /x/g ;");
tryItOut("while((window) && 0)\"");
tryItOut("const __parent__");
tryItOut("{/*infloop*/for(var set; (function ([y]) { })(); (this.__defineSetter__(\"__iterator__\", ))) {} }");
tryItOut("L: return __count__;");
tryItOut("{var __noSuchMethod__ = *;{return *::*;([,,z1]).watch } }");
tryItOut("/*infloop*/while(@foo){{}({}).hasOwnProperty }\n");
tryItOut("M:do {{} } while(((\n((/a/gi).call(3/0 ? -3/0 *= true : (<x><y/></x>[5.0000000000000000000000]), )))) && 0);");
tryItOut("return; const __noSuchMethod__;");
tryItOut("continue \n");
tryItOut("export __noSuchMethod__;");
tryItOut("{let(__proto__) ((function(){this.zzz.zzz;})()); }");
tryItOut("if((new Date(<x><y/></x>))) { if (constructor = <y><z/></y>) yield;} else /a/gi");
tryItOut("");
tryItOut("M:if(yield this.__defineSetter__(\"constructor\", ([1,2,3,4].slice).apply)) {while((<y><z/></y> ^= <><x><y/></x></>) && 0)<><x><y/></x></> } else if(prop.__parent__.valueOf(\"number\")) false;");
tryItOut("L:with({__iterator__: new (__proto__, constructor)()}){if(++ '' ) { if (<y><z/></y>.__lookupSetter__(\"__noSuchMethod__\")) <x><y/></x>;} else {gc() } }");
tryItOut("\tswitch(__iterator__) { case 8: var __parent__ = 1e-81;break;  } const constructor;");
tryItOut("with({__iterator__: ('fafafa'.replace(/a/g, <x/>))}){return #3={a:#3#};throw function(id) { return id }; }");
tryItOut("do export *; while((<x><y/></x> ? window : <><x><y/></x></>) && 0);");
tryItOut("constructor = __parent__;");
tryItOut("/*for..in*/for(const [prototype, constructor] = <ccc:ddd><ccc:ddd>yyy</ccc:ddd></ccc:ddd> in \n{}) {M:if([15,16,17,18].map([1,2,3,4].map, (__parent__ > (function ([y]) { })() .@x:: (<x/>)()))) {function(y) { yield y; gc(); yield y; } } else  if (((0.1)[<y><z/></y>]).propertyIsEnumerable(\"__iterator__\")) {/*for..in*//* nogeckoex bug 349964 */L: for  each(let constructor in this) {yield <><x><y/></x></>;[[1]]; }*; } }");
tryItOut("with(*){continue ;{} }");
tryItOut("/*infloop*/do /*infloop*/for(__proto__ = (@foo.unwatch(\"prop\")).constructor; gc(undefined); [1,,]) /*infloop*/do {try { return; } finally { <x><y/></x>; } gc() } while(('fafafa'.replace(/a/g, Math.pow))); while(yield ((<x><y/></x>)(@foo, @foo) &= (prototype = #1#)));");
tryItOut("if(__iterator__) {; } else  if ( /x/ ) throw false;\f else {1e81; }");
tryItOut("const (1 for (x in []));");
tryItOut("/*for..in*/for(var __count__ = ([15,16,17,18].sort(true, <x><y/></x>)) in <bbb xmlns=\"(*.__lookupGetter__(\"__noSuchMethod__\")).hasOwnProperty(\"__count__\")\"> </bbb>) {yield __parent__; }");
tryItOut("constructor = __noSuchMethod__;");
tryItOut("{break M;const __iterator__ = this, prototype = *; }");
