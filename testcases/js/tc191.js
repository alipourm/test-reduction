tryItOut("if((arguments.__lookupSetter__(\"constructor\"))) {switch(<>this.__defineSetter__(\"__proto__\", Math.sin)</>) { \tdefault: (<><x><y/></x></>);break; case ( ''  - 1e81)[(<x><y/></x>)]: return window;case (__proto__ = [[]] / <y><z/></y>): export __parent__;break; case 8:  }(false); } else  if (window ===  /* Comment */(__iterator__ = prototype)) /*infloop*/M:for(var __proto__; eval(\"<><x><y/></x></>\", <><x><y/></x></>)\n; *::*) while(( \"\" ) && 0){var try { function(q) { return q; } } finally { var __parent__ = <><x><y/></x></>, __count__ = <y><z/></y>; } , constructor;return 4.; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prop in this) window;");
tryItOut("{if(false) { if ( '' ) [1,2,3,4].map else return [[1]];} }");
tryItOut("if(<x><y/></x> != <x/> === <y><z/></y>) { if ((this.zzz.zzz) |= #2= \"\" ) {throw <y><z/></y> }} else {throw <x><y/></x>;if((__proto__.__iterator__ getter= ({}).hasOwnProperty / constructor)) { if ((new (<x><y/></x>)())[<bbb xmlns=\"this.zzz.zzz\"> </bbb>-=<><x><y/></x></>.hasOwnProperty(\"prop\")]) {const prop = *; } else {export *; }} }");
tryItOut("{}");
tryItOut("export *;\nconst prop = *::*;\n");
tryItOut("with({x::constructor: (__parent__ = __iterator__)}){export *;let each; }");
tryItOut("with((new ({}).hasOwnProperty((function\f  constructor (__proto__, __parent__) { return <x><y/></x> } ).call(<><x><y/></x></>, ), 3.141592653589793)))if(void this) { if (__count__) throw  /x/g ; else {var __parent__;const prop = <x/>, __iterator__ = <x><y/></x>; }}");
tryItOut("const prop;\nbreak ;\n");
tryItOut("/*for..in*/for(const __noSuchMethod__ in ((Math.pow)(( /* Comment */(new (({}).hasOwnProperty)(({}))))))\t)");
tryItOut("if( /* Comment */(__count__).__defineSetter__) { if ([(uneval(undefined))]) return (__proto__ = <x/>);} else {{};; }");
tryItOut("if((this)[<><x\f><y/></x></>]) {return ({}); }");
tryItOut("/*for..in*/L:for(const prototype in ((new Function)(0/0))){return prop;continue M; }");
tryItOut("L:if((({ prototype: __proto__ }) = Object(this.zzz.zzz,  /x/ ))) while(( /x/ ) && 0)return *; const prop; else  if (<zzz>[1].__iterator__</zzz>) with({}) { break L; }  else throw function(id) { return id };");
tryItOut("if(function  __proto__ (__parent__, __iterator__) { return __proto__ = @foo } ) if(<y><z/></y>) {;{} } else  if (3/0) gc() else {let __proto__ =  '' ;yield; } else {; }");
tryItOut("break L;");
tryItOut("if((/a/gi) for each (__iterator__ in <x/>) for (__iterator__ in window)) {prototype }");
tryItOut("this.zzz.zzz;");
tryItOut("with({__iterator__: ( ?  ''  : [,,z1] % true === window)}){for(let y in [5,6,7,8]) gc() }");
tryItOut("/*infloop*/for(@foo; (({ __parent__: __count__, __count__: __proto__ }) = __parent__); ) /*for..in*/M:for(var [__iterator__, __parent__] = *::* in  /x/ ) {export *;prototype; }");
tryItOut("return [1]\n");
tryItOut("/*for..in*/for(var delete in true.isPrototypeOf(window)) __iterator__;");
tryItOut("if((*::* > <y><z/></y>)) { if (this.zzz.zzz) {/*for..in*/M:for(const __parent__ in (((1 for (x in [])))( \"\" ))){gc() } }} else function  __count__ (prop)<><x><y/></x></>");
tryItOut("/*infloop*/for(var ({ prototype: (false.eval(<y><z/></y>).__iterator__)(new Function(*::*, null)), __count__: ({ __noSuchMethod__: ({ prototype: [prop, , , ({ prop: ({ prototype: __proto__ }) }), __iterator__] }), __proto__.prototype: [, , ] }) }) = <y><z/></y>.__defineGetter__(\"__noSuchMethod__\", function  prop () { return false.propertyIsEnumerable(\"__iterator__\") } ); ((function ()*)() += __noSuchMethod__.__parent__ =  '' ); false for each (prototype in 0)((yield this), null ? {} : null)) {yield [[]]; }");
tryItOut("/*for..in*/for(let __count__ = constructor = \ntrue in <y><z/></y>) var prop = *::*;");
tryItOut("{}\nwindow;");
tryItOut(";\n{}\n");
tryItOut("L:  catch ");
tryItOut("M:with({prop: <><x><y/></x></>}){yield <><x><y/></x></>;continue ; }");
tryItOut("function  constructor () { yield __count__.__noSuchMethod__ getter= new Function } ");
tryItOut("/*infloop*/for(__iterator__; (((*::*)[*::*]) << <x><y/></x> :: <x/>).throw([,,] !== <x/>); new <x><y/></x>.unwatch(\"__iterator__\")(prop = window)((let (yield = <>{}</>)  \"\" ), __count__ = true)) {return; }");
tryItOut("[1]");
tryItOut("{{var prototype; }if(<x><y/></x>) { if (* && ({})) {(__iterator__); } else {const __noSuchMethod__, __count__;(true); }} }");
tryItOut("with({}) { __proto__ = __proto__; } \n/*for..in*/L:for(const ([z1])([1,,]) in ((function(y) { yield y; throw <x/>;\n(<><x><y/></x></>);\n; yield y; })((yield window)))){yield [,,]\nexport *;/*infloop*/for(constructor; (let (__iterator__ = [z1,,], __proto__ = <><x><y/></x></>) __noSuchMethod__); ( /x/ .isPrototypeOf(<><x><y/></x></>))) {export *;<y><z/></y> } }");
tryItOut("const prop, __parent__ = <x/>;");
tryItOut("M:if((!this)) export *; else  if ((__iterator__ = __proto__).__parent__ = #1#.eval(*))  else return;");
tryItOut("(undefined).watch");
tryItOut("/*for..in*/L:for(const __noSuchMethod__ in ((function(y) { yield y; with(__iterator__ = (function ([y]) { })()){/*for..in*/M:for(const __parent__ in ((function  __iterator__ (constructor) { return window } )(__noSuchMethod__))){;export __iterator__; } }\n/*for..in*//* nogeckoex bug 349964 */ for  each(const constructor in <><x><y/></x></>) {const prototype; }; yield y; })( /* Comment */(false);)))if(new ( \"\" )()) {return; }");
tryItOut("break M;");
tryItOut(" /x/g ;\nyield;\n");
tryItOut("/*infloop*/for(<><x><y/></x></>.__defineGetter__(\"prototype\", 'haha'.split); function  __parent__ (__parent__, __iterator__)prototype, prop = __noSuchMethod__(<y><z/></y>, undefined); [,,] >>>=<x><y/></x> .@*:: (eval(\"__count__\", prop = window))) const __iterator__;");
tryItOut("{break ;{return (-0); } }");
tryItOut("switch((-1)) { default: export __noSuchMethod__; }");
tryItOut("do yield function(id) { return id }; while((__noSuchMethod__) && 0);");
tryItOut("/*for..in*/for(let <><x><y/></x></>['prototype'] in ((new Function)(new (((new Function(\"break L;\"))).apply)())))*;");
tryItOut("Math.pow\n\n(break L);\n");
tryItOut("/*infloop*/do {with(export __parent__){return <><x><y/></x></>; } } while((-1).__lookupGetter__(\"constructor\"));");
tryItOut("return;");
tryItOut("M:if((3.__defineSetter__(\"__parent__\", function(y) { yield y; __noSuchMethod__; yield y; }))) switch(undefined) { case (this.__defineGetter__(\"__noSuchMethod__\"\t, 1e81)): (<y><z/></y>);case constructor: gc()case  /x/g .__iterator__((window)(), <x/>): break;  }");
tryItOut("do return window; while(([[]]) && 0);");
tryItOut("return ({ set function::constructor(prototype, __parent__) { {} }  });");
tryItOut("yield <><x><y/></x></>;");
tryItOut("yield;\n( /x/g );\n");
tryItOut("do /*for..in*/M:for(function::__proto__ in undefined) var __iterator__, delete; while(((function  __iterator__ (__proto__, delete) { yield @foo } ).call(<><x><y/></x></>, )) && 0);");
tryItOut("if(true) { if (<x><y/></x>) {return <y><z/></y>; } else {throw [[]]; }}");
tryItOut("{L:if(<>yyy</>) {(undefined).call; } else {Math.sin }with({prototype: 3/0.watch(\"prop\", function () { yield -1 } )})'haha'.split }");
tryItOut("( /x/g )");
tryItOut("/*for..in*/for(var [prototype, constructor] = constructor in __proto__) {let constructor = undefined, constructor; }\n");
tryItOut("/*for..in*/for(let prototype in ((((new Function(\"<!--yy-->\"))).call)([11,12,13,14].some))){yield;<><x><y/></x></>; }");
tryItOut("L: {yield 033;/*infloop*/for((constructor = prop); ((uneval([[1]]))); __count__.((function ([y]) { })())) {return;throw <x><y/></x>; } }");
tryItOut("L: {;gc() }");
tryItOut("/*infloop*/do {throw 033.unwatch(\"__noSuchMethod__\");yield 0/0; } while((this.__defineGetter__(\"__parent__\", ({}).hasOwnProperty)));");
tryItOut("let (__iterator__ = __noSuchMethod__ = [,], __proto__) { ; }");
tryItOut("if(1.2e3.eval( /x/g )) {/*for..in*//* nogeckoex bug 349964 */ for  each(__count__ in  '' ) (*::*).__defineSetter__ } else  if ((<><x><y/></x></>.__proto__ = prototype = __proto__)) {gc() }");
tryItOut("/*infloop*/while((<x/> >>>= /x/ ))constructor = <x><y/></x>, __iterator__;");
tryItOut("__count__, prototype =  /x/ ");
tryItOut("if(<y><z/></y> ? (uneval(1.2e3)) : *) { if (new ((new Function(\"continue M;\")))()) return  /x/g ;} else {/*for..in*/L:for(var __count__ = (this) in  /x/g ) {}; }");
tryItOut("with(this.__defineSetter__(\"__noSuchMethod__\", function ([y]) { })){break ;\ryield; }");
tryItOut("return (*);");
tryItOut("{return *;<x/>; } const function::prop;");
tryItOut("return;");
tryItOut("if((uneval((window)(*, this)))) { if (function::__parent__(window) = ({}).hasOwnProperty(*)) {{} }} else {let constructor;return __proto__; }");
tryItOut("/*infloop*/while(((*::*)[__proto__] for each (constructor in -0))){ }");
tryItOut("if(()) {while(() && 0)var __parent__; }");
tryItOut("for(let y in []);");
tryItOut("/*infloop*/while(__proto__){__count__ = false; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(({ __parent__: function::__proto__ }) in <x/>.propertyIsEnumerable(\"__count__\") = (@foo.__count__ = __noSuchMethod__) if (window)) {__iterator__ }");
tryItOut("if(<><bbb xmlns:ccc=\"(({a1:1}).yoyo((function ([y]) { })()))\"><ccc:eee></ccc:eee></bbb></>) {; } else {{} }");
tryItOut(";");
tryItOut("do if(((yield (setter = <x/>)))) yield; else  if (__iterator__ = <y><z/></y>) gc() while((__proto__) && 0);");
tryItOut("/*infloop*/while(1e4){__proto__ = this;let prop =  /x/ , constructor = ({a1:1}); }");
tryItOut("/*infloop*/for({} ? * : this; ((new Function(\"throw false;\")))(constructor, ({}));  /x/ \n) yield;");
tryItOut("while(((null || *::*[<x><y/></x>]).__lookupGetter__(\"__iterator__\")) && 0){constructor, __noSuchMethod__ = <><x><y/></x></>; const __noSuchMethod__; }");
tryItOut("/*infloop*/for(__parent__ = __iterator__ = this; <x/>; (new (constructor = <x><y/></x>))) { }");
tryItOut("return\ngc()");
tryItOut("with({}) {  } ");
tryItOut("/*infloop*/M:for(let __parent__; (1e81.throw(new ((__parent__, prop.__lookupGetter__(\"__parent__\")))())); <x/>) /*infloop*/for((__noSuchMethod__ = constructor);  \"\" ; (undefined.__defineSetter__(\"prototype\", [1,2,3,4].slice))) {(0/0);gc() }");
tryItOut("return;");
tryItOut("function (prototype)window\nM:do break M; while((({prototype:  /x/g  })) && 0);if(this.__defineSetter__(\"constructor\", (this).__defineSetter__)) { if (@foo !== __iterator__) return undefined; else {{}var __parent__, * = undefined; }}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const prop.constructor in (-0)) {gc()let prototype; }");
tryItOut("return ([[1]])(<y><z/></y>).__defineSetter__(\"__parent__\", /a/gi);");
tryItOut("export __proto__;");
tryItOut("M:while((<y><z/></y>) && 0)prop");
tryItOut("with([,,] === <><x><y/></x></> ? this : (<y><z/></y> ? [1] : @foo)){gc()return <y><z/></y>;{} }");
tryItOut("/*infloop*/L:for(__count__; __noSuchMethod__ = *; [,].throw(*)) {}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__parent__ in function () { yield window } ) {__noSuchMethod__ = __proto__; }");
tryItOut("switch(#2=this) { case 3: break; /*for..in*/for(let [__count__, __parent__] = false ? * : this in *) {continue L; } }");
tryItOut("if(<x><y/></x>) {gc() } else  if ( /x/g ) var constructor = (-0), __iterator__ = function ([y]) { };");
tryItOut("{;continue M; }L: {L: let __count__, prop; }");
tryItOut("/*infloop*/for(var __count__; this.__defineSetter__(\"__noSuchMethod__\", 'haha'.split); (let __count__ = 1.3, prop = <x><y/></x>)) const __noSuchMethod__;");
tryItOut("while(( \"\" ) && 0){}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let constructor in window) {throw *; }");
tryItOut("throw StopIteration;");
tryItOut("with({}) { try { return ((this).call( /x/g , <ccc:ddd></ccc:ddd>)); } catch(constructor if ([<><>1.2e3</></> if (__proto__)])) { with({}) __noSuchMethod__ = __count__; } catch(__proto__ if (function(){this.zzz.zzz;})()) { with({}) return 3.__defineSetter__(\"constructor\", function  prototype () { export *; } ); } catch(prototype) { with({}) try { ; } catch(__count__) { yield; }  } finally { yield undefined; }  } ");
tryItOut("try { for(let y in []); } finally { return <y><z/></y>(<x/>, window); } ");
tryItOut("\fvar __proto__ = <x/>, __proto__;");
tryItOut("switch(__iterator__ = <x><y/></x>) { default: break; case 7: break; while((__noSuchMethod__.__count__ getter= Function) && 0){[,]; }break; break; case (({__proto__: <x/>, __proto__: <><x><y/></x></> }) for (<x><y/></x> in 1.3)): yield *;break; break; case 9: case 6: break;  }");
tryItOut("switch((p={}, (p.z = ('haha'.split)((({__parent__: <x/>}))))())) { default: break; case (constructor = constructor = <><x><y/></x></>): throw __count__;case 5: break;  }");
tryItOut("return <x/>;");
tryItOut("return window; const __noSuchMethod__;");
tryItOut("/*infloop*/while(undefined.__noSuchMethod__.watch(\"x::prop\", <><x><y/></x></>))M:if([,,]) { if ( '' ) {(<x><y/></x>);__parent__ = <x><y/></x>; } else {export *; }}");
tryItOut("if(( \"\" .@foo.*)) {return;{} } else  if (get = [,]) {if(<y><z/></y>) {let __proto__ = <x><y/></x>;; } } else /*for..in*/for([prop, function::constructor] = window in window) return;");
tryItOut("M:if(yield @foo *= ( \"\"  |=  \"\" )) {(window); }\n else  if (this.zzz.zzz) null");
tryItOut("/*infloop*/M:for(let delete = window;  \"\" ; this) let __proto__ = __iterator__;");
tryItOut("while((<><zzz>new (function  __parent__ (__count__, __proto__) { return <x>\f<y/></x>++ } )(\r)</zzz></>) && 0){L: \t{return; }if( /x/ ) { if ({}) throw *::*;} else {break M; } }");
tryItOut("if(this.zzz.zzz) {} else  if ((uneval(<><x><y/></x></> / false))) yield;");
tryItOut("/*for..in*/for(let prototype = *::* in this) {/*for..in*/for(__parent__ in <x><y/></x>) {prototypeconst __proto__ = *; }with(__proto__){(1 for (x in [])) } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let prototype in ('fafafa'.replace\f(/a/g, Math.sin))) {}");
tryItOut("/*infloop*/M:for((); <><x><y/></x></> >>= 0x99; new (typeof this)(<><x><y/></x></>)) {throw this;<x><y/></x>; }");
tryItOut("if((~@foo)) {/*infloop*/while(window){return;[]; }yield -1; }");
tryItOut("if((<><x><y/></x></>[ \"\" ] in @foo.valueOf(\"number\")) & ([* .@x:: null if (window)])) {function () { yield 1e-81 }  } else  if ((typeof  /x/  == window)) ;");
tryItOut("/*for..in*/M:for(var [prop, __parent__] = (__iterator__ = *.propertyIsEnumerable(\"__iterator__\")) in -eval(\"<y><z/></y>\",  \"\" )) /*for..in*/L:for(let prototype in true) {/*infloop*/do {__parent__, __proto__;continue ; } while(this);(function ([y]) { })(); }");
tryItOut("if(((__iterator__).watch).call(new (arguments)(function::__proto__, __iterator__), )) { if (__proto__) {throw [1];yield; }} else {;M:switch(prototype) { case <><x><y/></x></>: return [,,]; } }");
tryItOut("{var __proto__ }");
tryItOut("this.zzz.zzz;");
tryItOut("/*infloop*/while()yield false;");
tryItOut("do if((({}))) { if ((__iterator__ = let)) let __proto__ = ({a1:1}); else ;} while(((new Function)) && 0);");
tryItOut("{(__parent__); }");
tryItOut("return true;");
tryItOut("return;(*);");
tryItOut("M:while((<><x><y/></x></>) && 0){let __noSuchMethod__, __proto__; }");
tryItOut("/*for..in*/for(var prop = * in <><x><y/></x></>) {yield;yield @foo; }");
tryItOut("/*infloop*/do with(<x><y/></x> &= [z1])yield; while(prototype < <x><y/></x>);");
tryItOut("/*infloop*/for(prototype = @foo; \fwindow; <x><y/></x>) {export *;export *; }");
tryItOut("const __noSuchMethod__;");
tryItOut("throw prop;");
tryItOut("/*for..in*/for((<xxx {__proto__}={({__count__: this})} />)((* %= <y><z/></y>)) in (yield yield @foo)) {while((<y><z/></y>) && 0) }");
tryItOut("while(((\n1e+81) %= (set.(#3={a:#3#}))[(let (__proto__) true) === (__parent__ =  /x/ )]) && 0){M:with(delete)return *;let (__iterator__) { <ccc:ddd><x><y/></x></ccc:ddd> }\n }");
tryItOut("if( '' ) { if (yield ~<x/>) {yield [[]];throw __noSuchMethod__; }} else continue L;");
tryItOut("do {gc() } while((({ __noSuchMethod__: prop, __noSuchMethod__: prop }) = ({ __proto__: __iterator__ })) && 0);");
tryItOut("yield 1.3;");
tryItOut("M:if(this ==  /x/ ) (-0); else  if (.2.propertyIsEnumerable(\"__parent__\")) gc() else {export prop;({}).hasOwnProperty }");
tryItOut("try { throw  '' ; } catch(__parent__ if (function(){yield;})()) { ; } ");
tryItOut("/*for..in*/L:for(var __proto__ in ((@foo)([@foo for (__count__ in <x/>)]))){export __noSuchMethod__; }");
tryItOut("export __noSuchMethod__;");
tryItOut("prop: __proto__.((null @ [1]))");
tryItOut("if(<></>.(@foo % @foo)) {break ;L: {export *;break ; } } else <x><y/></x>");
tryItOut("let(({ __iterator__: function::prop, prop: [] }) = [__parent__.watch(\"__parent__\", true)].filter(function (__proto__) { yield ( /x/g  /  \"\" ) } )) { with({}) { export *; } ");
tryItOut("/*for..in*/for(var [prototype, prototype] = [11,12,13,14].some in new Date(<x><y\r/></x>)) \fexport __parent__;const prop, __iterator__\n");
tryItOut("let(prop, __parent__ = true) ((function(){throw prototype;})());");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const (constructor) in (<x><y/></x>.( \"\" ).@*)) return [,,];");
tryItOut("return;");
tryItOut("with({}) { for(let y in [5,6,7,8]) return ((yield this)); } ");
tryItOut("switch(<x/>) { default: case --__noSuchMethod__ = [,]: export prototype;break;  }");
tryItOut("/*for..in*/for(let constructor in (yield window)()) {return ({ __parent__: __iterator__ }) = *++; }");
tryItOut("{return false;/*for..in*/for(let __count__ in ((function(q) { return q; })(-1)))return; }");
tryItOut("let (__iterator__) { this.zzz.zzz; }");
tryItOut("/*for..in*/for([__parent__, setter.constructor] = (new (undefined)()).__lookupSetter__(\"prototype\") * <x/>.__noSuchMethod__ = prop.watch(\"0.1.__lookupSetter__(\\\"get\\\")\", /a/gi) in  /x/g .constructor) {(this);{const constructor = this, __parent__ = <><x><y/></x></>; } }");
tryItOut("/*infloop*/L:for(#1=(__iterator__ = <y><z/></y>); <><x><y/></x></>.*; 'fafafa'.replace(/a/g, function  prototype () { (false); } )) {;const __parent__; }");
tryItOut("try { try { return; } catch(__noSuchMethod__ if <x><y/></x>) { continue ; } catch(prop) { gc() }  } finally { with({}) yield; } ");
tryItOut("if(\f[__parent__] = ( /* Comment */*::*)) {{}continue ; } else  if ((({}).hasOwnProperty)().constructor) continue M; const __iterator__; else yield __iterator__;");
tryItOut("M:switch((uneval(__noSuchMethod__(<x/>)|=[<><x><y/></x></>]))) { default: /*infloop*/for(default: /*infloop*/while(<y><z/></y>){yield 1e81; }break; ; <x/> @ \ftrue; <y><z/></y>.__proto__) {export constructor; } }");
tryItOut("/*for..in*/for(var __iterator__ in window) var __proto__\n");
tryItOut("/*infloop*/for(<x><y/></x>.(<y><z/></y>) in <x/>; ({__count__: <y><z/></y>}); undefined << \f<><x><y/></x></>) __proto__");
tryItOut("with(<x><y/></x\f>.yoyo(this.__defineSetter__(\"__iterator__\", Function)).throw((({}).__count__)))(({}))\f;");
tryItOut("/*for..in*/for(const (null)[\r ''  in 1e4.valueOf(\"number\")) return;");
tryItOut("if(<xxx>{prop}</xxx>) {(this); }");
tryItOut("if(window) { if ((.__lookupGetter__(\"__parent__\"))) while((__count__.yoyo(__noSuchMethod__)) && 0){gc()undefined; } else {__noSuchMethod__;yield [1,,]; }}");
tryItOut("let (prop) { throw <><x><y/></x></>\n }");
tryItOut("/*for..in*/M:for(__parent__ in ((Math.sin)((<x><y/></x>))))return window;");
tryItOut("function(y) { yield y; ;; yield y; }");
tryItOut("/*infloop*/L:for(let ({ prototype: ({ __iterator__: ({ constructor: __noSuchMethod__ }) }) }) = __count__\n < constructor.constructor; (prop.([[]]) >> 0.1 |= true); (Number(3/0 <= <x><y/></x>))) {L: continue ; }");
tryItOut("for(let y in []);");
tryItOut("/*infloop*/__count__");
tryItOut("L: {export *; }");
tryItOut("if((([, , , , prototype] = yield window) ? prop = (<x><y/></x> .@ <x><y/></x>) :  /* Comment */prop)) { if () /*for..in*/for(const prototype in <><x><y/></x></>) export *; else {;arguments; }}");
tryItOut("/*for..in*/for(const prototype in (([1,2,3,4].slice)(<y><z/></y>)))const __count__ = this");
tryItOut("if(<y><z/></y>) { if (({})) {/*for..in*/for(let __proto__ in <x><y/></x>) {;(window); }yield; }} else {return; }");
tryItOut("/*for..in*/for(var __iterator__\r in (({ prop: __proto__ }) = window)) yield;");
tryItOut("if(__count__) {const __iterator__ = null;/*infloop*/for(*::*; false; <x><y/></x>) {export *;export __noSuchMethod__; } }");
tryItOut("switch(new true(this.__defineGetter__(\"__noSuchMethod__\", Math.pow))) { default: if((uneval(<><x><y/></x></>))) {/*infloop*/L:for(window.isPrototypeOf(<x><y/></x>); <y><z/></y>.yoyo(window); [z1,,]) {__iterator__continue ; }/*infloop*/while(undefined.yoyo( \"\" )){{} } }break; case 3: /*for..in*/for(let __count__ in ((((033)( '' )).watch)(new Date())))export __proto__;break; case 7: case this.zzz.zzz: /*for..in*/for(__iterator__ = new ((false.yoyo( /x/g )))() in (033.__defineSetter__(\"__count__\", Function))) throw undefined;break; if((window)) {gc()export __noSuchMethod__; } else export prop;break; break; case 4: with({__proto__: *::*}); }");
tryItOut("for(let y in [5,6,7,8]) for(let y in []);");
tryItOut("/*for..in*/L:for(var constructor in ((function (__parent__) { yield ({a2:z2}) } )((yield *)))){throw  /x/ ; }");
tryItOut("if((__parent__.constructor getter= yield -3/0;)) {var constructor = *, constructor = __parent__; } else  if () gc()");
tryItOut("while((__proto__ = ({ __parent__: constructor, __count__: __proto__ })) && 0){({}).__lookupGetter__ }");
tryItOut("L:while((typeof this(<employee id=\"1\"><name>Joe</name><age>20</age></employee>)) && 0){return <><x><y/></x></>;export constructor; }");
tryItOut("{}\nexport *;\n");
tryItOut("switch(this if ( /x/ ).__defineSetter__(\"prototype\", <y><z/></y>)) { case 0: {}default: ; const prop;break;  }");
tryItOut("let (prop, prototype = @foo) { prop; }\n/*infloop*/for(let prototype; constructor\n = <><x><y/></x></>; (constructor - __parent__)) {yield; }");
tryItOut("yield;");
tryItOut("export *;");
tryItOut("throw <x><y/></x>; const /*\n*/__noSuchMethod__;");
tryItOut("switch(__noSuchMethod__ = (new (({}).hasOwnProperty)())) { case __parent__ = __proto__: throw ({});case {}.yoyo(__count__) ? <x/>.valueOf(\"number\") : __parent__: return; }");
tryItOut("with({__count__: (new (this.__defineGetter__(\"prop\", (window).watch))())}){continue ;/*infloop*/do let __parent__; while( \"\" ); }");
tryItOut("/*for..in*/for(let __count__ in ((function(q) { return q; })(({__iterator__: <x><y/></x> - <><x><y/></x></>.__lookupSetter__(\"__proto__\")}//h\n)))){try { return __noSuchMethod__; } catch(__iterator__ if (function(){throw StopIteration;})()) { throw StopIteration; }  }");
tryItOut("if(new Boolean(-3/0, <><x><y/></x></>)) { if (*::* < [,]) {yield __parent__, __iterator__; } else {/*infloop*/while(let (prop) <><x><y/></x></>)break ; }} const prototype;");
tryItOut("if(__count__.valueOf(\"number\")) { if ((p={}, (p.z = <x/>)())) {gc()<><x><y/></x></>; }} else ;");
tryItOut(") {__proto__, __count__; }{export __iterator__; }if() let getter, __parent__ = *; else  if (void #3={a:#3#}) ; else {/*for..in*/for(var [constructor, __iterator__] =  /x/g  in  \"\" ) const __parent__, __parent__;; }");
tryItOut("export __proto__;");
tryItOut("var prop, ({ prop: constructor });");
