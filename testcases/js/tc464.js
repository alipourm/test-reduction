tryItOut("L: with({constructor: (<y><z/></y>).call(<><x><y/></x></>, 4.)})const __proto__, __count__;");
tryItOut("if(\r(({__noSuchMethod__ getter: function (__proto__, prop)arguments }))) { if ( '' .eval(Error((1e+81 for (__iterator__ in __proto__))))) {while((__iterator__) && 0){let prototype, __proto__ = <y><z/></y>;(*); } } else {}}");
tryItOut("/*for..in*/for(var __count__ in  { yield <><x><y/></x></> } ) {let prototype = [,];function(q) { return q; } }");
tryItOut("/*infloop*/for((new function(y) { yield y; break ;; yield y; }()).__lookupSetter__(\"prop\");  /x/g  <= *.hasOwnProperty(\"function::prop\"); [ /x/  - __iterator__]) if(*::*) {this;throw  '' ; } else  if (null) __proto__ =  '' , prototype; else export __count__;/*for..in*/for(var __noSuchMethod__ = ({prototype: this.__defineSetter__(\"constructor\", /a/gi)}) in __iterator__) yield *;");
tryItOut("{if(true) { if (constructor = this.yoyo( /x/g )) export __count__;} else {false; }/*infloop*/for(__iterator__ = new (*::*.yoyo(false))(__iterator__.__parent__ getter= <><x><y\t/></x></>); null; (1e81 += <x><y/></x> ^ [z1].valueOf(\"number\"))) export constructor;yield [,,]; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __noSuchMethod__ in <><x><y/></x></> for each (__noSuchMethod__ in *)) {return\n }");
tryItOut("/*for..in*/for(const __noSuchMethod__ in ((/a/gi)((yield  /x/g  > ({ __proto__: __parent__, __noSuchMethod__: [] }) = [11,12,13,14].filter))))yield <x/>;");
tryItOut("if((window.unwatch(\"__proto__\"))) throw function ([y]) { }; else  if (return false) __noSuchMethod__ else __parent__");
tryItOut("L:if([<><x><y/></x></>]) { if (prototype = window) {\t } else {throw __iterator__;{} }}");
tryItOut("/*infloop*/while(new Object(yield <><x><y/></x></>)){L:if( /* Comment */window) { if ((__proto__)) {export *; } else ( \"\" );}{} }");
tryItOut("/*infloop*/for(var __iterator__ = (eval).call(( /x/g  @  /x/ ), ('fafafa'.replace(/a/g, 'haha'.split))); [z1].valueOf(\"number\"); (yield -0)) {continue ;yield 3; }");
tryItOut("yield");
tryItOut("/*for..in*/for(const prop in (((1 for (x in [])))(1e-81)))yield\n");
tryItOut("/*for..in*/for(__noSuchMethod__ = (uneval(__noSuchMethod__ =  /x/g )) in this.zzz.zzz) return;");
tryItOut("/*infloop*/for(((p={}, (p.z = @foo)()));  '' .@*; (((1 for (x in []))).call(__count__ = 1e81.propertyIsEnumerable(\"__count__\"), prop, prop, (window.__count__ = (<y><z/></y> ? 0x99 : false\f)), (-prop.unwatch(\"__noSuchMethod__\"))))) {for(let y in [5,6,7,8]) {} }");
tryItOut("with(5.0000000000000000000000.throw(window).__iterator__ = this.__defineGetter__(\"__proto__\", 'haha'.split))with({constructor:  /x/ }){yield <><x><y/></x></>; }");
tryItOut("/*for..in*/M:for(let Object(*::*, *) in ((<xxx>{constructor}</xxx>)( \"\" ))){return; const prototype;throw constructor = <><x><y/></x></>; }");
tryItOut("/*infloop*/for(var function::prototype; 'fafafa'.replace(/a/g, 'haha'.split); 3/0.eval(<y><z/></y>).__iterator__) {while(([z1,,]) && 0){let prop =  '' ; } }");
tryItOut("__noSuchMethod__.__count__ = __proto__;");
tryItOut("with({}) { try { try { gc() } finally { return; }  } finally { return (#3={a:#3#} .. @foo); }  } ");
tryItOut("for(let y in []);");
tryItOut("if('fafafa'.replace(/a/g, (1.2e3.yoyo(__noSuchMethod__))).eval(Array().__defineSetter__(\"x::__parent__\", (new Function(\"yield <x><y/></x>;\"))))) {while((<><x><y/></x></>) && 0){break M; }const prop, __noSuchMethod__; } else  if ((\n<x/>.__defineSetter__(\"__count__\", function () { yield 3/0 } )).eval(([11,12,13,14].map))) return -1.unwatch(\"x::__count__\")\t; else {var __parent__ = window, function ([y]) { }, <x/>;yield <><x><y/></x></>; }");
tryItOut("for(let y in [5,6,7,8]) return;");
tryItOut("return __proto__;");
tryItOut("let (prototype = this) {  }");
tryItOut("M:if(<><x><y/></x></>\t) {window;return <>r</>; } else {; }");
tryItOut("{M\f:do var prop; while((true) && 0);<x/>; }");
tryItOut("/*infloop*/for(({ prototype: ({ __proto__: __proto__, __noSuchMethod__, __iterator__: __noSuchMethod__ }) }) = eval(\"*::*\", <x/>).@*; (<y><z/></y>.isPrototypeOf(__count__)); __iterator__ = __parent__ ? <><x><y/></x></>\t & window : ((Math.sin)(<y><z/></y>, false))) {gc()return this; }");
tryItOut("case 9: break; throw <x/>;break; break; /*for..in*/M:__count__, constructor = <y><z/></y> -= undefined(var true['__iterator__'] in /a/gi')(Error())))#1=[#1#];case 9: ;break; break; default: switch(return <y><z/></y>;) { case 0:  }");
tryItOut("/*for..in*/for(prop in ((Math.pow)(<x/>)))yield  /x/g ;");
tryItOut("/*infloop*/for(<><x><y/></x></>[null]; let (prototype, __count__ = this) (-0); (prop.isPrototypeOf(*)).\n__lookupSetter__(\"constructor\")) { }");
tryItOut("if((*.*).eval(-0)) throw true;");
tryItOut("/*for..in*/for(let prototype = (@foo.eval(<><x><y/></x></\t>))() in window) {{} }");
tryItOut("/*for..in*/for(let -3/0['prototype'] in window) (window);");
tryItOut("/*infloop*/for(let __count__;  /x/ ;  /x/g ) return 0.1;");
tryItOut("/*for..in*/M:for(var __noSuchMethod__ in (((Math.pow).apply)(__parent__.valueOf(\"number\")++))){break ; }");
tryItOut("");
tryItOut("/*for..in*/for(let __proto__(<x><y/></x>) in (((1 for (x in [])))(new ((constructor.__iterator__ = [,,z1]))(undefined >>> *::*, *)))){__parent__ }");
tryItOut("{yield <y><z/></y>;L:switch(false) { default:  } }");
tryItOut("/*infloop*/M:for(var prop; ( '' ); <ccc:ddd>yyy</ccc:ddd>) {export *; }");
tryItOut("/*infloop*/for(({ __iterator__: [__count__, , [, ], ] }) = undefined; eval(\"/*infloop*/for(-1; <y><z/></y>; {}) gc()\", window); (1e+81).call((#1=[#1#].unwatch(\"prop\")), [prototype])) {yield <><x><y/></x></>;(1e-81).__defineSetter__ } const __proto__;");
tryItOut("throw StopIteration;");
tryItOut("/*infloop*/for(const __iterator__; yield false; [, , ({ __noSuchMethod__: prototype })] = [({ function::__parent__: prop, __count__: prop })]) {function::__proto__ = prototype, __parent__return;\nbreak ;\n }");
tryItOut("if(eval(\"return  '' ;\", (new ({})(#3={a:#3#})))) {const __proto__, prop = [,,]; } else ");
tryItOut("L:if(#0=({__proto__: 3/0})) {let  super  = window, __iterator__; } else {prop(#1#); }");
tryItOut("\n");
tryItOut("M:if((undefined.throw(__proto__))) {<><x><y/></x></>; } else  if (__count__ = *) {}yield; } else prototype = <x><y/></x>;");
tryItOut("{L: {;*; }var __noSuchMethod__ = function(id) { return id }; }");
tryItOut(" const prop;");
tryItOut("/*infloop*/do if((<><x><y/></x></>.__defineSetter__(\"__proto__\", function  __iterator__ () { gc() } )++)) export __proto__; else {([1,2,3,4].map).\tcall } while(__count__);");
tryItOut("return;");
tryItOut("/*for..in*/for(var constructor in ((function(q) { return q; })((constructor+=typeof ({a1:1})))))break L;");
tryItOut("let([]) { with({}) throw prop;");
tryItOut("/*infloop*/for(let __proto__ = null; this; prototype) {{} }");
tryItOut("if(function  __iterator__ (prop)*(*::*)) { if ([<x><y/></x> for (__parent__ in this)]) {throw  '' ;; } else ( /x/g );}");
tryItOut("switch(new (Function)(true)) { default: ;break;  }/*infloop*/for(__parent__ = <><x><y/></x></>; undefined; <x><y/></x>) yield <x/>;\nnew (function(/(__count__, __noSuchMethod__ { yield function::prop } \t)(.2);\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(const delete in <x><y/></x>) {export __proto__; }//h\n");
tryItOut("export __parent__;");
tryItOut("export *;\ngc()\n");
tryItOut("do let gc(); while((false %= 5.0000000000000000000000) && 0);");
tryItOut("export *;");
tryItOut("{/*infloop*/do {false; } while(1.2e3); }");
tryItOut("yield __count__\t\nreturn\n");
tryItOut("/*for..in*/M:for([constructor, ({ __parent__: ({ __proto__: ({ __proto__: __parent__ }) }), __parent__: prop })] = 1.3 in constructor = constructor) {{}let constructor = <x><y/></x>; }");
tryItOut("if((prop = [])) __proto__; else  if ((window.@foo)) {yield; } else M:do {return *::*;throw true; } while(() && 0);");
tryItOut("L:while(('fafafa'.replace(/a/g, ({}).hasOwnProperty).propertyIsEnumerable(\"__proto__\")) && 0){if('fafafa'.replace(/a/g, function  constructor (constructor) { /*for..in*/for(let function::prop in ((function (__iterator__)@foo)(5.0000000000000000000000)))__iterator__, prototype = __parent__ } )) {var __iterator__, __parent__ = <y><z/></y>;break\t ; } else  if ((__proto__%=<x><y/></x>)) {M:if(*) continue M; else  if (<><x><y/></x></>) {} else {throw (-1); }prop; } else /*infloop*/for(let __proto__; @foo;  '' ) {export *; }/*for..in*//* nogeckoex bug 349964 */ for  each(const __iterator__ in <><x><y/></x></>.throw(3/0)) switch([[1]]) { case <y><z/></y>:  } }");
tryItOut("/*infloop*/for(__noSuchMethod__; (--4. >>> (0/0 for (__count__ in <y><z/></y>))); (true != [,,z1] for each (prototype in __proto__))) yield;");
tryItOut("if((constructor %= (this.zzz.zzz))) { if (__parent__.constructor = constructor.*) L:if(<x><y/></x>) yield <x/>; else  else (undefined);}");
tryItOut("continue ;");
tryItOut("L: prop = <x><y/></x> const prototype;");
tryItOut("/*for..in*/for(var <><x><y/></x></> in ({delete: this.zzz.zzz,  set __noSuchMethod__ __iterator__ () { return 1e+81 != <x/> }  })) default: break; ");
tryItOut("/*infloop*/do (0.1); while((window)[@foo]);");
tryItOut("throw StopIteration;");
tryItOut("gc\nconstructor, __proto__ = *;\n");
tryItOut("(-3/0)\n");
tryItOut("L: {export __iterator__;let prop = prototype, prop = 3/0;\r }");
tryItOut("return [,,z1];");
tryItOut("with( /x/ ){continue L; }");
tryItOut("yield __parent__ =  '' , __proto__\ndefault: (undefined).watchbreak; case 0: {}break; ");
tryItOut("(<><x><y/></x>/*\n*/</>); const __proto__;");
tryItOut("with({}) { var __noSuchMethod__, __proto__; } ");
tryItOut("L: {do {} while(((undefined[false])) && 0);if(*::*) {gc() }\n(new Function(\"export *;\"))\n }");
tryItOut("if((function::prototype.constructor.eval(new ( /x/g \n)()))) return; else  if (([] :: (this.zzz.zzz) :: <x><y/></x>.(prototype) - Iterator(prototype))) let x::constructor, function (__parent__) {  }  = @foo; else {throw null;export prototype }");
tryItOut("yield 'fafafa'.replace(/a/g, eval);");
tryItOut("this.zzz.zzz;");
tryItOut("gc()\nexport *;\n");
tryItOut("if((([1,2,3,4].map).call(window, 1e-81))) (<x/>); else  if (RangeError( /x/g , @foo)) {yield;__parent__, __noSuchMethod__ = 3; }");
tryItOut("with({__parent__: false.valueOf(\"number\")});");
tryItOut("if(Date()) { if ((constructor = undefined).throw((;))) {__count__ = <y><z/></y> }} else null;");
tryItOut("return;");
tryItOut("while(((0.propertyIsEnumerable(\"__noSuchMethod__\"))) && 0)/*for..in*/for(let prop in *::*) yield;");
tryItOut("with({prop: Error().__defineGetter__(\"({ __iterator__: __parent__, __parent__: ({ __iterator__: prototype }) })\", eval)}){return; }");
tryItOut("/*for..in*/for(var (prop) in (('haha'.split)(__noSuchMethod__ = ({;, x::__count__: undefined }).prototype)))if(this) {var __proto__,  { return prop }  = 3; } else {yield false;export constructor; }");
tryItOut("/*infloop*/for(const __noSuchMethod__; <y><z/></y> |= <x><y/></x>; <><x><y/></x></>) break ;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __proto__ in new (__proto__)([z1], __noSuchMethod__)) case 8: /*infloop*/for(var ({ __count__: ({ prop: [__iterator__, constructor, , , __parent__], __proto__: ({ __parent__: __count__, constructor: prototype }) }), __iterator__: __noSuchMethod__ }) = constructor; (constructor = <><x><y/></x></> >>= <><x><y/></x></>);  \"\" ) {export * }break; default: return;");
tryItOut("/*infloop*/L:for(const __count__; <y><z/></y>; ((uneval(@foo)))) {yield <><x><y/></x></>; }");
tryItOut("{export * }");
tryItOut("__iterator__ = __count__;");
tryItOut("/*infloop*/while((1e4) >>>=(!<x><y/></x>))/*infloop*/for(({ constructor: __noSuchMethod__, prop: prop }) = prop; (<><><x><y/></x></></>.((<x><y/></x>.(false)))); (*::*).watch(5.0000000000000000000000, <x><y/></x>)) yield;");
tryItOut("/*infloop*/(prototype)");
tryItOut("switch( /x/g ) { case 3: export __parent__;return {};throw window;break;  }");
tryItOut("return;");
tryItOut("if(__noSuchMethod__.(<><x><y/></x></>)) if(constructor = @foo %= (get) = +@foo) function  __noSuchMethod__ (prototype, constructor) { let __iterator__ =  /x/ ; }  else {}");
tryItOut("let (constructor = (prop)[<y><z/></y>], __count__) { return; }");
tryItOut("yield  '' ;");
tryItOut("with((({ __parent__: constructor, prop: constructor })(5.0000000000000000000000)).__iterator__ = (this.zzz.zzz)--)({}).__lookupGetter__\n");
tryItOut("/*infloop*/while((*::*.__lookupSetter__(\"__proto__\") instanceof (__noSuchMethod__ = <x><y/></x>).__lookupGetter__(\"__proto__\")).call(( /x/g \n), @foo))/*for..in*/for(var [constructor, __noSuchMethod__] = function(id) { return id } in <y><z/></y>) {this;(1 for (x in [])) }");
tryItOut("if(({__count__: window, __noSuchMethod__: __parent__ }).__defineGetter__(\"__noSuchMethod__\", [1,2,3,4].map)) return constructor getter: (-1); else  if ((yield window)) M:if(<y><z/></y>) {} else  if (function(id) { return id }) {export *; } else {<y><z/></y>; }");
tryItOut("let( if ([,]), __iterator__ = *) ((function(){yield (function ([y]) { })();})());");
tryItOut("/*infloop*/for(; (#0=(function ([y]) { })()) %= (<x/> / <x><y/></x>); __count__ = //h\nfalse) break L\n\n/*for..in*/for(var __noSuchMethod__ = prop.prop in <x><y/></x>) yield;");
tryItOut("/*for..in*/for(const (*::* & 0)['__parent__'] in (((prop = [[1]] & this.yoyo(#1#( /x/g , 1e-81).__count__)))(__iterator__ = window.isPrototypeOf(\n /x/g )))){return;if((p={}, (p.z = ((p={}, (p.z = undefined)())))())) yield; else  if ([this >>> true].some(<><x><y/></x></>\t)\r) {__iterator__ = <><x><y\f/></x></>, __noSuchMethod__;return; } }");
tryItOut("{/*infloop*/M:for(var __parent__; this.__defineSetter__(\"prop\", null); prop.prototype = __proto__[*::*] + new 0/0(this).__iterator__ = __noSuchMethod__ = <x><y/></x>) {let prototype = [,,z1];\nvar __proto__;\n }gc() }");
tryItOut("if(*) <><x><y/></x></> else  if (prop) {export *; } else throw -0;");
tryItOut("with({__iterator__: __noSuchMethod__.__noSuchMethod__})L:if((( '' .watch(\"__count__\", new Function)).unwatch(\"__parent__\")).constructor = (prop)[ \"\" ]) {const prototype;(null); } else  if (constructor)  else ;");
tryItOut("while((([1,2,3,4].slice).call(window, ){gc() }");
tryItOut("/*for..in*/L:for(let __iterator__ in ((/a/gi)( \"\" ))){{}gc() }");
tryItOut("if(-1\n) { if (this.zzz.zzz) {export *;/*for..in*//* nogeckoex bug 349964 */L: for  each(const prototype in <x/>) gc() }} else {yield;return; }");
tryItOut("let __noSuchMethod__; const prop;");
tryItOut("/*infloop*/while((*::*.throw(false)))(<x><y/></x>);");
tryItOut("if(new (<><x><y/></x></>)( /x/g , undefined) ? window ? arguments : (function ([y]) { })() : __iterator__()) ({ prop: ({ prop: [({ constructor: __count__, prop: [__count__] }), , ], prototype: __iterator__ }) }) else  if (eval(\"<><x><y/></x></>\", <><x><</>)()) ; else {this.zzz.zzz; }");
tryItOut("if( /x/g ) { if (<x><y/></x>) {3; }} else {(this); }\n");
tryItOut("switch(new (false)()) { case 0: throw  /x/g ;break; {throw  \"\" ; }case 4: break;  }");
tryItOut("L: {export constructor;export constructor; }");
tryItOut("M:if(this ^= __proto__.prop) { if (__parent__ = undefined.isPrototypeOf(((undefined)(*::*) = (<><x><y/></x></> .@ /*\n*/<x/>)))) {gc() } else <!--yy-->}");
tryItOut("M:if(new (1 for (x in []))(@foo, [,,z1])) {export * } else export __proto__;");
tryItOut("L:switch(<><employee id=\"1\"><name>Joe</name><age>20</age></employee></>) { default: break; break; case 2: break; case 5: yield 4.;break;  }");
tryItOut("let __iterator__, __proto__;");
tryItOut("export *; const prop;");
tryItOut("/*for..in*/M:for(var [__parent__, __proto__] = null in  \"\" .prototype = true.__iterator__ = [,,].__lookupGetter__(\"prototype\")) {L:if(<y><z/></y>) {return  '' ; } else  if (window) {export prop;export *; } else {gc() } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __iterator__ in 1e-81) {/*infloop*/for(const __iterator__ = *; 1e81; <x><y/></x>) prototype = prototype, constructor = <x/>; }");
tryItOut("if([(yield let (__noSuchMethod__ = #1#, __parent__ = undefined) <x/>) for each (__noSuchMethod__ in *::*)let __proto__, constructor;]) { if (Exception( for each (__iterator__ in (window--.__count__.prop)) for (__proto__(({__proto__: 1e81.__defineSetter__(\"__noSuchMethod__\", function(q) { return q; }) })) in (__noSuchMethod__ = <x/>) .@ function ([y]) { }) for each (__noSuchMethod__ in (uneval(<x/>))) for (__proto__(@) in <><x><y/></x></>))) {M:while((this.__defineGetter__(\"__noSuchMethod__\", ( /x/ ).watch) for (prototype.__count__ in 0x99) for each (prototype in window)) && 0)/*infloop*/do {} while(constructor = __proto__); } else <>*::*</>}");
tryItOut("/*for..in*/for(let function::prototype in -new Array(false)) {(false);/*for..in*/for(var __parent__ = <y><z/></y>.@foo in 3/0) {yield prototype;break L; } }");
tryItOut("/*infloop*/for(; (p={}, (p.z = <><x><y/></x></>)()); __noSuchMethod__) yield;");
tryItOut(" /x/ ;\n/*for..in*/for'let __noSuchMethod__ in prop) \n");
tryItOut("__noSuchMethod__: #0=[<y><z/></y>.unwatch(\"__parent__\")]");
tryItOut("/*for..in*/M:for(let (1e+81)(<y><z/></y>) in [,,]) throw <x><y/></x>;");
tryItOut("switch([,,z1]) { case (<x><y/></x> = @foo) :: (__count__.__proto__ =  /x/g ): /*infloop*/L:do {/*infloop*/L:while(function(id) { return id }){} } while(* < 3.141592653589793);break;  }");
tryItOut("M:with({prototype: (#1=[*::*]).prototype = <y><z/></y>(@foo, <><x><y/></x></>).throw(#2\t=({constructor: *}))})");
tryItOut("prop = __proto__;");
tryItOut("do [,,z1]; while(( /x/g ) && 0);");
tryItOut("throw prototype;");
tryItOut("M:switch(( /x/ .throw(this.zzz.zzz))) { default: try { yield 1e81 > <x><y/></x>; } finally { return [#1=[#1#] for (constructor in @foo)]; } break; case (([15,16,17,18].sort(new Function, <x/>)) >>= null.valueOf(\"number\")): /*infloop*/do { } while((let (__noSuchMethod__ = __count__) true));break; /*for..in*/for(let [__proto__, prop] =  \"\"  in this) let constructor = false;case 4: break; break; case 8: /*for..in*/for(const __count__ = null.eval((\n<><x><y/></x></>).yoyo( '' [__parent__])) in (Date(({}).hasOwnProperty))) {; }break; let (__proto__) { if(*::* ^=  /x/ ) {yield;throw <><x><y/></x></>; } else  if (\n<><x><y/>\f</x></>) continue ; else {(1e+81); } }break;  }");
tryItOut("for(let y in [5,6,7,8]) __count__ = __count__;");
tryItOut("let prop, prototype = <><x><y/></x></>;\n{}\n");
tryItOut("/*infloop*/L:while(( '' .prototype.eval(__noSuchMethod__\t.(<y><z/></y>))\n))let (__noSuchMethod__ = ({}), constructor) { break ; }\n");
tryItOut("if(\t__iterator__ = <><x><y/></x></> <<= <x><y/></x> *= @foo %= false) { if (033.yoyo(window)) {export __iterator__; } else {yield;var constructor, __iterator__ = __parent__; }}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each((constructor) in <x><y/></*\n*//x>) {yield undefined; }");
tryItOut("{throw <x/>; }");
tryItOut("{*::*; }");
tryItOut("let(__iterator__ = true.hasOwnProperty(\"__noSuchMethod__\"), __proto__) ((function(){with({}) return arguments;})());");
tryItOut("{(gc).calllet __count__; }");
tryItOut("yield 'fafafa'.replace(///h\na/g, <x><y/></x>);");
tryItOut("switch([] ? this : false) { case *::*.__parent__: return;break; default: M:if(3 << ({a1:1})) { if (function (prop) { yield  /x/  } ) {(false);{} }} else {return <y><z/></y>; }case 3: /*for..in*/for(\tprop in ((Math.pow)([z1,,])))case __parent__ = *: 033;break; with({__noSuchMethod__: __noSuchMethod__}){[z1,,];return; }break; case new function  __proto__ (({ prototype: __noSuchMethod__, __iterator__: __proto__ }), getter)+ /=  /x/g ((function::__count__.__proto__)): break; (@foo);break; case 9: *;break; case (-3/0.isPrototypeOf(<x/>))[(this)[<><x><y/></x></>]]: break; case 3: let prototype = <x><y/></x>, prop = <><x><y/></x></>;break; case 3: export __proto__;break;  }");
tryItOut("switch(null) { case null: break;  }\n");
tryItOut("{/*infloop*/for(var prototype; new (__count__ = <x><y/></x>)( /x/ .__iterator__, 1e81); (@foo for (__parent__ in  '' ))) L:if(prop) {yield;export constructor; } else  if (1.3) {{}yield <><x><y/></x></>(/; } else { } }");
tryItOut("if((<x/>['prototype'] = let (__iterator__ =  \"\" ) \n /x/g )) /*infloop*/M:for(let x::prototype; <><x><y/></x></>; function ([y]) { }) gc() else  if (let (constructor(prototype = __iterator__) = __iterator__ = undefined) ([[]].unwatch(\"__iterator__\") %  /x/ .watch(\"__parent__\", (new Function).apply))) export *;\nvar prop, __iterator__;\n else ((function ([y]) { })()).__defineSetter__");
tryItOut("/*for..in*/for(__proto__ = (Number(true, <y><z/></y>) if (-3/0)) in [[1]]) prop, __parent__ = <x/>;");
tryItOut("let(constructor = ((Math.pow).call([1,,],  /x/ , false))) ((function(){try { export *; } finally { const prop = null, __noSuchMethod__; } })());");
tryItOut("if([<><x><y/></x></>].filter(function (\t__parent__, prop) { yield <x/> } ).unwatch(\"prop.constructor\")) 0x99 else  if (constructor = ((-1)).call(null, )) export __count__;");
tryItOut("L: {/*for..in*/for(let [<x><y/></x>, __parent__] = [undefined].sort(( /x/g ).watch) in  '' ) {let __parent__, __count__; }export *; }");
tryItOut("/*for..in*/for(var prototype = <x><y/></x> in <x><y/></x>) {[1,2,3,4].map }");
tryItOut("/*for..in*/for([__parent__, prototype(*)] = <y><z/></y>.propertyIsEnumerable(\"prop\") in window) gc()");
tryItOut("/*for..in*/L:for(var [__parent__, __noSuchMethod__] = this in <x><y/></x>) yield;");
tryItOut("if(let (__proto__) (({ __proto__: __iterator__ }) =  \"\"  :: <x><y/></x>)) {while(([prototype =  /x/g ].sort(Math.pow)) && 0){M:if([,]) {continue M; } } } else  if ( /x/ ) {;\n{}\n } else {gc()if(void  /x/ ) { if ( /x/  .@ <x><y/></x>) yield; else \f{let __count__, prototype = false; }} }");
tryItOut("L: export *;");
tryItOut("/*infloop*/for\t(let prop; @foo; *) {}");
tryItOut("if(({constructor: <y><z/></y>.hasOwnProperty(\"prop\")}))  \"\" ; else  if (( /* Comment */(yield <y><z/></y>))) {(true); }");
tryItOut("/*for..in*/for(let [__proto__, __iterator__] = #1=[#1#] in false) {gc()break ; }");
tryItOut("export __parent__;");
tryItOut("L:if(__proto__.__count__) const constructor = <><x><y/></x></>; else [, __count__, [, , __proto__, ], ] = ( /x/g (<y><z/></y>, <x><y/></x>))");
tryItOut("while(([15,16,17,18].filter(Math.pow, new ({}).hasOwnProperty(*::*, -0).propertyIsEnumerable(\"constructor\"))) && 0)/*infloop*/L:do yield; while(\n(<x/>.\tpropertyIsEnumerable(\"__parent__\")).__lookupGetter__(\"constructor\"));");
tryItOut("yield; const __iterator__\n");
tryItOut("switch((eval(\"@foo\", <x><y/></x>))) { default: case <employee id=\"1\"><name>Joe</name><age>20</age></employee> >>> new RegExp().__proto__: {{}export *break; break; case  \"\" : let (__count__ = <y><z/></y>, constructor =  /x/g ) { (<><x><y/></x></>); }var constructor, __parent__;case (new undefined): break; case 4: break;  }");
tryItOut("for(let y in []);");
tryItOut("export *\n");
tryItOut("((Function).apply).apply");
tryItOut("do {break ;yield; } while(([]) && 0);");
tryItOut("throw * const __noSuchMethod__;");
tryItOut("/*infloop*/while(new ( '' )(<x><y/></x>))const __parent__ =  \"\" , __proto__ = <y><z/></y>;");
tryItOut("return __count__;");
tryItOut("/*for..in*/for([__noSuchMethod__, __iterator__] = this.zzz.zzz in <x><y/></x>) {export x::__count__; }");
tryItOut("const prop = __proto__;\nexport *;\n");
tryItOut("if((<!--yy-->)) {yield;return <><x><y/></x></>; } else ");
tryItOut("var __count__ = <><x><y/></x></>;");
tryItOut("/*infloop*/M:while(({ constructor: ({ __count__: each }), [__proto__, , __iterator__, ]: ({ constructor: __parent__ }) }) = null - <y><z/></y>)return new window(this, <x/>);");
tryItOut("/*for..in*/for(__iterator__ in ((function  __iterator__ () { yield null = eval(\"return;\", 'fafafa'.replace(/a/g, [1,,])).__iterator__ = <x><y/></\tx> .@x:: (prototype[ /x/g ]) } )(let __noSuchMethod__, __noSuchMethod__ = undefined\n)))<><x><y/></x></>;");
tryItOut("{with({__parent__: <><x><y/></x></>})this;<ccc:ddd><ccc:ddd>yyy</ccc:ddd></ccc:ddd><ccc:ddd> </ccc:ddd> }");
tryItOut("if((({ set __iterator__ __proto__ (__proto__, __noSuchMethod__) { return <><x><y/></x></> }  }))) Math.pow else  if ((undefined)(__noSuchMethod__)) const __noSuchMethod__ = [,]; else {; }");
tryItOut("/*for..in*/for(var constructor in ((((<x><y/></x>(constructor, constructor)(*::* <<  '' , this))).__defineSetter__)((* for each (constructor in <y><z/></y>) for each (__count__ in  \"\" )).yoyo(( \"\"  <<= <x/>).@*).hasOwnProperty(\"__noSuchMethod__\")))){__parent__; }");
tryItOut("{}");
tryItOut("__parent__ = prop;");
tryItOut("/*infloop*/L:for(let constructor = new Function(); __count__.__iterator__; ((true)(__parent__).__parent__)) {if(#1=\f({})) if( '' ) {return; } else  if (this) const __proto__ = <x><y/></x>, __noSuchMethod__ }");
tryItOut("M:if(prop) {gc()@foo; } else  if (#1=[#1#]) export __noSuchMethod__;");
tryItOut("/*infloop*/for(__iterator__; prototype; <><x><y/></x></>) throw  /x/g ;");
tryItOut("export __parent__\r\n");
tryItOut("/*infloop*/for(@foo; [1]; (function  function::__count__ () { var __noSuchMethod__ = <x><y/></x>; } ), <y><z/></y>) (window)");
tryItOut("return [__count__, __count__, , ] = ([15,16,17,18].map((<><x><y/></x></>).__defineSetter__, <><x><y/></x></>));");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __noSuchMethod__.__noSuchMethod__ in (([@foo].sort(<x/>)) ? <x/>.isPrototypeOf(<><x><y/\t></x></>) : window.watch(\"__parent__\", (1 for (x in []))))) {/*infloop*/for(const [({ \tget: [] }), [prop, ], , , ] = RangeError(((new Boolean()).watch(\"constructor\", (1 for (x in [])))), ((uneval(__proto__)))); (__iterator__ = <bbb xmlns=\"<x><y/></x>\"> </bbb>); __proto__) {break ;__noSuchMethod__; } }");
tryItOut("/*infloop*/for(__noSuchMethod__ =  \"\" ; yield; <x/>) ;");
tryItOut("/*infloop*/for(let prop = ({prototype setter: this.zzz.zzz\t }); ((__parent__ = @foo[__iterator__-=constructor.__lookupSetter__(\"prop\")])[eval(\"export constructor;\", <y><z/></y>) /= @foo]); ([[1]]).call( /x/ , )) {return (eval(\"({a2:z2}) const yyy;\", *::*).__defineGetter__(\"prototype\", function () /x/ )); }");
