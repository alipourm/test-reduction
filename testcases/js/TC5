
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var (![__noSuchMethod__, , , __iterator__, __parent__] = <><x><y/></x></> , <><x><y/></x></>)((eval(\"return 1e4;\", eval(\"export *;\", window)))) in <><xxx>{__parent__}</xxx></>.@*) /*infloop*/while(@foo)var __iterator__ =  \"\" , constructor = <x/>");
tryItOut("let(prop = gc(), constructor) ((function(){/*for..in*/for(const constructor in undefined) return  \"\" ; = __proto__;})());");
tryItOut("with({}) try { prototype = x::prototype; } finally { with({}) yield __iterator__; } ");
tryItOut("L:if((({}).__lookupGetter__).call(window, ({}), <x/>)) ;");
tryItOut("M:if(5.0000000000000000000000) {constructor, __parent__ = window; } else  if (new new (({}).__lookupGetter__)((eval(\"<x><y/></x>\",  '' )), null)()) {{yield; } }\n");
tryItOut("/*for..in*/for(let [__noSuchMethod__, prop] = __parent__[false] in *::*) {}");
tryItOut("/*for..in*/for(let __noSuchMethod__ = (x::prop.__iterator__ = <></>).propertyIsEnumerable(\"constructor\") in this) continue ;");
tryItOut("switch(<employee id=\"1\"><name>Joe</name><age>20</age></employee>) { default: {var __proto__ = 0; }break;  }");
tryItOut("if(__noSuchMethod__.prop) (<x/>);");
tryItOut("/*for..in*/for(let __parent__ in (this.zzz.zzz)) {if(export *;) { if ((prototype = __parent__)) constructor = (-0) else {<y><z/></y>;throw <x/>; }}/*infloop*/for(yield prototype = false; window+=<x><y/></\tx>; new (this)()) {break  for each (__count__ in __proto__) for (__noSuchMethod__ in 1e-81);try { for(let y in []); } catch(__proto__) { return __noSuchMethod__; } finally { for(let y in []); } /*infloop*/M:do {new Function } while(<x><y/></x>); } }");
tryItOut("return; const __iterator__;");
tryItOut("if(prototype = __iterator__ = <x/>) { if (*) export *;} else let __iterator__, __parent__;");
tryItOut("/*infloop*/L:for(({ prototype: prop, constructor: prototype }) = yield  /x/ ; [11,12,13,14].filter; *.__defineSetter__(\"__parent__\", null)) {const __proto__, constructor;this; }");
tryItOut("L:if((this < (let (prototype = null, prop) <x/>))) { if ((0/0)) /*for..in*//* nogeckoex bug 349964 */ for  each(let prop in <y><z/></y>) export __proto__; else yield;}");
tryItOut("return;");
tryItOut("/*for..in*/for(let [prop, prop] = <><x><y/></x></> >>>=-0 in ([1.3 for (constructor in __iterator__)])) { }");
tryItOut("(false);");
tryItOut("L:with((function  __noSuchMethod__ (({ <x/>: __iterator__, prototype: constructor }), __parent__) { L:if(<x/>) (1 for (x in [])) } ).call(true.valueOf(\"number\"), this, ([]\n)))");
tryItOut("/*for..in*/for(const __parent__ = (*::*--)[<y><z/></y>.isPrototypeOf(window)] in __count__) this;");
tryItOut("yield null.propertyIsEnumerable(\"prop\");");
tryItOut("return <x/>;");
tryItOut("continue ; const __count__;");
tryItOut("let(__proto__, constructor) { export constructor;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(var __proto__ in (new ( /x/ )(<><x><y/></x></>, *))) while(( /x/ ) && 0){ }");
tryItOut("return;");
tryItOut("{<><x><y/></x></>; }");
tryItOut("/*for..in*/for(var [__count__, __iterator__] = ([15,16,17,18].sort(Function, <x><y/></x>)) in <><x><y/></x></>) {export *;__noSuchMethod__ }");
tryItOut("{with((Object(window))){throw 4.;; }\t }");
tryItOut("switch((__parent__ = (*::* % <x/>)(yield __count__))) { case (prop = 1e-81): default: /*infloop*/for(var __parent__; <><x><y/></x></>; <x><y/></x>) {export __noSuchMethod__\f;({}).__lookupGetter__ }case (yield __iterator__.prototype = 0.1): break;  } const __noSuchMethod__;");
tryItOut("{/*for..in*/L:for(var __count__ in ((eval)(null.watch(\"__parent__\", gc)))){(__iterator__); }; }");
tryItOut("if([<x/>]) throw 1.2e3; else  if (<><x>\f<y/></x></> %= <><x><y/></x></>) ");
tryItOut("/*for..in*/for(const getter = ((p={}, (p.z = __parent__)())) in -3/0) continue M;");
tryItOut("let __proto__, prototype = 3.141592653589793; const __noSuchMethod__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(prototype in <x/> ? null ? <x><y/></x> : (function ([y]) { })() : __parent__.__count__\t) export prop;");
tryItOut("switch((prop = var prop, prototype = *::*;)) { case yield;.hasOwnProperty(\"__noSuchMethod__\"): export prototype; }");
tryItOut("this.zzz.zzz;");
tryItOut("{/*infloop*/for(constructor;  \"\"  = <y><z/></y> /= undefined; ((yield true))) var prototype = <x/>, __proto__ = __iterator__;throw (this.__defineGetter__(\"prototype\", /a/gi).isPrototypeOf(eval(\"break M;\", *::*))); }");
tryItOut("do {export *;{} } while((( ''  |= <x/>)) && 0); const __count__;");
tryItOut("/*for..in*/for(var __count__ in <><x><y/></x></>) prop");
tryItOut("const prototype\nreturn;");
tryItOut("M:if(<y><z/></y>) { if ((@foo % 4.)) {export *; } else {export __iterator__; }}");
tryItOut("__count__ = function (constructor, ({ __count__: [getter, __iterator__, ], __parent__: __iterator__ })) { /*for..in*/for(var this.__parent__ in (function  __proto__ ()<y><z/></y>)(#3={a:#3#})) export *; } ;");
tryItOut("/*for..in*/L\t:for(const [__count__, constructor] = ( /x/g  for each (constructor in <x><y/></x>)) in window.__lookupSetter__(\"__noSuchMethod__\")) {continue M;\nyield .2;\n }");
tryItOut("if(true) { if (prop) {function  prototype (__proto__)1e81return <x/>; } else {};}");
tryItOut("if( /x/ ) { if (new (<x><y/></x>)(__noSuchMethod__.valueOf(\"number\"), false)) return; else }");
tryItOut("{/*infloop*/do {return; } while(1.2e3.watch(\"__noSuchMethod__\", [1,2,3,4].map));{yield;{} } }");
tryItOut("if( \"\" ) break ; else  if (<ccc:ddd></ccc:ddd>) {{let __proto__, constructor; }gc() } else yield;");
tryItOut("/*infloop*/L:for(let ({ constructor: [constructor, ] }) = 0x99; ( /* Comment */eval(\"var prototype;\", prototype)); (this.zzz.zzz)) ");
tryItOut("let(prototype) { throw StopIteration;");
tryItOut("/*for..in*/for(let prop = Object(<x><y/></x>) in @foo) export constructor;");
tryItOut("let(({ __count__: prop, __iterator__: prop }), __parent__ =  /x/ ) ((function(){try { const __proto__, __noSuchMethod__ = __noSuchMethod__; } finally { ; } })());");
tryItOut("\nyield 0;");
tryItOut("/*for..in*/M:for(var [constructor, prop] = this in <zzz>( '' .__proto__ = *::*)</zzz>) {prop = __count__, __count__ = false }");
tryItOut("with({}) { prototype = __iterator__; } ");
tryItOut("with(window){throw  /x/ ; }");
tryItOut("/*infloop*/for(constructor = true; let (__noSuchMethod__) function(y) { yield y; export prototype;; yield y; }; (Math.sin)(((-1.__lookupSetter__(\"prop\").isPrototypeOf( \"\" )))())) {gc() }");
tryItOut("/*for..in*/for(var <x/>. { return  /x/  }  in <x><y/></x>.eval( '' )) return <x><y/></x>;");
tryItOut("/*infloop*/while(3/0){[,]; }");
tryItOut("/*infloop*/L:while(new Date(<><employee id=\"1\"><name>Joe</name><age>20</age></employee></>).__iterator__)\fexport __noSuchMethod__;");
tryItOut("if(eval(\" \\\"\\\" \",  '' )) M:if(-1)  else  if (this) {prototype, __proto__ = undefined;export *; } else 5.0000000000000000000000");
tryItOut("/*infloop*/for(let ({ prop: __proto__ }) = (false.@*)\n; __count__ = 1e81; <><x><y/></x></>) {yield;let __iterator__ = <><x><y/></x></>, prop = <x><y/></x>; }");
tryItOut("if(\t({__noSuchMethod__: new (/a/gi)()})) {return;prototype =  /x/ ; } else  if (this.zzz.zzz) if(window) {return __count__;window; } else prop");
tryItOut("__iterator__ = function::prop;");
tryItOut("/*infloop*/do {break ; } while((<><x><y/></x></> if (-3/0)));");
tryItOut("let constructor;\n\n");
tryItOut("switch(*::*) { case prototype-=__iterator__: /*for..in*/M:for(constructor = __proto__ in prop.__iterator__ = <><x><y/></x></>) {if(<y><z/></y>) {function(q) { return q; } } else  }break;  }");
tryItOut("if((<><x><y/></x></>--)) {throw [[]]; } else  if (undefined.isPrototypeOf(1e-81).watch(\"__count__\", () __noSuchMethod__.  __defineSetter__)) { }");
tryItOut("/*for..in*/for(const (<><x><y/></x></>)(1e+81) in (('haha'.split)((0x99)(<><x><y/></x></>)))){break L;break L; }");
tryItOut("/*infloop*/L:while(false == (__proto__ = true)){break M; }");
tryItOut("if(window) {throw  /x/ ;return this; } else return;");
tryItOut("if(undefined.unwatch(\"__iterator__\").*.prop =  /x/g )  else ");
tryItOut("/*infloop*/get: undefined(arguments, <x><y/></x>).prop = prototype = (-0) for(({ prop: __noSuchMethod__, __iterator__: __count__ }) = (false)(__parent__, <x><y/></x>); new Iterator(<x><y/></x>); (new (Math.pow).call())) {<x><y/></x>;{} }");
tryItOut("/*infloop*/do /*for..in*/L:for(<y><z/></y>.__iterator__ in ({}).propertyIsEnumerable(\"__proto__\")) {yield;var prototype = __proto__, __noSuchMethod__; } while(({prototype: (false.hasOwnProperty(\"__count__\")) }));;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(const (__count__.__count__) in [1,,].yoyo((--#3={a:#3#}))) L:with(__count__ = *::*){let prop, ; }");
tryItOut("\n");
tryItOut("M:if(<{prop}><ccc:ddd> </ccc:ddd></{prop}>.(window)) {break M; } else  if (*::*) {\nMath.sinyield;\n } else {{;return __parent__; } }");
tryItOut("{const __iterator__ = @foo\nconst prop;\t\nyield;\n }");
tryItOut("throw StopIteration;");
tryItOut("L:if( /x/g .@*) <x><y/></x>.(window); else  if ([11,12,13,14].sort) {break L;1.3; const __proto__; }");
tryItOut("if([,,z1]) {var prototype = [z1,,]; }");
tryItOut("if(prop = prototype) { if (*.__proto__) var __iterator__ = -1;} else {{} }");
tryItOut("let (each) { /*for..in*/ }");
tryItOut("/*for..in*/M:for(let __parent__ in  '' ) {return;export function::prop; }");
tryItOut("/*infloop*/while(<><x><y/></x></> for each (__parent__ in ({a1:1}))){export *;var __parent__ = true, __noSuchMethod__ = <y><z/></y>; }");
tryItOut("/*infloop*/while(({ set __iterator__\f __iterator__ () { yield [__iterator__].filter(gc) } ,  set __count__ __count__ () { yield <y><z/></y> }  })){return  /x/ ; }");
tryItOut("M:if(true) continue L; else {;; } const constructor;");
tryItOut("/*for..in*/for(__proto__ in ((eval)((('haha'.split).call(new new Function(), undefined))))){throw null\n }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(const constructor.__proto__ in (new (*::*)())) let prototype = undefined");
tryItOut("(__proto__)\nthrow <><x><y/></x></>;");
tryItOut("switch((<x/>. \"\" ).__defineGetter__(\"__proto__\", eval)) { case 4: break;  }");
tryItOut("/*infloop*/for( \"\" ; (<x><y/></x>).call(<x><y/></x> ||  '' , (<x><\fy/></x>)(#1#, [])); <><x><y/></x></>[<y><z/></y>] = null) {{return [1,,]; }let constructor = @foo; }");
tryItOut("if(this.__defineGetter__(\"constructor\", (new Function(\"return\")))) {<y><z/></y>; }");
tryItOut("M:with([11,12,13,14].filter){;\n{}\nwhile((typeof <><x><y/></x></>) && 0); }");
tryItOut("{ }");
tryItOut("/*infloop*/M:for(({ __count__: ({ __parent__: ({ constructor: __noSuchMethod__ }), __noSuchMethod__: ({ __iterator__: __count__, __iterator__ = constructor:  }) }) }) = (Boolean(window)); @foo.propertyIsEnumerable(\"constructor\"); prototype = <x><y/></x> || new __parent__ instanceof <><x><y/></x>//h\n</>(new (prototype)(\f@foo, <><x><y/></x></>))) return;");
tryItOut("/*infloop*/M:while(this(__count__, <><x><y/></x></>)){}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __count__ in ({prop: new (<x><y/></x>)( \"\" )})) {throw (); }");
tryItOut("return;\nif((prop = true)) { if ([11,12,13,14].map) prop; else {continue M;gc() }}\n");
tryItOut("let (__iterator__, function::prop) { return; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const ((--<><x><y/></x></> > <x><y/></x>))(new '((({}).hasOwnProperty)((({__iterator__ getter: [1,2,3,4].slice })), <x><y/></x>))((((-3/0 if (constructor)))), <x><y/></x> / *::*)) in delete (-1)) {__count__throw ([<x/>].sort(<><x><y/></x></>)); }");
tryItOut("switch('fafafa'.replace(/a/g, Math.pow)) { default: M:if((__noSuchMethod__.eval(4.)) ^ ((<x><y/></x>)(__proto__, <x/>))) {export __count__; } else  if (((p={}, (p.z = [] !== null)()))) L:if(window) { if (gc()) {yield; }} else {var prototype = this; } }");
tryItOut("/*infloop*/while(<><x><y/></x></>){gc(){} }");
tryItOut("/*for..in*/for(let [__parent__, __iterator__] =  /x/g  in  /x/ ) {yield [1]; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__ in (<><x><y/></x></> :: __proto__)) {M:if(__proto__.__noSuchMethod__) { if ((new Function(\"\"))) const __noSuchMethod__ = <x/>, __proto__ = undefined;} else {export prototype;gc() } }");
tryItOut("{}");
tryItOut("if(__proto__.((\n[1,,]) += new (yyy)(<><x><y/></x></>,  /x/ ))) with(((uneval(*))).unwatch(\"constructor\"))continue\t L;");
tryItOut("yield;");
tryItOut("with({}){windowreturn; }");
tryItOut("let (constructor = ({__noSuchMethod__: true , __iterator__ })) { /*infloop*/M:while((__proto__ = 1e-81)){/*for..in*//* nogeckoex bug 349964 */ for  each(var __proto__ in *) /*for..in*/for(var __parent__ = prop in <><x><y/></x></>) let __iterator__, constructor = undefined; } }");
tryItOut("while((this) && 0)");
tryItOut("M:if(\nnull) const __parent__, __iterator__;");
tryItOut("{throw <><x><y/></x></>\n }");
tryItOut("switch(<x/> = window) { case 6: case 9: default:  }");
tryItOut("if([,,z1]( /x/ )) return;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(let (({ prop: prototype, constructor: __noSuchMethod__ })) in 'fafafa'.replace(/a/g, <x><y/></x>)) if(null.__iterator__ = 3.141592653589793) export __proto__; else {export prototype;var __iterator__ = false, constructor; }");
tryItOut("with({}) { return  \"\" ; } ");
tryItOut(";\nyield <x><y/></x>;\n");
tryItOut("M:do L:if(([z1,,].watch(\"prototype\", ({}).hasOwnProperty))) { if (prototype+=<x/>)  else {(<><x><y/></x></>);(<><x><y/></x></>); }} while(((constructor = *.__lookupSetter__(\"prototype\"))) && 0);");
tryItOut("{/*for..in*//* nogeckoex bug 349964 */ for  each(const __proto__(true) in null) export __count__;yield; }");
tryItOut("M:while(([11,12,13,14].sort) && 0)L: [1,2,3,4].map");
tryItOut("do function  __parent__ (__proto__) {  }  while((new (-1)(#1=[#1#])) && 0)");
tryItOut("if(__iterator__.__parent__ setter= function () { throw <x><y/></x>; } .propertyIsEnumerable(\"prototype\")++)  else  if (prototype.__iterator__) {var __parent__; } else {yield false;return; }");
tryItOut("{__parent__ = *;with(<><x><y/></x></>)let __noSuchMethod__ = @foo,  \"\" ; }");
tryItOut("while((*::*) && 0)export *;");
tryItOut("let (__proto__) { ; }");
tryItOut("do {} while((delete <x><y/></x>) && 0);");
tryItOut("L:if(-0) { if ((-0))  else {const __noSuchMethod__ = <><x><y/></x></>; }}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in undefined) if(<y><z/></y>) { if ( /x/ ) yield; else {export *;null; }}");
tryItOut("throw StopIteration;");
tryItOut("yield [,,z1];/*for..in*/for(let [__proto__, __parent__] = prototype in *) {yield 1.3; }");
tryItOut("/*infloop*/do {export *; } while(<x/>);");
tryItOut("/*for..in*/for(const constructor in ((/a/gi)(this.watch(\"__count__\", [1,2,3,4].slice))))return;");
tryItOut("__parent__ = __proto__; const __noSuchMethod__;");
tryItOut("for(let y in [5,6,7,8]) return;");
tryItOut("return\n");
tryItOut("M:while((\n#1# >=  /x/ ) && 0){/*infloop*/M:for(var __noSuchMethod__; (__iterator__ = [1,,]); [15,16,17,18].some(*::*, <x><y/></x>/*\n*/)) {yield null;{} }if(undefined)  else  if (<x><y/></x>) {throw <y><z/></y>;default: throw case 5: export prototype;break; case 5: gc()break; break; default: break; let __parent__ = eval;break; case <><x><y/></x></>: break; yield;break; {}case <x><y/></x>: ;break; case 8: export __proto__;break; case 0: case constructor: ((function (__count__, function::function ([y]) { }) { window; } ).watch).callbreak;  } }");
tryItOut("/*for..in*/L:for(constructor in ((new Function)(__parent__))){throw [[1]]; }");
tryItOut("export *; const x::__noSuchMethod__;");
tryItOut("/*infloop*/while(constructor){const __iterator__ = [[1]], __noSuchMethod__;return null; }");
tryItOut("{{} }");
tryItOut("if((yield __noSuchMethod__)) { if (<x><y/></x>.__defineSetter__(\"constructor\", eval) ? (([[1]]).__defineSetter__()) : (__count__-=<x><y/></x>)) let prop = <x><y/></x>, __count__ = <x><y/></x>\n else {export __noSuchMethod__;break L; }}");
tryItOut("/*infloop*/for(({ get __count__ __noSuchMethod__ (prototype) { export *; }  }); this.__defineSetter__(\"__noSuchMethod__\", [1,2,3,4].map).__lookupSetter__(\"prototype\"); <><> </></>) export *;");
tryItOut("do {;return  /x/g  } while(((let (prop, constructor) [false].sort(*::*).__defineGetter__(\"__proto__\", 'haha'.split))) && 0);");
tryItOut("const __count__ = <x><y/></x>, __iterator__ = null\nvar __noSuchMethod__, __iterator__ = window;");
tryItOut("yield ({ __noSuchMethod__: function::__noSuchMethod__, __iterator__: ({ constructor: __proto__, __iterator__: __parent__ }) }) = (prop = this ^ [@foo].sort(gc));");
tryItOut("let (({ __iterator__: constructor }), __parent__ = 3) {  }");
tryItOut("/*for..in*/for(__iterator__ in ((constructor.prototype = new String(<x/>, <><x><y/></x></>))(( '' )))){while((window) && 0)__iterator__\n\f[,]; }");
tryItOut("M:if(<y><z/></y>[@foo]) ; else  if (((([1,2,3,4].slice).call).call).call( '' , __count__\n, ([1,2,3,4].slice))) /*for..in*/L:for(const __iterator__ = *[<x><y/></x>] in window) /*infloop*/do ; while(1.3);continue M; else {gc()var false = <><x><y/></x></>, __count__; }");
tryItOut("M:if(function(id) { return id }) \fexport *; else  if (function ([y]) { }) {<y><z/></y>;export *; } else /*infloop*/for(var __parent__; prototype; function(id) { return id }) return constructor;");
tryItOut("return;return;");
tryItOut("with({}) return constructor;");
tryItOut("/*for..in*/L:for(let prop = * in *) {; }");
tryItOut("/*infloop*/for(([,,z1] <<= (\nfalse)); new function(q) { return q; }(*::*, null); ({ prototype: ({ __parent__: __noSuchMethod__ }), __count__: [] }) = (<x><y/></x>)[*::*]) [z1,,];");
tryItOut("with({}) ([z1]).watch");
tryItOut("if(__noSuchMethod__) var __count__, prototype; else {}");
tryItOut("L:while((\n(<x/>.propertyIsEnumerable(\"__count__\") === [,])) && 0)const prop = this, prop = @foo;");
tryItOut("/*for..in*/for(var __iterator__ in this) {yield; }");
tryItOut("throw  \"\" ;");
tryItOut("{const __iterator__ = <x><y/></x>;throw this; }");
tryItOut("L:while((<><x><y/></x></> !== <y><z/></y>) && 0){yield -1;; }");
tryItOut("throw __proto__;");
tryItOut("switch(new (Function)(constructor)) { default: yield [,,];\nMath.pow\ncase 2: <x><y/></x>break;  }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let (false) in (break M)) {yield <><x>\r<y/></x></>;export *; }");
tryItOut("/*infloop*/while(this.zzz.zzz)(<x/>);");
tryItOut("if(prototype.__defineSetter__(\"__proto__\", (1 for (x in [])))) while((window) && 0)/a/gi const __proto__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __proto__ in <y><z/></y>.__lookupGetter__(\"prototype\")) yield  /x/g ;");
tryItOut("with((({}).__lookupGetter__).call(new Date(0, this), )){let __parent__, prototype; }");
tryItOut("/*for..in*/M:for(var [__noSuchMethod__, prototype] = [(function ([y]) { }[0])] in <y><z/></y> *= prop.throw((__iterator__ = (yield undefined)))) {<x/>;prop, prototype =  '' ; }");
tryItOut("M:if([z1,,].hasOwnProperty(\"__noSuchMethod__\")) /*infloop*/L:while(__noSuchMethod__[undefined]){{} } const ({ prototype: ({ prop: constructor }), __iterator__: __iterator__ }); else  { while((*::*) && 0){;constructor; }\n(1.3); } ");
tryItOut("{export __noSuchMethod__; }");
tryItOut("{export *;(prototype); }");
tryItOut("with({}) yield  '' ;");
tryItOut("with(undefined && <x><y/></x>){return true;yield; }if((prop.prototype)) L:if([11,12,13,14].filter) { if (gc) return 1e4; else {yield;continue ; }}");
tryItOut("/*infloop*/do { /x/ ;let prop = __count__; } while(this);");
tryItOut("(true)");
tryItOut("/*infloop*/M:for(0/0; this;  /x/ ) (new Function(\"constructor;\"))");
tryItOut("/*for..in*/for([__parent__, constructor] = <><x><y/></x></>.constructor.__defineGetter__(\"__iterator__\", Math.sin) in 0x99) function (__parent__) { return <x><y/></x> } ");
tryItOut("if(window) { if ( /x/g ) {break ; }} else yield <><x><y/></x></>;");
tryItOut("let(__noSuchMethod__) ((function(){const __proto__, __parent__ = <x><y/></x>;})());");
tryItOut("throw __iterator__; const __iterator__");
tryItOut("do {{throw prop; } } while(((((eval(\";\", null)).propertyIsEnumerable(\"__noSuchMethod__\")) &= Object())) && 0);");
tryItOut("return;");
tryItOut("let(window = *::*.constructor, prototype = *) ((function(){yyy})());");
tryItOut("/*infloop*/M:for(prototype =  '' ; window;  /x/g ) {throw <x/>;yield; }/*infloop*/while((__proto__ = 0x99.yoyo(break L)));");
tryItOut("M:switch(#1=1e-81) { case 8: prop, prop = <><x><y/></x></>break; yield <x/>;break; break;  }");
tryItOut("/*for..in*/for(const [prop, prototype] = <y><z/></y> in (window)(3.141592653589793)) yield <x><y/></x>;");
tryItOut("{export prop;/*for..in*//* nogeckoex bug 349964 */L: for  each(let [1,2,3,4].map{} in <><x><y/></x></>) {(null); } }\r");
tryItOut("if(<><x><y/></x></>) (<><x><y/></x></>); else {let prototype = prototype; }");
tryItOut("break M;");
tryItOut("return;");
tryItOut("M:do {export *;throw null; } while(( { return constructor } ) && 0);");
tryItOut("return window;export *;");
tryItOut("with(*::* != ({a1:1}))");
tryItOut("/*infloop*/L:while((new ( \"\" )( /x/g .hasOwnProperty(\"prototype\"), (undefined.__lookupGetter__(\"prototype\"))))){with({__parent__: constructor})throw null; }");
tryItOut("L: {export __iterator__; }");
tryItOut("L: {return; }\n((__proto__ >> null.__lookupSetter__(\"prop\")));");
tryItOut("yield  '' ;return;");
tryItOut("/*for..in*/for(const prop = continue .throw(constructor =  '' ) in null) \r{(__noSuchMethod__);continue ; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let __parent__ in arguments) export *;");
tryItOut("this; const prototype;");
