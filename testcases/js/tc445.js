tryItOut("{let __proto__; }");
tryItOut("try { throw prop; } finally { try { for(let y in [5,6,7,8]) (prop =  /x/ ); } finally { let(__noSuchMethod__) ((function(){__parent__ = constructor;})()); }  } ");
tryItOut("L:if((.__proto__ = ( /* Comment */@foo))) {new Functiongc() } else  if \t(prototype.__proto__ =  /x/  .@ window.__defineGetter__(\"constructor\", function (__proto__, __proto__)[,,])) return null;");
tryItOut("/*infloop*/M:for(window; *; <y><z/></y>) (@foo);");
tryItOut("{/*for..in*/for(const __count__ in window != <x><y/></x> % (arguments % this)) {/*for..in*/for(constructor in ((eval)(function(id) { return id } %= @foo)))return 3.141592653589793;constructor } }");
tryItOut("(<bbb xmlns:ccc=\"__count__ = __noSuchMethod__\"><ccc:eee></ccc:eee></bbb>.([((function ()@foo).call([], [,,], null))].some(__noSuchMethod__)))");
tryItOut("export *\n");
tryItOut("yield <x/>;");
tryItOut("/*for..in*/M:for(let *['__count__'] in (((<x/>).apply)(+033)))yield  /x/ ;");
tryItOut("L: {throw false;yield  \"\" ; }");
tryItOut("do {__count__ = *, __count__ = <><x><y/></x></>;export __iterator__; } while((<x/>) && 0);");
tryItOut("if(<y><z/></y>) { if (prototype) function () { <><x><y/></x></> }  else {break ; }}break L;");
tryItOut("for(let y in []);");
tryItOut("let(__proto__ = true) ((function(){throw this;})());");
tryItOut("/*for..in*/for(let ++arguments in <>(((p={}, (p.z = <x/>)())) *= ((try { yield; } finally { const prop = true, __proto__ = this; } ).watch)(*::*, <y><z/></y>))</>) if(<><x><y/></x></>.@foo) {export prop;function  __noSuchMethod__ (__count__, __iterator__)<x><y/></x> } else  if (* - <x><y/></x>) yield; else {<><x><y/></x></>; }");
tryItOut("/*for..in*/M:for(let __count__(#1=[#1#].isPrototypeOf(1e81)) in ((1 for (x in []))).call((#2=({*::*: [1,,]})), (uneval( '' )))) {; }");
tryItOut("with({}) try { for(let y in [5,6,7,8]) with({}) ; } finally { for(let y in [5,6,7,8]) this.zzz.zzz; } ");
tryItOut("do ; while(([*].filter((*::*).watch)) && 0);");
tryItOut("L: {}");
tryItOut("let (prototype, prototype = [constructor, constructor, this, __count__, ] = #1=[#1#]) { switch((throw true;|=033)) { default: break; case this.__defineSetter__(\"__noSuchMethod__\", /a/gi): yield;break; case 9: ;break; case 6:  } }");
tryItOut("{}\n");
tryItOut("if(new Array().watch(\"prototype\", function(q) { return q; })) { } else  if ((window *= false)) return this; else const __parent__, __noSuchMethod__ = <x/>;");
tryItOut("/*infloop*/for(window.\f__defineSetter__(\"__parent__\", /a/gi) .@*:: window % (yield -1.2e3); ({__count__: this.zzz.zzz\t}); <y><z/></y>.@foo) {yield; }(window)");
tryItOut("with((<x><y/></x>.throw(prototype))()){/*for..in*/for(let function::constructor in <><x><y/></x></>)  }");
tryItOut("throw <x><y/></x>; const __parent__;");
tryItOut("function(y) { yield y; break L;; yield y; }\n;\n");
tryItOut("if(__proto__) { if (<><!--yy--></>) {gc()L:do throw null; while((function(id) { return id }.__lookupGetter__(\"prop\")) && 0); } else \t/*infloop*/while(__count__ = ({ constructor: constructor, constructor: __parent__ }))continue ;}");
tryItOut("/*infloop*/while(constructor.__lookupSetter__(\"__iterator__\")){/*for..in*/for(const __count__ in ((({}).hasOwnProperty)(null)))return; }");
tryItOut("{continue ;if((function(id) { return id } for each (constructor in *::*))) {__count__ =  /x/g , __count__; } else break M; }");
tryItOut("{constructor; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__parent__ in <><x><y/></x></>) yield this;");
tryItOut("try { throw StopIteration; } finally { throw __proto__; } ");
tryItOut("if(prototype%=this) { if (window.watch(\"__iterator__\", (<><x><y/></x></>).watch)) __proto__;} else m");
tryItOut("let (__noSuchMethod__ = this.__defineGetter__(\"__count__\", /a/gi)) { /*infloop*/for(prop; (-0)++; [z1,,]) let (prototype = <x/>, __count__ = (*::*);) { break ; } }");
tryItOut("with(__parent__){throw <x><y/></x>;const __parent__ = true, constructor; }");
tryItOut("L:switch(*) { default: break;  }");
tryItOut("/*infloop*/L:for(const [, ] = constructor.(delete <><x><y/></x></>); ([15,16,17,18].filter(function(q) { return q; }, (({}).hasOwnProperty)() >>= [11,12,13,14].some)); ([[1]] :: <x/>) ? 1.3 * true : (new Function(\"return;\"))().valueOf(\"number\")) {let(__iterator__ = /*for..in*/M:for(var __iterator__ = <x><y/></x> in <x/>) export __parent__;, __count__ = [,,]) { return 0; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let constructor. /* Comment */<x><y/></x> getter= function(q) { return q; } in *::*) {var constructor = false, __noSuchMethod__;\n(3.141592653589793);\n; }");
tryItOut("{return <x><y/></x>; }");
tryItOut("/*infloop*/for(prototype%=*.throw(<x><y/></x>); ((1 for (x in []))); delete <x/>.hasOwnProperty(\"__parent__\")) {return;if(*::* &= this) return; else  if (new __proto__ = __iterator__[this]())  '' ; }");
tryItOut("{var __proto__ =  /x/ ;\nM:if(true)  \"\" ; else  if (<y><z/></y>) yield  /x/g ; else ( /x/ );\nif(\t__count__.__iterator__ setter= function () { yield false; } ) yield; else {({}).hasOwnProperty } }");
tryItOut("let ([, __parent__, ({ __count__: ({ __noSuchMethod__: __count__ }) }), , ({ __parent__: __noSuchMethod__, constructor: ({ prototype: __parent__, prototype: __noSuchMethod__ }) })], __iterator__ = (<x><y/></x> = __parent__ .@*:: #3={a:#3#})) { var __parent__ = <x/>, prop = 0.1; }");
tryItOut("/*infloop*/for(var __proto__;  /x/ ; prototype =  /x/g ) [prototype, , , constructor, ]");
tryItOut("/*infloop*/for(var ({ prop: __count__, __parent__: ({ __parent__: constructor }) }) = <>yyy</>; ((default: case 0: var __parent__, __parent__ = this;break; ;case  /x/g : return #1=[#1#];.__parent__ = *) *= __iterator__ = <x><y/></x>); Array((({constructor: true})), <x><y/></x>)) {return @foo; }");
tryItOut("/*infloop*/L:do {try { yield <><x><y/></x></>; } catch(__proto__ if window) { throw @foo; }  } while(<><x><y/></x></> != <y><z/></y>);");
tryItOut("/*infloop*/for(let __parent__; <><x><y/></x></> != <x><y/></x>.@*; __parent__ @ <x/>) {/*for..in*/for(var (3/0[<><x><y/></x></>]).function::__noSuchMethod__ in <x><y/></x>) let __noSuchMethod__, __proto__;{} }");
tryItOut("([,,z1])");
tryItOut("if() {yield *::*; } else  if ((Math.pow)(prop-=<><x><y/></x></>)) L:if(*) return; else  if ( \"\" ) {export __count__; } else throw <x><y/></x>;");
tryItOut("if(true) break ; else  if (<x><y/></x>) {<><x><y/></x></\t>;continue L; } else export prototype;");
tryItOut("L:if(({prototype: eval(\"<x><y/></x>\", function::prop)})) { if ([15,16,17,18].some(gc, (window.isPrototypeOf(0x99)))) {export constructor; } else {return <><x><y/></x></>;yield this; }}\nexport *;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __proto__ in <y><z/></y>) (<x/>);");
tryItOut("if(arguments) yield case 4: gc()case <x><y/></x>: ( prop function(id) { return id });default: (<x><y/></x>);;yield; else  if (('fafafa'.replace(/a/g, function () { yield (__count__.__noSuchMethod__) } ))) {/*for..in*/for(const constructor = null in #1#) {yield; } }");
tryItOut("do return <><x><y/></x></>; while((<x><y/></x>) && 0);");
tryItOut("return;");
tryItOut("L: return;return;");
tryItOut("/*for..in*/for(const __parent__ in ((#3={a:#3#}, null)(<x/>)))return 1e+81;");
tryItOut("{export __noSuchMethod__; }");
tryItOut("{return @foo; }");
tryItOut("/*for..in*/L:for(var [__noSuchMethod__, constructor] = -3/0.@* in  /x/ ) {export *;default: /*for..in*/for(__proto__ in  /x/g ) export *; }");
tryItOut("L:with(__parent__)/*infloop*/for(<x><y/></x>; window; <x><y/></x>) (false);");
tryItOut("/*for..in*/for(const prop in  /x/ ) var __parent__ = 1.3, constructor = <><x><y/></x></>;");
tryItOut("{throw 1e4; }");
tryItOut("continue ;");
tryItOut("while((*::* for each (__proto__ in <x/>) for each (__count__ in (<x/> >>= this)) for each (constructor in 1e81)) && 0)");
tryItOut("/*infloop*/for(const __iterator__; this.zzz.zzz; (-1)[*]) __iterator__;");
tryItOut("if(new (Function)( /* Comment */1e+81 .@*:: __noSuchMethod__)) {with( /x/ /*\n*/){return <x/>; }\nwindow;var __noSuchMethod__ = (-0); }");
tryItOut("return\n");
tryItOut("M:do let __parent__, __count__ = @foo; while((new String(__count__ = <x><y/></x>, __iterator__).hasOwnProperty(\"constructor\")) && 0);");
tryItOut("var prototype = function ([y]) { }, __proto__ = this;");
tryItOut("return (<x><y/></x>.watch(\"__iterator__\", (__proto__).watch));");
tryItOut("try { return @foo; } catch(__count__) { throw null; } finally { yield; } ");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let (typeof  ''  &= (function ([y]) { })())(<>( /x/  for each (prop in -1))</>) in ) {(__count__.__parent__ = ({__iterator__: *::*(undefined, <x><y/></x>)})); }");
tryItOut("/*infloop*/for(let [prop] = new (<><x><y/></x></>)(<><x><y/></x></>); [z1,,]; [,].valueOf(\"number\")) (constructor);");
tryItOut("/*infloop*/for(let ({ __noSuchMethod__: [, , __count__], __proto__: ({ constructor: ({ __count__: __proto__, prototype: [] }) }) }) = (__iterator__ = <y><z/></y>.valueOf(\"number\")); (eval(\"return __count__;\", this).hasOwnProperty(\"constructor\")); ) prop = <x><y/></x>, prototype;");
tryItOut("with({__proto__:  \"\" .__defineGetter__(\"x::__parent__\", (1 for (x in [])))}){export *;\nthrow <><x><y/></x></>;\n }");
tryItOut("__proto__export *;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __noSuchMethod__ in each = (prop getter: Math.pow%=__iterator__[<y><z/></y>])) {/*infloop*/L:for(const [, ] = #1=[#1#]; (yield <x/>); new function  constructor () \"\" ()) {export *;; }; }");
tryItOut("{/*for..in*/for(let [__iterator__, __count__] = (-0 >> <x/>) in [new Error( \"\" )].some((1 for (x in [])))) /*infloop*/M:do const prop = <><x><y/></x></>, prototype;\f while(*::* >> *); }");
tryItOut("L:with(function () {  } (1e+81)){gc() }");
tryItOut("throw StopIteration;");
tryItOut("for(let y in [5,6,7,8]) with({}) let(constructor, prop = window) ((function(){for(let y in []);})());");
tryItOut("\fM:while((__parent__ = <><x><y/></x></>) && 0){{}export *; }");
tryItOut("let(__noSuchMethod__( /* Comment */<><x><y/></x></>)) { for(let y in []);");
tryItOut("/*infloop*/for((eval(\"if((-1)) yield <x><y/></x>; else  if (null) let __count__ = [1]; else {export *;break L; }\", )); prototype = this; *) {{}throw <x/>; }");
tryItOut("do export *; while((<><x><y/></x></>) && 0);");
tryItOut("L:switch(window.unwatch(\"each\")) { case 2: break; default: break;  }");
tryItOut("while((__iterator__ = <y><z/></y> >> __iterator__ = <x><y/></x>) && 0){throw prop; }");
tryItOut("/*for..in*/for(const case 0(#1#, *::*): yield;break;  in ((false)(prototype *= <><x><y/></x></>)))let __noSuchMethod__ = prototype;");
tryItOut("return (((<y><z/></y>).watch)(<x><y/></x>).eval(<><bbb xmlns=\"<x><y/></x>.yoyo(3/0)\"><!--yy--></bbb></>));");
tryItOut(" /x/ \n");
tryItOut("{yield <y><z/></y>;/*for..in*//* nogeckoex bug 349964 */L: for  each(function::prop in @foo) return __count__; }");
tryItOut("return\n");
tryItOut("/*for..in*/M:for([__iterator__, __parent__] =  ''  in constructor.__proto__-=(__count__ = Exception(constructor.__defineGetter__(\"constructor\", <x><y/></x>)))) {/*infloop*/for(var __count__ = (prototype.prototype getter= function (__proto__, __iterator__) { yield  ''  } ); function(id) { return id }; this) {{}; }while(((( \"\"  ? @foo :  { yield ((((1 for (x in []))).apply).call((<><x><y/></x></> ? undefined : <x/>), )) } )[<><x><y/></x></>.hasOwnProperty(\"constructor\")])) && 0); }");
tryItOut("let (function::__iterator__, __parent__) { return; }");
tryItOut("return;");
tryItOut("return 5.0000000000000000000000 -= {}.yoyo(({ set __parent__(__proto__, __count__)<x><y/></x> }));");
tryItOut("return;");
tryItOut("/*for..in*/for([constructor, __parent__] = gc in  \"\"  = __count__) /*for..in*//* nogeckoex bug 349964 */ for  each(const __parent__ in *::*) const __iterator__, prototype = 1.2e3; const constructor;");
tryItOut("{let (__noSuchMethod__, __count__)\t { {} } }");
tryItOut("let let, __parent__;");
tryItOut("if((Function)()) function (__iterator__, __iterator__) { return *::* }  else  if (window) {return <y><z/></y>; }");
tryItOut("/*infloop*/for((\n /x/ .*); (this.__defineGetter__(\"__parent__\", (( '' ).call).call).propertyIsEnumerable(\"__noSuchMethod__\")); __count__.__proto__) ");
tryItOut("/*infloop*/do gc() while(function::prop);");
tryItOut("if([,].propertyIsEnumerable(\"__count__\"))  /x/ ; else  if ([*, __proto__, ({ prop: [] }), [], ] = !! '' ) if(<x><y/></x>) { if (new ({}).__lookupGetter__()) {export *; }} else return __count__; else {yield prototype; }");
tryItOut("return;");
tryItOut("with({__iterator__: return;}){( /x/ );export *; }");
tryItOut("/*for..in*/for(let __proto__ = (--((p={}, (p.z = window)()))) in this.__defineSetter__(\"constructor\", Math.pow)) /*infloop*/M:while(([ '' ])) } const [({ prop: prop, __parent__: prop }), [], x::prop, ({ each: __proto__, __iterator__: constructor }), ];");
tryItOut("return  /x/ .__noSuchMethod__;");
tryItOut("let (prototype = Date(*) |= __count__, x::constructor = (*::* instanceof arguments)) { ; }");
tryItOut("prototype = __iterator__;");
tryItOut("/*for..in*/for(var constructor = new ((0.1.__defineSetter__(\"__parent__\", function (__iterator__)<x/>)).watch)(prototype, window *= <y><z/></y>) in (__proto__%=false)) {(<y><z/></y>);/*for..in*/L:for(let prop = <x><y/></x> in <x><y/></x>) {return; } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __noSuchMethod__((let (__iterator__, __count__) [1] ^ __parent__.__parent__ getter= (function::constructor\t).watch)).__parent__ in ([([15,16,17,18].filter(Math.sin, this)) for ((prop) in *) if (<y><z/></y>)])) M:with({__proto__: 033}){const setter, __noSuchMethod__ = false; }");
tryItOut("/*for..in*/for(__noSuchMethod__ in  \"\" ) return;");
tryItOut("throw __parent__;");
tryItOut("export prototype;");
tryItOut("{{}gc() }");
tryItOut("if(((__noSuchMethod__) = yield (-0)) >= __proto__) /*infloop*/for(const prototype; (-prototype); -3/0) {yield; }");
tryItOut("while(((1e4.__lookupSetter__(\"new Object()\"))) && 0)");
tryItOut("do {throw undefined; } while(((__count__ = this.zzz.zzz)) && 0);");
tryItOut("with(Object( /x/ )){Math.sin }");
tryItOut("/*infloop*/M:for(let __count__; ((p={}, (p.z = __noSuchMethod__ = {}.throw(#1#.__lookupSetter__(\"__count__\")))()));  /x/ ) if(<x><y/></x>.__parent__.constructor) {[,,]; }");
tryItOut("let (__proto__ = <y><z/></y>.throw(1e4), __parent__) { ; }");
tryItOut("if(__proto__) {/*for..in*/for(const [prop, __noSuchMethod__] = ({}) in <y><z/></y>[1.2e3]) {export *; }/*infloop*/while(<y><z/></y>); } else  if (([15,16,17,18].filter([1,2,3,4].slice, <y><z/></y>.__lookupSetter__(\"<><x><y/></x></>\")).valueOf(\"number\"))) {yield *[3.141592653589793]; }");
tryItOut("{}");
tryItOut("switch([11,12,13,14].sort) { default: case 6: (@foo);case (window += <y><z/></y>): break;  }");
tryItOut("if(__count__) var __count__, __proto__ = -3/0; else  if (<y><z/></y>.yoyo(__count__.__proto__)) {(-1); }");
tryItOut("if((<x><y\f/></x> for (__count__ in true) for each (prototype in __iterator__))) {} else ( /x/ );");
tryItOut("/*infloop*/do {yield;throw <><x><y/></x></>; } while(@foo);");
tryItOut("throw <x/>;var prototype, __count__;");
tryItOut("try { let(__noSuchMethod__) { yield; } catch(__parent__) { prop = __parent__; } ");
tryItOut("switch(<employee id=\"1\"><name>Joe</name><age>20</age></employee>) { case arguments: <x/>break;  }");
tryItOut("/*for..in*/prop: (new 0/0(*::*))");
tryItOut("L: {set = function(id) { return id }, __iterator__ = false;export *; }");
tryItOut("let (__parent__ = (prototype), __count__ = window) { return; }");
tryItOut("if(<><x><y/></x></> %= <x/>) {function::constructor; }");
tryItOut("__parent__ = prop;");
tryItOut("/*for..in*/for(var __iterator__ in ((/a/gi)(( /x/g  /= <y><z/></y>.isPrototypeOf((new RangeError())))))){throw @foo;return window; }");
tryItOut("L: {__parent__ = @foo; }");
tryItOut("/*infloop*/for((eval(\"var __noSuchMethod__ = prototype, prototype;\", __parent__ = <><x><y/></x></>)); (({}).__lookupGetter__({}, function(id) { return id }).__noSuchMethod__ = ( ''  *= null)) !==  ''  |= @foo; ~[11,12,13,14].map) {__parent__; }");
tryItOut("let(__noSuchMethod__) ((function(){})());");
tryItOut("/*infloop*/for(__parent__ = <x><y/></x>.__parent__ =  '' ; new  /* Comment */<x><y/></x>(({prop: function(id) { return id } }), @foo); ([15,16,17,18].map(eval, <x><y/></x>).unwatch(\"__iterator__\") .. 1.3[<x/>]) >>= new this()\f) export prototype;");
tryItOut("return;");
tryItOut("{(true if (null));new Function }");
tryItOut("do constructor, __noSuchMethod__; while(((([[1]]).__defineSetter__(({a2:z2}), @foo))) && 0);");
tryItOut("throw StopIteration;");
tryItOut("/*infloop*/M:for(const __noSuchMethod__ = <><x><y/></x></>;  /x/g ; @foo) {<><x><y/></x></>; }");
tryItOut("/*infloop*/for( /x/g .@*; (let = undefined); <><xxx>{__iterator__}</xxx></>) var __parent__;");
tryItOut("/*infloop*/for(({ constructor: ({ function::constructor: [, ], set: [, __count__] }), __iterator__: ({ __parent__: ({ __noSuchMethod__: ({ __noSuchMethod__: constructor, __parent__: ({ prop: prop, prop: __proto__ }) }), constructor: ({ prototype: ({ __noSuchMethod__: __iterator__ }) }) }) }) }) =  '' .*; ({__proto__: <x><y/></x>++}); ([, ({ __noSuchMethod__: constructor })] = ([,]).propertyIsEnumerable(\"__noSuchMethod__\") % try { return; } catch(prop) { (<><x><y/></x></>); } finally { gc() }  = __noSuchMethod__)) {if(eval(\" /x/ \", <x><y/></x>)) Functionif((p={}, (p.z = #1=[#1#])())) { if (__count__.__count__ = -1) {__proto__ = @foo, __proto__; } else <><x><y/></x></>\f} }");
tryItOut("switch(([this].sort(function(q) { return q; }) >= new null.@foo)) { default: break; /*for..in*/M:for(prototype in ((<x><y/></x>)( \"\" )))return window;break; case null.watch(\"__proto__\", gc): case 8: export constructor;case __noSuchMethod__ = * -= <y><z/></y>.@foo: gc()break;  }");
tryItOut("do let __noSuchMethod__, __iterator__ = [[]]\t; while(([,]) && 0);");
tryItOut("throw __iterator__\nyield\n{}");
tryItOut("{yield #1=[#1#]; }");
tryItOut("if(new function  prop (prototype, __count__) { return <y><z/></y>.yoyo(false) } (<><zzz>function ([y]) { }</zzz></>, (yield  '' ))) export *");
tryItOut("__noSuchMethod__\n\n");
tryItOut("if(*.prop = <x><y/></x>) { if ('fafafa'.replace(/a/g, /a/gi)) {} else continue ;}\n");
tryItOut("M:switch((__count__) / this() ^= 'fafafa'.replace(/a/g, *::*)) { default: if(constructor) {export *; }case 3: yield;break;  }");
tryItOut("gc()");
tryItOut("case function ([y]) { } .. <x><y/></x>: throw window;break; \n");
tryItOut("__count__; const prop;");
tryItOut("let(__count__, __proto__) { throw StopIteration;");
tryItOut("try { __noSuchMethod__ = constructor; } catch(prototype if (function(){throw StopIteration;})()) { with({}) __noSuchMethod__ = __parent__; } catch(__iterator__ if (function(){export __parent__;})()) { export *; } catch(prototype) { return 1.3; } ");
tryItOut("yield;return;");
tryItOut("L: <x><y/></x>");
tryItOut("/*for..in*/for(var __iterator__ = ([__noSuchMethod__].some(function  [1,2,3,4].map () { return __count__ = ([11,12,13,14].some) } )) in *()) {; }");
tryItOut("/*for..in*/M:for(const @foo['__proto__'] in ((let (__iterator__) #3={a:#3#})(true , <><x><y/></x></>)))/*infloop*/for(__count__ = (<x/>); (set = prop); eval(\"033\", <x/>)) const prop = [,,], constructor = __noSuchMethod__;");
tryItOut("switch(prop.throw(0x99)) { case window.eval( /x/ ): break; default: /*for..in*/M:for(let constructor in @foo) {export *; }break; case 9: /*infloop*/for(prop; false; <><x><y/></x></>) {const __proto__;prototype = window, prop; }case 0: break M;break;  }");
tryItOut("/*for..in*/for(__parent__ in ((({}).__lookupGetter__)(\n<xxx {__iterator__}={prop} />))){if(*) export  set function::__proto__(__noSuchMethod__, __count__) { break ; } ; else yield; }");
tryItOut("L: {__count__; }");
tryItOut("/*infloop*/for(const [] = <y><z/></y>; ; __noSuchMethod__ = -3/0.eval(#1=__parent__).isPrototypeOf((__parent__).call(<y><z/></y>, ))) export __count__");
tryItOut("while((<><x><y/></x></>) && 0){;return .2; }");
tryItOut("with({}) { return; } \n");
tryItOut("(p={}, (p.z =  &= __proto__ = *)());");
tryItOut("with({__iterator__: undefined}){gc()gc }\nreturn window;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__proto__ in <x><y/></x>) throw <x><y/></x>;");
tryItOut("[, , ({ constructor: ({ prop: [, , ({ __proto__: [({ constructor: prototype, function::prop: [, , __iterator__, [prototype]] })] })] }), __count__: [] })]");
tryItOut("return null *= this;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const [, , ] in <x/>(*::*).__defineGetter__(\"prototype\", [1,2,3,4].slice)) {{} }");
tryItOut("/*infloop*/for(const __noSuchMethod__ = ((p={}, (p.z = null)())); (new (({__parent__:  ''  }))(Object(.2), <y><z/></y>)); null / __noSuchMethod__ .. ((-0) if ( \"\" ))) {<y><z/></y>; const __parent__; }");
tryItOut("{const __proto__ =  /x/g , __iterator__;(033); }");
tryItOut("if(__iterator__) continue M; else  if (*::*) {return *::*;return; }");
tryItOut("/*infloop*/for(({ __noSuchMethod__: ({ __iterator__: ({ constructor: __proto__ }), constructor: ({ __noSuchMethod__: ({ prop: __iterator__, __parent__: [] }) }) }) }) = <bbb xmlns:ccc=\"((prototype) = \f[15,16,17,18].sort(/a/gi, <y><z/></y>).__defineSetter__(\"__parent__\", [1,2,3,4].slice))\"><ccc:eee></ccc:eee></bbb> | {}; #1=[#1#] ? [z1] : undefined; (eval(\" /* Comment */<x><y/></x> for (__iterator__ in <y><z/></y>)\", eval(\"<><x><y/></x></>\", 1e81), ([1,,] << prop)\n.*))) {export prop\nreturn <><x><y/></x></>; }");
tryItOut("yield 1e+81;\nif('fafafa'\f.replace(/a/g, Math.sin)) { if (function::__iterator__) __parent__} else function(y) { yield y; yield;; yield y; }\n");
tryItOut("with((Math.pow())){<y><z/></y>; }");
tryItOut("M:while((([11,12,13,14].some)) && 0){__proto__ = trueM:if((<x><y/></x> > 4.)) {export constructor; } else  if (\nthis.hasOwnProperty(\"__parent__\")) {yield true;export *; } else {; } }");
tryItOut("with((new Function(\"yield <><x><y/></x></>;\"))( \"\" )){{} }");
tryItOut("continue M;/*infloop*/for(var __parent__; [,]; null) {{} }");
tryItOut("while(((__proto__.function::__proto__ getter= )) && 0){Math.powlet __count__, prototype = __noSuchMethod__; }");
tryItOut("while(((window.eval(new (__proto__\f = [,,z1])()))) && 0)let __count__ = __parent__, __proto__ = window;");
tryItOut("function::constructor = __noSuchMethod__;");
tryItOut("{M:switch(prop &= ([[1]].propertyIsEnumerable(\"__count__\"))) { default: <x/>;return;break;  } }");
tryItOut("let (({ __parent__: __parent__, prototype: ({ __parent__: __parent__ }) }) = undefined >= <><x><y/></x></>) { /*for..in*//* nogeckoex bug 349964 */ for  each(let __proto__ in -0) <x/> }");
tryItOut("/a/gi\n");
tryItOut("constructor;");
tryItOut("switch(-1.yoyo(<x/>) -= prop = prop) { default: break; case ((0 |= <><x><y/></x></>) < ++window): export *;case prop.constructor = (window[window]): case 3:  }");
tryItOut("if(__iterator__ = prototype) {/*for..in*/for(let [__count__, __iterator__] = true in  /x/ ) {return <x><y/></x>;(__proto__).watch }let function::function::__iterator__ = <><x><y/></x><//*\n*/>; }");
tryItOut("{__noSuchMethod__;constructor; }\n");
tryItOut("for(let y in []);");
tryItOut("try { export *; } catch(__noSuchMethod__) { throw <><x><\fy/></x></>; }  const __proto__;");
tryItOut("/*for..in*/for(var [__noSuchMethod__, __noSuchMethod__] = (new (null)(0.1, (-0)) ^= (window.unwatch(\"__proto__\"))) in prototype = @foo) {L: export __noSuchMethod__; const constructor; }");
tryItOut("[, , , , prop]");
