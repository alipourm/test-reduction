tryItOut("if(@foo.__lookupGetter__(\"prototype\")) { if (this && <><x><y/></x></>) export prototype; else continue ;}");
tryItOut("M:if(({ __count__: [] }) = <><x><y/></x> </>) (prop.throw(window) != constructor = function(id) { return id })((window for each (__iterator__ in #3={a:#3#}))) else  if ((true ^ 3/0)) {const __proto__ = *, constructor;yield undefined; }");
tryItOut("/*for..in*/for([__parent__, __count__] = try { __parent__; } catch(prototype) { gc } finally { var __parent__ =  /x/g , prop = __count__; }  in window)  set __noSuchMethod__() { return <x/> } ;");
tryItOut("/*for..in*/for(const function::__iterator__.prototype in <x><y/></x>) continue M\ncontinue M;");
tryItOut("/*infloop*/do {\tif(<><x><y/></x></> >> -3/0 > __noSuchMethod__.__proto__ setter= function  __proto__ (__proto__) { yield 0x99 } ) {; } else {return;break L; } } while( /* Comment */@foo\f);");
tryItOut("/*for..in*/for(const [constructor, [[], prop]] = ( /* Comment */(prop = (function ([y]) { })())) in __noSuchMethod__) {if(1e-81) {{}yield; } else true\n3.141592653589793; }for(let y in [5,6,7,8]) let(__noSuchMethod__) ((function(){constructor = __noSuchMethod__;})());");
tryItOut("yield\n{<x><y/></x>['__noSuchMethod__']if( /x/ ) { if (<><x><y/></x></> ^ <><x><y/></x></>.prototype) export __count__;} else {throw __proto__; }\nexport prop;\n }");
tryItOut("{M:if(<y><z/></y>) <x/> }let (prop = ( /* Comment */yield;) < (<x><y/></x>.prop), prop) { var 1e+81 = prop, __proto__; }");
tryItOut("let (prototype = (false @ prototype)) { gc() }");
tryItOut("/*for..in*/for(let prototype in (<><x><y/></x></>.__defineSetter__(\"__noSuchMethod__\", (this).watch))) {prop }");
tryItOut("return;");
tryItOut("if(__parent__) { if (new new ( /x/ )()) {throw !__proto__;throw (this.__defineSetter__(\"__parent__\", (new Function).call)); }} else {{{}\nL:if((new true())) return <y><z/></y>; else  if (constructor.__parent__ getter=  /x/g ) {yield; } else var __iterator__ = <><x><y/></x></>; } }");
tryItOut("if(undefined.__lookupGetter__(\"__count__\") ^ [<x><y/></x>].some(window)) { if (arguments) {if(<y><z/></y>.unwatch(\"constructor\")) break ; else  if (__parent__ =  { yield (({constructor getter: <x><y/></x>, prototype: null })\t) } ) constructor; else <><x><y/></x></>;let constructor, prop = ({a1:1});\nyield;\n } else {/*for..in*/L:for(let [prototype, __parent__] = prototype.watch(\"__parent__\", <x><y/></x>) in undefined) /*for..in*/for(const __count__ in ((({}).hasOwnProperty)(__count__))){__iterator__;continue L; }/*for..in*/for(let __noSuchMethod__.__noSuchMethod__ in ((function  __parent__ (__parent__, constructor) { return (this.__defineGetter__(\"prototype\", __parent__)) } )((yield @foo.yoyo([,,]))))){export __parent__;return this; } }}");
tryItOut("if( /x/ .__count__ = constructor) { if (prop) {{} }} else yield ({a1:1});");
tryItOut("<bbb xmlns:ccc=\"__count__.x::__iterator__ getter= Math.pow\"><ccc:eee></ccc:eee></bbb>");
tryItOut("{throw  '' ;\r\nL: {do throw @foo; while((({a1:1}) != this) && 0); } }");
tryItOut("throw StopIteration;");
tryItOut("yield;");
tryItOut("for(let y in []);");
tryItOut("/*infloop*/M:while(({ constructor: [constructor, __noSuchMethod__], __count__: [, ] }) = ({ __parent__: constructor }))__parent__: 3");
tryItOut("/*infloop*/for(new (<x/> ?  ''  : <x/>)(<).valueOf(\"number\"); function(id) { return id };  /x/  if ([,]) * new Number(<><x><y/></x></>)) {return; }");
tryItOut("export __proto__\nreturn;");
tryItOut("({ __proto__: ({ prop: ({ __proto__: [__noSuchMethod__, , ] }), __proto__: ({ __noSuchMethod__: ({ prop: constructor, __iterator__: delete }), __iterator__: __proto__ }) }) })");
tryItOut("return;");
tryItOut("with((uneval(<><x><y/></x></>)))return @foo;");
tryItOut("throw __iterator__; const __count__;\nexport *;\n\nwith()throw __count__;");
tryItOut("return this((function ([y]) { })(), true);");
tryItOut("M:while(( /x/g ) && 0){( '' ); }");
tryItOut("__parent__ = constructor;");
tryItOut("/*for..in*/L:for(const [prop, prop] = undefined in 1.3) throw 1.2e3;");
tryItOut("{throw @foo; }");
tryItOut("");
tryItOut("L:if(<x><y/></x> & <><x><y/></x></>) __parent__; else  if (<y><z/></y> .@x:: __parent__ for (__noSuchMethod__ in <x><y/></x>)) break L;\n");
tryItOut("/*infloop*/while([[1]].map(Math.sin))export *\n");
tryItOut("let (__proto__, ({ __parent__: ({ __parent__: [, ] }), prototype: __proto__ })) { gc() }");
tryItOut("let (prop = <><x><y/></x></>) { export */*; }");
tryItOut("/*infloop*/L:for(let [({ __count__: [({ prototype: [__parent__, __proto__, ], constructor: __count__ }), __iterator__, ({ (<y><z/></y>)(-3/0): ({ prop: prop }) }), ], __proto__: ({ constructor: constructor, __iterator__: __iterator__ }) }), , ({ __proto__: ({ prop: [], prop: ({ __parent__: __proto__, prop: [constructor, prototype, __proto__] }) }), __noSuchMethod__: ({ prop: __count__ }) })] = -3/0; [break L].some(this).propertyIsEnumerable(\"function::__noSuchMethod__\"); prototype = @foo <<= undefined.valueOf(\"number\")) {; }");
tryItOut("L: gc()\nreturn <><x><y/></x></>;\n");
tryItOut("if(!(({ __proto__: ({ constructor: constructor, constructor: prop//h\n }), __parent__: [prototype, __iterator__, __parent__, ] }) = [({ __noSuchMethod__: let, __parent__: __proto__ })])) { if (3.hasOwnProperty(\"__count__\")) /*for..in*//* nogeckoex bug 349964 */ for  each(let @foo in undefined) /*for..in*/for(const __parent__ = (constructor.__noSuchMethod__ = ((yield #1=[#1#]))) in  /x/ ) {let constructor =  /x/g , prop; } else switch(arguments) { default: return __iterator__;break;  }}");
tryItOut("/*infloop*/while(window)gc()");
tryItOut("L:with({__iterator__: ((<y><z/></y>).call(window, )).hasOwnProperty(\"__parent__\")}){gc() }\n(__iterator__ = __iterator__).watch\n");
tryItOut("/*infloop*/for(const prototype; (<x><y/></x>true); @foo !== <x><y/></x>) throw false;");
tryItOut("continue M;\n'haha'.split\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const yield ( \"\" .__lookupSetter__(\"__count__\"))['__iterator__'] in Function()) {if(__noSuchMethod__.__lookupSetter__(\"x::__parent__\")) {return  '' ; } else throw prototype; }");
tryItOut("if(new Array()) yield <x><y/></x>; else {throw <><x><y/></x></>; }");
tryItOut("switch([,,z1]) { case 0: {}break; default: break;  }\n/*infloop*/for(const constructor; (( /x/ .eval(__parent__))()); (typeof window ? constructor.constructor getter= (*).watch.__proto__ : this.yoyo(0.1))) {yield <x/>; }");
tryItOut("/*infloop*/do export __parent__; while((-1));");
tryItOut("/*infloop*/L:while((prop.__defineGetter__(\"constructor\", <x/>))){switch(true) { default: <><x><y/><\t/x></>; } }");
tryItOut("/*for..in*/for(function::__iterator__ in *) {{} } const __proto__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let __iterator__.__parent__ in true) /*infloop*/for(<y><z/></y>; __count__; <x/>) {gc(){} }");
tryItOut("{;export *; }");
tryItOut("M:with({prototype: (-(__iterator__ =  '' ))}){return;throw <x/>; }");
tryItOut("__proto__");
tryItOut("gc()");
tryItOut("M:if(( \"\"  = 3/0)) {throw *;return; } else null;");
tryItOut("constructor = constructor;");
tryItOut("{ }");
tryItOut("for(let y in []);");
tryItOut("{const constructor = this, __noSuchMethod__ = <x><y/></x>; }");
tryItOut("const __noSuchMethod__ = window;\ngc()\n");
tryItOut("with({(\f{ __iterator__: [__iterator__], __proto__: ({ __count__: prop }) }): (__iterator__.(<>window</>))})export *;");
tryItOut("/*infloop*/while(new <><x><y/></x></>())yield this;");
tryItOut("/*infloop*/do {export __proto__;return; } while(true);");
tryItOut("yield window;");
tryItOut("{/*infloop*/for(let __proto__; @foo;  \"\" ) {;{} } }");
tryItOut("with((prototype = constructor.__count__ = __parent__ << <><x><y/></x></>))return;");
tryItOut("M:if( ''  >>= \n[<><x><y/></x></>]) {{}constructor/*for..in*//* nogeckoex bug 349964 */L: for  each(let __iterator__ in  /x/g ) {(<><x><y/></x></>);break L; } }");
tryItOut("if(\f<x><y/></x>.(4.)) yield; else  if (__iterator__ = <><x><y/></x></>) {;return; }");
tryItOut("switch(#3={a:#3#} = undefined) { default: break; __count__break; break; throw prototype;break;  }");
tryItOut("throw StopIteration;");
tryItOut("throw  /x/ \n(gc).apply");
tryItOut("if((p={}, (p.z = function () { return <x/> } )())) { if ((<x><y/></x>[undefined])) export *;} else {__iterator__ }");
tryItOut("with({}) let __parent__;");
tryItOut("L:if(typeof [1]) { if (undefined) with(prototype.constructor ? <><x><y/></x></> /= Array() : this){return; }} else const __noSuchMethod__, __proto__ = @foo;");
tryItOut("/*for..in*/for(var <x><y/></x>['prop'] in (([1,2,3,4].slice)(this.__defineSetter__(\"__count__\",  get __iterator__(prototype)((<><x><y/></x></>)(<x><y/></x>, ))))))gc()");
tryItOut("/*for..in*/for(const [__count__, prop] = <xxx {prototype}={<><x><y/></x></>} /> in true) {/*for..in*//* nogeckoex bug 349964 */ for  each(const prop in  '' ) gc() }");
tryItOut("/*for..in*/for([prop, __iterator__] = <x><y/></x> in <y><z/></y>) {return; }");
tryItOut("if([11,12,13,14].sort) {function(q) { return q; }M:if(<y><z/></y> > <><x><y/></x></>) eval else {window } } else  if (({ constructor: [, ] }) = [15,16,17,18].sort((<y><z/></y>).watch, (-1))\n) {function::prototype;/*infloop*/L:do break ; while( /x/ ); }");
tryItOut("{export prototype; }");
tryItOut("");
tryItOut("/*for..in*/for(__noSuchMethod__ in undefined) M:if(+window) export __iterator__;");
tryItOut("throw function ([y]) { }\ngc() const __parent__;");
tryItOut("/*infloop*/M:for(let ({  set ({ prototype: __proto__ }) __count__ () { return new (( \"\" ).watch)() } : ({ __noSuchMethod__: ({ __noSuchMethod__: prototype }), prop: __count__ }) }) = this.__lookupGetter__(\"__proto__\"); __parent__ = #0=[__parent__] >= [*]; ([11,12,13,14].filter)) var prototype = <x/>;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __count__ in <x><y/></x>) {set; }");
tryItOut("with(window /= (true if (prototype)))*;");
tryItOut("yield;");
tryItOut("window const __count__;");
tryItOut("/*for..in*/L:for([] in (@foo.__count__)) prop = 1e+81, __iterator__ = <y><z/></y>;");
tryItOut("this.zzz.zzz;\nif(window) { if (<x><y/></x>--) eval} else {return;return window; }\n");
tryItOut("let (__parent__) {  }");
tryItOut("L: {continue M;const  { yield (__parent__ = __parent__ = __iterator__) } ; }");
tryItOut("throw StopIteration;");
tryItOut("with(<x><y/></x>)window");
tryItOut("L:if(this.zzz.zzz) {const prop = <x><y/></x>;return  \"\" ; } else  if (({ constructor: prop, prop: prototype })) return null;");
tryItOut("while((<x/>) && 0){export *;var constructor; }");
tryItOut("*");
tryItOut(";true;");
tryItOut("/*infloop*/for(const __parent__ = <y><z/></y>; (-1);  /x/ ) ;{}\n");
tryItOut("if(({a2:z2}) -= null) { if ((0 | window) |= ([15,16,17,18].filter(function(q) { return q; }, <><{__iterator__}></{__iterator__}></>))) throw <><x><y/></x></>;} else {continue L; }");
tryItOut("return;");
tryItOut("L:switch((this.zzz.zzz)) { case 5: throw StopIteration;break;  }");
tryItOut("/*infloop*/for(__count__ = (*::* = (([15,16,17,18].sort\t((new Function(\"gc()\")), <><x><y/></x></>)))(({__iterator__: window}), eval(\"(__parent__);\", true))); ((<x><y/></x> %= *::*).prototype === ([1,2,3,4].map))\n; prototype) {return; }");
tryItOut("return;\n\n");
tryItOut("if(0x99 -= <x><y/></x>) {if(3) {{}let __noSuchMethod__, __iterator__ = (function ([y]) { })(); } else  if (<x><y/></x>) return *; } else  if (1e4) gc else {{}yield; }");
tryItOut("throw @foo;\nyield __proto__;\n");
tryItOut("{}");
tryItOut("var __noSuchMethod__ = <x/>, prototype;");
tryItOut("/*for..in*/for(const [prop, __parent__] = <y><z/></y> /= <x><y/></x> in [prototype = [,,z1]]) {let (__count__ = window) { \nif(<x><y/></x>) var prototype, getter; else  if (null) export *; }yield undefined; }");
tryItOut("/*infloop*/M:for(var constructor = false; ([].__lookupSetter__(\"prototype\")); true) /*for..in*/M:for(let __noSuchMethod__ in <x><y/></x>) ;");
tryItOut("if(__iterator__ ? * : 1e+81) { if (<><x><y/></x></>['__parent__']-=__noSuchMethod__ = <y><z/></y>) {break ;gc() } else {<y><z/></y>;{} }}\nL: return __noSuchMethod__;");
tryItOut("let (__proto__, __noSuchMethod__) { ; }\nM:while(((undefined)) && 0)function () { const __proto__ = <x><y/></x>, __noSuchMethod__ = <y><z/></y>; } ");
tryItOut("switch(new (Error(false)).__defineSetter__(\"__proto__\", function ()(#1#\t ? window : __noSuchMethod__))(new ()( \"\"  .. *::*.unwatch(\"__iterator__\")), ((Function).call).call(false, <><x><y/></x></>,  /x/ ))) { default: /*for..in*//* nogeckoex bug 349964 */ for  each(let prop in __noSuchMethod__.prop) {switch(<y><z/></y>) { case  \"\" : break;  }\nthrow 0;\ngc() } }");
tryItOut("return;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(var (__proto__) in <y><z/></y>.__defineSetter__(\"prop\", gc)) {gc()throw 0; }");
tryItOut("try { __proto__ = prototype; } catch(constructor if (function(){__parent__(-3/0) = prop;})()) { for(let y in [5,6,7,8]) with({}) { throw StopIteration; }  } catch(__noSuchMethod__) { let(({ __parent__: ({ __iterator__: prop }) }) = ( \"\"  for each (prop in  '' )).throw(try { prototype = <x><y/></x>; } finally { ([]); } )) ((function(){yield <x><y/></x> if (<x><y/></x>);})()); } finally { this.__defineSetter__(\"__iterator__\", function(y) { yield y; return;; yield y; })['__count__'] = __proto__; } ");
tryItOut("/*infloop*/L:for(<x/>;  \"\" ; (-0)) ;");
tryItOut("/*infloop*/L:for(undefined; *::*; *) {export constructor; }");
tryItOut("/*for..in*/for(const [__proto__, __iterator__] = (()(<y><z/></y>)[return]) in +__iterator__ = .2 = [11,12,13,14].sort) {return;do new Function while((__parent__) && 0); }");
tryItOut(";");
tryItOut("L:switch(-3/0) { default: with({prop: new <employee id=\"1\"><name>Joe</name><age>20</age></employee>()})if(([1,2,3,4].map).call( /x/g , )) { if ((*::* ? <x/> : <y><z/></y>)/*\n*/) return; else {; }}break;  }");
tryItOut("if(1e-81.hasOwnProperty(\"__parent__\")) { if ((!(yield <x/>)).unwatch(\"prop\")) {nullexport *; }} else {L: export __count__;let (__proto__ = *::*.__defineGetter__(\"__parent__\", Math.sin) ? (void <><x><y/></x></>) : (({__noSuchMethod__: __proto__})), __iterator__ = (-0).watch(\"__iterator__\", eval)) { yield prop; } }");
tryItOut("let(prop) ((function(){with({}) { case Number( /x/ , [1]): break; default: ;/*for..in*/for(prop in <><x><y/></x></>) ( /x/ );break; break;  } })());");
tryItOut("gc()\nprop;\n");
tryItOut("");
tryItOut("/*for..in*/L:for(var [constructor, __count__] = <><x><y/></x></> in this) {}");
tryItOut("M:with({constructor:  /* Comment */0.1}){} const __parent__;");
tryItOut("try { return true; } finally { __noSuchMethod__ } ");
tryItOut("L: {/*for..in*/for(let __parent__ in ((function  __iterator__ ()<x/>)(undefined)))function(y) { yield y; export __proto__;; yield y; } }");
tryItOut("for(let y in []);");
tryItOut("/*infloop*/for(let __parent__; (\n /x/ ); eval(\"@foo\", 1.2e3)) {export prop; }");
tryItOut("/*for..in*/L:for(let [prop, __proto__] = -(uneval()) in 0x99) {}\ngc()\n");
tryItOut("gc()\n");
tryItOut("L:switch(__proto__) { default: continue ;break;  }");
tryItOut("/*infloop*/L:for(const constructor; (__noSuchMethod__.eval( /x/g )\n); (new Function(\"export *;\"))()) \fM:if([11,12,13,14].map) __count__; else  if ((prototype.valueOf(\"number\"))) continue L; else {yield this; }");
tryItOut("constructor = prototype;");
tryItOut("M:if(window) { if ((1 for (x in []))) {if(({__iterator__: __noSuchMethod__})) { if ((3.141592653589793.prototype = __noSuchMethod__)) {export *;; }} else {var prop = this; } }} else {{} }");
tryItOut("M:if(++ '' ) throw StopIteration;");
tryItOut("{yield\ngc()\nwhile((__iterator__ = <x/> >>= new (window)( \"\" , <><x><y/></x></>)) && 0){throw false;yield <><x><y/></x></>; }\n((-0)); }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each((__parent__(<x><y/></x>.__defineGetter__(\"__noSuchMethod__\", function (__parent__)*::*))) in undefined.@*) {if(null)  else  if (constructor) (<y><z/></y>);; }");
tryItOut("continue L; const __count__;");
tryItOut("/*for..in*/for(false.__proto__ in [15,16,17,18].sort(Math.pow, *)--) {return; }");
tryItOut("while((*) && 0){(__proto__);5.0000000000000000000000; }");
tryItOut("M:with({<>this.__defineSetter__(\"prototype\", 0).prop</>: __noSuchMethod__}){let(prop = ( /x/ .yoyo(<><x><y/></x></>)), set) ((function(){return;})()); }");
tryItOut("this.zzz.zzz;");
tryItOut("var __iterator__ = 033, __noSuchMethod__ = V;");
tryItOut("L: {while(([1]) && 0){__proto__ = *::*;export ; }/*for..in*/L:for(let [__count__, prototype] = ((__count__ = <x/>)[constructor]) in this) (<y><z/></y>)\nreturn <x><y/></x>; }");
tryItOut("if(false) yield;");
tryItOut("/*for..in*/M:for(let __parent__ = (__parent__ = prop for each (__count__ in *) for each (__proto__ in <x><y/></x>)) in  \"\" ) gc");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __count__ in <x><y/></x>) export *;");
tryItOut("switch((new Function)(false,  /x/g //h\n)) { case 5: break; default: case 6: export __iterator__;case 3.throw(.2): break;  }");
tryItOut("__proto__");
tryItOut("yield <><bbb xmlns:ccc=\"(new (function(y) { yield y; ;; yield y; }\t)([,,]))\"><ccc:eee></ccc:eee></bbb></>;");
tryItOut("L:if((#3={a:#3#} << window)) { if (<><x><y/></x></>--) {return  '' ;export *; }} else {return;return <x><y/></x>; }");
tryItOut("throw StopIteration;");
tryItOut("if(__noSuchMethod__) { if (prototype) () else {(new Function(\"export *;\")) }}");
tryItOut("while((constructor) && 0) for each (__noSuchMethod__ in __proto__ = window) for ((*.eval(constructor))(\n#1#) in  /x/ ) if (<x><y/></x>)");
tryItOut("{with((__proto__.( \"\" ) << (new Number(0/0))))prop.__proto__ = this, __noSuchMethod__ = windowvar __count__; }");
tryItOut("/*infloop*/while(((yield let (__noSuchMethod__, __proto__ = *::*) <y><z/></y>))){__noSuchMethod__; }");
tryItOut("L: {return;[1,2,3,4].map }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const prototype(this.__defineGetter__(\"prototype\", eval).throw(__parent__%=<><x><y/></x></>)) in (__parent__ = window < ((__count__).__defineSetter__)(__noSuchMethod__, 1e4))) {\rvar constructor, __parent__\nlet (__iterator__, __iterator__ = <><x><y/></x></>) { /*for..in*/for(let __iterator__ in ((constructor, constructor = __noSuchMethod__)(<x/>))){export __count__;case 3: default: break M;break; case 8: break; break;  } }__count__ }");
tryItOut("/*infloop*/for(<zzz><x><y/></x></zzz>.( /x/ .watch(\"prop\", (1 for (x in []))));  '' .valueOf(\"number\"); @foo.__defineSetter__(\"prototype\", /a/gi) ? prototype.__noSuchMethod__-=[15,16,17,18].some(/a/gi,  /x/g ) : __iterator__.((yield undefined))) {const constructor;with({__iterator__: 3/0}){(3.141592653589793);(prop); } }");
tryItOut("/*for..in*/M:for(var [__proto__, prototype] = new RegExp(({} >>> <><x><y/></x></>)) in #1#) {L: /*for..in*/L:for(let prop in ((__noSuchMethod__)(<x><y/></x>))){throw +;(false); } }");
tryItOut("do {with({setter:  /x/g })([z1,,]);yield #1#; } while((prototype = [].__count__ getter= 'haha'.split) && 0);");
tryItOut("/*infloop*/while((yield (prototype.prop setter= \t(<><bbb xmlns=\"<><x><y/></x></>\"><ccc:ddd><ccc:ddd><x><y/></x></ccc\f:ddd></ccc:ddd></bbb></>).__defineSetter__))){L:with((uneval(<y><z/></y>))){(*);(0); }if(([function(id) { return id }])) {null;export prop; } }");
tryItOut("/*for..in*/try { return [,]; } catch(function::__iterator__) { false; } finally { ; } for(const __count__ = <x><y/></x> in 0.1) { }");
tryItOut("{throw __iterator__;/*for..in*/M:for(prototype in 5.0000000000000000000000) {eval__parent__ } }");
tryItOut("export *;\nL: {yield  \"\" ;; }\n");
tryItOut("do var prop = @foo; while(((__count__.__noSuchMethod__)) && 0);");
tryItOut(" /x/g ;");
tryItOut("yield;\nreturn;\n");
tryItOut(": {return; }");
tryItOut("do {prop;; } while(((new <y><z/></y>.__defineGetter__(\"__count__\", (arguments).__defineSetter__)())) && 0);");
tryItOut("/*infloop*/for(__parent__; eval(\"__noSuchMethod__\", <x><y/></x>); ({__proto__:  { return  \"\" ; } , prototype: <><x><y/></x></> })) return  /x/g ;");
tryItOut("return  /* Comment */-3/0.constructor = ({});");
tryItOut("/*for..in*/for(var [__iterator__, x::__proto__] = ++(-1) >>= window in  /* Comment */<xxx {constructor}={constructor = false} />) {return;if(<x/>) {\t if ( \"\" ) {const __count__ = 5.0000000000000000000000, __iterator__; } else {var prop = <y><z/></y>;export *; }} }");
tryItOut("M:if(constructor =  /x/g ) /*for..in*//* nogeckoex bug 349964 */ for  each(__noSuchMethod__ in <><x><y/></x></>.unwatch(\"__count__\")) {{{}yield; } }");
tryItOut("while(((([] @ <x><y/></x>))[<x/> ?  /x/  : __parent__]) && 0)/*for..in*/M:for(prop = @foo in this) {; }");
tryItOut("M:if( \"\" ) { if (window) {let prop;{} }} else {}");
tryItOut("/*infloop*/for((<x><y/></x> for (__parent__ in #1#)); (Function((constructor.( /x/g )).valueOf(\"number\"))); ([0.1])) {export *;eval }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prop in *) __iterator__ = function ([y]) { }, __iterator__ = <x/>;");
tryItOut("\fL:if((function  __iterator__ ([], ({ __proto__: constructor })) { return this /=  /x/g  += __parent__.([,,]) } )(--[<x><y/></x> for each (__iterator__ in this)], this.__defineGetter__(\"function::prop\", (__count__).watch))) if(prop) {gc() } else {return <y><z/></y>; } else /*for..in*//* nogeckoex bug 349964 */M: for  each(const __noSuchMethod__ in constructor) yield;");
tryItOut("/*infloop*/for(const __parent__; undefined %= <><x><y/></x></>; let (prop =  /x/g ) [,]) ;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const prop in ) {yield; if((__parent__ = prop)) { if (this) yield *; else gc()} }");
tryItOut("L:with(null.eval(*).__defineGetter__(\"constructor\", ([1,2,3,4].map).call)){({ prototype: [, , [, prototype, , ({ __parent__: prop })], __parent__] }), __iterator__switch(prop = 1.3 .@ ((function () { return <><x>\t<y/></x></> } )(undefined, *))) { case this.zzz.zzz: /*for..in*/M:for(__noSuchMethod__ =  /x/g  in null) var __noSuchMethod__, __parent__ = false; } }");
tryItOut("/*infloop*/M:while(<x><y/></x>){}");
tryItOut("/*for..in*/for(var __noSuchMethod__ in ((Function)(function(id) { return id }))){var __iterator__ =  /x/ , prototype; }");
tryItOut("M:if(let (constructor) (__count__.__proto__ *= Iterator(#3={a:#3#}))) { if ((p={}, (p.z = __proto__ = \nwindow)())) {/*infloop*/for(let function::__noSuchMethod__; (Math.sin\t((__noSuchMethod__ = this), <x><y/></x>)); (<x><y/></x>.propertyIsEnumerable(\"prop\"))) {yield; }switch( /x/g  | <y><z/></y>) { case 9: if(<x><y/></x>) { if (true) {}} else {{} }break;  } } else {if([11,12,13,14].map) { if ((#1=({constructor': __noSuchMethod__).yoyo(*::* >>=  /x/ ))) {*;\t }} else continue ; }}");
tryItOut("with({}) __noSuchMethod__ = __count__;");
tryItOut("let (__iterator__, __noSuchMethod__ = default: ) { throw prototype; }");
tryItOut("continue L;\nexport *;\n");
tryItOut("{export *;M:do {gc()return; } while((function(id) { return id }) && 0); }");
tryItOut("if( '' ) with( ''  | <x>\f<y/></x> == (typeof  /x/ )){yield; } else { }");
tryItOut("M:with(.2.prototype){{} }");
tryItOut("/*infloop*/for(({ __parent__: __proto__ }) = window; ([false().isPrototypeOf(<x><y/></x>).@foo for each (this in let (\t__parent__) false.eval(*))]); ) {yield ((__proto__%=<x/>).prop);/*for..in*/for([__proto__, __parent__] = (__iterator__ = [[]]) in [z1,,]) {;yield __count__; } }");
tryItOut("{/*infloop*/do {{} } while(*)\nthrow 4.; }");
tryItOut("L: throw <x/>;");
tryItOut("M:if(typeof yield = __iterator__) { if ([1] for each (__noSuchMethod__ in [,])) gc() else {;;\n(__noSuchMethod__);\n\nconst prop =  '' ; }}");
tryItOut(";");
tryItOut("do {; } while((*::*) && 0);with({__iterator__: constructor.(true)})__parent__;");
tryItOut("with({}) __noSuchMethod__ = __proto__;");
