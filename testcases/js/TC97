
tryItOut("if((-0)) {<x><y/></x>;return; } else  if (<y><z/></y>.propertyIsEnumerable(\"constructor\") .. prop = function::prop) throw window; else {switch(@foo) { <x><y/></x>; } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prototype.__count__ in (prop = <x><y/></x>)) throw <x><y/><///h\nx>\n");
tryItOut("{gc() }");
tryItOut("/*infloop*/for(var __parent__ = __proto__; __iterator__;  /x/ ) {const __noSuchMethod__ = <><x><y/></x></>; }");
tryItOut("if(false) {function  __count__ (prototype) { return #3={a:#3#} } with(arguments){throw  /x/ ; } } else {let constructor;export *; }");
tryItOut("/*for..in*/for(__proto__ = window.__defineGetter__(\"__count__\", undefined) + __count__ =  \"\"  << function () { return prototype }  in RangeError(new L(( /* Comment */@foo),  if (__iterator__)))) let prototype;\n({}).hasOwnProperty");
tryItOut("export *");
tryItOut("return (__count__ = ({a1:1}))");
tryItOut("let (__noSuchMethod__) { {} }");
tryItOut("/*for..in*/for(__parent__ = <x/> in window) gc()");
tryItOut("if(__iterator__.(<x><y/></x>)) { if () ;\f} else {\ngc()\n }");
tryItOut("L:if([[1]]) {;export prop; } else  if (eval(\"function  __proto__ (__parent__, __noSuchMethod__) /x/ \",  /x/ )) {yield 3.141592653589793;yield false; }");
tryItOut("");
tryItOut("");
tryItOut("throw __proto__;");
tryItOut("/*for..in*/for(const __parent__ in ((function  __iterator__ () { return this.__defineSetter__(\"constructor\", (new Function(\"\")))\t } )(typeof this.zzz.zzz))){yield *::*;__noSuchMethod__ = <x/>, __iterator__; }");
tryItOut("{(<x><y/></x>);__count__; }");
tryItOut("L:if(__proto__ = [15,16,17,18].some((new Function(\";\")), ({}))) var __iterator__;");
tryItOut("if((({\t__count__:  \"\" , __count__ setter: (prop).watch }).propertyIsEnumerable(\"prototype\"))) /*infloop*/M:do {if(#2=({prop:  /x/ })) yield; else  if (({}).hasOwnProperty) <><x><y/></x></>; } while(@foo /=  '' .__lookupSetter__(\"__noSuchMethod__\"));");
tryItOut("/*infloop*/L:while(\n#2=[prop])");
tryItOut("M:if([[ /x/g ].sort(Math.sin)]) { if ((new String()) @ #2=[((yield this))]) {if(<><x><y/></x></>) ;Function } else var __noSuchMethod__ = window, function::__proto__ = 1.3;}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __parent__ in window) export x::__proto__;");
tryItOut("gc()case 8: with({__noSuchMethod__: (uneval(1.2e3))})yield (-0);break; ");
tryItOut("let(prop =  /x/ ) { continue ;");
tryItOut("/*for..in*/L:for(var __proto__ in (yield (new @foo(1.2e3, null)))) L:if(__count__) { if (1e4) var constructor, prop;} else {yield; }");
tryItOut("if( \"\" ) { if (<y><z/></y>) yield; else {const prototype = __parent__, prototype = __proto__;__iterator__; }} const prop;");
tryItOut("yield;\nexport prototype;\n");
tryItOut("/*for..in*/for(var __parent__ = (window.throw(({a1:1}))) in  \"\" ) return function ([y]) { };");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var prototype in window) /*infloop*/M:for(let constructor; <><x><y/></x></>; constructor) {return;const __count__ = 3, __iterator__ = 0.1; }\n;\n");
tryItOut("/*infloop*/for(<y><z/></y>; (-0); ({a2:z2})) {}");
tryItOut("do break ; while((__count__+=<x/> instanceof (function ([y]) { })().unwatch(\"__proto__\") >>= new function(y) { yield y; throw @foo;; yield y; }(<><x><y/></x></>)) && 0);");
tryItOut("(([{prop; }].filter(<><x><y/></x></>)))");
tryItOut("yield;\n__iterator__ = [,,], __parent__ =  \"\" ;\n");
tryItOut("{{return \fthis;\f; }\n { throw false; }  }");
tryItOut("let (__count__ = <x><y/></x>, __proto__ = null) { return; }");
tryItOut("return; const __count__;");
tryItOut("{with(((({}).watch)(prop, <x><y/></x>)))while((* @  \"\" ) && 0)gc() }");
tryItOut("if(([11,12,13,14].map)) { if (this.__defineGetter__(\"__parent__\", function(y) { yield y; null.__iterator__; yield y; })) {with({__count__:  /x/g })true\nbreak ; } else {function  __iterator__ (__proto__) { return #1# } <y><z/></y>; }}");
tryItOut("/*for..in*/for(let prop = <><x><y/></x></> in @foo) {function(y) { yield y; var __proto__, __noSuchMethod__;; yield y; } }");
tryItOut("let(__noSuchMethod__ = (__proto__ = __proto__)) ((function(){__parent__ = __proto__;})());");
tryItOut("L:with(this.__defineGetter__(\"__parent__\", null))((true.watch(\"__proto__\", ({}).__lookupGetter__)))\n\f/*infloop*/L:for(prop = <x><y/></x>; (function ([y]) { })(); case #3={a:#3#}: break; default: throw  \"\" ;) {(1.3);{} }");
tryItOut("{}");
tryItOut("/*for..in*/for(var [__noSuchMethod__, __proto__] = (__iterator__.yoyo(<><x><y/></x></>)) in ([1,,])[ '' ] >> __parent__.hasOwnProperty(\"constructor\")) __noSuchMethod__ = [,,z1], get = #1=[#1#];");
tryItOut("export prototype");
tryItOut("throw function::constructor;");
tryItOut("with({getter: (this.zzz.zzz.valueOf(\"number\"))})export <x><y/></x>;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let (__proto__) in <x><y/></x>) ");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var delete.__noSuchMethod__ in <x/>) {(x>< __parent__ y/></x>); }");
tryItOut("if((__parent__ = (__count__ <<= <x><y/></x>))) { if ((1e4.isPrototypeOf( /x/g ).valueOf(\"number\"))[(yield  /x/g ) for each (prop in <y><z/></y>) for each (prop in  '' )]) {throw <><x><y/></x></>;var prop, prop; }} else {do gc() while((__parent__ = __noSuchMethod__) && 0);throw  '' ; }");
tryItOut("gc()");
tryItOut("/*infloop*/M:for(constructor; #1=<y><z/></y>; ( /* Comment */<><x><y/></x></>)) {return [z1,,]; }/*for..in*//* nogeckoex bug 349964 */ for  each(prototype in false) M:if(prototype) { if (this) {window; } else {let __noSuchMethod__; }}");
tryItOut("L:with({__proto__: (new ({}).__lookupGetter__())[this] - (<zzz>function(id) { return id }</zzz>.(__iterator__))}){L:if((~<x/>)) { if ((__iterator__ = false)) {return; } else gc()}return; }\nswitch(( /x/ .propertyIsEnumerable(\"__iterator__\"))) { case x::__noSuchMethod__ = <><x><y/></x></> * 0.watch(\"__proto__\", function () { return eval(\"(<><x><y/></x></>);\", <><x><y/></x></>) } ): if(eval(\"{}\", (__parent__.prototype))) {/*infloop*/M:for(prototype; let (constructor) *::*; __count__) {export __noSuchMethod__; }with(<><x><y/></x></>){} }break; const prototype;default: throw [({}).hasOwnProperty].map( '' );let (__iterator__, prototype) {  '' ; }case 0: do {let constructor = <x/>, __count__ = [];let __noSuchMethod__ = <x/>; } while((this.zzz.zzz) && 0);break; case 4: case 3: gc() }");
tryItOut("if(((yield  \"\" ))) {/*for..in*/for(var constructor = \fundefined.unwatch(\"__iterator__\") in <x><y/></x>) let = null; } else  if (prototype) { {  }  = @foo, __parent__ = this; }");
tryItOut("return");
tryItOut("L: {continue ;yield <x><y/></x>; }");
tryItOut("/*for..in*/M:for(var __iterator__ = (<x/>)() in true) yield;");
tryItOut("/*infloop*/L:do /* while(prototype)\n{{/*infloop*/L:for(var __noSuchMethod__; window; []) yield;/*for..in*/for(var __iterator__ in ((new Function)((#2=<x/>))))export prop; } }");
tryItOut("L:with(undefined > <x><y/></x>){yield;return; }");
tryItOut("yield\n");
tryItOut("if(this) { if (<y><z/></y>) __count__, prop = prototype; else {continue M;(@foo); }}");
tryItOut("M:if(__count__.prototype = <x/>) {null; } else  if ((((__iterator__ for each (prop in <><x><y/></x></>))).prototype)) L:if(function(id) { return id }) {return undefined;yield; } else {gc() }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const constructor in (let (@foo) ([[1]] if (1e-81)))) {if([,]) { if (null) {; }} else {export __noSuchMethod__;throw  \"\" ; } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(prop in  \"\" ) ;\n;\nyield true;\n\n");
tryItOut("/*infloop*/M:for((__parent__ === <><x><y/></x></>); ({__noSuchMethod__: 1e-81,  get <x/> __parent__ () { (<x/>); }  }) @ __parent__ = <y><z/></y>; (++[,,] instanceof (__parent__ = <x><y/></x>))()) {var __parent__, __noSuchMethod__;continue L; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __proto__ in <y><z/></y> + <><x><y/></x></>) {;let __iterator__ = <x/>, __iterator__; }");
tryItOut("/*infloop*/M:while((function ()'fafafa'.replace(/a/g, window)).\tcall(0x99, (this.__defineSetter__(\"get\", 1e+81))((@foo.@*)), -3/0 .@*:: <><x><y/></x></>)){; }");
tryItOut("/*for..in*/for([__iterator__, __iterator__] = -0 in <x><y/></x>) {; }");
tryItOut("\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __noSuchMethod__ in window != this) \nif(throw <><x><y/></x></>;) { if (*) yield;} else let __count__, __proto__ = [,,];");
tryItOut("throw  \"\" ;");
tryItOut("{export *; }\n");
tryItOut("return;\nexport *;\n");
tryItOut("var prototype =  /x/g ;");
tryItOut("if((new RegExp())) { if (false < <x/> > [1,,] << false) {gc() } else {export prototype; }}");
tryItOut("if(new ((yield @foo))([,,]--)) {yield; } else {break M; }");
tryItOut("/*infloop*/function(q) { return q; }for([, , , __proto__, __noSuchMethod__] = const ({ __noSuchMethod__: [__count__, , prop, , ], __noSuchMethod__: [] });\n; prototype; 'fafafa'.replace(/a/g, new Function)) do {gc()yield window; } while((window) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let prop(prototype.(x::__noSuchMethod__)) in (p={}, (p.z = this.__lookupSetter__(\"prototype\"))())) return <x><y/></x>;");
tryItOut("/*infloop*/for(*; (#0=[*::*]); <xxx>{prop}\t</xxx>) {/*infloop*/while((new (gc)()))\t{} }");
tryItOut("if('fafafa'.replace(/a/g, Math.pow)) {export __count__;/a/gi } else  if (1e81 === 0/0) yield; else \t{yield null\r;throw undefined; }");
tryItOut("{}\nnew Function");
tryItOut("if(<y><z/></y>) yield window; else with({__iterator__: <><x><y/></x></>}){var constructor, __parent__ = <x><y/></x>;[[1]]; }");
tryItOut("/*for..in*/M:for(let (__count__) in __proto__) {{} }");
tryItOut("if(window) { if (__count__) {yield; } else {yield;var __proto__, __noSuchMethod__ = 4.; }}");
tryItOut("if(void (typeof <><x><y/></x></>)) { if ((eval(\"*;\", [<x/>]))[<><ccc:ddd>yyy</ccc:ddd></>]) {gc()with(undefined){function (__proto__) { yield <><x><y/></x></> }  } }} else /*infloop*/M:do {let __iterator__ = *, constructor = <><x><y/></x></>;yield <x><y/></x>; } while(\n({}).__lookupGetter__());");
tryItOut("/*infloop*/L:for(this.zzz.zzz; @foo//h\n; (<><x><y/></x></>)) {}");
tryItOut("/*for..in*/for(__count__ in (((new Function(\";;\")))(([z1,,])(function(id) { return id }) ? * : yield 0/0.__defineGetter__(\"prop\", function (constructor, __iterator__) { return #3={a:#3#};\f } )))){/*infloop*/while([11,12,13,14].some){{throw *; }\t } }");
tryItOut("with({}) { for(let y in []); } ");
tryItOut("/*for..in*/for( in ((eval)(([,] ? 0 : 3)))){return;__count__, prop; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __count__.prototype in [11,12,13,14].map) {/*infloop*/for(var ({ __iterator__: __parent__, return;: prototype }) = (yield window); (\t<!--yy-->.constructor); (default: )) {export *; }with({__parent__: <><x><y/></x></>})let yield = null; }");
tryItOut("/*for..in*/for(const 5.0000000000000000000000.prop in false) (<x><y/></x>);");
tryItOut("with({yield: [11,12,13,14].filter})throw __iterator__;");
tryItOut("/*infloop*/while( \"\" .__proto__ = <><x><y/></x></>);throw constructor;");
tryItOut("if(<y><z/></y>) { if (*::*)  else 0x99;}");
tryItOut("/*for..in*/for(const [__iterator__, prop] = this.__defineSetter__(\"__parent__\", ((new Function(\"Math.pow\"))).call) in 033) {yield; }");
tryItOut("if((window).call(<x><y/></x>, )) {__proto__ = this; } else  if (null) __iterator__");
tryItOut("L:switch((\n({ get __noSuchMethod__ __iterator__ ()({ prototype: __proto__ }) = new 1.3\f }))) { case  '' : break; default: /*infloop*/for(#1#; ({__parent__ getter: [1,2,3,4].map,  set __iterator__ __noSuchMethod__ (constructor) { {} }  }); undefined , this) {\fdo {yield  '' ; } while(([1,,]) && 0); }case String(5.0000000000000000000000) ? ~1.2e3 : (__iterator__.__parent__): /*for..in*/M:for(let __noSuchMethod__ in ((function  constructor (constructor, __parent__) { yield (-0 ? null : <x><y/></x>) } )([].eval([[]])))){prototype, __parent__ = <><x><y/></x></>; }break;  }");
tryItOut("/*for..in*/M:for(let (-1).isPrototypeOf(@foo).__noSuchMethod__ in \f((function(q) { return q; })([Iterator().prop\f, ({ __parent__: prototype }), __noSuchMethod__, , ] = (new ([15,16,17,18].map((1 for (x in [])), false))(\f__noSuchMethod__ .@x:: this !== [11,12,13,14].sort)))))if(( /x/g ())) __proto__ = <><x><y/></x></>, prop; else  if (<{prototype}><><ccc:ddd> </ccc:ddd></><zzz>({a2:z2})</zzz>yyy</{prototype}>.(<><bbb\t xmlns:ccc=\"(p={}, (p.z = <y><z/></y>)())\"><ccc:eee></ccc:eee></bbb></>) ? (prop.unwatch(\"__count__\")) in (Array()) : (new __iterator__((function(y) { yield y; yield arguments;; yield y; })(false, <><x><y/></x></>), ('fafafa'.replace(/a/g, 'haha'.split)))) >= new RegExp(constructor, 3.141592653589793)) {; } else {break ;gc() const constructor; }");
tryItOut("/*infloop*/for(var __iterator__ = <x/>; 1.2e3; <x><y/></x>) var __parent__ = <x/>, __noSuchMethod__;");
tryItOut("/*for..in*/for(let [prop, __proto__] = ({__iterator__: false}) in constructor) ;");
tryItOut("@foo['__parent__']");
tryItOut("if(__count__.__count__ getter= Math.pow) { if (function(y) { yield y; throw <x><y/></x>, [,,];; yield y; }) {export *;throw *; }} else {continue M; }");
tryItOut("((-1));\n;\n");
tryItOut("L:if() { if (<><zzz>({}).__lookupGetter__</zzz></>) yield  \"\" ;} else {yield;gc() }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(var <x><y/></x>['__count__'] in *::*) {yield __noSuchMethod__; }\n");
tryItOut("if(window >>> __iterator__) let (__proto__, __count__ = 0/0) { __noSuchMethod__ = constructor; } else  if (new Array(<x><y/></x>,  \"\" )(<bbb xmlns=\"true\"></bbb>)) {__count__{} }");
tryItOut("while((((p={}, (p.z = this ? <x><y/></x> : <x/>)()) += __parent__.({prop: (({__noSuchMethod__: this, prototype: [1,,] }))}) setter= function () { return this } )) && 0){/*for..in*/for(let  in ((Math.sin)(__noSuchMethod__))){export constructor;yield; } }");
tryItOut("if(<bbb xmlns=\"this % <y><z/></y>\"><ccc:ddd>yyy</ccc:ddd></bbb>) {yield;do (<x><y/></x>).__defineSetter__ while((<x/>) && 0); } else  if (#3={a:#3#}) {yield;\tswitch(Date([z1,,].__defineGetter__(\"__count__\",  \"\" ))) { default: gc()break; case this.__defineSetter__(\"export *;\",  /x/g ): constructor = undefined, __count__;case this.zzz.zzz: case __count__ = #3={a:#3#} != <y><z/></y>: /*infloop*/for(<><x><y/></x></>; 5.0000000000000000000000; constructor) export *;break;  } } else {throw __proto__;(window); }");
tryItOut("{break ;+=; }");
tryItOut("/*infloop*/for(const __proto__; this.((-0) -= <><x><y/></x></>); ((uneval(__parent__)))) gc()");
tryItOut("/*for..in*/for(var [__proto__, get] = window in 1e+81) {throw undefined; }");
tryItOut("/*infloop*/for((Math.sin).call; new ((undefined)[3/0])(); *.__defineGetter__(\"prop\", function  __iterator__ (prop, prop) { yield __count__ } ).valueOf(\"number\")) {\n/*for..in*/for(var this.zzz.zzz in 1e+81) {{}; } }");
tryItOut("gc()");
tryItOut("/*infloop*/for(let { constructor: __iterator__: __iterator__) = ([<><x><y/></x></>].filter((function(q) { return q; }).call))\n; @foo; new (this !== this)(function () { yield <><x><y/></x></> } )) throw <><x><y/></x></>;");
tryItOut("if('fafafa'.replace(/a/g, eval).propertyIsEnumerable(\"__parent__\")) { if ([__proto__ = <x><y/></x>].filter(eval)) {yield  '' ; const __parent__; } else (__noSuchMethod__);}");
tryItOut("throw StopIteration;");
tryItOut("let(prototype, setter = window.prop) { [[]].constructor = __parent__;");
tryItOut("/*for..in*/L:for(const __proto__ in (((1 for (x in [])))(__count__)))*::*");
tryItOut("switch(yield (__iterator__ = (constructor = true))) { default: break; export __proto__;break; case 4: M:\ndo {throw #1#; } while((<><x><y/></x></>) && 0);break;  }");
tryItOut("for(let y in [5,6,7,8]) with({}) { throw  \"\" ; } ");
tryItOut("({}).hasOwnProperty\n\nwith(!(-0)){<x>/*\n*/<y/></x> }");
tryItOut("/*for..in*/for(const [__noSuchMethod__, __parent__] = [15,16,17,18].sort(eval, prop = <><x><y/></x></>\n) in @foo ? <y><z/></y> :  '' ) switch((*::* &&  '' )) { default: break; case 3: 1.2e3; }");
tryItOut("L: {continue ; }");
tryItOut("/*infloop*/for(let ({ function::constructor: ({ __parent__: __noSuchMethod__ }), prop: prototype }) = [[1]]; prototype = function::__count__; true ..  '' .prop) {let(__count__, prop = <y><z/></y>) ((function(){return;})());let prototype, __parent__ = window; }");
tryItOut("{(Math.pow).applythis.zzz.zzz; }");
tryItOut("if((this.@foo)) { if (this.isPrototypeOf([z1,,])) return __noSuchMethod__; else <!--yy-->}");
tryItOut("/*for..in*/for(let [constructor, __iterator__] = @foo.unwatch(\"prop\") in ({ constructor: [__count__, <><x><y/></x></>['__noSuchMethod__'], prop, ] }) = prop) {let(__count__, __proto__) ((function(){with({}) try { (window); } finally { yield; } })());yield __iterator__; }");
tryItOut("{/*infloop*/for(const export *;; (<x><y/></x>.isPrototypeOf(-3/0) >>= [11,12,13,14].sort); ({__proto__: __noSuchMethod__,  set prop() { const __noSuchMethod__ =  '' , __iterator__; }  })) {const prototype;<><x><y/></x></>; } }");
tryItOut("if((((true.@*) for (__noSuchMethod__ in undefined) for (__iterator__ in <x><y/></x>) for each (__iterator__ in @foo)))(__noSuchMethod__.__defineGetter__(\"__parent__\", [1,2,3,4].slice),  /x/g )) { if ((prop.__parent__ = [1] == [z1,,])) /*for..in*/for(let __count__ = (uneval((([1,,])[window]))) in  '' .((function (__proto__) { yield  /x/g  } )( '' , __parent__))) {M:do return; while(((#1=[Object(*::*, this)])) && 0); } else break L;}");
tryItOut("/*for..in*/for(const prop in new ((([[1]][ /x/g ])).watch)()) if(let (__iterator__ = <x/>, __count__) <x><y/></x>) const __parent__, __count__; else {<><x><y/></x></>; }");
tryItOut("L: {const __count__ =  '' ; }");
tryItOut("/*for..in*/L:for\f(const (yield <><x><y/></x></>)(<><x><y/></x></>.__proto__ = *) in new Function .@*:: (this.zzz.zzz)) {@foo;\f }");
tryItOut("if( /x/g ) {{}export constructor; } else  if (([prototype, , __count__, ] = (__iterator__ | true))) {/a/gireturn; } else [[]];");
tryItOut("with({}) { with({}) { let(({ __iterator__: ({ __parent__: [, , constructor, , ] }), prototype: [, [__noSuchMethod__]] }) = (({ __proto__: __parent__, __proto__: constructor }) = *)) { let(__noSuchMethod__ = (\n0/0)) ((function(){this.zzz.zzz;})()); }  } ");
tryItOut("/*for..in*/M:for(var prop = <x/>.__parent__ in *::*) {continue L;M:if(<x><y/></x>) { if ([,,]) {const __count__; }} else {throw  \"\" ; } }return ({ get __proto__ __count__ () { return __parent__ }  });");
tryItOut("this.zzz.zzz;");
tryItOut("/*infloop*/do export *; while(((<y><z/></y> if (<><x><y/></x></>)).watch(\"__noSuchMethod__\", [1,2,3,4].slice)));");
tryItOut("yield new (4.)(4., -3/0);");
tryItOut("do export prop; while((<x><y/></x>) && 0);");
tryItOut("try { for(let y in []); } finally { with({}) { with({}) { for(let y in [5,6,7,8]) var constructor; }  }  } ");
tryItOut("prototype = __iterator__; const constructor;");
tryItOut("return (prop = true);");
tryItOut("(false >= <><x><y/></x></>);");
tryItOut("return\nthrow __count__;");
tryItOut("q");
tryItOut("/*for..in*/for(let prop =  ''  in <x><y/></x>.( '' )) {null;({}).__lookupGetter__ }");
tryItOut("for(let y in [5,6,7,8]) return yield ( '' ++);");
tryItOut("for(let y in []);");
tryItOut("{throw false; }\t");
tryItOut("export __noSuchMethod__\nthrow (p={}, (p.z = ( /x/ ))());");
tryItOut("L: {/*for..in*/M:for(constructor in __parent__)  }");
tryItOut("L: {yield constructor; }\f");
tryItOut("let(__parent__) ((function(){throw StopIteration;})());");
tryItOut("with({constructor: false instanceof <><x><y/></x></>})gc()");
tryItOut("this.zzz.zzz;");
tryItOut("/*infloop*/M:while(null.valueOf(\"number\").propertyIsEnumerable(\"__noSuchMethod__\"))if([[, __proto__], ] = ((*::*))) <!--yy--> else  if (#2=[({__noSuchMethod__:  \"\"  })]\f) {gc()throw  /x/ ; }");
tryItOut("/*for..in*/L:for(const [__count__, __proto__] = 3 in (__proto__.prototype\n)) {/*for..in*/for(const [__iterator__, __proto__] = (eval(\"return;\", ({prop getter: (#1=[#1#]).__defineSetter__ }))) in undefined) break M; }");
tryItOut("/*for..in*/for(let constructor = (<y><z/></y>)(\f({a1:1}).valueOf(\"number\"), <><x><y/></x></>) @ String(true += <><x><y/></x></>) in <bbb xmlns:ccc=\"([,] if (<><x><y/></x></>))\"><ccc:eee></ccc:eee></bbb> .@x:: export prop) /*for..in*/for(const __iterator__ =  /x/  in __parent__, prop = 1e+81) {gc() }");
tryItOut("with({__proto__: 'fafafa'.replace(/a/g, ({}).hasOwnProperty)}){}");
tryItOut("L:if(<bbb xmlns:ccc=\"({__parent__ setter: (null).watch, function::__noSuchMethod__: <y><z/></y> }).prototype\"><ccc:eee></ccc:eee><\t/bbb>.((({prop: undefined}).__lookupGetter__(\"prop\")))) export *; else  if ((<><x><y/></x></>([[]]))) (<y><z/></y>);window\r; else export __noSuchMethod__");
tryItOut("{return; }");
tryItOut("return");
tryItOut("continue M;");
tryItOut("");
tryItOut("/*infloop*/for(var __count__; (function(id) { return id } .@ __proto__); 'fafafa'.replace(/a/g, Math.pow)) (__parent__);");
tryItOut("L:if((yield (<x/> > <><x><y/></x></>).propertyIsEnumerable(\"__count__\"))) ; else  if (((<><x><y/></x></> in *).valueOf(\"number\"))) {gc()prop } else \ngc()");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__proto__ in  \"\" ) break M;");
tryItOut("if( /x/g .unwatch(\"__parent__\")\n) {let (return;, prop = <x><y/></x>) { gc() } } else  if (function::__proto__) {return <x/>; } else {export *; }");
tryItOut("with({prototype: [constructor+=window ^ {}.unwatch(\"__count__\")]})L: {with({__count__: __count__})break ; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const prototype in new (__iterator__.__iterator__)((1e-81 * window), false *=  \"\" )) if(<xxx>{__noSuchMethod__}</xxx>) {if(__count__) { if (__noSuchMethod__) (<><x><y/></x></>); else __noSuchMethod__: this}{} } else ;");
tryItOut("if(((null).__defineSetter__).call(<x><y/></x>, )) {/*for..in*/M:for(const __proto__ in [1]) {const __parent__ = <x><y/></x>; }{} }");
tryItOut("/*for..in*/L:for(var [\f__noSuchMethod__, prop] = [@foo != #1=[#1#]].some(({}).hasOwnProperty) in constructor ? [,] : []) {return;{} }");
tryItOut("<ccc:ddd></ccc:ddd>");
tryItOut("L: continue ;");
tryItOut("__count__ = __noSuchMethod__;");
tryItOut("if(\nprop.constructor.throw(__parent__.__lookupGetter__(\"prop\"))) let prop =  /x/ , __parent__;");
tryItOut("/*infloop*/M:for\t(([prototype, __parent__] = new (1e81)(<x><y/></x>)); <x><y/></x>.watch(\"__proto__\", 'haha'.split); ((-1).@*.throw((1e81 |= __count__)))) {; }");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var (new Date(false) !== prototype.__defineSetter__(\"__count__\", [1,2,3,4].slice))['__count__'] in (<x><y/></x> /= window)) {yield *; }");
tryItOut(";");
tryItOut("__iterator__, prop");
tryItOut("if(this.__defineGetter__(\"prototype\", function(y) { yield y; return <><x><y/></x></>;; yield y; })) { if (<y><z/></y>) {(this); } else export __proto__;}");
tryItOut("/*for..in*/for(const __proto__ = <x/>.propertyIsEnumerable(\"__noSuchMethod__\") in __proto__) {; }");
tryItOut("while((this.__defineGetter__(\"__count__\", function(y) { yield y; const yield *::*;;; yield y; })) && 0)if(__count__) {return <y><z/></y>; } else export prop;");
tryItOut("if(false) export prop; else  if ( \"\" ) {continue M;; } else return;");
tryItOut("/*for..in*/for([__count__, prop] =  \"\"  in this.__lookupSetter__(\"prototype\").throw(false.__defineSetter__(\"constructor\", [,,z1]))) {}");
tryItOut("/*infloop*/do /*for..in*/for(const (__iterator__) in __noSuchMethod__) function(y) { yield y; gc(); yield y; } while(((4.)[ /x/g ]));");
tryItOut("{const constructor = <><x><y/></x></>, constructor = <x/>;/*infloop*/for(<><x><y/></x></> |= @foo; prop = __count__; <x/>.throw(false)) ; }");
tryItOut("return\nyield;\nthis;\n");
tryItOut("L:while(((~<></>)) && 0)continue M;");
tryItOut("/*for..in*/for(var [prop, __parent__] = true |= <x/> in (({ prop: [constructor, , __parent__, ], __count__: [, , , constructor, ] }) = ({ constructor: ({ __proto__: prototype, __count__: prototype }) }))) L: /*infloop*/while(__proto__ = this){const __parent__, __proto__;return; }");
tryItOut("L: const prop = [[]], prototype;");
tryItOut("continue M;/*for..in*/for(let __parent__ in ((function () { export __parent__; } )(<><x><y/></x></>)))var __iterator__ = undefined, __iterator__;");
tryItOut("M:if(window) {yield .2; }");
tryItOut("if((false.yoyo((*)())).prop) ( '' );");
tryItOut("L:if(undefined) { if ( /x/g ) {0.1__count__ }} else export *;");
tryItOut("{}");
tryItOut("each = __proto__;");
tryItOut("{({ __noSuchMethod__: ({ prop: __parent__, __noSuchMethod__: [] }) }) = <><x><y/></x></>.__defineGetter__(\"prop\", function(y) { yield y; return 1e+81;; yield y; }).__proto__ }");
tryItOut("M:if([<><x><y/></x></> if (*)] / this.__defineSetter__(\"__noSuchMethod__\", Function)) yield undefined\n else /*for..in*/for([__proto__, __iterator__] = __proto__ .@x:: <x/> in constructor) { }");
tryItOut("/*for..in*/L:for(var __parent__ = (\n(~__proto__)) in yield (typeof this)) {(<x><y/></x>);export *; }");
