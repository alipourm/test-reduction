tryItOut("yield let () ;");
tryItOut("throw __iterator__;");
tryItOut("{{export constructor;gc() }return; }");
tryItOut("M:with(Function( /x/  && \nundefined))L:do {; } while((*::* <= false) && 0);");
tryItOut("if(window) {<x/>, constructor; }\nyield;\n");
tryItOut("let __iterator__ = *::*, __noSuchMethod__;  <x><y/></x>;");
tryItOut("/*infloop*/for(__parent__ = <><x><y/></x></>*; <><x><y/></x></>) {prop }");
tryItOut("/*infloop*/for(var __noSuchMethod__; new (#1=-3/0)(this.__defineSetter__(\"prop\", eval)); Number(prop)) /*infloop*/L:for([]; __count__; 1e+81) {1e81;throw <x><y/></x>; }");
tryItOut("throw prototype;");
tryItOut("this.zzz.zzz;");
tryItOut("/*infloop*/for(let __parent__; *; window) const __noSuchMethod__, __noSuchMethod__;");
tryItOut("L: gc()");
tryItOut("with({}) __proto__ = prototype;");
tryItOut("/*for..in*/for(const [prop, __iterator__] = new \f[,,z1](<><x><y/></x></>,  '' ) in 3/0) gc()");
tryItOut("if(this.__defineGetter__(\"__count__\", ((p={}, (p.z = new  /x/ ())())))) { if (\fexport __parent__') var __iterator__ = *;} else yield (__proto__ = <x/>);");
tryItOut("{L:switch(function  __noSuchMethod__ ()<><x><y/></x></>()) { case <><x><y/></x></> | new Boolean([,,z1]).__noSuchMethod__: yield;break;  } }");
tryItOut("if(function(id) { return id }) yield; else  if ((window.propertyIsEnumerable(\"__parent__\")) .@ <y><z/></y>) {<x><y/></x>;yield <x/>; }");
tryItOut("do throw __parent__; while((this < 3) && 0);return;");
tryItOut("throw  \"\" ; const constructor;");
tryItOut("/*infloop*/for(<><x><y/></x></> <<= <y><z/></y>; __iterator__.__proto__; 'fafafa'.replace(/a/g, [1,2,3,4].map)) {if(__iterator__) { } }");
tryItOut("return;");
tryItOut("with({({ __proto__: ({ __count__: __parent__, __parent__: [, ] }), prototype: ({ __proto__: ({ constructor: ({ __parent__: prototype }) }) }) }): ({a1:1})\n\t}){{} }");
tryItOut("for(let y in []);");
tryItOut("with([prop\f, __iterator__, __parent__] = (__iterator__ =  /x/g )){yield; }");
tryItOut("/*for..in*/for(const [__iterator__, __noSuchMethod__] = new function (constructor, prototype) { return null } () in  '' ) {const constructor;yield true; }");
tryItOut("if((++__noSuchMethod__)) {yield <x/>; }");
tryItOut("throw constructor;");
tryItOut("with(this.zzz.zzz){if(<x><y/></x> == [,]) { if ([15,16,17,18].map(1.2e3, <x><y/></x>)) (__count__); else } }");
tryItOut("/*infloop*/L:do export constructor; while(());");
tryItOut("return false;");
tryItOut("yield; const constructor;");
tryItOut("do {( '' ); } while((__iterator__ = __noSuchMethod__) && 0);");
tryItOut("/*infloop*/for((new Function)(-0, ({__noSuchMethod__: window, __proto__: 0.1 })); __noSuchMethod__.(<y><z/></y>.__defineSetter__(\"prop\", (1 for (x in [])))).watch(\"__proto__\", function  { } (prototype, ((null).__defineSetter__\n).call) { yield false } ); __iterator__) {if([__noSuchMethod__.__noSuchMethod__ = *::*]) { if (({ __count__: ({ prototype: __iterator__ }), __noSuchMethod__: ({ __count__: prop }) }) = *::*.__iterator__ = (@foo -  /x/g )) {continue ;;return [z1]; } else {yield; }} }");
tryItOut("let (constructor = <x><y/></x>.__lookupGetter__(\"__count__\")) { (1 for (x in [])) }");
tryItOut("{null; }");
tryItOut("try { with({}) { throw StopIteration; }  } catch(__noSuchMethod__ if (throw yield; = this.zzz.zzz)) { return; } catch(__proto__) { throw StopIteration; } finally { throw StopIteration; } ");
tryItOut("/*for..in*/for(let [__proto__, prop] = <><x><y/></x></> ? @foo : <x/> in <><x><y/></x></>) gc()");
tryItOut("{yield; }");
tryItOut("/*for..in*/L:for(const __parent__ in ((eval)(((<y><z/></y>)())))){yield; }");
tryItOut("/*for..in*/for(let yield <><x><y/></x></>['__iterator__'] in <x><y/></x>++) {{}{} }");
tryItOut("let(prop = __proto__.prototype = 5.0000000000000000000000) { for(let y in []);");
tryItOut("/*for..in*/for(var __proto__ in <><x><y/></x></>) 1e-81; const __noSuchMethod__;");
tryItOut("/*for..in*/for\f(let prop = __proto__ in @foo) export prop;");
tryItOut("for(let y in []);");
tryItOut("if((RegExp(<><x><y/></x></>.__defineGetter__(\"prototype\", (new Function(\"\"))))).unwatch(\"prototype\")) {yield;let __iterator__; } else  if (new Function(__proto__)) {return;; } else {if(function ([y]) { }) return; else throw <x><y/></x>; }");
tryItOut("const __count__ = (function ([y]) { })(); const __count__;");
tryItOut("break M\n{/*for..in*/for(var prop in undefined) yield; }");
tryItOut("yield;/*for..in*/for(const __noSuchMethod__ in this) {gc() }");
tryItOut("yield;\ngc()\n");
tryItOut("continue M;\ngc()\n");
tryItOut("L:with(/*infloop*/for(let __iterator__; <x><y/></x>; <y><z/></y>) {return;/a/gi })while((true :: __count__ setter: __noSuchMethod__function  __parent__ () { return 0x99 } ) && 0)return 3;(function(q) { return q; }).call");
tryItOut("yield prototype.prototype setter= <x><y/></x>;");
tryItOut("with(({constructor getter: [1,2,3,4].map,  set prop __proto__ (__parent__) { yield <bbb xmlns=\"(eval(\"*::*\", prop))\"><ccc:ddd>yyy</ccc:ddd></bbb> }  }))__noSuchMethod__, __parent__;");
tryItOut("const prototype = <><x><y/></x></>, __iterator__ = 0.1\nexport __proto__;");
tryItOut("/*infloop*/for(let __proto__ = ( /* Comment */(yield <x><y/></x>)); (( /x/g  @ <x><y/></x>) ? prototype = <x/> : typeof __parent__); ((window)(<><x><y/></x></>) = ('fafafa'.replace(/a/g, function(q) { return q; })) for each (__iterator__ in window) for (x::__noSuchMethod__ in false) if (<x><y/></x>))) __proto__;");
tryItOut("__parent__;");
tryItOut("with({__noSuchMethod__: prop = <><x><\ty/></x></>}){{gc() }continue ; }");
tryItOut("/*infloop*/for(const __parent__; new function  __proto__ ()false.__lookupGetter__(\"prop\")(); this.zzz.zzz) {(*.__defineGetter__(\"__parent__\", /a/gi)); }");
tryItOut("L:with(eval(\"*::*\", <y><z/></y>)){/*for..in*/for(var [prototype, constructor] = <x><y/></x> in 1e-81) {return null; } }");
tryItOut("with({}) return [];");
tryItOut("/*infloop*/for(let __proto__; __noSuchMethod__(<><x><y/></x></>); (constructor = __count__ = [,,], __proto__ = __noSuchMethod__)) getter = <><x><y/></x></>, __iterator__;");
tryItOut("L:with(<x/> @ <y><z/></y>.yoyo(1e+81 ? window : window.yoyo(__parent__ = <><x><y\f/></x></>))){/*for..in*/for(var __proto__ = (function(q) { return q; }).call(window, #3={a:#3#}, <y><z/></y>).eval((\nthis)) in window) {; }yield null;M:if((<x><y/></x> if (5.0000000000000000000000))) {(window); } else {function(y) { yield y; yield __iterator__;; yield y; }Function; }\t }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(var __iterator__ in <x/>) /*for..in*//* nogeckoex bug 349964 */ for  each(let __iterator__ in <y><z/></y>) {throw <><x><y/></x></>; }");
tryItOut("with({__parent__: __parent__: Exception((({ set delete(__count__, __parent__) { return; } , __count__ getter: Math.sin })))}){yield;export *; }");
tryItOut("if( /* Comment */[1][this.__defineGetter__(\"__noSuchMethod__\", (gc).call)] :: this.zzz.zzz.propertyIsEnumerable(\"\")) export *; else L:if([15,16,17,18].filter(<x/>, [<y><z/></y> if (null)])) {return;var __proto__ = window; }");
tryItOut("let (__noSuchMethod__ = ((this >>> [,]) !== __noSuchMethod__.(<y><z/></y>)), constructor) { if(({a2:z2}) %= eval(\"*::*\",  \"\" )) { if (((function  constructor ()undefined).call(<x/>, ))) @foo;} else {/*infloop*/M:while(1.2e3){ '' ;{} } } }");
tryItOut("L: each;");
tryItOut("with({}) with({}) let(__noSuchMethod__ = \n__parent__.__lookupGetter__(\"__noSuchMethod__\"), prop = ) { return (eval(\"<x><y/></x> ^= 5.0000000000000000000000\", (<x><y/></x>\n)));");
tryItOut("/*for..in*/for(var __count__ in (3.watch(\"__iterator__\", [1,2,3,4].slice))) {return;export __proto__\n }\n");
tryItOut("/*for..in*/L:for(const __iterator__ = <x/> in  '' ) {Function }\nexport *;\n");
tryItOut("with({}) { yield <><x><y/></x></>; } ");
tryItOut("if( /x/g ) return; else  if (({prototype getter: function  __iterator__ (constructor) { yield <><x><y/></x></> }  })) export *;");
tryItOut("L:with({prototype: <x><y/></x>}){var __proto__ = <x><y/></x>, __noSuchMethod__;var __noSuchMethod__; }");
tryItOut("let(__noSuchMethod__ = constructor = #1=[#1#], __count__ = [([<><x><y/></x></>\t])].filter(({}))) { throw constructor;");
tryItOut("return \n@foo;");
tryItOut("throw <><x><y/></x></>;yield __proto__;");
tryItOut("let __iterator__ = #1#, __count__ = <x/>");
tryItOut("do return; while((window.unwatch(\"constructor\")) && 0);");
tryItOut("/*for..in*/M:for(__parent__ in ((function (__iterator__) { return * } )(*.__lookupSetter__(\"__iterator__\")))){; }");
tryItOut("/*infloop*/while([1,2,3,4].slice(<><xxx>{__noSuchMethod__}</xxx></>, this.__lookupGetter__(\"prop\"))){{} }");
tryItOut("((1 for (x in []))).apply\nif() let constructor; else  if (__parent__.__count__) {{}constructor = @foo, prototype = window; }");
tryItOut("/*for..in*/for(const [__proto__, __iterator__] = <><x><y/></x></>++ in [z1,,]) {__proto__ = .2;export *; }");
tryItOut("if(true != [,,]) var __count__, __noSuchMethod__; else  if () {<y><z/></y> } else {gc()export *; }");
tryItOut("switch(-1.__lookupGetter__(\"function::prototype\")) { default: case ((this).__defineSetter__).call(undefined\f, 1e+81, window):  }");
tryItOut("L:if(<x/>--) {with({prototype: @foo}\r)return;-1; } else continue ;");
tryItOut("with({__iterator__: #1=[#1#]}){yield; }");
tryItOut("do (this); while((<y><z/></y>) && 0);");
tryItOut("<><x><y/></x></> = constructor;");
tryItOut("");
tryItOut("if(<><x><y/></x></>) { if (__iterator__) {{}export *; } else {gc()\fcontinue M; }}");
tryItOut("yield;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __proto__ in <x><y/></x>) gc()\n");
tryItOut("/*for..in*/for(var __parent__ in ((({}).__lookupGetter__)(__parent__|=5.0000000000000000000000)))yield;");
tryItOut("/*for..in*/for([__proto__, prototype] = #2=[<>//h\n<x><y/></x></>] in <x><y/></x> <= 4.) {;return; }");
tryItOut("L: break ;");
tryItOut("/*infloop*/do {(undefined);1e4; } while([11,12,13,14].sort);");
tryItOut("/*for..in*/L:for(__parent__ in ((({}).hasOwnProperty)(#0=<x/>)));");
tryItOut("L/*: export *;");
tryItOut("/*infloop*/for(__iterator__; ((Math.sin)([11,12,13,14].map)); ((yield [1]).prototype) ? (p={}, (p.z =  /x/g )()) : (function ([y]) { })().watch(\"__parent__\", 'haha'.split)) {[1,2,3,4].slice{} }");
tryItOut("if() {{} }");
tryItOut("if((eval(\"let __parent__;\", ({a1:1})))) M:if(<y><z/></y>) { if (prototype = 3) yield; else ( /x/g );}");
tryItOut("{{}export *; }");
tryItOut("let (__noSuchMethod__) { /*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__ in __parent__ = __proto__.__iterator__) {yield;throw <><x><y/></x></>; } }");
tryItOut("if((prop = <><x><y/></x></>).hasOwnProperty(\"__parent__\")) { if (---3/0.__defineSetter__(\"__count__\", function (__iterator__, prop) { yield <y><z/></y> } )) /*infloop*/for(<x/>; *; <x><y/></x>) ;} else {//h\nreturn undefined\nif(<x><y/></x>) { if (prop) {(null); } else {window{} }} }");
tryItOut("{M:if(((new Function(\"1e-81\"))).call(__noSuchMethod__, )) { if (0.1) return 1e81; else } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let (((1 for (x in [])))(null))((__proto__.__parent__)) in ({__noSuchMethod__: -0.isPrototypeOf(0.1), __noSuchMethod__: __iterator__ = @foo })) {function  __count__ (__count__ = <y><z/></y>.hasOwnProperty(\"false\"), constructor) { return constructor = false }  }");
tryItOut("yield (*.__iterator__ = [,,].isPrototypeOf(<x><y/></x>));\f");
tryItOut("if(__proto__ = @foo) /*for..in*/L:for(const __noSuchMethod__ = ({}) in *) prop else  if ( '' ) {(@foo);return 3; } else {break ;export constructor; }\n");
tryItOut("/*infloop*/M:for(((null / <x><y/></x>).__lookupGetter__(\"__count__\")); (1.2e3 for each (prop in prop)); (uneval(.2))) throw constructor;");
tryItOut("/*for..in*/L:for(__noSuchMethod__ = * in ) {throw prop;/*infloop*/for(<><x><y/></x></>.__defineSetter__(\"__iterator__\", eval); (this.zzz.zzz); ) {yield <x><y/></x>;return #1=[#1#]; } }");
tryItOut("if(<bbb xmlns=\"<x><y/></x>.(this)\"><!--yy--></bbb><ccc:ddd><!--yy--></ccc:ddd>.((new eval(<x><y/></x>.isPrototypeOf(undefined).__lookupGetter__(\"prototype\"))))) {var __count__ = undefined, __proto__; } else  if ( /* Comment */3) {break ;const __proto__ =  { return <><x><y/></x></> } , __iterator__ = null; }");
tryItOut("if(<y><z/></y>) L:while((1.3) && 0) else {return  /x/ ;export *; }");
tryItOut("const __proto__ = (-0), __parent__ =  '' ;\nreturn;\n");
tryItOut("throw StopIteration;");
tryItOut("/*infloop*/while((function(id) { return id })()){{}\nreturn <y><z/></y>;export __parent__; }");
tryItOut("if([,,z1].yoyo(window)) with((<y><z/></y>)[<x/>]){export __count__; }\n{export *; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __proto__.__iterator__ in -1.3) {/*infloop*/for(const prototype = <x><y/></x>; null; this) return;<y><z/></y>; const __noSuchMethod__; }");
tryItOut("function  __parent__ \t() { yield * } ");
tryItOut("M:while((<x/> >>> <x/>) && 0)export *; const each;");
tryItOut("\n{}");
tryItOut("while((__iterator__ = *) && 0)");
tryItOut("\n");
tryItOut("export prototype;\nreturn\n");
tryItOut("{ { yield <><x><y/></x\t></> } {} }");
tryItOut("return;");
tryItOut("(<><x><y/></x></>);");
tryItOut("L: {this; }");
tryItOut("/*for..in*/for(__proto__ in __parent__) 1.3");
tryItOut("if(#1#) { if ([11,12,13,14].map) \t{yield window;{} }} else {export *; }");
tryItOut("let (__iterator__ = <x><y/></x>, __count__) { let __proto__, constructor; }");
tryItOut("let (({ __noSuchMethod__: ({ prop: ({ prototype: (__proto__), __iterator__: ({ __count__: ({ __iterator__: ({ __parent__: __noSuchMethod__ }) }) }) }), <x/>: ({ prop: __iterator__.prop, prop: ({ prototype: ({ __parent__: __iterator__, __count__: __count__ }) }) }) }) }), prop = (prop = __proto__ = <x><y/></x> , (delete = this))) { let ([, __proto__, ] = (this <<= <x><y/></x>).hasOwnProperty(\"__parent__\"), x::__count__ = prop.__proto__) { \texport *; } }");
tryItOut("/*for..in*/M:for(__count__ = yield ([15,16,17,18].map(?, [15,16,17,18].map((new Function(\"continue ;\")), *))) in 'fafafa'.replace(/a/g, Math.sin) >>= ({a1:1})) {Math.pow }");
tryItOut("/*for..in*/for(const __count__ = 'fafafa'.replace(/a/g, function(y) { yield y; prop = 1e+81, prototype = <x><y/></x>;; yield y; }) in (new Exception(<><x><y/></x></>, -3/0))) with({__count__: ((<x><y/></x>++))()}){return ({});(<><x><y/></x></>).watch }");
tryItOut("{}");
tryItOut("\n");
tryItOut("var prototype;");
tryItOut("L: {{}gc() }");
tryItOut("/*for..in*/for(let __count__ in (this.zzz.zzz)) if((<x><y/></x>.unwatch(\"__count__\")) ? new (<x><y/></x>).apply(5.0000000000000000000000) :  /x/ ) { if (let (prototype, function::__iterator__) (([<><x><y/></x></>], __iterator__))) {break ; } else return;}");
tryItOut("break L;");
tryItOut("M:if(<zzz><><bbb xmlns:ccc=\"<x><y/></x>\"><ccc:eee></ccc:eee></bbb></></zzz>.(prop+=yyy)) { if ((RangeError(<x><y/></x>.(null), <><x><y/></x></>))) { }} else continue M;");
tryItOut("/*infloop*/L:do {{}if(<x><y/></x>) const __proto__, __noSuchMethod__ = *; else return; } while([11,12,13,14].some);");
tryItOut("L: {let(__parent__) { let([, constructor, , __parent__, __count__]) { for(let y in [5,6,7,8]) {} }");
tryItOut("{export prototype; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each((constructor) in [,,z1]) {;yield; }");
tryItOut("M:if(--this) with({__proto__: window}){export __proto__; } else throw prop;");
tryItOut("/*for..in*/for((__count__(window)) in (((<><zzz>@foo</zzz></>).__defineSetter__)(new Error(eval(\"export *;\", [1]), ({a2:z2}).watch(\"__noSuchMethod__\", ({}).hasOwnProperty))))){/*infloop*/for(var __noSuchMethod__ = (function ([y]) { })();  ''  if (<x><y/></x>);  /x/g .eval(({}))) {;function(q) { return q; } }gc() }");
tryItOut("return  /x/g ;\n;\n");
tryItOut("throw -1;(-1), __iterator__ = window;");
tryItOut("{(<x><y/></x>); }");
tryItOut("yield <x/>\nM:if(new Error(<x><y/></x>, @foo)) { if (<x><y/></x>.__lookupSetter__(\"__parent__\")) let prototype;} else export __noSuchMethod__; const __iterator__;");
tryItOut("L:if(true) return; else  if (<x/>) {(window); } else [[1]]");
tryItOut("with({}) (<><x><y/></x></>)( /x/ ) = __count__;");
tryItOut("/*infloop*/M:do {var prop;export *; } while((({__iterator__: <x><y/\t></x>})));");
tryItOut("if(<><x><y/></x></>) return undefined; else  if (eval(\"#1=[#1#]\", <x><y/></x>)) {(<x><y/></x>); } else {(gc).callreturn <y><z/></y>; }\nif(undefined) {export *;yield prototype; } else  if ( /x/g ) {yield;export constructor; }\n");
tryItOut("let (__parent__ = __proto__[undefined]) { <xxx {prop}={undefined} /> }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var *::* >>= this['({ __noSuchMethod__: __iterator__ })'] in (({constructor: ({})}))) ;");
tryItOut("function(id) { return id };\n();\n");
tryItOut("return <x/>;");
tryItOut("/*for..in*/for((this.__defineSetter__(\"prop\", function(q) { return q; }))['__proto__'] in ((function(q) { return q; })(this += let (__proto__) @foo.propertyIsEnumerable(\"constructor\")))){L:with({constructor: 1e81 + 1e-81.__lookupGetter__(\"__iterator__\")})throw 0/0; }");
tryItOut("/*for..in*/M:for(const __parent__ in ((window)(null))){;return <><x><y/></x></>; }");
tryItOut("/*for..in*/for(__noSuchMethod__(this) in ({})) {((({}).hasOwnProperty).apply).call1.2e3; }");
tryItOut("\n");
tryItOut("var prop;\nfunction::x::__noSuchMethod__ = [z1], __proto__ = [1];\n");
tryItOut("{/*for..in*/for(var [constructor, prototype] = [@foo].some((<x><y/></x>).watch) in 1e+81) return <><x><y/></x></>;__count__ }");
tryItOut("throw @foo; const __iterator__;");
tryItOut("with({}) with({}) { let(constructor) ((function(){try { const prototype = __parent__; } catch(constructor if (function(){<x><y/></x>})()) { let prototype = @foo, __noSuchMethod__ = @foo; } catch(__iterator__) { <x><y/></x>; } })()); } ");
tryItOut("/*infloop*/L:for(__proto__; (delete <><x><y/></x></>) <= <><x><y/></x></> || function ([y]) { } = (__noSuchMethod__.(<x><y/></x>)); [({ __parent__: __noSuchMethod__ }), [, [[], ], []], ({ each: [, , , , ], prop: ({ prototype: __noSuchMethod__(@foo), __noSuchMethod__: [({ prototype: __parent__, constructor: __proto__ }),  { return [] } , ] }) }), ]) /*infloop*/L:do yield <x><y/></x>; while(window ? 1e-81 : <x><y/></x>);");
tryItOut("if((undefined.__noSuchMethod__ = *)) {}");
tryItOut("this.zzz.zzz;");
tryItOut("/*for..in*/for([__parent__, __proto__] = [1] in <y><z/></y>) throw 0/0;");
tryItOut("1.2e3");
tryItOut("L:if((Exception(new String()))) {{} }");
tryItOut("while(((<xxx>{__parent__}</xxx>.(\n<><x><y/></x></> % <><x><y//*\n*/></x></> ? <{__parent__}><ccc:ddd></ccc:ddd></{__parent__}> : (({ prop: __count__ }) = [15,16,17,18].sort(<x><y/></x>, function ([y]) { }))))) && 0){if(window.propertyIsEnumerable(\"__count__\")) export prototype;{} }");
tryItOut("if(false !== this) {gc()let (__iterator__ = <y><z/></y>, prototype) { return; } } else  if (@foo) {export __iterator__;Functiongc() }");
tryItOut("yield __noSuchMethod__.__parent__;");
tryItOut("continue L;return;");
tryItOut("L:if((new 033(__noSuchMethod__))) __proto__ else  if (([15,16,17,18].some(Math.pow, window))) {const x::__proto__;return *::*; }");
tryItOut("L:if( /x/ ) { if (<x/>.__lookupGetter__(\"__proto__\")) __proto__ = __proto__; else {do /*for..in*/for(var __count__ = 1.3 in <x/>) {return;throw this; } while((((<x><y/></x>)[ /x/g ])) && 0); }}");
tryItOut("with({prototype: __proto__ = true.eval(.2 -= <><x><y/></x></>)}){/*for..in*/for(var [__noSuchMethod__, __count__] =  /* Comment */this in window) {const __count__ = prop; \"\" ; } }");
tryItOut("/*for..in*/L:for([__parent__, __count__] =  for each (__proto__ in window.@*) in __parent__ = __parent__\t-=0.1) {/*infloop*/L:for(var __proto__; prop = *::*; ({ get __proto__(__parent__) { ; } , __iterator__: (delete <><x><y/></x></>) }) *= (<><x><y/></x></>\n)) {return (function ([y]) { })();__count__; }{constructor = window, __count__ = <><x><y/></x></>;export prop; } }");
tryItOut("with({}) { var __proto__ = <x/>, __parent__ = @foo; } ");
tryItOut("switch(this.__defineGetter__(\"prototype\", <x/>)) { case 7: break;  }");
tryItOut("/*for..in*/L:for(const __iterator__ in (constructor = <x><y/></x>)) (<><x><y/></x></>).__defineSetter__");
tryItOut("let(__noSuchMethod__ = undefined.propertyIsEnumerable(\"__parent__\")) ((function(){return __iterator__;})())\n");
tryItOut("let (({ __count__: ({ prototype: __count__ }), __iterator__: ({ constructor: [, ] }) })) { __iterator__ }\n");
tryItOut("for(let y in []);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(var prototype in *) __proto__ = <x/>, __iterator__;");
tryItOut("/*infloop*/for(__parent__; .2.isPrototypeOf(__iterator__);  '' ) continue ;");
tryItOut("with({__iterator__ = (__count__.(window)): ((yield prototype = <y><z/></y>))}){/*for..in*/for(const __parent__ in <><x><y/></x></>) {return;export *; } }");
tryItOut("/*for..in*/for(let [__count__, prototype] = new (__noSuchMethod__)() in <x><y/></x>) {}");
tryItOut("return;\nyield false;\nexport prop;\n\n");
tryItOut("M:do {} while((new Array()) && 0);");
tryItOut("if(([,].yoyo(( /x/ )))) {export *\n(5.0000000000000000000000); } else  if (({ prop: __count__, prototype: __noSuchMethod__ }) = new function(y) { yield y; throw <><x><y/></x></>;; yield y; }()) {const <><x><y/></x></> = *; } else {yield <><x><y/></x></>; }");
tryItOut("if(<bbb xmlns:ccc=\"0\"><ccc:eee></ccc:eee></bbb>.(3)) {yield;export constructor; } else  if (#1=null) {this; } else (new Function(\"export *;\"))");
tryItOut("with({}) { with({}) this.zzz.zzz; } ");
tryItOut("do return; while((new (null)//h\n()(<x><y/></x>.(<x/>)) ^= (Array(function::prototype.constructor = *::*.yoyo((<><x><y/></\fx></>)[ \"\" ])))) && 0);");
tryItOut("__parent__, __count__ = undefined;");
tryItOut("/*for..in*/L:for(const [prototype, constructor] = ({__iterator__: [*].some(<x/>)})\t in <><x><y/></x></>.__noSuchMethod__) with({__parent__: <><x><y/></x></>}){export *;export *; }");
tryItOut("for(let y in [5,6,7,8]) yield <x/>;");
tryItOut("if('fafafa'.replace(/a/g, (Date(<y><z/></y>.__defineSetter__(\"__parent__\", ((*::*).__defineSetter__).apply), 033)))) with( \"\" .__lookupGetter__(\"prototype\")){ } else  if (( /* Comment */(window.__count__))) ({{Math.sin }) } else let");
