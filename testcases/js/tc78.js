tryItOut("let (prop, __proto__ = <x/>) { yield constructor; }");
tryItOut("/*infloop*/for(<><xxx>{__parent__}</xxx></>; (new (__count__ = __proto__-=<x><y/></x>)((eval(\"prototype;\", null) << undefined in  /x/ ), prototype = this)) / <>yyy</>; (<x><y/\t></x>)[1.2e3]) while((4.) && 0){{}continue M; }");
tryItOut("{}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(constructor in new RegExp().__lookupSetter__(\"prop\")) {with({}) { throw StopIteration; }  }");
tryItOut("continue \nL:switch((__noSuchMethod__.prop getter= <y><z/></y>.@*)) { case <><xxx>{__proto__}</xxx></>: (prop);break; break; default: export *;case 0: (window); }");
tryItOut("for(let y in []);");
tryItOut("if([,]) { if (undefined) ( '' );} else {__count__(Math.sin).call }");
tryItOut("function  __parent__ ( '' , __iterator__) { yield 1.2e3 } \nexport *;\n");
tryItOut("/*infloop*/M:do {(<x><y/></x>);return; } while(<><zzz>(x::__iterator__ = @foo)</zzz></>);");
tryItOut("{if(constructor) {return; } else  if (3.141592653589793) let constructor, __count__ = ({a1:1}); else (window);throw <x><y/></x>; }");
tryItOut("\n/*for..in*/for(var __count__ = undefined in __count__) const __noSuchMethod__;\n");
tryItOut("yield;");
tryItOut("if([,]) { if ([ /x/  | <y><z/></y>].map(eval)) {{} } else {yield -0; }}");
tryItOut("M:if(prototype.yoyo(function(id) { return id })) { if ((constructor.prototype setter= this)) {export *;break ; }} else ;");
tryItOut("export *;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __iterator__ in <x><y/></x>) break L;");
tryItOut("/*infloop*/for(__parent__ =  /x/g ; <x><y/></x> != __count__: (#1=[#1#] if (constructor)); 1.2e3) {return <><x><y/></x></>;/*for..in*/for(let set in null) null; }");
tryItOut("let (__iterator__ = prototype =  '' , __proto__) { {} }");
tryItOut("/*for..in*/for(let prototype = prototype in window) {throw *; }");
tryItOut("{yield <><x><y/></x></>;let (constructor = <x>\t<y/></x>, prototype) { gc() } const prototype; }");
tryItOut("switch(prop.__count__ = <><x><y/></x></>) { default: gc() }");
tryItOut("if(<y><z/></y>) {<x><y/></x>; } else  if ([11,12,13,14].some) throw 3; else break L\nif(window) {export *; }");
tryItOut("let (__iterator__) { /*for..in*/for(let __parent__ = [[]] in <><x><y/></x></>) {gc()gc() }if(#1=[#1#]) { if (*::*) {__parent__;{} }} else {const __proto__; } }");
tryItOut("/*for..in*/L:for(__proto__ = (<x><y/></x>.( /x/ )) %= ([undefined if (<x><y/></x>)]) in (<x/>\n)) {;switch((function ([y]) { })().throw(1e-81)) { default: L: {yield;export *; }break;  } }");
tryItOut("/*infloop*/do {var __noSuchMethod__ = [[1]];{} } while((__iterator__ = #0= /x/ )); const prop;");
tryItOut("/*infloop*/for(var constructor; ({ __proto__: ({ __parent__: prop }) }); [15,16,17,18].map(Math.sin, <><><><x><y/></x></></></>)) {/*for..in*/for(let __parent__ in (([1,2,3,4].map)(*::*))){; }do throw window; while((this.__lookupSetter__(\"__count__\")) && 0); }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each((__parent__) in ('haha'.split).call((__noSuchMethod__.prototype setter= (__proto__).__defineSetter__), 'fafafa'.replace(/a/g, <x><y/></x>).valueOf(\"number\"), 1e-81.isPrototypeOf(3.141592653589793))) {{} }");
tryItOut("L:do var __iterator__; while((( /x/ .isPrototypeOf(constructor))) && 0);");
tryItOut("if((null.__parent__)) {yield window;M:if(1e+81) { if (({a1:1})) export prop; else {gc() }} } else ");
tryItOut("/*infloop*/for(var [[<x/>.__iterator__, , __iterator__, __noSuchMethod__, ({ __proto__: prototype })], constructor, , ] = prototype = <x><y/></x> >= (__proto__ = prototype); ((__proto__ =  \"\" ) >= {} >= -0); __proto__-=__count__ =  /x/  .@*:: prop) continue \nif(( ''  %= (-1))) {; } else  if (<><x><y/></x></>.propertyIsEnumerable(\"constructor\")) return\n");
tryItOut("__count__: [[]]");
tryItOut("/*for..in*/for(var <> /x/g </>.function::__count__ in (#2=({__proto__:  /x/ }))) return <x><y/></x>;");
tryItOut("if(<x><y/></x> |= undefined) yield <><x><y/></x></>; else  if ((__proto__.constructor = <><x><y/></x></>)) {let __proto__, __parent__ = true;continue ; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each((#2=({__parent__: (eval(\"yield undefined;\", null))}))(__proto__ = ( \"\" .throw(*::*))) in new Number().watch(\"__proto__\", 'haha'.split)) {yield;var __proto__; }");
tryItOut("{if((false.unwatch(\"__parent__\"))) #1=[#1#]function (__parent__) { throw 3; }  else  if (<x><y/></x>.(*)) {propconst __proto__ = function ([y]) { }; const __count__; } }");
tryItOut("__noSuchMethod__");
tryItOut("/*infloop*/L:for(constructor; ( /x/g  & [[1]]); (constructor , [[]]\t)) export *;");
tryItOut("/*infloop*/for(__proto__ - <y><z/></y>; prop.__noSuchMethod__; <x><y/></x> == window) {__noSuchMethod__; }");
tryItOut("L:with({__count__: (yield this.zzz.zzz)}){M:with( /x/g ){*;( /x/g ); }__parent__ = null, __count__ = function(id) { return id }; }");
tryItOut("/*infloop*/do return; while((new Function(\"const __noSuchMethod__, __parent__ = window;\")));");
tryItOut("/*infloop*/for(var __noSuchMethod__; undefined; <x><y/></x>) {return  '' ; }");
tryItOut("try { with({}) { return; }  } catch(function::constructor) { with({}) Functioncatch(__iterator__) { export *; } finally { throw *; }  } ");
tryItOut("if(<x/>) {yield constructor; }");
tryItOut("prop = __noSuchMethod__;");
tryItOut("for(let y in [5,6,7,8]) throw StopIteration\nif(*.@foo) const prototype; else { }");
tryItOut("if(@foo['__noSuchMethod__'] = <x><y/></x>.__defineGetter__(\"__count__\", ({}).hasOwnProperty).__defineSetter__(\"__iterator__\", function  constructor (constructor, x::__proto__) { ; } )) let __count__, __parent__ =  /x/ ;");
tryItOut("L:if([,,z1] ? this : <) { if (((constructor) &= <y><z/></y> .@x:: <x/> &= export constructor; ? __proto__ : [,])) {__iterator__ = <><x><y/></x></>, __count__ = true; } else {;{} }}");
tryItOut("with({__count__: eval(\"{}\",  /x/g  ? false : <x><y/></x>)})/*infloop*/for(let constructor; (~<x><y/></x>); (__proto__ != window)) export *;");
tryItOut("/*infloop*/L:do {continue M;export *; } while((<x><y/></x>.__defineGetter__(\"__count__\", (function  __noSuchMethod__ () { return  /x/  } ).apply)));");
tryItOut("let (({ __proto__: __parent__ })) { if(\n( /x/g .valueOf(\"number\"))) ; else  if (<x><y/></x> ^=  /x/g ) yield (__parent__.prop getter= 3.141592653589793); }");
tryItOut("/*for..in*/for(var __parent__ in constructor) if(//h\n[z1]) { if (<y><z/></y>) {yield; }} else {gcconst __iterator__, __proto__ = ({a2:z2}); }");
tryItOut("L: {{} }");
tryItOut("switch((<><x><y/></x></>.throw(window))) { default: export *;break;  } const __parent__;");
tryItOut("if(( /x/g .hasOwnProperty(\"__noSuchMethod__\"))) {return *::*; } else  if (false.__defineSetter__(\"__proto__\", new Function)) let __proto__, constructor = <y><z/></y>; else var __proto__ = <><x><y/></x></>;");
tryItOut("L: {prototype; } const __parent__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in true) {[1,2,3,4].map }");
tryItOut("yield");
tryItOut("/*infloop*/for(const constructor = ({__parent__: export prop && prop}); @foo.*; (prop = (window.@*))) {{} }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(constructor in <x><y/></x>) {[1,2,3,4].slice(<><x><y/></x></>); }");
tryItOut("try { with({}) this.zzz.zzz; } catch(__noSuchMethod__ if (this.__proto__)) { with({}) { for(let y in []); }  } catch(__count__) { prop.prototype = prop; } finally { __proto__ = prop; } ");
tryItOut("if(new RegExp(<></>.((eval(\"continue L;\", <><x><y/></x></>))))) return; else ;");
tryItOut("L:if(<ccc:ddd></ccc:ddd> for each (__parent__ in <x><y/></x>)) { if (({ __proto__: ({ __noSuchMethod__: prototype }) }) = \n(-0)[<><x<y/></>]) {}export *;} else {do ({a2:z2}); while((eval(\"[,]\",  \"\" )) && 0); }");
tryItOut("/*infloop*/while((__noSuchMethod__.__noSuchMethod__ = ({}))){return  '' ; const constructor; }");
tryItOut("/*infloop*/M:for(new __count__.prop();  \"\" (window, <y><z/></y>\r) >>= <x/>; ((new __count__(<x/>)))) (1 for (x in []))");
tryItOut("let (__iterator__, __noSuchMethod__ = this) { yield <x/>; }");
tryItOut("{{(__parent__ > <x><y/></x>); }\fwindow\nthrow <y><z/></y>; }");
tryItOut("/*for..in*/for([prototype, __count__] = RegExp() in true) {{var constructor = window, __parent__ = *::*;true; } }");
tryItOut("L:with({__noSuchMethod__: (\n<x/>)}) /x/ ;");
tryItOut("with(false.watch(\"__iterator__\", function () { yield __iterator__ } ))do {const __parent__; } while((<y><z/></y>) && 0);");
tryItOut("yield 3");
tryItOut("/*for..in*/for(const __iterator__ = .2 in false) export *;");
tryItOut("throw prototype;");
tryItOut("if([#3={a:#3#} if ((__parent__ = <x><y/></x>))]) {yield\n } else break ;");
tryItOut("/*for..in*/for(let (function::__proto__) in (5.0000000000000000000000.@*)(((window).call)(), 1e81)) {/*for..in*/for(const __proto__ in [[1]]) {yield undefined; } }\nswitch((((yield window)).propertyIsEnumerable(\"constructor\"))) { case 3: /*infloop*/for\t(var 0x99; [({}) for each (prototype in <x/>)];  \"\"  >= undefined) continue ;break; yield <><x><y/></x></>;break;  }\n");
tryItOut("if(*::*) function(id) { return id }; else  if (undefined) {;throw  /x/ ; } else \t{(<><x><\fy/></x></>);let constructor = [1,,]; } const __proto__;");
tryItOut("false");
tryItOut("if(~new (window)(<x/>)) {var __iterator__ = 1.2e3, __count__;prototype; } else { /x/ ;<x/>; }");
tryItOut("try { for(let y in []); } catch(prop if __iterator__) { switch(-1) { default: case 3: return <x/>;case <><x><y/></x></>: return prototype;case window: yield;break; case <x/>:  } } catch(__proto__ if (function(){this.zzz.zzz;})()) { prototype = prop; } catch(prototype) { with({}) throw prototype; } ");
tryItOut("while(((new __count__)) && 0)with(this.__defineGetter__(\"__parent__\", 'haha'.split));\f");
tryItOut("{var constructor = <y><z/></y>; }");
tryItOut("if(prop & (__proto__ .@*:: <x><y/></x>)) { if (new (this)(\nwindow, <x><y/></x>)) {with({__count__: <y><z/></y>})throw true; } else {<x><y/></x>; }}");
tryItOut("if(<><x><y/></x></>) {0x99; } else  if (__proto__) function(q) { return q; } else {; }");
tryItOut("L:with({prototype: this.__defineGetter__(\"__count__\", function  __iterator__ ()<y><z/></y>) / prototype =  '' }){{}break ; }");
tryItOut("with({}) return window;");
tryItOut("let(prop = (prototype.__parent__.__lookupSetter__(\"prop\"))) { export __noSuchMethod__;");
tryItOut("if(<x><y/></x>) return __proto__; else __noSuchMethod__ = constructor\nif(\f__proto__.prop getter= <x><y/></x>;) /*for..in*/for(var prototype = true in 1.3) export __count__;\n");
tryItOut("export __proto__\n");
tryItOut(";");
tryItOut("constructor = __iterator__;");
tryItOut("/*infloop*/do return @foo;\r while(<><x><y/></x></>.valueOf(\"number\") & __iterator__ = <y><z/></y>);");
tryItOut("yield [[1]]; const __proto__;");
tryItOut("/*infloop*/L:for(const null; prop = *::*; prop = ( /* Comment */[,])) const __noSuchMethod__;");
tryItOut("if((false -=  /x/g .eval(this.throw( '' )))) { if (__count__) return;} else {export *;export *; }");
tryItOut("M:if(<><><!--yy--></></>()) var __proto__ = <>/*\n*/<x><y/></x></>; else  if ((new Date(__iterator__ = @foo, true))) [1,2,3,4].map");
tryItOut("{Math.pow }");
tryItOut("let (prop = yield [,]) { /*for..in*/M:for(let function::__noSuchMethod__ in (((*::*).__defineSetter__)(__iterator__ = 0x99 - <y><z/></y>.__defineSetter__(\"prop\", (<><employee id=\"1\"><name>Joe</name><age>20</age></employee></>).watch))))/*infloop*/for(constructor; <><x><y/></x></>; <x><y/></x>) return  /x/ ; }");
tryItOut("throw StopIteration;");
tryItOut("for(let y in []);");
tryItOut("with({}) return;");
tryItOut("let (__count__ = #3={a:#3#}.throw(<x><y/></x>), prop) { yield <y><z/></y>\n\n }");
tryItOut("/*infloop*/M:while(3/0){__count__ = <x><y/></x>\nwhile((3) && 0){<x><y/></x>;*; }");
tryItOut("throw __count__;");
tryItOut("{{}export constructor; }");
tryItOut("with({}) yield ~*::*;");
tryItOut("continue L;");
tryItOut("L: ");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let 1.3 in <><x><y/></x></>) {throw <x><y/></x>;return <x><y/></x>; }");
tryItOut("default: {throw #3={a:#3#}; }break; break; case 1: /*for..in*/M:for(let __noSuchMethod__.__parent__ in ((Function)(([15,16,17,18].map(function   /x/  (__noSuchMethod__, try { let prototype = <x><y/></x>; } catch(__count__) {  } ) { break L; } , (-0)))))){(1 for (x in []))return undefined;\f }break; ");
tryItOut("while((new new ([1,2,3,4].slice)(*, this)()) && 0)while((( /x/g )(true.@*, #1#)) && 0){; }");
tryItOut("(<x><y/></x>)\n");
tryItOut("__parent__.prototype = null .@ (<x><y/></x>)[null]");
tryItOut("/*for..in*/M:for(__proto__ = ({ __proto__: ({ __parent__: [, __parent__, ], __parent__: ({ __count__: __iterator__ }) }), prop: ({ prop: ({ prop: __count__, prototype: __noSuchMethod__ }), __iterator__: __noSuchMethod__ }) }) = <x><y/></x> ? #3={a:#3#} : -0 in (((<x/>).watch)((+window)))) {export *; }");
tryItOut("with('fafafa'.replace(/a/g, <><x><y/></x></>).eval( /* Comment */window)){with({prop: 3.141592653589793}){0.1;this; }return; }");
tryItOut("with({__proto__: this.__defineSetter__(\"prototype\", (new Function).apply)})throw false;");
tryItOut("/*for..in*/L:for(var [, constructor, __parent__, ]\t in [ /x/  for (prop in ({})) for each (prop in @foo)] & <y><z/></y>(<x><y/></x>)) ");
tryItOut("with({__parent__: <x/>})L: (@foo); const __proto__");
tryItOut("let (({ __count__: prop, constructor: ({ __iterator__: ({ __proto__: __count__.__noSuchMethod__ }) }) })) {  }");
tryItOut("export __noSuchMethod__\n");
tryItOut("<><x><y/></x></>;");
tryItOut("[,]; const prop;");
tryItOut("while(( '' ) && 0)/*infloop*/do {gcexport *; } while(function ()<><x><y/></x></>);");
tryItOut("if((<x/> == 1e+81.__lookupSetter__(\"__parent__\"))) { if (((p={}, (p.z = #0=({__parent__: <><x><y/></x></>}))()))) /*for..in*/for(var __noSuchMethod__ in true) {;const prototype = 1e-81, let; } else export *;}");
tryItOut("with({}) this.zzz.zzz;");
tryItOut("M:if(@foo(<y><z/></y>)%=yield <><x><y/></x></> ^ (this &= [,])) { if (<><employee id=\"1\"><name>Joe</name><age>20</age></employee></>) {/*infloop*/L:for(var prop; (constructor); __parent__.( '' )) {return;export constructor; } } else {return; }}");
tryItOut("/*infloop*/for(let ; prototype.__proto__ = this.__defineSetter__(\"__proto__\", window.__iterator__ = <><x><y/></x></>)\t; ((<><x><y/></x></>.prop).__proto__)) gc()");
tryItOut("with({__proto__: eval(\"constructor = let prototype;;\", prototype)})yield;");
tryItOut("let (__iterator__) { /*for..in*/for(const __parent__ in ((Math.sin)(({} ? this : <><x><y/></x></>)))) }");
tryItOut("/*for..in*/for((( /x/g )( \"\" , <x><y/></x>)) in ((Math.pow)((([,,].__defineSetter__(\"__parent__\", (new Function).call))).watch)))do yield; while((yield (1 for (x in []))) && 0);");
tryItOut("for(let y in [5,6,7,8]) with({}) throw StopIteration;");
tryItOut("/*for..in*/for(__iterator__ in (('haha'.split)((({ __parent__: [], __count__: ({ __parent__: __count__ }) }) = (let (__proto__, prop) let (__proto__ = <x><y/></x>) <><x><y/></x></>.prototype)))\f)){yield <x><y/></x>;(__noSuchMethod__) }");
tryItOut("if(<x><y/></x>\n) { if (new Date()) {return  \"\" ; }} else {(<y><z/></y>)\f;let prototype = @foo, prototype = @foo; }");
tryItOut("/*infloop*/do yield [[1]]; while(*::*.unwatch(\"function::__proto__\"));");
tryItOut("if(Object()) {if(yield new Iterator(,  /x/g )[__iterator__]) var constructor, __parent__ = {}; else  if (constructor, __proto__ =  /x/ .__defineSetter__(\"prop\", Math.pow)) { { return false }  }yield ++#2=({__proto__: *}); } else {return;let function:: /x/g  = false, __proto__; }");
tryItOut("switch((throw this)) { case 3: /*infloop*/M:while(window >>>=true)throw 0;break; case 0: return prototype\nbreak;  }");
tryItOut("/*infloop*/L:while(this.__defineSetter__(\"x::prop\", __parent__.(<><x><y/></x></>))){var prop, __count__;if(@foo.eval(<><x><y/></x></>)) {; } else  if (prototype >>>= /x/g .valueOf(\"number\")) ; }");
tryItOut("{}");
tryItOut("if(prop = __iterator__.isPrototypeOf(prototype = __proto__)) /a/gi else  if () {switch(([,,] -= undefined)) { default: /*for..in*//* nogeckoex bug 349964 */L: for  each(var __proto__ in ) case (({}).hasOwnProperty): [1,2,3,4].slicecase (.valueOf(\"number\")): break; case 5:  } } else continue ;");
tryItOut("if((function ([y]) { })())  else  if (/*\n*/<x><y/></x>.watch(\"prototype\", eval)) {gc()(<x/>)\n } else export __parent__;\nexport prop, __count__ = window;\n");
tryItOut("/*for..in*/for(const __count__ = 0x99 in get >>= 3.141592653589793) continue M;");
tryItOut("if(__noSuchMethod__.__parent__-=yield) { if (\t({__parent__: (new <x><y/></x>()),  set __count__ prototype (__iterator__, __parent__) { yield (delete <x><y/></x>) }  })) (@foo).__defineSetter__} else {throw <x><y/></x>; }");
tryItOut("/*infloop*/for(const __parent__;  /* Comment */(constructor.prototype = <><x><y/></x></> *=  <xxx {x::__parent__}={window} />[,,z1]); (p={}, (p.z = __proto__)())) {/*for..in*/for(const prototype = <><x><y/></x></> in [,,]) {yield;gc() }break L; }");
tryItOut("L: {}");
tryItOut("{return this; }");
tryItOut("let(__count__ = (__noSuchMethod__ = __count__), __proto__ = function(id) { return id } for (prototype in <x><y/></x>)) ((function(){yield (new <x><y/></x>);})());");
tryItOut("with({__noSuchMethod__: 'fafafa'.replace(/a/g, function  function::__parent__ (__parent__, prop) { ; } )}){throw @foo;export __proto__; }/*for..in*//* nogeckoex bug 349964 */M: for  each(var [prototype, ]['__proto__'] in prototype) break L;");
tryItOut("/*for..in*/for(let (({ prototype: ({ __proto__: __proto__, prop: prototype }) })) in ((({}).hasOwnProperty)((new (({}).__lookupGetter__)())))){\n/*infloop*/do [1,2,3,4].map while(3); }");
tryItOut("if((yield constructor)[(({a2:z2})[prop])]) { if (<><bbb xmlns:ccc=\"\"><ccc:eee></ccc:eee></bbb><ccc:ddd></ccc:ddd></>.(window)) break L; else {if( /* Comment */<x><y/></x>) {break ; } else  if (<x><y/></x> >>>=4.) gc() }}");
tryItOut("L:if(({prototype setter: [1,2,3,4].map, __proto__: undefined })) { if (new Math.pow(1e81)) {constructor; }} else {*;break M; }");
tryItOut("{switch(<x><y/></x>) { case  \"\" : return  /x/g ; }yield; }");
tryItOut("M:switch((delete%=false if (*::*))) { default: export prop;export *;case 1: break; case 0: yield <><x><y/></x></>;break; break; case 6: gc() }");
tryItOut("let (__count__, [constructor, , __noSuchMethod__]) { gc() }");
tryItOut("/*infloop*/for(const __count__; break L; (M:while((this) && 0){break ;yield; })) Math.pow\n");
tryItOut("");
tryItOut(";");
tryItOut("/*for..in*/for(const prop in ((Function)(false.propertyIsEnumerable(\"__iterator__\"))))(/a/gi).call");
tryItOut("/*infloop*/while((0/0[*])((false)) = constructor)default: {return @foo;return  /x/ ; }break; case 0: break; case 0: break; ;");
tryItOut("do {function(y) { yield y; var __parent__, prototype;; yield y; } } while((<><x><y/\f></x></>) && 0);");
tryItOut("/*for..in*/L:for(let __noSuchMethod__ in ((({}).hasOwnProperty)((-1))))\n");
tryItOut("{/*for..in*/for(const [__parent__, __iterator__] = (<x><y/></x>.(true)) in <><x><y/></x></>) {gc() }//h\n }");
tryItOut("if(window ===  \"\" ) {throw <x><y/></x>;yield [[1]]; }");
tryItOut("M:while((1e4.eval(<x><y/></x>)) && 0){gc()return  '' ; }");
tryItOut("L: ");
tryItOut("let (prototype, constructor) { let (prototype, constructor) { return; } }");
tryItOut("1e-81;");
tryItOut("L:do {export __parent__; } while((1e4(@foo)) && 0);");
tryItOut("return;");
tryItOut("\f{throw ( /x/g )(); }");
tryItOut("L:if(<x/>) { if ([z1,,]) gc()} else ");
tryItOut("this");
tryItOut("if(true.*) /*infloop*/while(window)yield; else for(let y in [5,6,7,8]) for(let y in [5,6,7,8]) ;");
tryItOut("if((function (__noSuchMethod__, prop)undefined).call(<><x><y/></x></>(#1#, {}), prop.__noSuchMethod__ getter= function(q) { return q; }, null)) {const __count__ = <x/>, __iterator__ = __count__; } else  if (new <x/>((({function::__noSuchMethod__: function ([y]) { }})), false)) {{}return <x><y/></x>; } else yield;");
tryItOut("L:if(typeof (())) { if (__noSuchMethod__ = default: break; export *;return;break; case <x/>: return;case 8: break; return;break; case <y><z/></y>: continue M;break; break; case <><x><y/></x></>: yield;case null: break; case true:  \"\" break; break ;case 0: break; prototype, __count__ = <x><y/></x>;break; throw <x><y/></x>;{}break; \f >>>=<> </>) const __count__ = <><x><y/></x></>;} else {var __proto__, constructor = <><x><y/></x></>; }");
tryItOut("__iterator__\n");
tryItOut("__count__");
tryItOut("if(this.__defineSetter__(\"setter\", ({}).hasOwnProperty).eval('fafafa'.replace(/a/g, new Function))) { if (<y><z/></y>.__parent__ = 3.141592653589793) const __noSuchMethod__; else return;}");
tryItOut("{const __iterator__, __parent__; }");
tryItOut("throw StopIteration;");
tryItOut("return [,,z1]; const __parent__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for \f each(__proto__ in [([,,] if (*))]) {/*infloop*/for(const [({ __iterator__: __count__ }), prop, ({ __noSuchMethod__: __proto__, prop: [prototype, prop, ] }), ({ prop: prototype }), ] = (/a/gi).call([11,12,13,14].map, delete ({})); <><x><y/></x></> ? <x/> : ({a2:z2}); prop.__iterator__ getter= #1=[#1#].constructor = ((__parent__ =  '' )) for (prop in 3/0) for each (__noSuchMethod__ in  '' )) {__parent__;yield; } }");
tryItOut("if(prop = \ntrue.__defineGetter__(\"__noSuchMethod__\", new Function) instanceof this.zzz.zzz) { if ( /x/g ) {{}break ; }} else {{( /x/ ); { <><x><y/></x></>; }  } }");
tryItOut("");
tryItOut("do {let __iterator__, prop = true; } while((({}).__lookupGetter__(1e-81.__defineGetter__(\"prototype\", Math.sin))) && 0);");
tryItOut("M:if( /x/g ) { if (__noSuchMethod__) {}} else throw <><x><y/></x></>;");
tryItOut("do constructor: * while((<x><y/></x>) && 0);");
tryItOut("with(++window , <y><z/></y>){yield <><x><y/></x></>; }");
tryItOut("/*for..in*/for(__parent__ = ({function::__proto__: ({constructor: ()[(prop-=<x><y/></x>)], __iterator__ setter: function () { return ({prototype: <x/>}) }  }) }) in (__iterator__ = false.valueOf(\"number\").throw(null.__lookupSetter__(\"prop\")[(uneval(<x/>))]))) /*infloop*/do export __proto__; while(yield *.hasOwnProperty(\"__parent__\")//h\n);");
tryItOut("try { throw __count__; } finally { __proto__ = <><x><y/></x></>, constructor; } ");
tryItOut("switch(this.zzz.zzz) { default: return this;break;  }");
tryItOut("let(__noSuchMethod__, [({ prototype: prototype }\t), ({ constructor: __count__ }), ({ __noSuchMethod__: prop, prop: __count__ }), , __proto__]) ((function(){with({}) throw StopIteration;})());");
tryItOut("{L: {/*infloop*/while(window){(-0); } }/*for..in*/L:for(var delete = --__iterator__ in this) {break ; } }");
tryItOut("L:switch(this &= new <><x><y/></x></> for each (__proto__ in *::*) for each (__count__ in [[1]])) { default: /*for..in*//* nogeckoex bug 349964 */ for  each(const (I) in 'fafafa'.replace(/a/g, (1 for (x in [])))) {return function(id) { return id };({}).__lookupGetter__ }if(__iterator__) { if ((function ([y]) { })()) {(W);gc() }} else {yield prototype;gc() }break ;{/*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in window) {export __noSuchMethod__;(1.2e3); } }break; case  \"\" : break; case (__count__ = {if(3/0) return; else continue L;let prop; }.(undefined)): case 9:  }");
tryItOut("/*for..in*/L:for(const constructor = new Array((<x><y/></x>)[0]) in __parent__.__parent__ getter= ({}).__lookupGetter__) prototype = ((__count__ = <x/>\t) >>> eval(\" /x/g \", true))");
tryItOut("yield;do export __iterator__; while(() && 0);");
tryItOut("throw 'haha'.split;");
tryItOut("L:with((new (3.141592653589793(<><x><y/></x></>))(@foo ? window : prop, <x/>)))if(void prototype) { if (eval(\"constructor;\",  \"\" )) {return *::*;\t } else {Math.powexport *; }}");
tryItOut("/*infloop*/M:while(new Function((1e81.__noSuchMethod__ = *))){Math.sinexport *; }\nreturn;");
tryItOut("do {with({prototype: ( /* Comment */0x99)}){prop; } } while((this) && 0);");
tryItOut("/*infloop*/for(var __parent__; *::*.yoyo(<x><y/></x>) :: new (<><x><y/></x></>)(<><x><y/></x></>, @foo); \rnew (eval)((this.__defineSetter__(\"__proto__\", gc)), __proto__)) (*);");
tryItOut("with({}) { __proto__ = __iterator__; } ");
tryItOut("if((__noSuchMethod__ = constructor.__count__)) { if (<><bbb xmlns=\"return  /x/  <= <><x><y/></x></>.watch(\"constructor\", __parent__)\"> </bbb></>) {L: yield function::prototype;/*for..in*/for(const __parent__ in *) yield 0.1; }} else /*infloop*/M:for(const __parent__; Iterator([1,,]); prototype = @foo) {yield;const __noSuchMethod__; }");
