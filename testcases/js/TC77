
tryItOut("/*infloop*/for(let constructor = __iterator__; arguments; 1e81) {; }");
tryItOut("if(__count__.(default: function(y) { yield y; (#3={a:#3#});; yield y; }case 6: 'haha'.splitcase 5: gc()case 4: var prototype = ;break; case 1e-81: break; case *::*: return *::*;break; break; break; ({}).__lookupGetter__)) {break ; }");
tryItOut("/*infloop*/L:do {switch(true.unwatch(\"__noSuchMethod__\") -= <x/>) { case __noSuchMethod__ = @foo\n: default: case <y><z/></y>.__lookupGetter__(\"__iterator__\"): yield [,,z1];break;  } } while([15,16,17,18].sort(<><x><y/><\f/x></>, ++(<y><z/></y>--)));");
tryItOut("/*infloop*/M:for(033; <x><y/></x>; <y><z/></y>) {export __parent__;gc }");
tryItOut("with(yield *){export *;; }");
tryItOut("/*for..in*/for(var prop =  \"\"  in <y><z/></y>) {; }");
tryItOut("gc()\n");
tryItOut("if((<><x><y/></x></>(<x><y/></x>))) __proto__ = <><x><y/></x></>, __parent__ = (function ([y]) { })(); const prop;");
tryItOut("L:do {/*infloop*/while([prop = this]){return; } } while((((yield  '' )).constructor.__lookupGetter__(\"__noSuchMethod__\")) && 0)\n");
tryItOut("do {M:if(<x/>) { if (<x><y/></x>) {yield; }} else {yield;; }\fexport __iterator__; } while((<><ccc:ddd><ccc:ddd><x><y/></x></ccc:ddd></ccc:ddd></>.*) && 0);");
tryItOut("/*infloop*/for(var __noSuchMethod__ = <x><y/></x>; *; window) {var __proto__ = __parent__, __iterator__ = 0;window; }");
tryItOut("L:if(this[ /x/g ]) { if (__iterator__ = (<x><y/></x> != 1.3)) return  /x/g ; else {; }}\n");
tryItOut("with({__count__: (prop = ({ set __iterator__() { (__parent__); }  }))})export constructor;");
tryItOut("<zzz>3.141592653589793</zzz>");
tryItOut("const __count__, __count__\nM:while(((<x/> >>> this)) && 0)yield;\n");
tryItOut("continue ;");
tryItOut("with({}) return  \"\" ;");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var prototype in 4..__defineSetter__(\"__proto__\", new Function)) L: switch(<x/>) { default:  }");
tryItOut("/*for..in*/for([function::__parent__, prototype] = 0 in false) {( \"\" ); } const __proto__;");
tryItOut("switch((__proto__ = @foo)) { case 4: ;case [[1]].hasOwnProperty(\"__parent__\"): yield;break;  }\nlet __parent__ = undefined, __proto__;\ngc()\n\n/*for..in*//* nogeckoex bug 349964 */ for  each(let prop in <x><y/></x>) \t{export *; }");
tryItOut("if(1.3) {( \"\" );(prop); } else /*for..in*/for( in <y><z/></y>) {<y><z/></y> } const prototype;");
tryItOut("/*infloop*/for(let __count__; -1 in (String(( /* Comment */this), let constructor.propertyIsEnumerable(\"__proto__\"))); (eval(\"{}\", ([11,12,13,14].sort)) :: ({constructor: .2.__noSuchMethod__ = 0x99 }))) {export __parent__;continue \nM:switch(<x><y/></x>) { default: function (constructor)windowbreak; function(q) { return q; }case <y><z/></y>: return __proto__;break; case <x><y/></x\f>: export *;const function::prototype = *;break; break; case 5: let __noSuchMethod__ = <><x><y/></x></>, S;case <><x><y/></x></>: undefinedbreak; case 7: case 4: yield <x/>;break;  } }");
tryItOut("break ;");
tryItOut("/*infloop*/M:for(__count__ = <y><z/></y>; undefined; <x><y/></x>) yield;");
tryItOut("with(((__proto__.prop) != function ([y]) { }\n)){{} }");
tryItOut("do {var x::__noSuchMethod__ = function ([y]) { }; } while((eval(\"true\", false)) && 0);");
tryItOut("continue L;");
tryItOut("if(<x><y/></x>) __iterator__ else  if ({}) throw <><x\f><y/></x></>\nreturn 0.1;\n/*infloop*/M:for(const prop = <x><y/></x>\n for each (__iterator__ in *); prototype << <><x><y/></x></>; this) __iterator__: 033\n");
tryItOut("/*for..in*/for(let constructor = constructor in [[]]) {return <><x><y/></x></>;throw __parent__; }");
tryItOut("yield RegExp();\f");
tryItOut("throw <><x><y/></x></>;yield @foo;\n{}\n");
tryItOut("/*infloop*/for(((*.watch(\"__iterator__\", function(y) { yield y; ;; yield y; }))); (<x/> &&  /x/g )((new (1e-81)( \"\" ))[__iterator__],  /x/g  ? this : prototype); [({ x::__proto__: __iterator__, prop: function::prototype }), ({ __proto__: constructor }), , ] = (({ __noSuchMethod__: __iterator__, prop: __parent__ }) = (yield undefined))) {gc()/*for..in*/L:for(var constructor in <x/>) window = false, __parent__ = window; } const __parent__;");
tryItOut("{/*for..in*/L:for(var false['__count__'] in ((0)(3.141592653589793.yoyo(this)))){}__noSuchMethod__ = constructor; }");
tryItOut("/*infloop*/for\f(const ({ constructor: [({ __proto__: prototype, __iterator__: __count__ })], constructor: ({ __parent__\f: __noSuchMethod__ }) }) = (new (<><x>\t<y/></x></>)(<x><y/></x>, <x><y/></x>))--; ([] =  /x/ .eval(({})).@*); (constructor.((-1 .@x:: [,])))) {{export __count__; } }");
tryItOut("for(let y in [5,6,7,8]) return;");
tryItOut("do return; while((let (__count__ = __proto__, __parent__) <x><y/></x>) && 0);");
tryItOut("/*for..in*/for(var [__iterator__, prop] = (__noSuchMethod__ =  /* Comment */__count__) in <><></>[1,2,3,4].map </>) {with({prototype: (__iterator__ = false)}); }");
tryItOut("return;");
tryItOut("export constructor;");
tryItOut("switch(([1,,] != (prototype|=window >>>=<y><z/></y>))) { case 8: break;  }");
tryItOut("if(<x><y/></x> ? this : [[1]]) { if ((__noSuchMethod__ !== <><x><y/></x></>)) function(q) { return q; }} else {var constructor;; }");
tryItOut("while((yield __parent__.__noSuchMethod__ = <x/>) && 0)return @foo;");
tryItOut("for(let y in [5,6,7,8]) export *;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __count__ in  '' .__defineSetter__(\"__noSuchMethod__\", function (__iterator__, constructor) { yield <><x><y/></x></> } )) {return;let __iterator__, __count__ = [[1]]; }");
tryItOut("\nL:while((( \"\" )(3.141592653589793(prop))) && 0){if(( \"\" .unwatch(\"__noSuchMethod__\"))) return; }");
tryItOut("/*for..in*/for(const __noSuchMethod__ in ((Math.sin)(((Math.sin).call(-0, <x><y/></x>)))))return;");
tryItOut("{if(__noSuchMethod__) break M\n }");
tryItOut("/*infloop*/L:for(let prototype; (__count__.__noSuchMethod__);  /x/ .eval(4.) -= ) {var ( '' );; }");
tryItOut("L:do {yield; } while((void if(<x><y/></x>) ({}); else  if \r(<><x><y/></x></>) {{}export *; }) && 0);");
tryItOut("/*for..in*/for(let [__iterator__, prop] = 1e-81 in *)  const function::__parent__;");
tryItOut("L: {return __proto__; }");
tryItOut("switch([-0].filter(<x><y/></x>)) { case <x><y/></x> ? <x/> : <x><y/></x>: function (__parent__) { yield 3 } break;  }");
tryItOut("let (__iterator__, constructor = [z1]) { L:if(-null) {{} } else  if (__proto__ = [z1,,]) yield null; }");
tryItOut("*::*");
tryItOut("switch(new (undefined -=  '' ).prototype()) { case (prop @ yield 3.141592653589793): switch(null) { case  /x/g : __parent__, constructor = this; }\n;\ndefault: case 4: /*infloop*/while(this){let __noSuchMethod__ = <x><y/></x>; } }");
tryItOut("var constructor;");
tryItOut("if(*::* for each (__count__ in 3)) {if(__iterator__) { if (-0) {}} else {return;return; } } else {Function(false); }");
tryItOut("L:switch(//h\nnew eval(prop.__parent__, __parent__)) { default: (window);break; throw <x/>;if([1]) ; else  if (<><x><y/></x></>) {export *;[,]; }break; case 1: break; case 1e-81 -= <><x><y/></x></>: case 4: /*infloop*/L:for(__parent__ = <><x><y/></x></>; <x><y/></x>; <y><z/></y>) [1,2,3,4].mapbreak; break; break;  }");
tryItOut("\nyield window;");
tryItOut("if(#0=<x><y/></x>) ");
tryItOut("if(<><x><y/></x></> += <x><y/></x>) { if (((<x><y/></x>.(*))[prototype.*])) __proto__; else gc()}");
tryItOut("L: {yield; }");
tryItOut("/*infloop*/for(const __count__; ({ prop: __noSuchMethod__, __parent__: ({ prop: __iterator__, __proto__: __proto__ }) }) = prop; [15,16,17,18].some(false, (( /x/g .*).__iterator__))) export *;");
tryItOut("if() {export __noSuchMethod__; } else  if (prototype) /*for..in*/for(const __iterator__ = ((({}).__lookupGetter__).call(__iterator__, <y><z/></y>, __count__) << prototype.__proto__).__lookupGetter__(\" \\\"\\\" .__lookupSetter__(\\\"constructor\\\")\") in __iterator__[*::*]) *::*; const prototype;");
tryItOut("__proto__: window[window]\n");
tryItOut("for(let y in []);");
tryItOut("let(__parent__ = (<x><y/></x>)(this).propertyIsEnumerable(\"__iterator__\"), constructor = new String(({constructor: [1]}))) { for(let y in []);");
tryItOut("(*);");
tryItOut("let (__iterator__ = <><x><y/></x></>, __parent__ = this) { yield; }");
tryItOut("__count__ = __noSuchMethod__;");
tryItOut("return\n");
tryItOut("\n({}).__lookupGetter__\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let constructor(this.__defineSetter__(\"__count__\", window)) in [1] ^= arguments) {M:if(5.0000000000000000000000) return; else  if (1e+81) {const prop = __count__; } else throw  \"\" ;/*infloop*/for(const prop; <y><z/></y>; <y><z/></y>) yield  \"\" ; }");
tryItOut("if(3/0) {{} } else  if (@foo) return; else {;__count__, prop; }{}");
tryItOut("/*for..in*/for(let __noSuchMethod__ in <x><y/></x>) {var constructor; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(__parent__ in 'fafafa'.replace(/a/g, function (__noSuchMethod__) { return; } )) constructor = __proto__;\n(1 for (x in []))\n");
tryItOut("let (constructor = <><x><y/></x></>) { {}\nif(<y><z/></y>) { if (<><x><y/></x></>) {prototype }} else {gc() } } const constructor;");
tryItOut("let(__noSuchMethod__, prototype = #3={a:#3#}) ((function(){let(__iterator__ =  /x/ , __proto__) ((function(){__proto__})());})());");
tryItOut("while(((eval(\"yield  \\\"\\\"  :: *::*;\", ({__iterator__: .2 *= prototype})))) && 0)false");
tryItOut("let (constructor) { var __proto__, __parent__; }");
tryItOut("arguments\n");
tryItOut("/*for..in*/L:for(const (uneval(true > 0/0)).__count__ in ((( /* Comment */<><x><y/></x></>))(__proto__ =  /x/g .unwatch(\"__iterator__\"))))if(__iterator__.(function(id) { return id })) {'haha'.split; } else  if (*::*) yield;");
tryItOut("/*infloop*/while([11,12,13,14].filter){let (prop = (<x><y/></x> >> <><x><y/></x></>).propertyIsEnumerable(\"__noSuchMethod__\"), prototype = <x>\t<y/></x>.throw(*::*)) { L:if(constructor.__proto__ = <x/>) { if (true.valueOf(\"number\")) {export *; } else {throw <x><y/></x>; }}\t }{} }");
tryItOut("while((<x/>) && 0){; }");
tryItOut("let(*::* = __noSuchMethod__, prototype) ((function(){;})());");
tryItOut("/*infloop*/while((eval(\";\", -3/0)))export __iterator__;");
tryItOut("yield (uneval(__noSuchMethod__.__defineSetter__(\"__noSuchMethod__\", 'haha'.split)));(<x/>);");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*/for(const [prop, function::__proto__] = 3.141592653589793.@* in (true)()) default: if([null]) { if (#0=this) {yield; } else {break M;var prop, <><x><y/></x></>; }}case 7: break; switch() { default: __iterator__.constructor = function::__count__; const function::__count__;/*for..in*/M:for(let __noSuchMethod__ in ((<y><z/></y>)( \"\" ))){export *;try { (@foo).__defineSetter__ } finally\t { throw null; }  }break; case (prop.prototype getter= function(y) { yield y; {}; yield y; }): break; case 7: case ( /x/g )[[1]]: export *;break;  }x::__proto__: ([<y><z/></y>]) break; case 3: gc()break; case 5: break; (<><x><y/></x></>);break; __proto__, prop = <><x><y/></x></>");
tryItOut("throw <x><y/></x>;\n;\n");
tryItOut("yield (yield null);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__parent__ in <><x><y/></x></>) var __count__, __noSuchMethod__;");
tryItOut("{\f{} }\n");
tryItOut("do {constructor; } while((<x><y/></x>) && 0);");
tryItOut("@foo;\nyield;\n");
tryItOut("M:if(__iterator__) {return; }");
tryItOut("/*infloop*/\tL:while(((uneval(<x><y/></x>)))){__parent__return; }");
tryItOut("export __proto__; const prototype;");
tryItOut("constructor = __proto__;");
tryItOut("if(({})) {let __count__, prototype =  \"\" ; } else  if (constructor = __iterator__, __proto__ = yield __iterator__ = (<x><y/></x>.__iterator__)) export *;");
tryItOut("L:if((window.unwatch(\"__iterator__\"))) { if ((\nthis)) 0/0 else {return @foo;continue M; }}");
tryItOut("switch(arguments) { default: case 9: ({ prototype: __count__ }) = prop = prototype, __parent__;case 2: break; \r }");
tryItOut("yield this\n[1,2,3,4].slice");
tryItOut("yield window;");
tryItOut("M:switch((__noSuchMethod__ = 0/0).__lookupSetter__(\"prop\")) { default: /*for..in*/for(__count__ = ((function ([y]) { })() |=  /x/ ) in 4.) {function::__noSuchMethod__; set __iterator__()__iterator__ }case (__noSuchMethod__ = this): case 8:  }");
tryItOut("if(((p={}, (p.z = <><x><y/></x></>)()))) { if (#1#.throw(<x><y/></x>.throw(<><x><y/></x></>))) __parent__} else {continue L;var constructor, constructor =  '' ; }\n/*infloop*/L:for(var __count__ = ([15,16,17,18].sort(function (__iterator__, __proto__)*, true)).hasOwnProperty(\"__iterator__\"); let (__noSuchMethod__) *.__lookupSetter__(\"__iterator__\"); [11,12,13,14].some) {\tL:if(Math.sin) {} else {prop, __count__ =  '' ; } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prop in undefined) {;const __parent__, __count__ = <><x><y/></x></>; }");
tryItOut("/*for..in*/for(const __count__ in ((Math.sin)(([15,16,17,18].sort((default: case 5: break; *;break; case undefined: undefined;case 8: let prototype = <x><y/></x>;).call, (function  __noSuchMethod__ (prop, prop) { var __noSuchMethod__ = <x><y/></x>; } )(*))()))))yield <x/>;");
tryItOut("if(3 ? @foo : prop.__lookupGetter__(\"constructor\")) try { const __proto__ =  \"\" ; } catch(function::constructor) { prop } finally { (1 for (x in [])) }  else  if ((uneval(prop = [[]]))) return;");
tryItOut("if(__count__ = this.__defineGetter__(\"__count__\", Math.sin)) {L:if(this.__defineSetter__(\"__noSuchMethod__\", ([,]).__defineSetter__)) { } else {if(window) {yield <y><z/></y>; } else break M; } } else if(({__parent__: [,,]})) ;");
tryItOut("/*for..in*/for(var [__iterator__, __parent__] = (this.__defineGetter__(\"__count__\", function(y) { yield y; throw [z1,,];; yield y; })) in new (function (__parent__, __iterator__) { export *; } )() << window @ <><x><y/></x></>++) {if((<y><z/></y>) &= *::* instanceof *) {if( /x/ ) { if (true) {gc() }} else ({a2:z2}); } else /*infloop*/for(let prototype; *; __iterator__) default: throw  /x/g ;break;  }");
tryItOut("with({}) return;");
tryItOut("/*for..in*/for(let [function::__noSuchMethod__, __iterator__] = (({ set prototype(__count__) { return <><x><y/></x></> }  })) in  ''  ? <><x><y/></x></> : this) {export *;yield ({a1:1}); }");
tryItOut("/*for..in*/for([__iterator__, constructor] = ((uneval(<><x><y/></x></>))) in new (<x><y/></x>)(<x><y/></x>)) {break M;L:if(@foo) { if ((function ([y]) { })()) {yield; } else {throw  '' ;(__parent__); }} }");
tryItOut("if(this) return; else  if ([,]) return; else yield");
tryItOut("/*infloop*/for(__proto__; (p={}, (p.z = <><x><y/></x></>)()); (RegExp(undefined))) yield;");
tryItOut("{ }");
tryItOut("/*for..in*/for(const [constructor, constructor] = ((uneval(yield * *= window))) in ( ''  for each (__noSuchMethod__ in  '' ) if (<y><z/></y>))) while(([{}]) && 0)*");
tryItOut("/*infloop*/for(const __count__ = <x/>; 3 = this; window.@foo) let __iterator__, __proto__;");
tryItOut("with({}) ({})['__count__'] = constructor;");
tryItOut("with(null(*::*).eval(window))<bbb xmlns=\"__iterator__ = (prop = *)\"> </bbb>");
tryItOut("/*for..in*/for(const __proto__ = __iterator__.prototype getter= function  __iterator__ () { window; }  in __iterator__ = 3/0) (false);");
tryItOut("/*infloop*/for(__count__; prop; function(id) { return id }++) {with(arguments){throw [,,]; } }");
tryItOut("yield;");
tryItOut("yield;break ;");
tryItOut("with(<><x><y/></x><ccc:ddd><ccc:ddd></ccc:ddd></ccc:ddd></>) { gc() } ");
tryItOut("do {yield 5.0000000000000000000000;/*infloop*/do {var __proto__, prototype; } while(<x/>); } while((export *;) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __iterator__ in false -= <x><y/></x>) <x><y/></x>if(\n<x/>) { if ( /x/g ) {(-0); } else {{}break L; }}");
tryItOut("L: {/*infloop*/for(0/0; __noSuchMethod__ = window; 1.2e3) (*::*); }");
tryItOut("/*for..in*/M:for(const [__iterator__, __iterator__] = (!(-true)) in [].__defineSetter__(\"__proto__\", /a/gi)[prop .@x:: <x><y/></x>]) return;");
tryItOut("L:switch(this) { case null: yield;break; ; }");
tryItOut("prototype = ;");
tryItOut("if(<y><z/></y>) const __iterator__ = -0;");
tryItOut("/*for..in*/for(const [__parent__, __parent__] = new RegExp([11,12,13,14].filter) in  /* Comment */(( \"\" .__defineGetter__(\"prototype\", new Function)))) {-- const prototype; }");
tryItOut("L:if((prop.prop =  /x/g )) if(__proto__ = ({a2:z2})) {let prototype, __noSuchMethod__ = <x><y/></x>; } else  if (__noSuchMethod__+=*::*) yield __proto__;");
tryItOut("/*for..in*/M:for(var (__parent__) in <><x><y/></x></>) throw [,]\nL:do throw arguments; while(() && 0);");
tryItOut("({ __proto__: __proto__ }) = __count__ =  /x/ ");
tryItOut("let (({ constructor: __iterator__, function::__count__: __parent__ }) = __proto__.prop = *) { /*infloop*/L:while(var __count__ = <><x><y/></x></>;.__defineSetter__(\"constructor\", <x/>)){{} } }");
tryItOut(";\nfunction  __iterator__ () { return; } \n");
tryItOut("/*for..in*/for([__noSuchMethod__, __proto__] = this(<><x><y/></x></>).__noSuchMethod__ in <x><y/></x>) { }");
tryItOut("M:with(new (#1=[#1#]).watch(false)(prototype = prototype,  /x/g ).unwatch(\"prop\"))export *; const delete;");
tryItOut("for(let y in []);");
tryItOut("if(*::* in window) { if (({\f set prototype(__noSuchMethod__) { __proto__; }  }) -= ({__count__: -0})) {continue L; }} else {; }\t");
tryItOut("while((((*::* for each (constructor in constructor)) * ( /x/g .watch(\"prop\", /a/gi)))) && 0)var throw  /x/g ;;");
tryItOut("M:while((new (window.__noSuchMethod__)(Array(), __noSuchMethod__.(([*])))) && 0){export *; }");
tryItOut("/*infloop*/for(var ({ prototype: ({ __proto__: [prototype, prop, ], constructor: __proto__ }) }) = __parent__ = prop; (<y><z/></y>.valueOf(\"number\").__lookupGetter__(\"__count__\")); this.__defineGetter__(\"prop\", new Function)) {M:if(<x/>) { if (<><x><y/></x></>) } else {{}export prototype; } }");
tryItOut("/*for..in*/M:for([constructor, __iterator__] = * in *) {yield; }");
tryItOut("/*infloop*/for((<><x><y/></x></> & false ? [z1] >>>=0.1 : *[this]); !<x><y/></x>.watch(\"__proto__\", gc); ({a2:z2}).__lookupSetter__(\"prototype\")++) {/*infloop*/for(var [] = false; (__noSuchMethod__); ([[1]] *= <y><z/></y>)) {yield; } }");
tryItOut(";");
tryItOut("/*infloop*/M:do /*infloop*/for(<> </>; <><x><y/></x></>.__defineGetter__(\"prop\", [1,2,3,4].slice); this & __parent__) L: {(\t<><x><y/></x></>); } while(<x/> = undefined);");
tryItOut("if([11,12,13,14].some) { if (({__count__: [\r(__iterator__)[__parent__] for each (__iterator__ in undefined) for (__iterator__ in false)], __parent__ setter: ( \"\" __count__) })) {if(function::__iterator__\t.__proto__ = @foo) { if (( \"\" ) %=  /* Comment */ \"\" ) {*::* } else {var prototype;let __noSuchMethod__ = *, __iterator__; }}yield window; } else while((new (null)()) && 0){if( /x/g .constructor) {} else  if ([z1]) continue ; else yield; }}");
tryItOut("{yield; /x/g  }");
tryItOut("/*infloop*/do {/*for..in*//* nogeckoex bug 349964 */ for  each(const @foo in 1.2e3) ;continue ; } while(this);");
tryItOut("return;");
tryItOut("\n{}");
tryItOut("/*infloop*/do prop\nreturn true; while(eval(\"export *;\", 1e81));");
tryItOut("if([,,].propertyIsEnumerable(\"__proto__\")) {(<x><y/></x>); } else  if (({}).*) {/*for..in*/for(let __proto__ = <x><y/></x> in *) const function::prop = window; }");
tryItOut("if(@foo++) default: break; ");
tryItOut("({a2:z2});\n\n");
tryItOut("switch(<y><z/></y>.@foo) { default: throw StopIteration;break; case 'fafafa'.replace(/a/g, (true).__defineSetter__).hasOwnProperty(\"constructor\"): L: {if(__parent__ = <x><y/></x>) {return;gc() } else  if () {gc(){} } }case #1=[#1#] ? (__proto__ = undefined) : prototype.prop getter= ((1 for (x in []))).call: break;  }");
tryItOut("if(new prototype = *::*()) {while((<x><y/></x>) && 0)return; } else  if (new ((new (<x/>)(*)))((<x><y/></x>.__lookupGetter__(\"__iterator__\")))) {export constructor; }");
tryItOut("/*for..in*/for(const ([,,])\f(function(id) { return id }) in  /x/g ) var __parent__ = window, constructor = this;");
tryItOut("/*infloop*/do {true__noSuchMethod__ = <><x><y/></x>\f</>; } while(<x><y/></x>);");
tryItOut("throw __proto__;");
tryItOut("if(<x/>) {export __count__;const __parent__, prop; } else {/*for..in*/M:for(const prop = __proto__ .@*:: <x><y/></x> in @foo) {return;continue ; }while((__iterator__) && 0)new Function }");
tryItOut("L:if(return) {break ;return; }");
tryItOut("if((uneval(__proto__))) { if (<><{function::yield;}> </{function::yield;}></>) {if(3/0) {return  '' ;return; } else  if (window) __parent__;if( /x/g ) {const try { yield; } finally { function  __proto__ ()this } ;\rvar prop; } } else }");
tryItOut("/*for..in*/for(const function::__count__ = 1e81 in <y><z/></y>) {;export *; }");
tryItOut("if(undefined) (@foo); else  if (undefined) {;export __iterator__; }");
tryItOut("M:if(prototype = <><x><y/></x></>) gc() else  if ((__iterator__)) return;");
tryItOut("/*infloop*/for(var __count__; 'fafafa'.replace(/a/g, function(y) { yield y; break ;; yield y; }); constructor.__parent__ = new (<{__parent__}>case <><x><y/></x></>: break; </{__parent__}>)(typeof (p={}, (p.z = (yield arguments))())).*) yield;");
tryItOut("__proto__ = constructor;");
tryItOut("if(((__count__)[<x><y/></x>] % eval(\"constructor =  /x/g ;\",  '' ))) if(function ([y]) { } :: [z1]) { if ((new Exception(*))) return <x><y/></x>; else {export *; get prototype __count__ (__noSuchMethod__, constructor) { yield <><x><y/></x></> }  }} else (eval(\"\", <y><z/></y>));");
tryItOut("/*for..in*/M:for(const __count__ in (<{prototype}><ccc:ddd> </ccc:ddd></{prototype}>.(<x/>.watch(\"__noSuchMethod__\", (new Function(\"let __parent__ = <y><z/></y>;\"))))).__lookupSetter__(\"__noSuchMethod__\") / (__noSuchMethod__ = undefined.yoyo(@foo).__count__)) /*infloop*/L:for(<x><y/></x> == <><x>\t<y/></x></>; ((p={}, (p.z = (prototype.prototype = 033))())); (this.zzz.zzz) for each (prop in (@foo.yoyo(({a1:1})))) for (((-0).__noSuchMethod__)(<><x><y/></x></> % <><x><y/></x></>) in <><x><y/></x></>)) return;");
tryItOut("/*for..in*/for(var prototype = __parent__ = this in -1) {( '' );throw 1e81; }");
tryItOut("return <><x><y/></x></>;export *;");
tryItOut("const prototype, __noSuchMethod__ = undefined;");
tryItOut("this.zzz.zzz;");
tryItOut("return;");
tryItOut("__proto__ = constructor;");
tryItOut("if(({__noSuchMethod__: (this.__defineGetter__(\"__parent__\", ((1 for (x in []))).call)) & -->})) { if (({__iterator__: true })) {if(<><x><y/></x></>) {export *;throw  '' ; } else {export __proto__;throw <><x><y/></x></>; } const __parent__; } else {M:if(<x><y/></x>) var __parent__ = <x/>;export __parent__\n }}");
tryItOut("while(( '' .eval(constructor)) && 0){window; }\n");
tryItOut("{}export *;");
tryItOut("if((({prop: ({__noSuchMethod__: true !== ({}) })}))) { if (<x/>) {L:with({try { return 3.141592653589793; } finally { const __iterator__ = __proto__, __proto__; } : #0/*\n*/=({constructor:  ''  ? [z1] :  /x/g })}){return; }{} } else {while((<x/> !== window) && 0){return; } }}");
tryItOut("/*for..in*/L:for(const constructor in (#1=[#1#].__lookupGetter__\f(\"constructor\"))) {if(this) export *;const prop, prototype = window;'haha'.split }");
tryItOut("/*for..in*/for(var prototype in ((prop)(<y><z/></y>))){prototype = 1e-81; }");
tryItOut("if(<><x><y/></x></> === window) {var __iterator__ = *::*, __proto__;(<y><z/></y>); } else  if (('fafafa'.replace(/a/g, [1,2,3,4].slice))) continue ;");
tryItOut("/*for..in*/M:for(__proto__ = (__parent__ = <><x><y/></x></>)(yield 'fafafa'.replace(/a/g, [1,2,3,4].slice)) in window instanceof null) \f{if(__count__.__proto__) { if (constructor.__defineSetter__(\"__count__\", [1,,])) {with({__count__: #1=[#1#]}){[1,2,3,4].slicereturn false; } const __count__; } else <><x><y/></x></>;} }");
tryItOut("/*for..in*/L:for(const this.__defineSetter__(\"__noSuchMethod__\", [1,2,3,4].slice)['each'] in ((((new function (prototype, __noSuchMethod__) { __count__; } (<x><y/></x>))).watch)(yield  \"\" .constructor)))switch( \"\" ) { case <x><y/></x>.eval(arguments): export *; }");
tryItOut("if((yield __iterator__.__iterator__ = __proto__ = constructor)) /*infloop*/for(@foo; (-0); x><y/\f> __parent__ getter: <y><z/></y> </x>) ");
tryItOut("/*infloop*/do if(new Function()) {continue ;; } else  if (prototype) throw -3/0; else {gc()throw ; } while(this.zzz.zzz); const __proto__;");
tryItOut("throw StopIteration;");
tryItOut("{( \"\" ).__defineSetter__true; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let (__parent__) in (Math.pow).apply) prototype;");
tryItOut("switch(false) { case 0: break; /*for..in*/for(var __proto__( '' ) in (#1=[ \"\" ])) {gc() }default:  }");
tryItOut("L:do {yield this;export *; } while((try { yield; } finally { gc() } ) && 0);");
tryItOut("continue L; const constructor;");
tryItOut("L:with({__parent__: (constructor)}){; }");
tryItOut("if([constructor, __parent__, ] = undefined) {; } else  if (5.0000000000000000000000) {} else return  /x/g ;");
