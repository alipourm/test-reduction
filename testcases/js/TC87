
tryItOut("/*for..in*/for(var __parent__ in ((function(q) { return q; })('fafafa'.replace(/a/g, gc)))){if(*) \t{throw this; } else {break ; } }");
tryItOut("if(new (new (function  __parent__ (__noSuchMethod__) { yield (new (function  __noSuchMethod__ ()prop)()) } )( '' ))(yield (({ <xxx>{prototype}</xxx>: __iterator__ }) = constructor), <xxx {__parent__}={.2} />.(({ __proto__: __count__ })))) { if (new (this.zzz.zzz)()) {const __proto__ =  /x/g ;{yield; } } else (<x><y/></x>); const __proto__;}");
tryItOut("continue L");
tryItOut("/*infloop*/for(let __noSuchMethod__; prototype; window) const __count__, prop = 0x99;");
tryItOut("do yield; while((this) && 0);");
tryItOut("if(new (true)(<y><z/></y>)) continue ; else  if ((({ get __iterator__(__iterator__, __count__) { (1e-81).watch } \f, __noSuchMethod__ getter: gc }))) L: {export *; } else ");
tryItOut("/*infloop*/for(__count__ = ((this.__count__) * this.zzz.zzz); window.valueOf(\"number\"); __parent__-=this) {propif(<x><y/></x>) { if (undefined) {prototype } else return;}\nM:with({__iterator__: 3}){}\n }");
tryItOut("/*for..in*/L:for(var __parent__ in true) {}");
tryItOut("do const prototype, prototype; while((this.zzz.zzz) && 0); const __parent__;");
tryItOut("gc();");
tryItOut("((M:if(@foo) {( '' );__proto__ = undefined, prototype = this; }) else  if (<><x><y/></x></>) export *;) else const prop = <x><y/></x>, __count__ = this;");
tryItOut("M:if(( |= ({a1:1}))) {throw @foo;yield <x/>; }");
tryItOut("while((this) && 0)throw null;");
tryItOut("let (\t__iterator__ = 3) {  }");
tryItOut("/*infloop*/for(yield ({}); (/*\n*/__count__.__lookupSetter__(\"__noSuchMethod__\")\n); arguments for each (prop in (eval).call(window, @foo) == ( \"\" .valueOf(\"number\"))) if (new (function ([y]) { })()(<x><y/></x>, this))) {/*for..in*//* nogeckoex bug 349964 */M: for  each(var prototype in <x/>) {export __iterator__;return; } }");
tryItOut("{ }");
tryItOut("/*infloop*/do let (__parent__, prototype) { yield; } while(prototype = []);");
tryItOut("var __count__ = <><x><y/></x></>;");
tryItOut("for(let y in [5,6,7,8]) yield \t[({__parent__:  /x/g ,  set __parent__(__parent__, __iterator__)\t { throw <><x><y/></x></>; }  })];");
tryItOut("/*for..in*/for(const prototype.__iterator__ in <x><y/></x>) ({ __count__: [, \f, ], prop: ({ __parent__: __count__, __noSuchMethod__: constructor }) })");
tryItOut("/*infloop*/do {const prototype; } while(RegExp(window));");
tryItOut("with( ){;export __parent__; }");
tryItOut("var __iterator__ = false, prop = <><x><y/\t></x></>;");
tryItOut("if(((this).__defineSetter__)) x::constructor = this, __proto__ = <><x><y/></x></>;default:  else  if (4. == 0x99) {(*);return; } else gc()");
tryItOut("do {M:switch(__iterator__) { default: prototype;break; case (new (window)(.2.prop)): Math.powbreak; case 8:  } } while(((/a/gi)) && 0);");
tryItOut("switch(new <x/>) { default: /*infloop*/for((new (#3={a:#3#})(this)); <x><y/></x> && 033; @foo) (1 for (x in []))break; [1,2,3,4].mapbreak;  }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(__proto__ in (<x><y/></x>.__defineSetter__(\"prop\", Function) == __count__)) {{; } }");
tryItOut("/*for..in*/for(var [__proto__, __iterator__] = __proto__.(undefined) in <><x><y/></x></>) {yield 1e81;if(<y><z/></y>) { if ([1,,]) {<><x><y/></x></> } else gc()} }");
tryItOut("/*infloop*/for(let __proto__; window; <y><z/></y>) window;");
tryItOut("L: {yield this; }");
tryItOut("var constructor = prototype;");
tryItOut("__noSuchMethod__ = <y><z/></y>, __proto__ =  '' ;");
tryItOut("{yield (window\n);/*infloop*/L:for((<y><z/></y> , <><x><y/></x></>); ({prop: <x><y/></x>}); ({getter: 1e-81, constructor: [,] })) {yield <x/>;continue ; } const __proto__; }/*infloop*/for(({ __count__: __noSuchMethod__ }) = ({function::__iterator__ setter: Function }); (__noSuchMethod__.__parent__); <x><y/></x>.(<x><y/></x>)) {throw __proto__;{} }");
tryItOut("yield  /x/g ;");
tryItOut("const __noSuchMethod__");
tryItOut("/*for..in*/for(let __count__ = (gc).call((<x><y/></x> :: 5.0000000000000000000000 for each (constructor in __noSuchMethod__))\f, ) in *) {__noSuchMethod__, __proto__ = undefined; }let(prop, prototype = constructor) ((function(){yield;})());");
tryItOut("switch((*.__lookupSetter__(\"__parent__\"))) { case 8: break; if(this) {null; }break; case (uneval(<x><y/></x> |= <><x><y/></x></>)): break; case __iterator__.__noSuchMethod__ setter= [1,2,3,4].map.*.yoyo((p={}, (p.z = <x/>)())).__lookupGetter__(\"__iterator__\"): default: break;  }");
tryItOut("for(let y in [5,6,7,8]) for(let y in [5,6,7,8]) try { throw undefined; } catch(__count__) { gc() } finally { (1 for (x in [])) } ");
tryItOut("L: ;");
tryItOut("do {M:/*\n*/while((this) && 0)gc()yield <y><z/></y>; } while(((prototype.constructor = (((this.__defineSetter__(\"__count__\", function(q) { return q; }).__lookupSetter__(\"constructor\")))[<><x><y/></x></>[-3/0]]))) && 0);");
tryItOut("M:while((__noSuchMethod__.__iterator__ = <y><z/></y>) && 0){{} }");
tryItOut("if(#3={a:#3#}) return; else /*infloop*/for(let prop = -1e+81 ? __noSuchMethod__ = <><x><y/></x></> : <><x><y/></x></>;  '' (); __iterator__.__defineSetter__(\"prototype\", (<x><y/></x>).__defineSetter__)) var prop = window, prop =  \"\" ;");
tryItOut("M:do (<x/>); while((this) && 0);\nyield <y><z/></y>;\n");
tryItOut("yield\n");
tryItOut("{(<y><z/></y>);var __proto__ =  /x/g ; }");
tryItOut("prop");
tryItOut("/*for..in*/for(const __noSuchMethod__ in 1e4) {continue ;let function::prop, function::__proto__ = (-0)/*\n*/; }");
tryItOut("if(033) true; const constructor;");
tryItOut("with({__parent__:  ''  :: [1]})if((__noSuchMethod__.__defineGetter__(\"__count__\", (new Function(\"const __proto__ =  /x/ ;\"))) instanceof (__count__ = <x/>))) yield;");
tryItOut("if(@foo) {continue ; } else  if (<x><y/></x>) {(033);<><x><y/></x></>;\t }__proto__ = __parent__;");
tryItOut("return <x>y/></x>.( \"\" );");
tryItOut("let (constructor = *::*) { M:if((this\n[<><x><y/></x></>.propertyIsEnumerable(\"prop\")])) yyy else  if (<y><z/></y>) {gc() } } const [, , ({ function::__noSuchMethod__: ({ __iterator__: prop }) }), , ];");
tryItOut("M:if((3/0.@foo)) {continue ;(function(id) { return id }); }");
tryItOut("if((__count__ for each (__count__ in <><x><y/></x></>))) const prop = window, constructor = null; else 4.;");
tryItOut("/*infloop*/do {break ;return window; } while(1e81 );");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let (4.);(this) in <x><y/></x>) 1.3");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(__proto__ in window) {; }");
tryItOut("with({}) return;");
tryItOut("{/*for..in*//* nogeckoex bug 349964 */ for  each\t(const __noSuchMethod__ in <y><z/></y>) {1e4;return; }\n/*infloop*/for(let prop; (<x><y/></x> <= <y><z/></y>); @foo ? <x/> : <x/>) throw <x><y/></x>; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in window) {export e;gc() }");
tryItOut("/*infloop*/L:do {windowvar prop = <x><y/></x>; } while(__count__);");
tryItOut("");
tryItOut("{throw __parent__; }");
tryItOut("L:with(__proto__.__proto__//h\n){yield;<><x><y/></x></>; }");
tryItOut("{yield  '' /*infloop*/L:while(this.zzz.zzz){do return *; while((<><x><y/></x></>) && 0);gc() } }");
tryItOut("if( '' ) { if (true) export *;} else {{} }");
tryItOut(";");
tryItOut("{}");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in __noSuchMethod__.__proto__ setter= (<x/>).__defineSetter__) if(3.141592653589793) {}");
tryItOut("{; } const let;");
tryItOut("with({}) throw __parent__;");
tryItOut("M:if([15,16,17,18].some((<y><z/></y>).watch, ({a1:1})).__lookupSetter__(\"__count__\")) /*infloop*/M:for(\n(({}).__lookupGetter__)(#2=[<y><z/></y>]); \nthis; new <x><y/></x>(<y><z/></y>.__noSuchMethod__,  /x/ ).prop) return __iterator__;");
tryItOut("with({}) { ; } ");
tryItOut("yield");
tryItOut("if(@foo) throw __noSuchMethod__;");
tryItOut("with({}) var __iterator__, __proto__;");
tryItOut("\fL: /*for..in*/for(var __proto__ in <><x><y/></x></>) {; }");
tryItOut("/*infloop*/do {const __noSuchMethod__ = <y><z/></y>; } while(<x><y/></x>);");
tryItOut("(<x/>);\n;\n");
tryItOut("{{}false; }");
tryItOut("for(let y in []);");
tryItOut("return (new Function).call( \"\" , <x/>, this);");
tryItOut("{{}return; }");
tryItOut("/*for..in*/for(var prototype in (((new Function(\"prop = <x><y/></x>, __iterator__ = [,,];\")))(*)))throw ({a2:z2});");
tryItOut("/*infloop*/for(<x><y/></x>; 0x99;  /x/ ) {( /x/ );yield __parent__; }");
tryItOut("let(({ __parent__: (([1,2,3,4].map)(window)).prop }), ({ prototype: ({ __parent__: __noSuchMethod__ }), __count__: constructor }) = (window) ^= __count__ ,  '' ) { export __proto__;");
tryItOut("/*for..in*/for(var prototype = *::* >>> <><x><y/></x></> in [,]) export *;");
tryItOut("L:if(eval(\"\", constructor)) {<y><z/></y>;export prototype; } else {let prop;break ; }");
tryItOut("let prototype = *::*;");
tryItOut("with( /x/g .prop = let (function::__proto__) (__iterator__.(<y><z/></y>)))0x99;");
tryItOut("throw StopIteration;");
tryItOut("*");
tryItOut("/*infloop*/while( /x/ ){export *; }\t");
tryItOut("if(<x><y/></x>.hasOwnProperty(\"prototype\")) { if (([15,16,17,18].sort('haha'.split, this)).@foo)  { yield @foo } } else {export __iterator__; }");
tryItOut("/*infloop*/while(this.__defineSetter__(\"__parent__\", [1,2,3,4].map)){let prop = __proto__; }");
tryItOut("/*infloop*/do return <y><z/></y>; while([15,16,17,18].sort(gc, __iterator__ = <y><z/></y>));");
tryItOut("M:if( \"\" .__defineGetter__(\"__noSuchMethod__\", (<><x><y/></x></>).__defineSetter__)) {let __parent__ = 1e-81; } else  if (((-0) in Iterator(prototype.prop))) {throw prop;{break ; }<y><z/></y>; } else {/*for..in*/for(constructor['__iterator__'] in ((try { gc() } catch(__count__) { yield  \"\" ; } finally {  } )(//h\n<><x><y/></x></>))){const __iterator__ =  /x/g ;const prototype, prop = <x><y/></x>; } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var [, prop, , , ] in __parent__ = prop) if(({})) { if (<x/>) {yield this;; } else {/a/gi }} const __count__;");
tryItOut("*::*\n{with({}) { throw StopIteration; } /*for..in*/for([constructor, __count__] = (__noSuchMethod__.__lookupSetter__(\"__parent__\")) in __count__) {;{} } }\n");
tryItOut("while((({ __parent__: [, ], constructor: ({ constructor: __iterator__ }) }) = ()) && 0)/*infloop*/for([__proto__, __noSuchMethod__] = __iterator__ = <x><y/></x>; (this.__defineGetter__(\"__noSuchMethod__\", <x><y/></x>)); (uneval([,,z1]))) {(<x><y/></x>); }");
tryItOut("with({constructor: (([])(4., null))}){; }");
tryItOut("{; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(gc() in #1=[#1#]) {{} }");
tryItOut("{new Function }");
tryItOut("/*for..in*/for(var __proto__ in <y><z/></y>) {;yield; }");
tryItOut("this;M:while(((__iterator__.__proto__)) && 0){__proto__, constructor = [,,];/*for..in*/for(__proto__ = ((@foo *= 1e81)(<><x><y/></x></>, __proto__)) in *) {/*infloop*/M:for(var prototype; [,,]; window) {yield; } } }");
tryItOut("L: with(function (prototype) { (1.3); } )L: throw <><x><y/></x></>;");
tryItOut("L:if(__noSuchMethod__ ? eval(\" '' \", @foo) : (__iterator__ .. ({})) for (__noSuchMethod__.__parent__ in -3/0) for each (__parent__ in true) if (<x><y/></x>)) yield; else  if ((__noSuchMethod__ = [,,z1].valueOf(\"number\")).unwatch(\"__parent__\")) {let (__iterator__) { return; } } else {(5.0000000000000000000000);{(this); } }");
tryItOut("L:if(<x/>) { if (typeof  \"\" ) { } else throw -0;}return false;");
tryItOut("if(eval(\" \\\"\\\" \", @foo)) {{} } else prototype;");
tryItOut("this.zzz.zzz;");
tryItOut("/*infloop*/while((__parent__-=((function (prop, prototype)prototype))([__proto__])))({__iterator__: (<x><y/></x> in <x><y/></x>)})");
tryItOut("throw __proto__;");
tryItOut("if(*::*.propertyIsEnumerable(\"prototype\")) {L:if(-3/0) {throw this;{} } } else  if ( '' .eval(#1=[#1#])) {( /x/g );yield <><x><y/></x></>; }");
tryItOut("if((~let (__proto__ = (function ([y]) { })(), prototype) <y><z/></y>)) { if ((yield __noSuchMethod__ = window)) {if(undefined) yield;throw [,,z1]; } else return new (*::*)();} const constructor;");
tryItOut("/*infloop*/for(this.__defineSetter__(\"__iterator__\", *); <x><y/></x>.__defineGetter__(\"prop\", function  prototype () { return [[1]] } ); __parent__ = *::*) {return; }");
tryItOut("if(<x/>) {(this); } else prop");
tryItOut("/*for..in*/for(const __iterator__ in ( /x/g .@*) << (prototype) = -1 /= prop) gc()\n");
tryItOut("switch([ \"\" .unwatch(\"constructor\")].some(Math.sin)) { case (__parent__ = __parent__): __parent__break; default: /*infloop*/L:while(__count__.__noSuchMethod__ setter= *::*)case 4: break;  }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let ! /x/g .valueOf(\"number\") in (Object()).constructor) {L:do var __noSuchMethod__; while((__noSuchMethod__.__defineGetter__(\"__count__\", [1,2,3,4].slice)) && 0); }");
tryItOut("L: return;");
tryItOut("{with({__proto__: (yield __iterator__.__count__ = <x><y/></x>)})switch(__iterator__) { default: break;  } }");
tryItOut("if((__noSuchMethod__ = __parent__)) do /*infloop*/for(.2; 1e-81; [,]) return <x><y/></x>; while((new (Function).call( \"\" , )()) && 0); else  if (void <y><z/></y>--) {continue ; }");
tryItOut("if([RangeError() for each (prop in __iterator__) if ('haha'.split)]) __proto__:  /* Comment */<x><y/></x> else  if ([11,12,13,14].filter) export *;");
tryItOut("{let __iterator__ = #1#;const __proto__ = null, __iterator__ =  \"\" ; }");
tryItOut("/*infloop*/do {(1 for (x in [])) } while([[]]);");
tryItOut("if(0.1) { if ((__iterator__.__iterator__)) {;return @foo; }} else {yield;/*infloop*/for((__proto__--); this.__defineSetter__(\"__iterator__\", (<><x><y/></x></>).watch)\n; <><x><y/></x></> -  /x/ ) {{\n} } }");
tryItOut("this.zzz.zzz;");
tryItOut("/*for..in*/for(let prop = new Array() in __parent__ < #1#) {export __count__; const __proto__; }");
tryItOut(" yield ");
tryItOut("try { /*for..in*/for(let (/__parent__, __noSuchMethod__] = eval(\"<y><z/></y>\", [,,z1]) in [,,]) {var undefined = @foo, __iterator__ = null; } } catch(__iterator__) { return *::*; } finally { throw StopIteration; } do {/*infloop*/do let constructor = prototype; while(*::*);( } while(((3.__defineSetter__(\"constructor\", (new Function(\"yield  /x/ ;\"))))) && 0);");
tryItOut("return this.__defineGetter__(\"constructor\", [1,2,3,4].map);");
tryItOut("with({}) { yield (constructor = __noSuchMethod__); } ");
tryItOut("while(((__iterator__.__count__ = (<><x><y/></x></> -  /x/ ))) && 0){break L; const __parent__;return <><x><y/></x></> }");
tryItOut("{export *; }");
tryItOut("let(__iterator__, __proto__ = (yield <>\t<x><y/></x></>)) ((function(){this.zzz.zzz;})());");
tryItOut("for(let y in []);");
tryItOut("if(<><x><y/></x></>) {} else  if (<\fx><y/></x>) { }");
tryItOut("x::__proto__ = __count__;");
tryItOut("with({}) { let(__iterator__) ((function(){throw StopIteration;})()); } ");
tryItOut("switch(prototype) { case (<x/>\n((return)) + (Function).call((let __proto__, __count__), (uneval(*::*)), ({a2:z2}))): break; {throw __proto__;var prototype = false; }case (yield __proto__): if( /x/g ) { if (this) gc()} else const __parent__ = #1#, __noSuchMethod__ = window; const constructor; }");
tryItOut("throw window;");
tryItOut("/*infloop*/for(var __noSuchMethod__;  /x/ ;  \"\" .eval(3/0)) gc()");
tryItOut("/*for..in*/for(__count__((__noSuchMethod__.valueOf(\"number\"))) in (((eval(\"[@foo.prop if (null)]\", ({}).__lookupGetter__())).watch)([z1,,].watch(\"prototype\", function (yield)({prototype:  ''  })))))/*for..in*/L:for(var __noSuchMethod__ in *::*) throw (-1);");
tryItOut("let(x::__iterator__ = <><></></>.yoyo(()), function::constructor =  /x/g ) ((function(){throw StopIteration;})());");
tryItOut("<><x><y/></x></>;\nexport __parent__;\n");
tryItOut("return constructor;");
tryItOut("let (true) { /*infloop*/for(({}).hasOwnProperty( '' , undefined)[prop = <><x><y/></x></>]; this.__defineSetter__(\"__proto__\", (1 for (x in []))); __count__.constructor = <><x><y/></x></> > <x/>) {yield <><x><y/></x></>;var <><bbb xmlns:ccc=\"1e-81\"><ccc:eee></ccc:eee></bbb></>; } }");
tryItOut("/*infloop*/for\f(const __noSuchMethod__;  /x/g ;  /x/ ) export __parent__;");
tryItOut("{gc() }");
tryItOut("with({}) { var setter; } ");
tryItOut("gc()L:if(__parent__) { if ([,]) {{} } else {continue L; }}");
tryItOut("/*for..in*/for(var [constructor, prototype] = .2.@foo in (function ([y]) { })()) {export constructor; }");
tryItOut("let (constructor = *) { export __count__; }");
tryItOut("L:with({__count__:  /x/ }){var __count__, prototype;return <x/>; }");
tryItOut("/*infloop*/while(prop)\fwith({prop: [1,,] / undefined.__defineSetter__(\"__noSuchMethod__\", eval)}){;export constructor; }");
tryItOut("L: M:switch((<x/>)[window]) { case prototype-- ? (__count__ = __iterator__) : ([15,16,17,18].map('haha'.split, <><x><y/></x></>)): var constructor = true, __noSuchMethod__ = *::*; }");
tryItOut("/*for..in*/for(let prop = {; } in @foo) throw 0x99;");
tryItOut("return;");
tryItOut("let(prop = window--) { throw __parent__;");
tryItOut("/*infloop*/for((yield (-1) != (__iterator__ =  /x/ )); __parent__.((<x><y/></x>.(export __proto__;))); [,,z1] = 033 = constructor.isPrototypeOf(constructor.__defineSetter__(\"__proto__\", gc))) export __iterator__;");
tryItOut("/*for..in*/for(const __iterator__ in ((((;.__defineGetter__(\"__iterator__\", Function)).__defineSetter__).apply)(this.zzz.zzz)))M:switch(prototype.prop) { case new (<xxx>{prop}</xxx>.(true))(@foo): if(*) { if (*::*) -0; else {export *;let prototype = <y><z/></y>, function::__iterator__; }}break;  }");
tryItOut("if(<zzz>-\n<y><z/></y></zzz>) let prop, __count__ = undefined; else {const prop = *, __count__; }");
tryItOut("if( /x/g ) { if (<><x><y/></x></>) x::__proto__; else {prop; }}");
tryItOut("L:switch((eval(\"new (function (constructor)window)(__iterator__)\", window >>>=(function ([y]) { })()))) { case 5: break;  }");
tryItOut("if(()) { if (constructor.__proto__ setter= (((1 for (x in []))).call).apply) <x><y/></x>;} else continue M;");
tryItOut("/*infloop*/for(__proto__; (uneval(\f~__noSuchMethod__)).__defineGetter__(\"__count__\", ({}).__lookupGetter__); (yield (({__count__ getter: (1 for (x in [])), __proto__: this })))) const prototype = window;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let (constructor) in <x><y/></x>) { }");
tryItOut("throw this\n");
tryItOut("__count__, prototype = window;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__ in __count__) {return <y><z/></y>; }");
tryItOut("\n");
tryItOut("if(<x><y/></x> *= this) {L:  } else  if ((function  constructor (prop)__parent__|=<y><z/></y>)(((new Function(\"\"))).call(<x><y/></x>, <><x><y/></x></>, <x><y/></x>))) {export *; } else {export __proto__; }");
tryItOut("{if((*::*.__proto__ = <><x><y/></x></>.__lookupGetter__(\"constructor\"))) {let __proto__ = @foo;gc() } else  if (new function(q) { return q; }(<x/>, <><x><y/></x></>)) ( \"\" ).__defineSetter__ else {__parent__ = 0x99;yield; }/*for..in*//* nogeckoex bug 349964 */ for  each(__parent__ in [11,12,13,14].filter) var constructor, __parent__; }");
tryItOut("const __iterator__ = <x/>, constructor = <x/>");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(let __noSuchMethod__.prototype in __noSuchMethod__ = <x/>) {const __count__;\nyield  /x/ ;\n }");
tryItOut("/*infloop*/while(__parent__ = ((uneval(<x/>)))){(null); }");
tryItOut("/*infloop*/for(const __noSuchMethod__; <><x><y/></x></>()(5.0000000000000000000000, <y><z/></y>); (__iterator__.null)) {L:if(033) yield; else  if (this) var __count__, __proto__ = null;/*for..in*//* nogeckoex bug 349964 */ for  each(constructor in prop) ; }");
tryItOut("/*infloop*/M:for(var constructor; (<x/> !== window); void prototype .. ({a2:z2}) ? prop.__iterator__ setter= function(y) { yield y; undefined;; yield y; } : __noSuchMethod__ = (-1).@foo /  '' ) {/*infloop*/for(__iterator__; *; <><x><y/></x></>) {yield true; }M:if(()) yield; else throw window; }");
tryItOut("let(prop = <x><y/></x>.([]) === (this.zzz.zzz)[((/a/gi)(*::*, @foo))]) ((function(){throw __count__;})());");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(var ({ __proto__: [], __parent__: __count__ }) in ((__iterator__ =  '' ).valueOf(\"number\"))) {/*infloop*/for(const constructor = ; ++this.zzz.zzz; this.__defineGetter__(\"prototype\", function(q) { return q; })) {(false); } }");
tryItOut("/*for..in*/for(prototype in 1e4) /*for..in*/for(var (__count__) in ((new Function)(prototype = constructor))){export *; }");
tryItOut("L:if(arguments.valueOf(\"number\")[*::*]) gc()");
tryItOut("/*infloop*/while(constructor){M:with(undefined){yield;var __count__ = __count__; } }");
tryItOut("L:if( /x/g ) {continue M; } else {if((-0)) {} }\nyield;\n");
tryItOut("with({}) { throw StopIteration; } ");
tryItOut("__iterator__ = constructor;");
tryItOut("(1.3);");
tryItOut("/*infloop*/while(__parent__ = <x/> ?  ''  : *::*){/*for..in*/for(var prop in ((window)(<x><y/></x>)))throw <x><y/></x>; }");
tryItOut("/*for..in*/M:for([constructor, prototype] = (__noSuchMethod__.__iterator__ getter= (undefined).__defineSetter__).constructor = (({a1:1}).yoyo(__proto__)) in [z1,,]) gc()");
tryItOut("/*for..in*/for(let __parent__ in false) {return  /x/g ;{} }");
tryItOut("L: {return <x><y/></x>;/*for..in*//* nogeckoex bug 349964 */M: for  each(const __iterator__ in 3.141592653589793) {export *; } }");
tryItOut("/*for..in*/for(__iterator__ in (eval(\"continue ;\", <><x><y/></x></>)\n)) if(\ntrue) {'haha'.split } else  if (RangeError()) export __count__; else {yield;yield  }");
tryItOut("throw <><x><y/></x></>;return;");
tryItOut("gc() const __proto__;");
tryItOut("M:if(this.__defineSetter__(\"constructor\", [1,2,3,4].map)) {if(window.__noSuchMethod__) return <x><y/></x>; else M:while(( \"\" ) && 0)export *;continue L; } else /*for..in*/L:for(const __count__ in <x><y/></x>) {continue ; }");
tryItOut("while((prototype ? 3/0 : <x><y/></x>.__lookupSetter__(\"prototype\")) && 0){{<><x><y/></x></>{return;yield -0; } }gc() }");
tryItOut("yield; const __proto__;");
tryItOut("let (__parent__ = null, function::__iterator__) { yield undefined; }");
tryItOut("/*infloop*/for((prop)[<x><y/></x>]; .__lookupGetter__(\"__proto__\"); <x><y/></x> || *) {return; } const __count__;");
