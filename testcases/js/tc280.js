tryItOut("M:if(__proto__) ; else  if (((<y><z/></y>( /x/ )) ? new ({})(.2) : [15,16,17,18].some(function (__parent__, constructor)1.2e3, this.__defineGetter__(\"__proto__\", eval)))) return <><x><y/></x></>;");
tryItOut("if(\n<y><z/></y>) return; else  if (__noSuchMethod__ = prototype = <x/> .@ <>//h\n<>this</></>) {export *;{} }");
tryItOut("if([11,12,13,14].map != export *.@*) { if (((uneval(<y><z/></y>)))) {with((null.propertyIsEnumerable(\"__proto__\")))__iterator__ = <><x><y/></x></>; } else /*infloop*/for(new #1=[#1#]; __count__; ({__noSuchMethod__: <><x><y/></x></>,  set __iterator__(prop, __count__) { gc() }  })) {gc() }}");
tryItOut("let(({ __iterator__: __noSuchMethod__, __parent__: get }), constructor) ((function(){with({}) let(prop) { with({}) { var constructor = false; } })());");
tryItOut("if(arguments) { if (([11,12,13,14].filter).throw((true /= 1e-81))) yield; else {export __noSuchMethod__;/*for..in*/for(let __count__ in 3) {; } }}");
tryItOut("L:if(__parent__ = __noSuchMethod__ = [,,]) {/*infloop*/for(<x><y/></x>;  /x/ ; [[1]]) {export *; }prototype } else {gc()export *; }");
tryItOut("L:if(<y><z/></y>.prototype =  /x/g ) throw __parent__;");
tryItOut("if(((eval(\"return  /x/ ;\", <x><y/></x>)))(__iterator__)) {return;/*for..in*//* nogeckoex bug 349964 */ for  each(__proto__ in <x><y/></x>) {let __count__, __count__; } }");
tryItOut("while((<><x><y/></x></>\n\n) && 0)yield __parent__ =  /x/ ;");
tryItOut("if(([(__iterator__)[<x/>]].filter(eval))(window, true)) { if (<{prototype}> </{prototype}>) yield; const prototype; else let (__noSuchMethod__ = __proto__ = 1e4, prop = undefined) { return; }}");
tryItOut("{//h\nreturn constructor; }");
tryItOut("L: {while((1e81) && 0){var __iterator__; } }");
tryItOut("break M\nconst prototype, __noSuchMethod__;");
tryItOut("/*infloop*/for([] = 3/0; (<y><z/></y> ^ 1e-81);  ''  .@*:: <x><y/></x>) {break L;{} }");
tryItOut("this.zzz.zzz;");
tryItOut("while(([, constructor, , __iterator__, [, ]] = __noSuchMethod__) && 0){}");
tryItOut("return;");
tryItOut("return;");
tryItOut("{/*for..in*//* nogeckoex bug 349964 */ for  each(const prototype in @foo) return <><x><y/></x></>; }");
tryItOut("/*infloop*/for(var __iterator__; #2=({__parent__:  /* Comment */@foo}); void *) {yield (<x/>)();gc() }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __count__ in 1.3) return;");
tryItOut("return *::*;\nexport (1 for (x in []));\n");
tryItOut("if((<x><y/></x> ? false.__defineSetter__(\"\", (new Function(\";\"))) : *::*.@*)) {L:if(*::*) { if (prop) {}\f else gc()}export *; } else  if ((#3={a:#3#}.*.__lookupGetter__(\"__iterator__\"))) /*for..in*/for(const [__iterator__, prop] = const __iterator__, __noSuchMethod__ in this) {yield; } else {L:if(new ([1,2,3,4].slice)()) {var __count__ = <x/>, __iterator__; } }");
tryItOut("for(let y in []);");
tryItOut("/*for..in*/for(let constructor in (((__count__ = *))(({constructor: <><x><y/></x></> }))))if(*) export __proto__; else  if ( /x/ ) {[1,2,3,4].map } else (window);");
tryItOut("/*infloop*/for(*::*;  /x/g ; <><x><y/></x></>) var constructor = <><x><y/></x></>, __proto__ = constructor");
tryItOut("if(let (__noSuchMethod__ = (null.propertyIsEnumerable(\"prop\"))) new (this)(0.1, <><x><y/></x></>)) { if (this) {throw [[]] }} else {if((__iterator__.__iterator__ setter= @foo)) { if (<><x><y/></x></>.*) export constructor;} else __count__ = undefined, constructor;{break ; } }");
tryItOut("if('fafafa'.replace(/a/g, 'haha'.split)) { if ((this.propertyIsEnumerable(\"__count__\"))) case false: case <y><z/></y>: break; throw <x><y/></x>;case  /x/ : break;  else {continue ;throw false; }\t}");
tryItOut("default: break; {const __parent__, __iterator__ = *::*; }break; ");
tryItOut("with({}) { export *; } ");
tryItOut("L:if(./*__proto__ = (\n{__parent__: ({a1:1}) })) gc() else  if ((undefined.eval(prototype))) {/*for..in*/for(const __count__ = this in window) ; } else yield null;");
tryItOut("{return; }");
tryItOut("let (var __proto__, constructor = [__noSuchMethod__ =  ''  for (function::__parent__ in -0)]; = ({ __count__: [, ({ __count__: constructor }), ({ R: __proto__, constructor: __iterator__ })], __count__: __parent__ }) = (Error(__noSuchMethod__ ? __noSuchMethod__ : (-0)))) { const __proto__ = this;/*for..in*/M:for(var [function::prototype, __iterator__] = this.valueOf(\"number\") in #2=({__proto__: arguments})) ({ __noSuchMethod__: prototype, __parent__: ({ __iterator__: ({ __count__: [__parent__, , constructor, ], function::prototype: ({ __iterator__: prototype }) }) }) }) }");
tryItOut("if(__parent__ = ((#0=({a2:z2})).@foo\n) in __iterator__.__iterator__ <<= ((function ([y]) { })().__noSuchMethod__)) { if ([,,z1]) ;} else {/*for..in*/M:for(var [__parent__, get] = __proto__.__parent__ getter= Math.pow in (false.valueOf(\"number\"))) var __noSuchMethod__, __iterator__ = this; }");
tryItOut("(this);");
tryItOut("/*infloop*/for( \"\" ; ; (<x><y/></x>.__lookupSetter__(\"__parent__\"))) (<x><y/></x>);");
tryItOut("/*for..in*/for(var prototype in (((1 for (x in [])))((__iterator__ = <x><y/></x>))))yield <x/>;");
tryItOut("let (__parent__ = (<x/> != <y><z/></y>), prop) { prototype, __proto__ = <y><z/></y>; }");
tryItOut("L:with({__parent__: new <x/>(eval(\"<x><y/></\\fx>\", <y><z/></y>))}){__iterator__ = #1#; const prototype;if(({prototype setter: (new Function(\"const prop;\")), __parent__: window })) return  \"\" ; }");
tryItOut("with({__iterator__: ({ get __noSuchMethod__() { yield 033 }  })}){export __noSuchMethod__;break M; }");
tryItOut("/*for..in*/L:for(prototype in ((Math.sin)(void <><x><y/></x></>eval(\"false\", this), constructor ))){export __noSuchMethod__\n }");
tryItOut("/*for..in*/for([__proto__, constructor] = [15,16,17,18].sort(function(q) { return q; }, (!(function ([y]) { })() for (__iterator__(prop) in *::*))) in ((prop)[.2])) window\f;");
tryItOut("/*infloop*/do {export __proto__; } while(this.zzz.zzz);");
tryItOut("/*infloop*/L:for(var ({ constructor: __iterator__ }) = prop.__defineSetter__(\"__iterator__\", 'haha'.split) | (let (prototype) true); prop.constructor = (__noSuchMethod__ = <x/>).@* ? <x><y/></x>.( '' \r) : 033; undefined) ");
tryItOut("export *;");
tryItOut("if(+undefined) \r{(new Function(\";\"))throw *::*; }");
tryItOut("if(var __count__ = <x><y/></x>, prototype = this) {{}; }");
tryItOut("(Function).apply");
tryItOut("/*for..in*/for(let prototype in ((Math.sin)(([] = constructor.__count__ = <x><y/></x>))))L:switch(window) { case ({a2:z2}): case 6: break; default: throw try { __proto__; } catch(constructor if  \"\" ) { export __parent__; } ;break;  }");
tryItOut("/*infloop*/for((__proto__.__count__ = <x><y/></x>); (++undefined); \n<x/>) <><x><y/></x></>;");
tryItOut("{var __proto__ = this;export *; }");
tryItOut("continue M");
tryItOut("/*infloop*/while([<><x><y/></x></> for each ( ''  in __noSuchMethod__)] , (( /x/ ).__defineSetter__).call(window, 1.3))/*infloop*/M:for('fafafa'.replace(/a/g, ((1e-81).__defineSetter__).apply); [z1] |= __proto__ = [,]; (p={}, (p.z =  '' )())) {yield; }");
tryItOut("if((*::*.valueOf(\"number\"))) prototype; else  if (((uneval( /x/ )))) {function(y) { yield y; return [1,,];; yield y; } } else false;");
tryItOut("/*for..in*/for(prototype = ({__count__: <x><y/></x>}) in <x/> , <><x><y/></x></>) /*infloop*/while(<x><y/></x>.isPrototypeOf(#1=[#1#])){gc()throw *; }");
tryItOut("\n/*for..in*/for(let __noSuchMethod__ = #0=[(this.zzz.zzz)] = [,,z1] in @foo) __count__;yield ([15,16,17,18].map(function  __noSuchMethod__ (__parent__, __noSuchMethod__)window, null));");
tryItOut("\n");
tryItOut("let(({ __parent__: prop, constructor: x::prototype }) = <x/>.__proto__) { throw __count__");
tryItOut("return;");
tryItOut("/*infloop*/for(delete (p={}, (p.z = function ([y]) { })()); (__iterator__ = new *([]).watch(\"<> </>\", Math.pow)); let (constructor = <x><y/></x>\n, this = *::*) __noSuchMethod__ !== this.yoyo(<><x><y/></x></>, true.yoyo(prop))) ");
tryItOut("yield __count__.(((prototype = window))());");
tryItOut("while((constructor = __count__;) && 0)with(@foo)export __count__;");
tryItOut("1e+81;");
tryItOut("let __count__ = <x><y/></x>, __count__;");
tryItOut("L: {}");
tryItOut("for(let y in [5,6,7,8]) yield 'fafafa'.replace(/a/g, <x><y/></x>);");
tryItOut("if(__count__) /*for..in*//* nogeckoex bug 349964 */ for  each(let __proto__ in <y><z/></y>) {return;gc } else {gc() }");
tryItOut("switch(__noSuchMethod__.(-0)) { case ([11,12,13,14].sort): this;case new [11,12,13,14].some(++<x><y/></x>, undefined): 'haha'.split }");
tryItOut("with((({__count__: (+ '' ) })))if(new (<x/>.valueOf(\"number\"))(constructor.prop = <x/>, false)) {/*infloop*/for(var __parent__ = constructor;  /x/g ;  \"\" ) {throw false;\n }constructor } else  if (new (__noSuchMethod__) = true.__defineGetter__(\"__count__\", (<x><y/></x>).watch)) ; const __iterator__;");
tryItOut("/*infloop*/do /*for..in*/for(constructor in (([1,2,3,4].map)(prop.(<x><y/></x>))))export prop; while(let ([({ __count__: __proto__, prop: __noSuchMethod__ }), default: {return; }break; throw  /x/ ;break; case 1e81: yield true;, , , ] = *) yield __count__);");
tryItOut("export __count__\n<x/>;\nif((((p={}, (p.z = ({a2:z2}))())).__iterator__ = *)) { if ((eval(\" if (false)\", __parent__)).propertyIsEnumerable(\"prototype\")) __count__ else {this; }}\n");
tryItOut("if((!undefined.__lookupSetter__(\"__parent__\"))) {} else {do {({a2:z2}) = window; } while((function () { yield <x><y/></x> } ) && 0); }");
tryItOut("(__noSuchMethod__);");
tryItOut("/*for..in*/for(__noSuchMethod__.prototype in ((Function)(__iterator__ = (eval(\"const constructor = 0x99, prop;\", [1,2,3,4].slice(__proto__))))))L:while(((this.unwatch(\"__noSuchMethod__\"))) && 0){{;return; } }");
tryItOut("L:switch( { return window } .__lookupGetter__(\"__proto__\")) { case (undefined for (__iterator__.function::prop in this)): break; default: break; case (<x/>.__lookupSetter__(\"__noSuchMethod__\")): break; break;  }");
tryItOut("/*infloop*/do export *; while(<x><y/></x>);");
tryItOut("/*infloop*/for(let [] = export *; (uneval(<y><z/></y>)); new (({__iterator__: new /a/gi(this)}))(window.__lookupGetter__(\"__proto__\"), 033.valueOf(\"number\"))) {/*for..in*/for(__noSuchMethod__ in [11,12,13,14].map) {{new Function } } }");
tryItOut("continue ;\n(<x><y/></x>);\n");
tryItOut("{}\nlet __proto__ = -0; const function::__noSuchMethod__;");
tryItOut("L: {{} }");
tryItOut("do { \"\" ; } while(((false)()) && 0);");
tryItOut("if((<x/> + window)) {return <x><y/></x>; }");
tryItOut("/*infloop*/M:for(var prototype = *::*;  \"\" ; *::*) return <x><y/></x>;");
tryItOut("{yield <x><y/></x>;<x><y/></x> }");
tryItOut("with({constructor: <x/>}){undefined;gc() }");
tryItOut("if(eval(\"(__noSuchMethod__-=#1=[#1#]) / delete[<><x><y/></x>\\t</>]\", new Exception().@*.eval(((window); = (<x><y/></x>.hasOwnProperty(\"__parent__\")))))) { if ((#1#)) L: export prop;} else {export __noSuchMethod__; }");
tryItOut("return;");
tryItOut("/*infloop*/M:for(var __proto__; --1e81;  /* Comment */<><x><y/></x></>) {let __noSuchMethod__;throw <><x><y/></x></>; }\nyield;");
tryItOut("do let (prototype = *::*) { prop; } while((eval(\"@foo |  /x/g \", (new (1e81)()))) && 0);");
tryItOut("L:with([1,2,3,4].slice for each (prototype in yield) for (__iterator__ in (undefined ^ __count__)) for each (__noSuchMethod__ in (((function ([y]) { })() if (<x/>)))) for (__iterator__ in <y><z/></y>)){(5.0000000000000000000000);\nM:if(<><x><y/></x></>) {export __count__; }\n }");
tryItOut("if((prop.prop getter=  '' .valueOf(\"number\"))) L: const __parent__ = *; else  if (<y><z/></y>.yoyo(3/0\t)) (*::*); else {/*infloop*/L:do {; } while(undefined);Function }");
tryItOut(" { return (new Iterator(<><xxx>{prop}</xxx></>, (-0).eval(<y><z/></y>))) } ");
tryItOut("return");
tryItOut("/*infloop*/for(const __noSuchMethod__ = <><x><y/></x></>; <x><y/></x>; (function ([y]) { })()) let let __iterator__ = 0/0, prop = function ([y]) { };;");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*/for(var constructor = this.__defineSetter__(\"constructor\", Math.pow) in <x/>) \fconst prototype, __iterator__: __noSuchMethod__;");
tryItOut("/*for..in*/M:for(let __iterator__ in <x><y/></x>) export __proto__;");
tryItOut("break ;");
tryItOut("/*infloop*/do return; while((1e-81.@foo.@*));");
tryItOut("//h\n([1,,]);");
tryItOut("if(<><x><y/></x></>) { if (@foo) {gc()this; }} else yield 3.141592653589793;");
tryItOut("with({__noSuchMethod__: (*::* = <y><z/></y>) << \t<><x>\n<y/></x></>.unwatch(\"constructor\")})/*infloop*/do {yield @foo; } while(__count__.__noSuchMethod__);");
tryItOut("let (__parent__ = __noSuchMethod__) {  '' ; }");
tryItOut("export *;\nwith({__parent__: constructor}){<x><y/></x>; }\n");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var prototype.__proto__ in ({ __noSuchMethod__: __iterator__ }) = new this(<><x><y/></x></>)) __iterator__");
tryItOut("M:if(({__count__: prop}).constructor = delete = .2) { if (constructor = this = constructor.__defineSetter__(\"prototype\", (new Function(\"{}\")))) {/*infloop*/M:for(var constructor; <><x><y/></x></>; prop) (true);export *; }} else {yield;throw <y><z/></y>; }");
tryItOut("M:with([11,12,13,14].sort){;throw window; }");
tryItOut("/*infloop*/M:for( /x/g ;  /x/ ; <><x><y/></x></>) window;");
tryItOut("return  '' .valueOf(\"number\") ? constructor = __proto__ :  for ;");
tryItOut("/*infloop*/for({}; ((({}).*.valueOf(\"number\")).watch(\"__parent__\", [1,2,3,4].slice)); ({ get prototype(__count__, __noSuchMethod__)\n \"\" , __noSuchMethod__: --<x><y/></x>[window] })) /*for..in*/L:for(var [__parent__, delete] = *::* ? this : <><x><y/></x></> in [1,,]) (new Function).call");
tryItOut("{if(true.__defineSetter__(\"prop\", .2)) return [1,,];export *\n }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var prototype in ((p={}, (p.z = <y><z/></y>)()))) switch((({__parent__: __count__, constructor: new __count__(prop|=__iterator__, 0\t) }))) { default: __proto__break;  }");
tryItOut("with({}) with({}) __proto__ = __proto__;");
tryItOut("/*infloop*/do window\nexport __noSuchMethod__;\n while((@foo) .@ (export *;.yoyo(window)));");
tryItOut("if( \"\" ) { if (<y><z/></y>) gc()} else {return 1e4; }");
tryItOut("/*infloop*/while((++[1] %= constructor)){/a/giconst __noSuchMethod__; }");
tryItOut("throw prototype;");
tryItOut("L: function  constructor (__noSuchMethod__, __noSuchMethod__) { return undefined } ");
tryItOut("/*infloop*/while(delete <y><z/></y> ^= *); const let;");
tryItOut("try { gc } 'finally { return <x><y/></x>; } ");
tryItOut("if((-1)) { if (*::*) <y><z/></y>;} else return <><x><y/></x></>;");
tryItOut("with((({a1:1}).prop = null))/*for..in*/for(const [__proto__, 5.0000000000000000000000] = (<><x><y/></x></>) in *) {yield;const prop; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __parent__ in null) throw null;");
tryItOut("L: {\fL:if(null) { if (null) export yield; else {return; }}if(this &=  /x/g  ^= []) { if (({__count__: (this.zzz.zzz)})) {throw __parent__; } else {var prototype =  { yield <><x><y/></x></> } , __proto__;while((<><x><y/></x></>) && 0){return;return <y><z/></y>; } }} }");
tryItOut("/*for..in*/for(__parent__ in ({ __parent__: __noSuchMethod__ }) = __iterator__) {/*infloop*/while(((function(y) { yield y; ;; yield y; }).apply)(((yield <x><y/></x>)), #3={a:#3#}))([z1,,]); }");
tryItOut("export constructor;");
tryItOut("for(let y in [5,6,7,8]) __count__ =  \"\" ");
tryItOut("prop");
tryItOut("L:if(<>__proto__ ? false : <x/>.prototype</>) {((-1));yield <x><y/></x>; } else {if(constructor-=1.2e3) { if ((this.__defineSetter__(\"__parent__\", (1 for (x in []))))) let prototype = ({});} else 4.; }\nreturn");
tryItOut("switch(prop =  /x/ ) { default: {}break; case : case new @foo.__proto__(): export *;case [15,16,17,18].some(({}).hasOwnProperty, default: ): throw window;\fbreak;  }");
tryItOut("M:if((/a/gi(*::*, 3)).__lookupSetter__(\"prototype\")) L: {{}gc() } else ( \"\" );");
tryItOut("/*infloop*/while(window)yield;");
tryItOut("with({__parent__: ({a2:z2})}){/*for..in*/L:for(var [__count__, __count__] = -[,] in -1) {(0x99);Math.sin } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(const this.zzz.zzz in __parent__ = <><x><y/></x></> >> 0x99.watch(\"constructor\", function (__noSuchMethod__) { {} } )) {switch([15,16,17,18].filter(Function, 0x99)) { default:  }let constructor; }");
tryItOut("/a/gi");
tryItOut("/*infloop*/for(const constructor; <x><y/></x>.(this); (undefined.__parent__)) break ;");
tryItOut("/*for..in*/M:for(var __proto__ = __parent__ =  ''  in ) export *;");
tryItOut("/*for..in*/for(__noSuchMethod__ in 3.141592653589793) {return window;{} }");
tryItOut("");
tryItOut("/*for..in*/for(var [constructor, __proto__] = new Number((__parent__ = #3={a:#3#})) in Exception()) {return <x/>; }");
tryItOut("/*infloop*/for(const [] = (new Math.pow()); new function(id) { return id } ? constructor : @foo; [1,,]) const __proto__;");
tryItOut("/*infloop*/do {for(let y in [5,6,7,8]) export *; } while((let (prototype, __proto__) (new (<x><y/></x>)(__parent__, 3.141592653589793))));");
tryItOut("{L: {yield; } }");
tryItOut("/*for..in*/for(constructor = let (prop = -3/0 < __iterator__) (break L) in <x/>.__defineGetter__(\"prop\", 'haha'.split)) do const setter = [[1]], __proto__ = 0; while((null) && 0);");
tryItOut("L: {/*for..in*/for(__noSuchMethod__ = this.throw(\t<x><y/></x>) in <x><y/></x>) const __iterator__, constructor;{yield; } }");
tryItOut("with({}) { ({ __noSuchMethod__: ({ prop: __iterator__, __iterator__: __iterator__ }) }) = __proto__; } ");
tryItOut("/*for..in*/for(let (__noSuchMethod__.valueOf(\"number\")).__iterator__ in ((({}).hasOwnProperty)((* in ({a2:z2}) .. null.isPrototypeOf(__noSuchMethod__ = undefined))))){throw <x><y/></x>;let __parent__ = prototype; }");
tryItOut("do L:if(@foo) { if ( /x/ ) {1.2e3;return; } else __proto__ = null;} while((new (<x><y/></x>)()) && 0);");
tryItOut("if(null)  else prop = window;");
tryItOut("return <><x><y/></x></>\n");
tryItOut("return let (__proto__) ( \"\" .yoyo((false if (@foo))));");
tryItOut("with(<y><z/></y>){gc() };");
tryItOut("if(new (function (prototype) { yield [,,z1] } )( \"\" ,  '' )() .@*:: eval(\"<><x><y/></x></>\", <x><y/></x>)) const __noSuchMethod__ = x::constructor; else  if (<><x><y/></x></>.throw([])) {[[1]]; }");
tryItOut("'haha'.split\nexport constructor;\n");
tryItOut("L: return;");
tryItOut("(<><x><y/></x></>);");
tryItOut("let (__noSuchMethod__) { switch(0x99) { case 2: let __proto__ = *;break; return;case prototype:  } }");
tryItOut("export __count__;\n;\n");
tryItOut("let(prop) { with({}) { __noSuchMethod__ = __proto__; } ");
tryItOut("export constructor;\nconst __count__ = null;\nreturn {};\n\n");
tryItOut("/*infloop*/for(let ({ prop: __count__ }) = <><x><y/></x></>.propertyIsEnumerable(\"__iterator__\"); (-<><x><y/></x></>); <><x><y/></x></> ^ (-1)) let constructor;");
tryItOut("var constructor =  /x/ , prop = [z1,,]; const __noSuchMethod__;");
tryItOut("/*infloop*/M:for((uneval(*::*)).yoyo( for (__count__\f in <y><z/></y>) if (3)); this.__defineGetter__(\"yield\", (1 for (x in []))); new Number()) {export *;{} }\t");
tryItOut("do {[z1]; } while((function::__parent__ .@*:: <><x><y/></x></>) && 0);");
tryItOut("return;");
tryItOut("do /*for..in*/for(var __proto__ in (((1 for (x in [])))(this))){{} } while((<x/>) && 0);");
tryItOut("for(let y in []);");
tryItOut("return;(yyy);");
tryItOut("{@foo;\t{{<y><z/></y>; };\texport constructor; } }");
tryItOut("with((yield null.throw(null)))yield;");
tryItOut("({ __count__: prop }) = __iterator__;");
tryItOut("var __iterator__, __noSuchMethod__ = function ([y]) { };");
tryItOut("with(gc)if((yield <x><y/></x>)) throw  /x/g ;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(const __iterator__ in arguments) {continue ;0x99; }");
tryItOut("/*infloop*/while(<><bbb xmlns=\"(new Boolean(<><x><y/></x></>))\">yyy</bbb></>){let prototype; }");
tryItOut("/*infloop*/L:for([\t, __parent__, , ({ prop: prop, prototype: __proto__ })] = (prop).@*; return *;; try { return; } <bbb xmlns:ccc=\"\ntrue\"><ccc:eee></ccc:eee></bbb>.hasOwnProperty(\"prototype\")) {export *; }");
tryItOut("/*infloop*/for(const __iterator__; new (1 for (x in []))(); new <><x\t><y/></x></>.yoyo(@foo)((( /x/ .prop = [[]]) if (<x><y/></x>))) .. let (prototype = constructor) __noSuchMethod__ = 0.1) /*for..in*/for(var prop = (#1#.eval(<><x\t><y/></x><\t/>)) in window) yield;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let __parent__ in +<><x><y/></x></>) {if((\t*)([,])) {(1 for (x in []))break ; } }");
tryItOut("/*for..in*/for(prototype in (([1,2,3,4].map())if(<x/>) { if (0/0) @foo} else { }");
tryItOut("__parent__");
tryItOut("/*infloop*/do {with(\nnull .. *::*){do return; while((<x/>) && 0); }if((prop)(<x/> = <><x><y/></x></>)) /*infloop*/L:for(window; 0/0; <x><y/></x>) {throw  /x/ ;yield; } else  if (prop) yield; } while((constructor|= '' )());");
tryItOut("while(((-prototype)) && 0){__noSuchMethod__, constructor = false; }");
tryItOut("/*infloop*/for([] = __parent__-=(void <x/>); this.zzz.zzz; (RangeError())) {__count__ = __proto__; }");
tryItOut("let (constructor, set) { throw StopIteration; }");
tryItOut("{throw prop;<x/>; }");
tryItOut("/*infloop*/M:while([(<><x><y/></x></>.yoyo(window))].some((function (__count__, prop) { return ((uneval(@foo))) } ).apply))/*infloop*/do throw this; while(( ''  instanceof __iterator__));");
tryItOut("for(let y in [5,6,7,8]) yield;");
tryItOut("do {function () { ; }  } while((null) && 0);");
tryItOut("with({}) { let(prototype) ((function(){var __proto__ = @foo, constructor;})()); } ");
tryItOut("{( \"\" );gc() }");
tryItOut("with({constructor: -1}){throw <x><y/></x>;yield; }");
tryItOut("/*for..in*/for(let #1# in window) {if(3.141592653589793) { if (<x/>) continue ; else {yield 0; }} }");
tryItOut("");
tryItOut("export *;throw undefined;{yield prototype; }");
tryItOut("/*infloop*/for(var __iterator__; <x/>; #3={a:#3#}) ;");
tryItOut("while(((<x><y/></x> ? 0.1 : __parent__)) && 0)if(<x>\t<y/></x>) { if ([15,16,17,18].sort(function  constructor (constructor, __noSuchMethod__)@foo, <><x><y/></x></>)) {{}continue L; } else {constructor = this, constructor; }}");
tryItOut("let (__noSuchMethod__) { /*for..in*/for(var constructor in constructor) {yield; } }");
tryItOut("yield this.throw(<x/>);");
tryItOut("if(([15,16,17,18].some(/a/gi, <x/>))) {let prop;export *; } else  if (([ /x/ ].some(Function))) {yield <x/>; } else {yield; }");
tryItOut("let (({ __iterator__: let })) { /*for..in*/for(__iterator__ = #3={a:#3#} in false)  }");
