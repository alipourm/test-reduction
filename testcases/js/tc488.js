tryItOut("<y><z/></y>;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */prototype.propertyIsEnumerable(\"prototype\")");
tryItOut("/*infloop*/for(const __parent__ = @foo; <y><z/></y>; -0) {var getter;return  '' ; }");
tryItOut("yield");
tryItOut("/*for..in*/for(__iterator__ =  in constructor) {const __count__ = constructor, __proto__ = 033;; }");
tryItOut("for(let y in []);");
tryItOut("if(\nnew (033)()) { if (().__defineSetter__(\"__parent__\", eval(\"window\", <><x><y/></x></>))) export *\nyield; else {yield  /x/ ;break ;\n\n }}");
tryItOut("L:switch(false) { default: break; var __noSuchMethod__ =  /x/ ;break;  }");
tryItOut("L:if(__parent__ = true) var __iterator__\f; else 'haha'.split\n");
tryItOut("if(<y><z/></y>) with(__iterator__ = @foo)gc() else  if (({ prop: ({ __count__: __count__ }) }) = eval(\"const __count__ =  '' , __parent__ = this;\", <x><y/></x>)) yield;");
tryItOut("/*for..in*/for(let prop in ((([1,2,3,4].map).call)([1,,]))){export *; }/*infloop*/(1 for (x in []))while(window)return <><x><y/></x></>;");
tryItOut("L:if(({__proto__: (-0), __proto__: \f[15,16,17,18].sort((this).__defineSetter__, <y><z/></y>): 033 })) <x/>; else {(0);return <x><y/></x>; }");
tryItOut("([, __iterator__, __count__, , ] =  '' [<y><z/></y>])\n");
tryItOut("with(([11,12,13,14].filter))Math.pow");
tryItOut("if([__parent__ = arguments.watch(\"prototype\", (<x><y/></x>).__defineSetter__)].sort(try { return; } catch(__proto__ if <y><z/></y>) { return; } catch(__parent__ if (function(){break ;})()) { <x/> } catch(__noSuchMethod__) { ; } )) /*for..in*/for(var constructor in <y><z/></y>) {null; } else  if (__iterator__ = <><x><y/></x/*\n*/></> ? __iterator__.__iterator__ : new Iterator()) continue M;export *; else gc()");
tryItOut("if(this.__defineSetter__(\"__noSuchMethod__\", ({}).hasOwnProperty)) { if (__parent__.__iterator__) {yield;continue L; }} else {/*infloop*/for(<y><z/></y>; <><x><y/></x></>; <><x><y/></x></>) {yield this;throw window; } { yield 1e4 }  }");
tryItOut("(<y><z/></y>);");
tryItOut("with({prop: (__parent__ = (__parent__ = <x><y/></x>) for ([prototype, ] in [,,z1] -= <x/>)\t if (<x><y/></x>))})/*for..in*//* nogeckoex bug 349964 */ for  each(__parent__/*\n*/ in  /x/g ) {return;__parent__ }");
tryItOut("if((~constructor.throw( \"\" ))--) { if (<x><y/></x>.@*) {/*for..in*/for([constructor, function::__proto__] =  \"\"  in [1]) {gc() } } else {/*infloop*/for(var __parent__; false; undefined) {Math.sin }; }}");
tryItOut("switch((prototype = window)) { default: ;//h\ncase \tthis.__lookupSetter__(\"__noSuchMethod__\") @ (window): return undefined; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(const prop in *::*) ;");
tryItOut("if(prop.__defineSetter__(\"__proto__\", <x><y/></x>).[1].constructor) function(id) { return id }; else  if (this , 1e4) {yield;var __parent__ = prototype, __iterator__ = [[]]; }");
tryItOut("if(window) return  /x/g ; const prototype;");
tryItOut("{{}yield; }");
tryItOut("if(eval(\"let function::prop, __proto__ = <x><y/></x>;\", (this.__defineSetter__(\"__noSuchMethod__\", function(q) { return q; })))) if(<x><y/></x>) { if (<><x><y/></x></>) {(<x/>); }} else yield ({a1:1}); else  if ((__proto__.__count__)) {/a/gi__count__, let __iterator__; = <><x><y/></x></>; } else {export __iterator__; } const __parent__;");
tryItOut("switch([11,12,13,14].map) { default: break;  }");
tryItOut("for(let y in []);let (({ __noSuchMethod__: ({ __iterator__: [function::constructor, __iterator__, __proto__, , __noSuchMethod__], __count__: __noSuchMethod__ }) }), __noSuchMethod__ = false) { throw window; }");
tryItOut("return;");
tryItOut("/*infloop*/for(const prototype; this.zzz.zzz; [x::__iterator__.prop = undefined].some((-1))) {function (function::__iterator__) { return {} } break L; }");
tryItOut("if(\nnew  /x/g (<x><y/></x>)) \f{<x><y/></x>;\nyield <><x><y/></x></>;\nconst prop; } else continue ;");
tryItOut("/*for..in*/L:for(const [__noSuchMethod__, __iterator__] = prototype in (yield __count__)) {/*infloop*/L:do let __proto__ = <x/>, __proto__ = <><x><y/></x></>; while(0.1);({}).__lookupGetter__ }");
tryItOut("if(<x/>) var __parent__ = false; else  if ( \"\" ) {gc() } else (1 for (x in []))");
tryItOut("switch((function ()<x><y/></x>)(new (function(y) { yield y; ; yield y; })(<><x><y/></x></>, this)) -= (__iterator__ = prop)) { default: L:if([ if (@foo) for each (prototype in (new export __proto__;(prop,  /x/ ))) for each (__count__ in  '' )]) /*for..in*/\ffor(var __noSuchMethod__ in 1e+81) throw <><x><y/></x></>; else  if (__parent__ = __noSuchMethod__.prop = <x/>.__iterator__) {function (__count__) { return <x><y/></x> }  }export __proto__;break; case this.__defineGetter__(\"__proto__\", (new Function(\"if(#3={a:#3#}) <x><y/></x>\\t; else  if (undefined) export *; else {return; }\"))): case 0: do {return; } while((each = true) && 0);break;  }");
tryItOut("; const __iterator__;var __parent__ = <><x><y/></x></>;");
tryItOut("const __noSuchMethod__, __count__ = <x/>\nreturn  \"\" ; const __iterator__;");
tryItOut("/*infloop*/while(((window.throw(<y><z/></y>))['fafafa'.replace(/a/g, __proto__)])){true\nexport __proto__; }");
tryItOut("with({prototype: (( /x/g  :: .2).propertyIsEnumerable(\"__noSuchMethod__\") / (<x><y/></x> &= <x/>))[<y><z/></y> *  \"\" .eval((yield <><x><y/></x></>))]}){/*for..in*/for(__count__ =  /* Comment */<x><y/></x> in  '' ) {var __count__;export *; } }");
tryItOut("throw StopIteration;");
tryItOut("const prop, prototype;");
tryItOut("/*for..in*/for([prop, __iterator__] = (new (([1,2,3,4].map).call)()) in ((([1,2,3,4].slice).call)(prototype = [,,z1]))) if('fafafa'.replace(/a/g, ({}).hasOwnProperty)) {let __proto__;let prototype = <x/>; } else  if (0/0()) {gc() } else __noSuchMethod__: __proto__;");
tryItOut("/*for..in*/for(var prototype in (([,,z1])(void (( /x/ )))))/*infloop*/L:while(window){let __noSuchMethod__, function::prop;throw prop; }");
tryItOut("/*infloop*/for(const prop; <><x><y/></x></>; ((uneval(window)))) {const __proto__; }");
tryItOut("/*infloop*/M:for(var __iterator__; let (prototype = <><x><y/></x></>) null >>= <y><z/></y> -= let (constructor, ({ prop: __proto__, __noSuchMethod__: [, , __parent__] }) = constructor = *) (this.__defineSetter__(\"__noSuchMethod__\",  /* Comment */undefined % <><x><y/></x></>)); []) ({ constructor: ({ __noSuchMethod__: prototype.__proto__ }) })");
tryItOut("M:do export __count__; while(([__parent__] = ()--) && 0);");
tryItOut("throw StopIteration;");
tryItOut("M:do {/*infloop*/while((__noSuchMethod__.__iterator__ = this)){export prop; }do function (__noSuchMethod__) { return @foo }  while(((constructor.eval(<x><y/></x>))) && 0); } while((let () ([1,,].yoyo(__count__))) && 0);");
tryItOut("L: this;");
tryItOut("with({}) { this.zzz.zzz; } ");
tryItOut("let (__noSuchMethod__, prototype) { export *; }");
tryItOut(";");
tryItOut("/*for..in*/L:for(let this = (<x/>.__proto__ = new Error(__count__, null)).watch(\"constructor\", function () { /*infloop*/L:for(5.0000000000000000000000; -0; <><x><y/></x></>) {return __noSuchMethod__; } } ) in undefined) {throw  /x/ ;; }");
tryItOut("__count__ = __parent__;");
tryItOut("if('fafafa'.replace(/a/g, Math.pow) ^ +<x><y/></x>) { if (function ([y]) { }) return 1.3; else {/*for..in*/for(let [default: return;break; , __proto__] = #3={a:#3#} in __iterator__) return window;yield;\f }}");
tryItOut("M:if([z1,,]) { if (new prototype = [z1](__noSuchMethod__, <y><z/></y>)) const prop, constructor; else }");
tryItOut("throw StopIteration;");
tryItOut("if(<x><y/></x>) export function::__noSuchMethod__;");
tryItOut("/*for..in*/L:for(__noSuchMethod__ in null) continue ;");
tryItOut("/*for..in*/for(var constructor in (((new Function(\"{/*\\n*/; }\")))( /x/  -= <y><z/></y>))){(1.3); }");
tryItOut("if(<y><z/></y>) { if (.eval(( '' .__noSuchMethod__).prototype)) {{} } else {throw 0.1; }}");
tryItOut("yield;");
tryItOut("{M:if(__count__) yield <><x><y/></x></>; }");
tryItOut("{{}yield; }");
tryItOut("let (__noSuchMethod__ = undefined, __iterator__) { M:switch(<><x><y/></x></>) { case 5:  } }");
tryItOut("L: __count__, __count__ = <><x><y/></x></>;");
tryItOut("/*infloop*/L:for(({ __count__: [], __proto__: [, ] }) = ({prototype: new function (__parent__, __proto__) { return <><x><y/></x></> } (const __proto__;), __count__: __proto__ }); new 0(undefined, window); <> </>) ;\nexport *;\n");
tryItOut("prototype = (eval(\"<x/>\",  \"\" )).throw(__proto__) >>> (this.zzz.zzz >>= this.__defineSetter__(\"__iterator__\", ({}).hasOwnProperty)), prop");
tryItOut("/*infloop*/for(var prototype; constructor.constructor = (prop.constructor); ({ __proto__: ({ __iterator__: __count__ }), prop: __proto__ }) =  \"\"  % *) Functionyield this;/*\n*/");
tryItOut("/*infloop*/M:for(const [constructor, __proto__, [], [], __noSuchMethod__] = yield null; (this.__defineSetter__(\"__noSuchMethod__\", [1,2,3,4].map));  /x/g ) {{if() {__proto__, __count__ = this;prototype; } } }");
tryItOut("L:with({__noSuchMethod__: (<><x><y/></x></>.throw(<><x><y/></x></>)).__parent__}){return; }");
tryItOut("with(<bbb xmlns:ccc=\"(function () { yield prototype } ).call(<y><z/></y> &= false, )\"><ccc:eee></ccc:eee></bbb>){/*for..in*/for(let __proto__ in *::*) return;continue M; }");
tryItOut("prop = *\nFunction");
tryItOut("while((<><x><y/></x></>.__defineGetter__(\"__count__\", eval).prototype = false.valueOf(\"number\")) && 0){var __parent__, prop; }");
tryItOut("/*for..in*/for(let constructor = (true ?  \"\"  : prototype.unwatch(\"__proto__\")) in (this.__defineGetter__(\"__parent__\", [1,2,3,4].map)) ? (__count__) : #0=__iterator__) return <><x><y/></x></>");
tryItOut("{ }");
tryItOut("/*for..in*/for(let *.constructor = <><x><y/></x></>['constructor'] in ((/a/gi)(\fnull)))gc()");
tryItOut("/*infloop*/for((p={}, (p.z = undefined)()); (function(q) { return q; }) & (<x><y/></x>); (constructor = constructor)) ([[]]).watch");
tryItOut("export <x><y/></x>[\f'constructor']");
tryItOut("if(eval(\"/*infloop*/for(prototype; [1]; <x><y/></x>) {gc() /x/g ; }\", null).hasOwnProperty(\"__proto__\")) yield 0x99; else {export *; }");
tryItOut("/*for..in*/for(__noSuchMethod__.__proto__/*\n*/ in ((function  setter (__proto__) { /*for..in*/for(prop = ('fafafa'.replace(/a/g, 'haha'.split)) in  /x/ ) gc() const __iterator__; } )(__noSuchMethod__ = false.throw([] = *::*.__defineGetter__(\"function::__noSuchMethod__\", Math.pow))))){/*infloop*/for( /x/g ; __iterator__; <x/>) {const __parent__ = window; } }");
tryItOut("if(this.zzz.zzz) {do ([1,2,3,4].map).apply while((*) && 0);export prototype; } else {export *; }");
tryItOut("try { continue M; } catch(__proto__ if (function(){export __count__;})()) { const __proto__ = ({a2:z2}), __proto__; } catch(constructor) { const __iterator__; } ");
tryItOut("with([11,12,13,14].some /= 0){return;export __parent__; }");
tryItOut("if(<><x><y/></x></>) {; }");
tryItOut("{return <x><y/></x>;new Function }");
tryItOut("with({}) { (<x><y/></x>); } ");
tryItOut("return null\nif(this) return __parent__; else  if (*::*) {const constructor, prototype; } else throw *;");
tryItOut("M:do gc() while(((__proto__%=[,,])) && 0);");
tryItOut("/*for..in*/for(const __count__ in ((new Function)( /* Comment */( /x/g .isPrototypeOf(<y><z/></y>)))))with(<y><z/></y>){yield <><x><y/></x></>;\n(@foo); }");
tryItOut("(Math.sin).apply\nexport prototype;try { __iterator__ = prop; } catch(constructor if (function(){this.zzz.zzz;})()) { __noSuchMethod__ = prototype; } catch(__noSuchMethod__ if ({})) { yield true; } finally { return (constructor++); } ");
tryItOut("{/*for..in*/M:for([__count__, constructor] = null in __iterator__) throw  \"\" ; }");
tryItOut("this.zzz.zzz;");
tryItOut("switch(#1#.unwatch(\"prop\").prototype) { default: export __parent__;break;  }");
tryItOut("export __iterator__; const __parent__;");
tryItOut("yield;");
tryItOut("const __count__; const prop;");
tryItOut("if((#2=[__count__%=[,,]--])) { if (({prop: (prop =  /x/ )})) switch([,,]) { default: break;  }} else {constructor; }");
tryItOut("/*infloop*/for(var ({ __iterator__:  /x/ ['__iterator__'], __noSuchMethod__: __proto__ }) =  /x/g .__defineGetter__(\"prop\", <x><y/></x>) >>>=new (0/0)(3.141592653589793, @foo); true.isPrototypeOf([,,] *= @foo); function(id) { return id } >>> undefined) /*infloop*/for(var __proto__; new function (__proto__) { return <> { return <x><y/></x> } </>.throw(<><x><y/></x></>) } ((function  constructor (prototype) { yield <y><z/></y> } )(<x><y/></x>, <y><z/></y>)); [<y><z/></y>.__lookupGetter__(\"constructor\")].some(prop((*)[prop]))) {L: var __iterator__;let(prop, prop) ((function(){})()); }");
tryItOut("with({prop: (p={}, (p.z = 0.1)())}){export __noSuchMethod__; }");
tryItOut("/*for..in*/for(x::__count__ = 0 in <x><y/></x>) ");
tryItOut("__iterator__ =  \"\" \n '' ");
tryItOut("{{} }");
tryItOut("M:if(constructor) {const __parent__ = 1e4; } else  if (<y><z/></y>) var prop = <x><y/></x>; else export *;");
tryItOut("{yield <x><y/></x>; }");
tryItOut("L: {export *;L:while((false ? <x/> : function(id) { return id }) && 0)gc() }");
tryItOut("/*for..in*/M:for(let [__noSuchMethod__, __iterator__] = (__iterator__:  /x/  && <><x><y/></x></>) in ([15,16,17,18].map((<x/> - [,,]).__defineSetter__, (this.__defineSetter__(\"prototype\", new Function))))) {L:while((let (__parent__ = 033) <><x><y/></x></>) && 0)let true, __count__ = window;do {export *;<><x><y/></x></>; } while((<x/>) && 0); }");
tryItOut("M:if(((yield  \"\" ))) { if ((delete new (1 for (x in []))())) {( /x/g ); } else throw  /x/ ;}");
tryItOut("do throw -1; while((<x><y/></x>.propertyIsEnumerable(\"constructor\") .@x:: 1e-81) && 0);");
tryItOut("let (prop = if(1e-81) { if ( /x/ .isPrototypeOf(3.141592653589793)) {yield; } else {var constructor = -3/0, __noSuchMethod__ = false; }}, __proto__) { throw (this.zzz.zzz); }");
tryItOut("while((null) && 0){yield <x><y/></x>;gc() }");
tryItOut("{}");
tryItOut("");
tryItOut("with({}) let(prop) { for(let y in []);");
tryItOut("switch(-eval(\" '' \", prototype) , yield  /* Comment */null > window) { default: {if(prototype) {/*\n*/ if (function ([y]) { }) {const let;{} } else return undefined;}(this); }break; /*infloop*/for(let prop; ( /x/g .*.4.); [] = [, , , __noSuchMethod__]) /*infloop*/for(++__noSuchMethod__; new  '' (<\tx><y/></x>, @foo);  /x/g .isPrototypeOf(*)) {return *;throw #1#; } }");
tryItOut("if(- \"\"  !== undefined) { if ([11,12,13,14].some)  else if((yield undefined)) { if (<y><z/></y>)  else {[,,z1]; }}}");
tryItOut("with(__parent__ = @foo)const __parent__, prototype = <x><y/></x>;");
tryItOut("yield (window.unwatch(\"constructor\"));");
tryItOut("if(try { return; } finally { try { return; } catch(__parent__) { let(constructor = <><x><y/></x></>) { null; } finally { __proto__ = __count__; }  } ) var __noSuchMethod__, __noSuchMethod__ = <><x><y/></x></>;");
tryItOut("/*infloop*/while(\f#1=({prop: <><zzz>(constructor = 'fafafa'.replace(/a/g, window).propertyIsEnumerable(\"__parent__\"))</zzz></>})){{export __parent__; } }");
tryItOut("/*for..in*/prototype: false.__noSuchMethod__ = true.throw((/a/gi)(//h\ntrue))");
tryItOut("if(this.zzz.zzz) {while((new (null)(true,  \"\" )) && 0){yield <x/>;<x><y/></x>; } } else {while((((window >> <><x><y/></x></>) @ ((eval(\"__count__\", [[]])) >>>=(typeof [,,])))) && 0)__parent__ }");
tryItOut("with(constructor =  '' .*.__proto__.propertyIsEnumerable(\"prop\"))/*for..in*/for(let [__proto__, __count__] = [[1]] in *::*) export *;");
tryItOut("[, , , constructor.__proto__]");
tryItOut("{export __count__;export *; }");
tryItOut("if([11,12,13,14].map) {(prototype); }");
tryItOut("/*for..in*/for(__proto__ in window) ;");
tryItOut("/*infloop*/do break ; while((__noSuchMethod__ =  /* Comment */window));");
tryItOut("with(constructor+= \"\"  >>= ({a1:1})){gc() }");
tryItOut("while((*::*) && 0){function () { *; }  }");
tryItOut("/*for..in*/for(const __count__ in (((new Function(\"return  /x/  % true;\")))((p={}, (p.z =  /x/  >>>= '' )())))) set __iterator__()");
tryItOut("M:if((uneval(1.3 .@ 0.1))) export __noSuchMethod__; else  if ((__count__.constructor-=__count__.__defineSetter__(\"__noSuchMethod__\", (<><x><y/></x></>).watch))) let __parent__ = \x7f, __count__ = <x><y/></x>;");
tryItOut("/*infloop*/\tfor(<x/>; <y><z/></y>; <><x><y/></x></>) prop setter: (new Function(\"const __noSuchMethod__ = function::__proto__;\"))");
tryItOut("(new  /x/g )['prop'] = __count__;");
tryItOut("/*infloop*/do {this.zzz.zzz;(true); const prototype; } while(new (function  constructor () { return 033 } )(++*::*));");
tryItOut("gc()\nexport *;\n");
tryItOut("/*infloop*/for( /* Comment */<x><y/></\tx>;  \"\" ; throw *::*;) break L;");
tryItOut("L: export function::__proto__;");
tryItOut("let ( = new Object(<\f><x><y/></x></>,  \"\" )) { {} }");
tryItOut("/*infloop*/for(__iterator__; yield __parent__ = *; ( /x/g  <=  '' .yoyo( /x/ ))[ '' .valueOf(\"number\")]) {<y><z/></y>\nL: {}break L; }");
tryItOut("throw prop\n\n/*infloop*/for(prop; prototype.prop.__defineSetter__(\"__parent__\", <x/>); undefined >>>= /x/ ) (({a1:1}));\n");
tryItOut("if((this.zzz.zzz))  /x/  else {}");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*/for(const prop = __proto__.__count__ in  / (*::* += 0x99)) this;");
tryItOut("gc()\n");
tryItOut("/*infloop*/L:while(( '' .__count__ = ([<><x><y/></x></>].filter([1,2,3,4].slice)))){}");
tryItOut("yield;\nL:if(__iterator__) { if (prop = 3 :: *--) /*for..in*//* nogeckoex bug 349964 */L: for  each(__proto__ in this) {let __iterator__;return; } else { /x/g ; }}\n");
tryItOut("do return [1]; while((window) && 0);");
tryItOut("/*infloop*/for(\neval(\"prop\\nyield;\", <x/>); [,,]; (<x/>.watch(\"__proto__\", eval))) const function::__count__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__proto__.__iterator__ in function ([y]) { }.throw(__noSuchMethod__)) yield");
tryItOut("{/*infloop*/for(var __proto__; prop; *::*) {let prop = *, __iterator__ = <x><y/></x>; }yield; }");
tryItOut("(__count__)\n/*infloop*/do __iterator__; while(<x><y/></x>);");
tryItOut("");
tryItOut("{}\n{}\n");
tryItOut("/*infloop*/M:for(1e-81; <x><y/></x>; 1.3) { }");
tryItOut("M:with(([,] ?  : yield arguments));");
tryItOut("{if(<x/>) throw []; else  if (yield this) {return undefined; }export *; }");
tryItOut("return;");
tryItOut("if(@foo) {;gc() } else  if (window) <x/>; else ;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(.2 in this) {return prop;__iterator__ }");
tryItOut("if() {return <x><y/></x>; } else  if (__parent__.@foo) {throw undefined; } else {var ;const __count__, __parent__ = <x/>; }");
tryItOut("/*for..in*/for(let prototype in ((([1,2,3,4].slice).call)((window.watch(\"__proto__\", (/a/gi).call))))){yield; }");
tryItOut("let ((({__count__: (*::* = 1.3)}))) { if(((p={}, (p.z =  /x/g )()))) { if (eval(\"let __proto__;\", <x/>)) yield; else window;}//h\n }");
tryItOut("gc()");
tryItOut("with({__count__: prop.__noSuchMethod__ = (<><x><y/></x></>)}){/*for..in*//* nogeckoex bug 349964 */L: for  each(let __noSuchMethod__ in (({ set __iterator__ __count__ (prop) { return ({}) }  }))) {var constructor;var prototype = this, prop =  \"\" ; } }");
tryItOut("with( '' ){(constructor).watch; }\nif(yield *) {export *;yield; } else  if ([<x><y/><\r/x>]) {; } else {}\n");
tryItOut("{/*for..in*/for(const __noSuchMethod__ = __proto__.__parent__ = <x><y/></x> in @foo) {gc() }throw <x><y/></x>; }");
tryItOut("gc()break M;");
tryItOut("(__proto__).applygc()");
tryItOut("/*infloop*/L:for(let prototype = window.@*; <xxx>{__count__}</xxx>; (__proto__.__iterator__)) {}");
tryItOut("\n\n");
tryItOut("/*infloop*/L:do var prototype, __iterator__; while(<y><z/></y>);");
tryItOut("if(__iterator__) { if (undefined) {%yield <y><z/></y>; } else {__parent__, __proto__;export *; }}");
tryItOut("/*for..in*/for(var [constructor, __proto__] = window in yield false | __iterator__ = <x><y/></x>) {/*infloop*/M:do {gc()/*for..in*/for(var prop in *) var __noSuchMethod__ = <><x><y/></x></>, __parent__ = window; } while(yield <y><z/></y>); }");
tryItOut("if((<><x><y/></x></>)[<><x><y/></x></>]) {*::*yield <y><z/></y>; }");
tryItOut("throw @foo;/*infloop*/do {yield; } while( /x/g );");
tryItOut("let constructor; const __count__");
tryItOut("if([__iterator__, ] = ({ __noSuchMethod__: ({ __proto__: [, , ({ __proto__: x::__parent__ })], __proto__: ({ __proto__: __iterator__ }) }) }))  const __proto__; else  if ((({constructor: ([3.141592653589793.isPrototypeOf(prop)].sort('haha'.split)), prototype: __proto__ = prototype }))) if([15,16,17,18].some((new Function(\";\")), (prototype = <><x><y/></x></>))) { if ([this if (false)]) L:if(undefined) { if (<x><y/></x>) {{} }} else (-0); else {break ;return <x><y/></x>; }} else {/*infloop*/for(const __iterator__ = <><x><y/></x></>.__lookupSetter__(\"constructor\"); 'fafafa'.replace(/a/g, eval) !== constructor = __parent__; ({a2:z2})--) /*for..in*//* nogeckoex bug 349964 */L: for  each(let function::__parent__ in window) export prop;switch(--({ set prop __iterator__ (constructor, __parent__)__parent__, prototype = false, __proto__ getter: ({}).watch })) { case <x/>: break;  } }");
tryItOut("do {return;yield; } while(() && 0);");
tryItOut("M:if(this) {throw *; } else ( '' );");
tryItOut("M:if((-1)) {return;yield; } const prototype;");
tryItOut("return function(y) { yield y; {}; yield y; }(<x/>(<x><y/></x>));");
tryItOut("{yield *;/*for..in*/for(const __count__ in ((new Function)(__parent__ = (-0)))) }");
tryItOut("/*infloop*/while(undefined.prop = window)/*infloop*/while(function::__parent__)export *;");
tryItOut("let(__noSuchMethod__, __noSuchMethod__ = (__proto__ = true , ({}).hasOwnProperty(<><x><y/></x></>))) { with({}) { continue L; } ");
tryItOut("{M:if(prop) {return prop;__parent__ = __iterator__; } else  if ( \"\" ) {gc() } else <x><y/></x> }");
tryItOut("/*for..in*/for(let x::constructor.__parent__ in constructor = @foo) constructor = this;");
tryItOut("with({}) (this.zzz.zzz)(prop.(prop.__noSuchMethod__ =  /x/g .propertyIsEnumerable(\"prototype\"))) = __parent__;");
tryItOut("if((new ( '' )(<y><z/></y>))) {var constructor;; } else {*;yield ({a2:z2}); }");
tryItOut("let(__noSuchMethod__ = window) ((function(){return [,,];})());");
tryItOut("let (__iterator__, __noSuchMethod__) { ; }");
tryItOut("L:while((new (function(q) { return q; })()) && 0){export *; }");
tryItOut("L: with({__noSuchMethod__:  '' }){export *; }");
tryItOut("do {yield;throw <><x><y/></x></>; } while(((this.zzz.zzz)) && 0);");
tryItOut("<!--yy-->");
tryItOut("/*infloop*/for(const prop; (uneval(__proto__)); prop.__count__ = undefined %= __iterator__) {3;yield; }");
tryItOut("/*for..in*/M:for(__noSuchMethod__ in ((<x/>)((<><x><y/></x></>)().eval((<y><z/></y>.__count__)) < delete *)))/*infloop*/for(var __parent__;  \"\" .@foo;  /x/ .throw(new (<y><z/></y>)())) throw false == 1e+81;");
tryItOut("/*infloop*/for(var ({ prop: [, , , , ], prototype: ({ prototype: prototype, __proto__: __iterator__ }) }) = __iterator__ = <><x><y/></x></>; #1=({__noSuchMethod__: (__noSuchMethod__ = constructor)}); __count__ = window) {[1,2,3,4].slice }");
tryItOut("/*for..in*/for(const __parent__ in ((Function)(<y><z/></y>)))yield @foo;");
tryItOut("{export *; }");
tryItOut("/*infloop*/while('fafafa'.replace(/a/g, this))/*infloop*/for(var [constructor, , __count__] = <x><y/></x>.(<x/>); undefined + <><x><y/></x></>; (#2=<><x><y/></x></>)) if(*)  /x/ ; else  if ([[1]]) <><x><y/></x></>; else { }");
tryItOut("constructor = __count__;");
