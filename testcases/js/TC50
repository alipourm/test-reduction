
tryItOut("L:if(([,,z1] ? <><x><y/></x></> : <><x><y/></x></>)) {yield *;yield; }");
tryItOut("{yield <x><y/></x>;let (__parent__ = -0, function::__count__) { prototype } }return this\nreturn (-1).__count__ = <x><y/></x>;");
tryItOut("with((this.__defineGetter__(\"prop\", Math.pow)).@*)continue L;");
tryItOut("L:while(((__parent__.__proto__ setter= Math.sin)) && 0){return <x><y/></x>; } const [,];");
tryItOut("*['__proto__'] = prop;");
tryItOut("/*infloop*/M:for(var prop; new (<><x><y/></x></>)([[1]] =  \"\" ); <xxx {__noSuchMethod__}={this} />) const prototype;;");
tryItOut("/*infloop*/while(new  \"\" .yoyo((this.zzz.zzz)))/*for..in*/for(let __noSuchMethod__ = <x><y/></x>.yoyo(3.141592653589793) in  '' ) L:if(3) { if (true) var prop = <x/>;} else {export *;yield; } const __iterator__;");
tryItOut("x::prop = __proto__;");
tryItOut("with({}) { this.zzz.zzz; } ");
tryItOut("*.__lookupSetter__(\"constructor\").prototype = __iterator__;");
tryItOut("if((var constructor = <x><y/></x>, prop = [];(__proto__, __iterator__))) { if (true) {}} else {var prototype = [1], __iterator__; /x/g  }");
tryItOut("/*infloop*/M:for(var __noSuchMethod__ = (function ([y]) { })(); <><x><y/></x></>; [z1]) function(id) { return id };");
tryItOut("/*for..in*/L:for(let __noSuchMethod__ in ((prototype /= 1e4.valueOf(\"number\").@foo.__proto__)(this.__defineSetter__(\"constructor\", function () { (true); } ))))prototype = __iterator__;");
tryItOut("/*for..in*/for(let prototype in ((((__count__ = <x/>)).watch)((<x><y/></x>.valueOf\r(\"number\"))))){return;continue ; }");
tryItOut("if(__proto__ = (uneval(<x/>))) { if (__proto__ = prototype = this.__defineGetter__(\"__count__\", Math.sin)) ;} else \n");
tryItOut("{(constructor);arguments; }");
tryItOut("M:if(__proto__) {(((new (({}).__lookupGetter__)((<x/>.yoyo(function ([y]) { })))))); } else  if (__parent__ = (__noSuchMethod__)) L: throw <><x><y/></x></>; else {var prop;function (__noSuchMethod__, __count__) { yield prototype } ; }");
tryItOut("/*for..in*/L:for(const (null)(__count__) in #1#) export *;");
tryItOut("L: yield;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(const constructor in true) {(Function).callthrow case 4: break; case 2: break; break; break; constructor =  /x/g , __count__ =  '' ;; }");
tryItOut("if(__count__ = <><x><y/></x></>) gc()");
tryItOut("(<x><y/></x>);yield <><x><y/></x></>;");
tryItOut("{L:if(<y><z/></y>) const delete = *, constructor; else prototype = <><x><y/></x></>, constructor;; }");
tryItOut("/*for..in*/for(let __count__ in ([1,,].yoyo([1,,]))) {gc() }");
tryItOut("/*for..in*/for(var __iterator__ in ((eval)(\n<x><y/></x>)))return;");
tryItOut("return; const prototype; const __count__;");
tryItOut("if(({__noSuchMethod__: 3})) {gc() } else {{}L: {__parent__ = window, __count__;return; } }");
tryItOut("do {gc()yield prototype } while(((1 for (x in []))()) && 0)\n(((yield 3).yoyo(__proto__ = <><x><y/></x></>))())");
tryItOut("with({__parent__:  /* Comment */((this.__defineSetter__(\"__iterator__\", (1 for (x in [])))).throw((constructor = <y><z/></y>)))})let (({ prototype: __proto__ }) = ( /x/g )(*)) { let prototype = constructor, prototype = this; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var constructor in false) {__proto__ = *::*, __proto__ =  \"\" ;yield <x/>; }");
tryItOut("/*for..in*/M:for(<x/>(@foo\t) in window) {return false; }");
tryItOut("let (__proto__, prototype) { {export constructor;__parent__ =  \"\" ; } }");
tryItOut("if((__count__ =  '' )) yield <><x><y/></x></>; else  if (this) {export *\n } else {throw null;var __parent__, __parent__; }");
tryItOut("/*infloop*/M:for(var prop = #1#; <><x><y/\t></x></>; window) {{}<x><y/></x><ccc:ddd></ccc:ddd> }");
tryItOut("yield;");
tryItOut("if(<x/>) { if (__count__.<x><y/></x> = this\n) M:if(undefined) yield; else  if ( '' ) {;throw ; } else {<><x><y/></x></> }}");
tryItOut("switch(__iterator__) { default: throw __iterator__;break; case <><x><y/></x></>: break; gc()break; let __proto__ =  /x/g , constructor;break; case 7: let constructor = 3;break; case [,,]: {}case [1]: throw ({a2:z2});break; case  /x/g : prototype = *::*;break; case 3: continue L;case .2: return; }\n");
tryItOut("L:while((<y><z/></y>) && 0){if(*) {break L;function (prop) { return <><x><y/></x></> }  } else {yield *::*; }[1,2,3,4].slice }");
tryItOut("return ({set: @foo })\f;");
tryItOut("this.zzz.zzz;");
tryItOut("{gc()const __proto__, __parent__ = <x><y/></x>\nlet __proto__ = <>{return -3/0; }</>, __noSuchMethod__ =  /x/g ; }");
tryItOut("/*infloop*/do {export __parent__; } while((yield this.__count__+=(new .2(__proto__, 1e4)) %= ((this.__defineSetter__(\"prop\", gc)) .. (__noSuchMethod__ = <\f><x><y/></x></>))));");
tryItOut("switch(__iterator__ instanceof eval(\"__parent__\", <><x><y/></x></>)) { default: case (new /a/gi(undefined)): case ~null: switch(Exception(<x/>, [z1,,])) { case 2: (__iterator__).watchdefault:  }(new Function).applybreak;  }");
tryItOut("");
tryItOut("<xxx {prop}={(false([1]))} />");
tryItOut("/*for..in*/for(__iterator__ in  '' ) {throw  \"\" ;{ } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const prop in !*) {}");
tryItOut("with('fafafa'.replace(/a/g, (function  prop (__noSuchMethod__, prototype) { yield \f<><xxx {__proto__}={(function ([y]) { })()} /></> } )))/*infloop*/while((3.hasOwnProperty(\"__proto__\"))){let (__proto__ =  '' , __count__ = <><x><y/></x></>) { throw  \"\" ; }return  '' ; }");
tryItOut("if( \"\"  ? <x><y/></x> : prop) { if (new (this)(true, <x><y/></x>)) /a/gi else {(function ([y]) { })() }} const __count__;");
tryItOut("for(let y in [5,6,7,8]) yield eval();");
tryItOut("/*for..in*/M:for(var ([11,12,13,14].sort)(function  prop () { return <x><y/></x> } ) in __count__.constructor = constructor++) __parent__ getter: constructor");
tryItOut("for(let y in []);\nconst prop = 1e81;\n");
tryItOut("/*infloop*/while(this.zzz.zzz.__defineGetter__(\"constructor\", (1 for (x in []))))return <x/>;");
tryItOut("try { yield *::*; } catch(prototype) { var prototype, __parent__; } \n");
tryItOut("{export *;return; }\n/a/gi\n");
tryItOut("let (__count__ = this, prototype) { if( /x/g ) { if (__noSuchMethod__) {continue ;yield this; }} else return; }");
tryItOut("while((function (__proto__) { yield <x><y/></x> } .@foo) && 0)export *;");
tryItOut("1e4\n");
tryItOut("/*infloop*/while(this)<x/>;throw window;export __iterator__;");
tryItOut("L:if(*::*) {yield; } else  if (((p={}, (p.z = <><x><y/></x></>)()))) (false);");
tryItOut("with({__parent__:  >>= ()}){*::*;export *; }\n{let (__parent__) { ; } }");
tryItOut("L:if(<x/>) { if (@foo) {{}(true); } else L: {yield;function  __count__ (__iterator__, __count__) { yield 5.0000000000000000000000 }  }}");
tryItOut("with({__count__: constructor.__iterator__.propertyIsEnumerable(\"__proto__\")}){/*infloop*/L:while(__count__){}const __noSuchMethod__ = *::*, __count__; }");
tryItOut("if(<><x><y/></x></>.prop) {yield; } else  if (#1#) {yield; } else {export *; }");
tryItOut("/*for..in*/M:for(var __parent__ = (this.zzz.zzz)[Iterator(<y><z/></y>.__defineSetter__(\"__proto__\", this)).propertyIsEnumerable(\"prototype\")] in (({__parent__: <y><z/></y> }))) (__noSuchMethod__-= /x/g );");
tryItOut("break ");
tryItOut("switch(__count__) { default: export constructor;break; case 4: break; break;  }");
tryItOut("L: {export *; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L:\f for  each(const prototype(3.__lookupGetter__(\"constructor\")) in 1e+81 instanceof null) {(__iterator__); }");
tryItOut("/*infloop*/do prop while(<x><y/></x>);");
tryItOut("throw StopIteration;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let new (undefined)( /x/ ).__iterator__ in * && __parent__--) {{gc() } }");
tryItOut("let(prototype, [__iterator__, ({ __parent__: __count__, constructor: prop }), __count__, , ({ __count__: prop })]) ((function(){throw StopIteration;})()); const __proto__;");
tryItOut("/*for..in*/for(var [prop, prop] = continue ; in @foo) {{} }");
tryItOut("switch(({prototype setter: function () { return [[1]] } , __count__:  /x/g  })) { case 8:  }");
tryItOut("{ }");
tryItOut("for(let y in []);");
tryItOut("L:if(new <><x><y/></x></>( '' ).eval(null)) {yield *::*; } else const prototype, constructor;");
tryItOut("return __iterator__;");
tryItOut("{const prototype = new ((Exception(null,  \"\" )))(__noSuchMethod__ = __count__,  \"\" ), __count__; }");
tryItOut("L:if( /* Comment */<y><z/></y>) { if ((new ([z1,,])(getter, *))) {return; } else {return <><x><y/></x></>; }}");
tryItOut("if(this.__defineGetter__(\"prop\", <><x><y/></x></>[<x/>]++.unwatch(\"__count__\"))) return; else  if ([<><x><y/></x></> for (__parent__ in 3.141592653589793)].eval(new (*::*)(function(id) { return id }, this))) /*for..in*//* nogeckoex bug 349964 */ for  each(let __parent__ in <><x><y/></x></>) (this); else throw StopIteration;");
tryItOut("prototype = __parent__;");
tryItOut("{;export prototype; }");
tryItOut("with((({ set __proto__(constructor, constructor) { yield ({a1:1}) }  }))){continue M; }");
tryItOut("{for(let y in [5,6,7,8]) return; }");
tryItOut("/*infloop*/L:for((window.__defineGetter__(\"__iterator__\", ({}).__lookupGetter__)); ([11,12,13,14].sort); (constructor =  '' )) {[,,z1]; }");
tryItOut("if(__iterator__-=*::* >>> (uneval(this)).isPrototypeOf( '' )) { if (false.prototype = (uneval( /x/ ))) {/*for..in*/for(const __noSuchMethod__ in (((0x99).watch)(this.__defineGetter__(\"prop\", ({}).hasOwnProperty)))){;(window); } }} else ;");
tryItOut("if(<><x><y/></x></>) {<x/>;yield 0/0; } else {; }");
tryItOut("gc()");
tryItOut("M:if(<x><y/></x> .@*:: <x><y/></x>) ; else  if (window &= <x><y/></x>) {}");
tryItOut("/*for..in*/for(let prototype in ((Function)((constructor = (function ([y]) { })())))){this.zzz.zzz; }");
tryItOut("/*infloop*/while(function::prop){__noSuchMethod__ =  '' ; }");
tryItOut("/*infloop*/M:for(const __proto__; 1.3; break L) (<x><y/></x>);");
tryItOut("with((let (get = this / prop.prop setter= 'haha'.split, ({ __iterator__: __iterator__ })) <{prototype}><!--yy--></{prototype}>.(this.zzz.zzz)))break ;");
tryItOut("for(let y in []);");
tryItOut("/*infloop*/for(const __iterator__; (uneval(<x/>)).eval(([1,,].__parent__\n)); (true)(<x/> | 1.3).__parent__) {\tlet (constructor = *) { gc() }export prototype; }");
tryItOut("if(true) {({}).hasOwnPropertyconstructor; } else  if (__parent__) return <x/>;");
tryItOut("/*infloop*/for(let __noSuchMethod__; 1e+81.valueOf(\"number\"); ((<x><y/></x>(set, @foo)).__defineGetter__(\"prototype\", (( /x/g ).watch).call))) if(( /x/ .yoyo(typeof undefined))) { if (({ get: __count__, __iterator__: __iterator__ }) = [__count__, , __iterator__, , __count__]) break ;} else ;");
tryItOut("do {if(({constructor:  '' , constructor: {} })) {;window; } else const __parent__ = __parent__, __count__;M:if(this) {function  constructor (__noSuchMethod__, __count__) { var prototype, __parent__ = *; } gc() } else  if (<x/>) break L; } while((((__count__.get)() for each (__proto__ in prop.__parent__ = *) if (<><x><y/></x></>))) && 0);");
tryItOut("if(window) return; else  if (<x><y/></x>) (033).__defineSetter__ else export *;");
tryItOut("var __parent__, __count__\n");
tryItOut("L:if(!<x><y/></x>.eval(<><x><y/></x></>)) prop; else  if (( /x/g  >>>=<><x><y/></x></>)) {{} } else /*for..in*//* nogeckoex bug 349964 */ for  each(var __noSuchMethod__ in <><x><y/></x></>) {* }");
tryItOut("{L: export *; } const new Math.pow(new (function\t (__iterator__)<x><y/></x>)((this.zzz.zzz), (-1)))[new <zzz>let __parent__;</zzz>];");
tryItOut("if((uneval(false.isPrototypeOf(3/0)))) { if ((++<><x><y/></x></> .@*:: prop ? [,,] :  /x/ )) prototype, prototype = arguments;} else {{const __noSuchMethod__, __noSuchMethod__ = <x><y/></x>; }if(true) { if ([,]) {yield 0x99; } else {(<><x><y/></x></>);__parent__ = <x><y/></x>//h\n; }} }");
tryItOut("/*for..in*/L:for((__noSuchMethod__(<>\t<x><y/></x></>)) in ((yield ((uneval(null)))))) /*for..in*/<x><y/></x>, <x/>");
tryItOut("\n");
tryItOut("/*infloop*/for(var __parent__; arguments | this; <x/>) {return;function (__noSuchMethod__) { break M;\f }  }");
tryItOut("if( '' ) { if ((__noSuchMethod__ = __count__ .@x:: <x><y/></x> ? <>(new Array())</> :  ''  :: ((0.1)({gc() }, undefined)) - __noSuchMethod__) ? <> </>.(((yield <y><z/></y>))) : let (({ prop: __count__, constructor: __parent__ }) =  /* Comment */window, prototype = 1.2e3) 1e81 :: __proto__) #1#;} else {switch(( /x/g  >= @foo)) { default: /*infloop*/M:for(__proto__ = __iterator__; function ([y]) { }; null) {( /x/ ); }break; case __proto__: break; with({__parent__: <x><y/></x>})\tcase 0: default: case 3: /*infloop*/while(<><x><y/></x></>){*;\tthrow window; }break;  }{gc()let __parent__; } }");
tryItOut("{} const __iterator__;");
tryItOut("switch(null) { case 8: constructor; }");
tryItOut("for(let y in []);");
tryItOut("let(__iterator__, __proto__) { let __iterator__ = window;");
tryItOut("/*infloop*/while( /x/g  <= [<><x>\r<y/></x></>]){M:if(<><x><y/></x></>) {; } else export *; }");
tryItOut("/*for..in*/for(var __iterator__ in __proto__) {break L;var prototype; }");
tryItOut("while((this) && 0)let constructor;");
tryItOut("L:if(Exception([11,12,13,14].some)) yield; else  if (1.2e3) /*infloop*/for(const __count__ = *::*; this; <><x><y/></x></>) {} else export *;");
tryItOut("");
tryItOut("{yield; }");
tryItOut("/*infloop*/for(let prop; this.__defineSetter__(\"__count__\", ([__parent__])); (yield null.isPrototypeOf(<y><z/></y>) |= <y><z/></y>[*::*])) /*for..in*/for(let <x><y/></x> in  '' ) {throw 0; }");
tryItOut("/*infloop*/for(const __proto__ = [11,12,13,14].sort[<y><z/></y> + false]; <>window, this</>.yoyo(false) ? @foo : (prototype); <x><y/></x> ? <x><y/></x> : [,]) {return <><x><y/></x></>;return prop; }");
tryItOut("/*infloop*/for(let y in []);");
tryItOut("/*for..in*/for([__parent__, prop] = new #1#(__proto__|=undefined, [[]]).unwatch(\"__parent__\") in yield <x><\ty/></x>) {L: if(__noSuchMethod__) { if (<><x><y/></x></>) throw <y><z/></y>;} else {export __proto__;const __proto__, each; } }");
tryItOut("/*for..in*/M:for(let __parent__ in __iterator__) {if( /x/g ) { if (null) {{}return; }} else {3 } }");
tryItOut("{gc() }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prop in *::*) {{} }");
tryItOut("/*for..in*/for(__noSuchMethod__ in [[]]) {<x><y\r/></x>;let __iterator__; }");
tryItOut("let ([]) { gc() }");
tryItOut("L:if(__parent__) {__parent__, __noSuchMethod__ = <x><y/></x>; }");
tryItOut("{return [,,z1] }");
tryItOut("yield");
tryItOut("M:if((({__count__: 3/0}))) {for(let y in []); }");
tryItOut("[[, , ({ __count__: ({ __parent__: __parent__ }) })], __proto__, ({ __noSuchMethod__: ({  { return this.__lookupSetter__(\"prop\") } : ({ __parent__: ({ __noSuchMethod__: ({ __count__: prototype }) }), __parent__: ({ __count__: prototype }) }), __iterator__: __proto__ }), prototype: 1.2e3 - 0/0.prototype })]");
tryItOut("/*for..in*/for(__iterator__ in (__count__ instanceof 0/0)) /*for..in*/for(let __parent__ = ((<x><y/></x> if (window))) in 3.141592653589793) {break ; }");
tryItOut("(prop) = constructor;");
tryItOut("yield 0");
tryItOut("with({}) { constructor = __iterator__; } ");
tryItOut("{1e+81; }");
tryItOut("if(<ccc:ddd><!--yy--></ccc:ddd>.__noSuchMethod__ = (prototype = prototype)--) { if (*::*) {{} }} else yield  /x/ ;");
tryItOut("while((#1# | undefined) && 0)( /x/ );");
tryItOut("/*infloop*/for(-3/0; <x><y/></x>;  /x/g ) {var __noSuchMethod__ = 0/0;; }");
tryItOut("if((function ([y]) { })().valueOf(\"number\")) const __noSuchMethod__;");
tryItOut("yield null;");
tryItOut("/*infloop*/while(new  /x/g (window, 1.3)){{} }");
tryItOut("{<><x><y/></x></>;Function }");
tryItOut("/*for..in*/for(__count__ in  /x/g ) {yield window; }");
tryItOut("throw StopIteration;");
tryItOut("return;");
tryItOut("/*for..in*/M:for(function::prototype = function(y) { yield y; default: (prototype);; yield y; } in 0x99) {false;Math.sin }");
tryItOut("/*infloop*/do let prototype = (-0) while(@foo .@*:: (undefined.__count__));");
tryItOut("/*for..in*/M:for([constructor, __noSuchMethod__] = *::*.unwatch(\"__noSuchMethod__\")[(function (prototype, __count__) { return  /x/  } )(#1#, undefined)] in constructor) Math.sin");
tryItOut("if(window) { if (\n[[1]] >= <><x><y/></x></>++) (window); else /*infloop*/for(const __iterator__ = ({__noSuchMethod__: #3={a:#3#}, __noSuchMethod__ getter: Function }); let (constructor = true, __proto__ = this) ({a2:z2});  /x/g ) }");
tryItOut("#2=[0] const __iterator__;");
tryItOut("do {{continue ;({}); } } while((( '' .eval(<y><z/></y>))) && 0);");
tryItOut("/*for..in*/for(var __proto__(prop = <><x><y/></x></>) in ((((<x><y/></x>.__defineSetter__(\"prop\", eval)).propertyIsEnumerable(\"prototype\")).watch)((new prototype = __noSuchMethod__;((~__proto__))))))/*infloop*/M:for(let let;  \"\" ; [,,z1]) {throw  /x/ ; }");
tryItOut("/*for..in*/L:for(@foo['__parent__'] in (((/a/gi).call)(prop.__defineGetter__(\"prop\", [1,2,3,4].map))))export *;");
tryItOut("if(__iterator__.__noSuchMethod__.__lookupSetter__(\"__parent__\")) ; else  if (\n<><x><y/></x></> <<= (__noSuchMethod__.valueOf(\"number\"))) {break ;var __count__ = , __count__ = <><x><y/></x></>; } else return;");
tryItOut("with((let (constructor, prototype) <x><y/></x>)){/*infloop*/while(__parent__){return; } }");
tryItOut("do let (__count__, __proto__ = [,,z1]) { {} } while(( /x/ ) && 0);");
tryItOut("for(let y in []);");
tryItOut("throw window;");
tryItOut("{yield *::*;; }");
tryItOut("gc()\n");
tryItOut("/*infloop*/L:while(Object()){let __count__, __parent__ = <x/>; }");
tryItOut("with({__parent__: (<><x><y/></x></> for each (prop in <y><z/></y>))})do {} while((<x/>) && 0);");
tryItOut("do {/*infloop*/while(undefined){__count__; }/*infloop*/for((((<x/>).__defineSetter__).apply).call(arguments, ); function  __noSuchMethod__ (__iterator__, __count__)4..prop((({prop: <x/>})) ^ <x><y/></x>.(<x><y/></x>), [,][__count__]); [window]) let __parent__; } while((eval(\"constructor\", <x/>) ? <><x><y/></x></>.watch(\"__proto__\", (return __iterator__;).__defineSetter__) : #1=[#1#]) && 0);");
tryItOut("/*infloop*/M:for(const ({ constructor: prop, constructor: ({ __noSuchMethod__: __iterator__, __iterator__: ({ prototype: [, __proto__, (prototype), __noSuchMethod__: prop }), ] }) }) }) = ((\n(Math.sin)())); 0x99 &=  /x/ .yoyo( /* Comment */@foo @ false\n); eval(\"(__count__ = undefined)\", (* && true.__count__))) L: {new Function }");
tryItOut("/*for..in*/for(let __parent__ = __parent__ = [[]] in 033) yield;");
tryItOut("/*infloop*/for(+; [(eval.propertyIsEnumerable(\"__count__\"))].some(gc)[*::*]; (({prototype: <x><y/></x> > [,,]}))[(true.__defineSetter__(\"__iterator__\", [1,2,3,4].slice))].eval())  { return (__iterator__.isPrototypeOf((-1))) } ");
tryItOut("let (__count__, [({ __parent__: ({ prototype: __parent__, prototype: prop }), prototype: __proto__ }), ({ prop: ({ __parent__: prototype }), \t__iterator__: ({ __count__: prop }) }), , ({ __noSuchMethod__: __proto__, [, , , ]: ({ __noSuchMethod__: __count__, __parent__: prop }) })]) { return; }");
tryItOut("switch(<x/>.hasOwnProperty(\"<><x><y/></x></>\")) { default:  }");
tryItOut("/*infloop*/do return this.__defineGetter__(\"__count__\", <y><z/></y>); while(([1,2,3,4].slice)(0.1.unwatch(\"prop\")) -= new ((new (1e-81)()))((true.__proto__)));");
tryItOut("/*infloop*/while((--function ([y]) { })){var __iterator__; }");
tryItOut("/*infloop*/L:do {yield\n } while(new Boolean());");
tryItOut("");
tryItOut("let (prop = window, __proto__) { return; }");
tryItOut("let(function::__iterator__ = __iterator__) { continue ;");
tryItOut("var __proto__ = window, prototype = ({__noSuchMethod__ getter: function () { ; } , prop: __proto__ = true });");
tryItOut("__noSuchMethod__ = __parent__;");
tryItOut("M:if(<><x><y/></x></>) {gc()\nlet __proto__ = *::*; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(var __count__ in null) {let __count__ = prop; }/*for..in*/L:for(__iterator__ in ((new Function)(<><x><y/></x></> - [,].isPrototypeOf((<x><y/></x> && this))))){; }");
tryItOut("L: with(let (prototype) false){yield 5.0000000000000000000000;break ; }");
tryItOut("/*infloop*/do {{} } while(eval(\"yield <x/>;\", false))");
tryItOut("let __parent__ = <x><y/></x>; const __parent__;");
tryItOut("return");
tryItOut("/*infloop*/do {if((<y><z/></y>)()) gc() } while(new ((@foo ? arguments :  /x/g ))());");
tryItOut("/*for..in*/for(__parent__ = ((-0))(*::*) in __parent__) ");
tryItOut("/*infloop*/for(__noSuchMethod__; <x/>; prototype) ");
tryItOut("\n[1,2,3,4].slice\n");
tryItOut("if((-this)) return; else  if (<x><y/></x>) return;");
tryItOut("prototype = __count__;");
tryItOut("if(*) {var prototype, prototype; const prop;{return; }\n } else  if ([11,12,13,14].sort .@x:: null) {yield this;{} }");
tryItOut("if((* / *)) { if (true) __proto__; else yield window;}");
tryItOut("/*infloop*/do {L: {export __parent__;(1.3); }\f@foo; } while(@foo.unwatch(\"__proto__\").__parent__);");
tryItOut("with(undefined)(this);");
tryItOut("/*infloop*/for(<><x><y/></x></>.__iterator__ = <><x><y/></x></>; (__proto__ = 4.); eval(\" /x/g \", <x><y/></x>)) ( '' );");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__ in 0.1) yield;gc()");
tryItOut("if([15,16,17,18].some((new Function(\"var constructor = [,,];\")), (<><x><y/></x></>.__lookupSetter__(\"prototype\")))) {yield;yield <><x><y/></x></>; } else  if (constructor = __iterator__.@foo) {export __noSuchMethod__; } else {throw <x><y/></x>;; }");
tryItOut("if(<x><y/></x> ?  \"\"  : <y><z/></y>.throw(__proto__ = <><x><y/></x></>)) __proto__: <><x><y/></x></>");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __noSuchMethod__ in (uneval(0x99)) @ (p={}, (p.z =  /x/g )())) {var __iterator__ = __parent__, __iterator__ = constructor;if(#0=[<x><y/></x>]) __proto__ = null; else  if (false) {var constructor, __count__ = <x><y/></x>;(1e4); } }");
