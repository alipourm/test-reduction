tryItOut("while((new (*::*)( /x/g )) && 0){yield [,]; }");
tryItOut("if( /x/g .__defineGetter__(\"__noSuchMethod__\", (new Function(\"(<x><y/></x>).__defineSetter__\")))) { if (*::*.__lookupSetter__(\"prop\")) {export *; } else {const __parent__, __count__ = *; }}\n");
tryItOut("while((*) && 0){throw constructor;throw <><x><y/></x>\f</>; }");
tryItOut("__noSuchMethod__ = __proto__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __count__ in __count__) {export *; }");
tryItOut("if(-1) break ;");
tryItOut("__iterator__.constructor = prototype;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(__iterator__ in (uneval(<><x><y/></x></>)).eval(<y><z/></y>)) 'fafafa'.replace(/a/g, [1,2,3,4].map);");
tryItOut("let (<><x><y/></x></> = false) { <x><y/></x>; }\n/*for..in*/for(const prop in <><//h\nx><y/></x></>) yield;\n");
tryItOut("let (__iterator__, __noSuchMethod__ = ([1,2,3,4].slice)) { yield <x><y/></x>; }");
tryItOut("L:if( \"\" ) { if ( /x/g ) {return; }} else ;");
tryItOut("/*infloop*/M:for(-0; (*::*(this.__defineGetter__(\"constructor\", function  __parent__ (prop)__parent__)).isPrototypeOf(__proto__)); __count__ = [15,16,17,18].filter((*::*).__defineSetter__, 0.1)) yield;");
tryItOut("with(<x><y/></x>)break ;");
tryItOut("/*for..in*/for(var __count__ = <><x><y/></x></> in *::*) ({})");
tryItOut("/*infloop*/while((__iterator__.((<><x><y/></x></>.prop.isPrototypeOf((({__count__: [] }))))))){continue L;__iterator__ = 0.1\nyield; }");
tryItOut("if(this) { if (((get = prototype) >>> __parent__.constructor = [[]].@*)) {yield; } else {{} }}");
tryItOut("/*infloop*/do function(y) { yield y; *;; yield y; } while( /x/g .yoyo(<y><z/></y>));");
tryItOut("/*infloop*/for(const prototype = __noSuchMethod__ @ try { gc() } finally {  } ; arguments; this.__defineSetter__(\"__count__\", (-1)).eval(__iterator__.prop) << ([[1]])( \"\" )) {yield -1; }");
tryItOut("/*infloop*/while(<><x><y/></x></>){(4.);function () { yield <x/> }  }");
tryItOut("/*infloop*/while((@foo)([window++ for each (constructor in <><x><y/></x></>)], new ()()))switch(gc()) { default: throw <x/>;break;  }");
tryItOut("/*infloop*/L:while(null.watch(\"__noSuchMethod__\", function(q) { return q; }))return;");
tryItOut("window\nL: {yield;export *; }");
tryItOut("/*for..in*/for(__count__ =  /x/g .throw(<><bbb xmlns=\"<x><y/></x>\"><ccc:ddd><!--yy--></ccc:ddd></bbb></>) in arguments) /*infloop*/M:for(const __noSuchMethod__ = undefined;  /x/ ;  '' ) export *; const constructor;");
tryItOut("let __proto__, __iterator__\n");
tryItOut("/*for..in*/M:for(const (#2=({__noSuchMethod__: <><xxx {__noSuchMethod__}={{}} /></>}))(new __parent__()) in ((((__parent__)%=[,,]).watch)(<><bbb xmlns=\" /* Comment */<x><y/></x> in (undefined.__lookupSetter__(\"__iterator__\")) ? window % <><x><y/></x></> :  \"\" .__defineGetter__(\"__proto__\", eval)\"><ccc:ddd></ccc:ddd></bbb></>))){/*infloop*/for(const __count__ =  /x/g ; <><x><y/></x></>; <y><z/></y>) let __count__ =  '' , prototype;; }");
tryItOut("yield;<><x><y/></x></>;\n");
tryItOut("if(*) {} else  if (.2.hasOwnProperty(\"constructor\")) {var __iterator__, __parent__;constructor = undefined, __proto__ = <><x><y/></x></>; }");
tryItOut("with({__count__: (<x><y/></x>(*::*))});");
tryItOut("M:if(({ get __proto__ __parent__ () { return this }  })) {switch(0x99) { case 2:  }L:if(prototype.constructor setter= /a/gi) { if ( '' ) {export __parent__;export *; } else __count__} } else {continue L; }");
tryItOut("/*for..in*/for(const prop in #3={a:#3#}) gc()");
tryItOut("if(<x><y/></x> @ *::*) 0x99; else ;");
tryItOut("L:switch((__proto__.__lookupGetter__(\"constructor\"))) { case <x><y/></x>\n: [[1]] }");
tryItOut("if(new new Function()) {throw [[1]];; } else  if (prototype.__count__) const prop = prop, __proto__; else {}");
tryItOut("if(( \"\"  for each (constructor in  '' ))) { if (prototype = constructor) {return;gc() }} else {gcexport *; }");
tryItOut("this.zzz.zzz;");
tryItOut("yield #0=1.3 <=  \"\" ;");
tryItOut("do var __proto__; while((window) && 0);");
tryItOut("/*for..in*/for(const [ in ((new Function)(<><x><y/></x></>))){Math.powcontinue ; }");
tryItOut("/*infloop*/case 2: ");
tryItOut("with({prop: <{__count__}> </{__count__}>})var __proto__; const constructor;");
tryItOut("/*infloop*/for( /x/g ; __count__ = yield  /x/g ; <x><y/></x>) {continue M;<><x><y/></x></> }");
tryItOut("/*infloop*/while(<><bbb xmlns:ccc=\"@foo\"><ccc:eee></ccc:eee></bbb></>)return __iterator__;");
tryItOut("if(<employee id=\"1\"><name>Joe</name><age>20</age></employee>) {constructor = [];\fexport prototype; } else  if ([(prop = false)].some(({}).hasOwnProperty)) return; else let prop;");
tryItOut("export constructor\n");
tryItOut("if(4..__lookupGetter__(\"prototype\")) let(__noSuchMethod__, constructor = __parent__) ((function(){})()); else  if ((__iterator__.constructor%=prop.__iterator__ = 0.1)) (false |= 1.3)");
tryItOut("constructor = __proto__;");
tryItOut("with({__noSuchMethod__: (-1.2e3) > <x/>.@foo}){; }");
tryItOut("if(window.throw(null)) { if (yield \r \"\"  in (function::__noSuchMethod__ = <><x><y/></x></>)) ( /x/g ); else throw <><x><y/></x></>;}");
tryItOut("/*for..in*/for(var __noSuchMethod__ in ((function () { return prototype = __noSuchMethod__ } )((((<><x><y/></x></>)(constructor,  \"\" )) === (({ __proto__: __iterator__, prototype: __noSuchMethod__ }) = ({ set: __count__, constructor: __parent__, __proto__ })))))){;return 033; }");
tryItOut("/*infloop*/while(<><zzz>(this.zzz.zzz)</zzz></>)M:if(((true if (<x><y/></x>)).valueOf(\"number\"))) {{} } else (<><x><y/></x></>);");
tryItOut("return;");
tryItOut("with({}) { let(prop = 0x99(prototype, <><x><y/></x></>), [, ({ __parent__: each, set: __noSuchMethod__ }), ({ __iterator__: prototype, constructor: __parent__ }), , ] = <x><y/></x> &= undefined ? <x><y/></x>.(<x/>) : ((new Function(\"export *;\")))([[]], @foo)) { with({}) { try { gc() } finally { try { yield; } finally {  }  }  }  } ");
tryItOut("let(__count__, constructor) ((function(){with({}) constructor = prototype;})());");
tryItOut("do while(((Math.pow).call(null, <><x><y/></x></>)) && 0){throw __parent__; } while((__parent__ | -3/0.isPrototypeOf(prototype = (function ([y]) { })())) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const __proto__ in export *) {function  constructor () { return <><x><y/></x></> }  }");
tryItOut("return <><x><y/></x></>;");
tryItOut("__noSuchMethod__ = prototype;");
tryItOut("L:do {let __iterator__, prototype =  /x/g ;export *; } while((prototype = (prop.(__iterator__ = ({a1:1})))) && 0);");
tryItOut("with({}) { let(__count__) { throw prototype; } ");
tryItOut("var G = {}\n");
tryItOut("try { let(__iterator__) ((function(){__parent__ = __proto__;})()); } catch(constructor if 'fafafa'.replace(/a/g, Math.sin)) { with({}) { __proto__ = __proto__; }  } ");
tryItOut("const __proto__ = <x/>; const __noSuchMethod__;");
tryItOut("/*for..in*/for(const constructor = 1e4 in undefined) return this;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let <x><y/></x>['__iterator__'] in <x><y/></x>.throw(@foo)) {/*for..in*//* nogeckoex bug 349964 */ for  each(__count__ in true) {<y><z/></y>; } }");
tryItOut("switch(*::* =  /x/g ) { case <><x><y/></x>\t</>.__iterator__: case null: [z1,,];break;  }");
tryItOut("throw StopIteration;");
tryItOut("L:if(new (__iterator__.__count__ getter= new Function)((__noSuchMethod__ = <><x><y/></x></>))) return <x><y/></x>; else  if (eval(\"throw <y><z/></y>;\", __parent__)) {var prop = <y><z/></y>, constructor = <x><y/></x>;const __proto__; } else __noSuchMethod__");
tryItOut("L: {var __iterator__ = (-1); }");
tryItOut("if(((function ()\n())())) { if (eval(\"(window && <><x><y/></x></>)\", constructor = <><x><y/></x></>)) ({});} else {export *;/*infloop*/L:do /*infloop*/for( '' ; *; <><x><y/></x></>) var constructor; while((p={}, (p.z = <x><y/></x>)())); }");
tryItOut(";");
tryItOut("L:while(((<x><y/></x>\f.yoyo(<x>/*\n*/<y/></x>))) && 0){throw <x/>; } const prop;");
tryItOut("/*infloop*/while((this / -0)){(null); }");
tryItOut("with(( /* Comment */<x><y/></x> >> __count__))return;");
tryItOut("export *;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __count__ in Array(<x/>)) {/*infloop*/L:do {; } while((new Date(__iterator__))); }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(__count__ in __noSuchMethod__) {gc() }");
tryItOut("export *;");
tryItOut("/*infloop*/for('fafafa'.replace(/a/g, function(q) { return q; }); ({ __noSuchMethod__: ({ __parent__: ({ __proto__: __noSuchMethod__ }) }), __noSuchMethod__: ({ prototype: ({ each: constructor, prop: __count__ }) }) }), ({ __parent__: [, , setter, ] }) % ( /x/ ); prototype = window ?  \"\"  : [[,,z1] for each (__noSuchMethod__ in  /x/g )]) ");
tryItOut("/*infloop*/L:for(*::*; <><x><y/></x></>; <><x><y/></x></>) {; }");
tryItOut("do export *; while(( /x/ ) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let prop in 0x99) Function");
tryItOut("if(([11,12,13,14].filter(this .@ <x><y/></x>)))  else {throw  '' ; }");
tryItOut("M:if(this.unwatch(\"constructor\")) { if ( /x/g ) #1=[#1#];} else {const constructor = __iterator__, __noSuchMethod__; }");
tryItOut("/*for..in*/for(var __count__(constructor ? <x><y/></x> :  '' ) in ((new Function)(~@foo ? window : true))){prototype = function(id) { return id }, __noSuchMethod__;; }");
tryItOut("L:if((arguments)[<x/>]) export constructor; else yield;");
tryItOut("return;");
tryItOut("/*infloop*/do continue L; while(true);");
tryItOut("if() {const constructor = @foo, __count__;export constructor; } else  if (typeof (<x><y/></x>)[<x/>]) {/*for..in*/for(let constructor in this) {{}; }yield <><x><y/></x></>; }");
tryItOut("if((__count__ =  /x/ )) {return arguments;L:if((({__count__: function(id) { return id } })(__count__.__iterator__ setter= ({}).hasOwnProperty)))  constructor{ if () {yield this; }}export __count__; } const constructor;");
tryItOut("__parent__ = constructor;");
tryItOut("{throw <><x><y/></x></>;let __count__ = prop, prototype; }\n\n");
tryItOut("/*infloop*/L:for(<x><y/></x> in constructor.isPrototypeOf(((gc) >= 'fafafa'.replace(/a/g, gc))); (__proto__ = <><x><y/></x></>); (<employee id=\"1\"><name>Joe</name><age>20</age></employee>.([15,16,17,18].filter(function (prototype, __proto__) { return function(id) { return id } } , null.propertyIsEnumerable(\"__noSuchMethod__\"))))) {return;function (); }");
tryItOut("{gc()switch(((function (__noSuchMethod__, __iterator__) { break \t; } ).call(*::*,  '' ))) { default: gc()break; case 9: {yield; }break; break; (<x><y/></x>);break; case <x/>.eval(<><x><y/></x></>): gc() } }");
tryItOut("{/*infloop*/do {} while((null.isPrototypeOf(undefined)).valueOf(\"number\")); }");
tryItOut("do yield null; while(((__parent__.__iterator__ =  '' )) && 0);");
tryItOut("throw @foo; const prototype;");
tryItOut("let(__parent__ = ~(-0)) { return;");
tryItOut("try { var prototype = true; } finally { const constructor, constructor =  '' ; } \n");
tryItOut("{(#3={a:#3#});{} }");
tryItOut("if(function ([y]) { }++) { if (@foo >>  /x/ .@foo <xxx {__proto__}={ \"\" } /> ) {throw .2;return; }} else ");
tryItOut("{with(false){break ;const <><x><y/></x></> =  /x/ ; }gc() }");
tryItOut("return;");
tryItOut("throw StopIteration;");
tryItOut("/*infloop*/M:for(const ({ __proto__: ({ prop: [, ({ __noSuchMethod__: constructor })] }), __noSuchMethod__: constructor }) = ([15,16,17,18].some(undefined, <><x><y/></x></>)); (undefined.__proto__ = __count__ = 1.3).propertyIsEnumerable(\"( \\\"\\\" )(<x/>)\"); prototype = [15,16,17,18].some(({}).hasOwnProperty, ![,] <<= yield 1.2e3) << (<x><y/></x> :: function ([y]) { } ? new (([1]).watch)(((new Function(\"(<><x><y/></x></>);\")))(), window) : this.__defineSetter__(\"constructor\", ('haha'.split).apply))) throw  /x/ ;");
tryItOut("return .2;");
tryItOut("throw <x><y/></x>;");
tryItOut("switch((-0)['prototype']|=__count__ = 1e-81) { default: break; case (p={}, (p.z = *)()):  }");
tryItOut("while((({ prop: __parent__ }) / window[0]) && 0)with(-3/0){return;let __parent__, constructor = <><x><y/></x></>; }");
tryItOut("/*infloop*/while(delete prototype){{} }");
tryItOut("M:switch(__noSuchMethod__ = <y><z/></y>) { default: let prop = <x><y/></x>;case 3: yield 0/0;break; {}break; case 2: return 3;let __count__ = <y><z/></y>, __proto__;break;  }");
tryItOut("{with({prop: *})export each; }");
tryItOut("/*for..in*/for(let prototype.__parent__ = (p={}, (p.z = null)()) in *) prototype, prototype = @foo;");
tryItOut("/*infloop*/while((this.__defineSetter__(\"__noSuchMethod__\", function (__iterator__, prop)\f { yield function::prop } ))){<x><y/></x>; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __parent__ in  '' ) {gc() }");
tryItOut("/*for..in*/for(const [__count__, __iterator__] = (__noSuchMethod__ = * *= [3.141592653589793].@*) in ((Math.pow).call(prop,  /x/g , <x><y/></x>/*\n*/)(prototype, __count__))) {export *;/*infloop*/for(let ({ __count__: prototype, constructor: *::* }) = this.__defineGetter__(\"__count__\", (1 for (x in []))); __count__ = *; #1=({__noSuchMethod__: window})) {export __proto__;function  constructor () /x/  } }");
tryItOut("/*for..in*/for(var [__proto__, constructor] = @foo in <x><y/></x>) false;");
tryItOut("L: {with({}) throw StopIteration;{throw <><x><y/></x></>; } }");
tryItOut("throw StopIteration;switch(__iterator__) { default: /*for..in*/for(let __proto__ in ((function  __noSuchMethod__ (__proto__, __noSuchMethod__) { return ([15,16,17,18].some(({}).hasOwnProperty, window)) } )(((p={}, (p.z = *())()))))){}case ({ get prop() { *; }  }): const __noSuchMethod__ = <><x><y/></x></>, __noSuchMethod__ = <x/>;const __proto__, get;continue ; const prop;case 7: (eval).callbreak; case  \"\"  @ this:  }");
tryItOut("with({__proto__: ++<><x><y/></x></>}){return; }");
tryItOut("function  __parent__ (prop, __iterator__) { continue ; } ");
tryItOut("while(((<x><y/></x>.__lookupSetter__(\"__iterator__\")).yoyo(* || //h\n<><x><y/></x></>)) && 0)break ;");
tryItOut("/*infloop*/for(const ({ ({ __proto__: [({ __iterator__: ({ __iterator__: ({ constructor: ({ __noSuchMethod__: __noSuchMethod__ }) }), __noSuchMethod__: ({ __proto__: [], __parent__: [] }) }) }), ] }): prop, __noSuchMethod__: ({ __proto__: [({ __count__: ({ __parent__: [({ prop: __parent__ })], __parent__: <><x><y/></x></>['__count__'] }), __noSuchMethod__: ({ __proto__: \f({ prop: __iterator__ }), *: [, [prop, __parent__, prototype, __count__], , ({ __iterator__: __parent__, prop: __proto__ })] }) }), [__noSuchMethod__, __noSuchMethod__, ], , ] }) }) = [[], , , prop, ] = <bbb xmlns=\"(prototype)\"></bbb>.__parent__; (( \"\" .@* for each (__proto__ in <x/>) for each (__count__ in  /x/ )).__lookupGetter__(\"__iterator__\")); ([15,16,17,18].sort(eval, (#0=[ '' ] for each (constructor in window) for each (__proto__ in 0x99) for each (__proto__ in 5.0000000000000000000000))))) return;");
tryItOut("return 0x99;\n{const constructor = window; }\n\n");
tryItOut("{null{} }");
tryItOut("if(({a1:1})) const __proto__ = *; else  if (({ get __count__() { return <x><y/></x> }  })) gc()");
tryItOut("/*for..in*/M:for(var (1e+81 === [[]]) ?  '' .__defineSetter__(\"__proto__\", Math.sin) : case 3: gc()var prop, __count__;break; , __noSuchMethod__ = <y><z/></y>;break; default: break; case  \"\" : const __parent__, __parent__;case <y><z/></y>: continue L;break; case <><x><y/></x></>: break; break; continue ;break; case false: var prop;case false: var __parent__ = constructor, __count__;break; case <x><y/></x>: ;case <x><y/></x>: break; break ;break; break; propbreak; case <x><y/></x>: ['prop'] in ((eval)((({__parent__: [[]].propertyIsEnumerable(\"constructor\")})[*]))))/*for..in*/for(prop in #3={a:#3#}) break L;");
tryItOut("/*infloop*/for(__parent__; (__noSuchMethod__); --( /x/g  for (__proto__ in  '' ) if (this))) /*for..in*//* nogeckoex bug 349964 */ for  each(prop in new null(window, window)\f) {yield __parent__\n }");
tryItOut("/*infloop*/for(__parent__; --((new  '' ).hasOwnProperty(\"prop\")); (Math.sin)(<>constructor</>)) yield;");
tryItOut("/*infloop*/for(__proto__; (yield (@foo).call(3, <x/>)); (__iterator__.__defineSetter__(\"__count__\", (function (__proto__, prototype) { yield window } ).call) < new <><x><y/></x></>(<x><y/></x>, this))) case 7: return;default: gc()break; ");
tryItOut("/*infloop*/M:while(<y><z/></y>){export *;<y><z/></y> }");
tryItOut("throw  \"\" ;");
tryItOut("if((this.zzz.zzz)) return; else  if \f(__count__ =  /x/ ) {return <x><y/></x>;var prop; }");
tryItOut("/*for..in*/for(const [__noSuchMethod__, prop] = 0.1 in true) return;");
tryItOut("/*for..in*/for(var constructor in  \"\" ) export *;");
tryItOut("export __count__;");
tryItOut("if((new (( '' ).watch)(<x><y/></x>, <y><z/></y>)))  '' ;\r else  if (__parent__.(<><x><y/></x></>)) {yield  /x/ ; }");
tryItOut("with({__proto__: (({ __count__: prop, prop: prototype }) = (new __proto__()))}){export __count__;/*infloop*/for([,]; __proto__; 3/0) gc() }");
tryItOut("/*for..in*/for(const __iterator__ in  '' ) (0.1);");
tryItOut("{ }");
tryItOut("do {L:do {break L;; } while((window) && 0); } while(([11,12,13,14].map) && 0);");
tryItOut("with({constructor: <><x><y/></x></>}){}");
tryItOut("if(\f*) prototype else  if (-3/0) {(<><x><y/></x></>); }");
tryItOut("M:switch( /x/ ) { default: (<x><y/></x>).watch }");
tryItOut("while(( \"\"  in *) && 0)export prop;");
tryItOut("let prop;");
tryItOut("function (prop)<><x><y/></x></>");
tryItOut("while(((null.valueOf(\"number\"))) && 0)( '' );");
tryItOut("{({a1:1});(window); }");
tryItOut("M:if((prop.__defineSetter__(\"__noSuchMethod__\", function (({ __noSuchMethod__: ({ __count__: __iterator__, __noSuchMethod__: constructor }) }))\nnew ({})(constructor))) :: window) {M:do {/*for..in*/({ __noSuchMethod__: (eval(\"{export *;export *; }\", this))(eval(\"*\", __count__)), prototype: ({ prototype: ({ __iterator__: ({ __iterator__: __proto__, __count__: __proto__ }), __count__: __count__ }), __noSuchMethod__: [] }) }) } while(((__iterator__.__count__ = @foo.__defineSetter__(\"constructor\", eval)).hasOwnProperty(\"constructor\")) && 0); }");
tryItOut("/*for..in*/M:for(var [__noSuchMethod__, __noSuchMethod__] = __noSuchMethod__.__noSuchMethod__ = [z1] .@x::  \"\"  in 0/0) const __parent__ = -0;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(var __parent__ in (new (((new Function(\"yield this;\"))).call)())) {throw 0.1; }");
tryItOut("if(this) {yield <x><y/></x>;__proto__ } else  if (4.) return prop; else {export *; }");
tryItOut("break L;");
tryItOut("{/*for..in*/for(let __noSuchMethod__ in <x><y/></x>) {<x/>; } }");
tryItOut("let (__noSuchMethod__, x::prototype) { (3/0.__lookupGetter__(\"__noSuchMethod__\")); }");
tryItOut("do {{} } while((({__iterator__: --undefined,  set prototype setter \f()false %= <y><z/></y> })) && 0);");
tryItOut("while((#) && 0){yield; }\nif((function(q) { return q; })()) { if ((this.__defineGetter__(\"constructor\", (<><x><y/></x></>).watch))) ;} else <><x><y/></x></>;\n");
tryItOut("/*infloop*/do {export constructor;continue L; } while( \"\" );");
tryItOut("/*infloop*/for((new *::*(1e+81, false)); __parent__ = 4.; [11,12,13,14].sort) {return .2; }if([] /= @foo) {export *; } else yield <><x><y/></x></>;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each((__count__) in <><x><y/></x></>) {export *;{} }");
tryItOut("/*for..in*/for(let (__count__) in (('haha'.split)((({ __proto__: __count__ }) = *) && __count__ = -3/0))){let (__count__ = function(id) { return id }) {  } }");
tryItOut("{let __noSuchMethod__; }");
tryItOut("/*infloop*/for((1.2e3 for each (prototype in <x><y/></x>)); <y><z/></y>.prototype; export __noSuchMethod__;) const constructor = *::*;");
tryItOut("{export prototype;let constructor, __count__; }");
tryItOut("export constructor;");
tryItOut("for(let y in [5,6,7,8]) return  /x/ .unwatch(\"__parent__\");");
tryItOut("if(<><x><y/></x></> for (__count__ in #3={a:#3#})) return; else export *;");
tryItOut("/*infloop*/while(__parent__)continue L;");
tryItOut("/*infloop*/do {return  /x/g ; } while([[]]);");
tryItOut("this.zzz.zzz;");
tryItOut("let (__iterator__) { gc() }");
tryItOut("throw x::constructor");
tryItOut("/*for..in*/for(__count__ = (({}).hasOwnProperty).call(<{__noSuchMethod__}><x><y/></x><ccc:ddd><ccc:ddd></ccc:ddd></ccc:ddd></{__noSuchMethod__}>, (window.__lookupSetter__(\"__iterator__\"))) in ({a1:1})[ /x/ ]) {{export *; }/*infloop*/do continue ; while(#1=[#1#]); }");
tryItOut("M:while((yield 3/0) && 0){Math.pow; }");
tryItOut("this.zzz.zzz;");
tryItOut("M:do {} while((yield (let (__proto__) ({}))) && 0);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const ({ __parent__: __noSuchMethod__, __count__: [__iterator__] }) in <x/>) ");
tryItOut("{switch((true.__parent__ = 1e+81)) { default: const __count__, constructor;break; break ;break;  } }");
tryItOut("for(let y in [5,6,7,8]) __noSuchMethod__ = prop;");
tryItOut("/*infloop*/M:do {;return  \"\" ; } while(( ''  > __noSuchMethod__));");
tryItOut("/*for..in*/for(let [function::__proto__, prop] = <><x><y/></x></> in prop) {false }");
tryItOut("/*infloop*/do  while(((<x/> % return <><x><y/></x></>) , #0/*\n*/=([this].some(null))) ? ([].watch(\"__proto__\", <><x><y/></x></>)) : (p={}, (p.z = #1=[#1#])()));");
tryItOut("let ([], __iterator__) { if([<y><z/></y>]) {throw 0; } else  if ((__proto__.__defineSetter__(\"prototype\", <><x><y/></x></>))) <ccc:ddd><x><y/></x></ccc:ddd> }");
tryItOut("L: function (__proto__) { let yield;; } ");
tryItOut("/*for..in*/for(const [__noSuchMethod__, prop] = (String()) = __parent__.hasOwnProperty(\"prototype\") in ( ''  , __iterator__ = <><x><y/></x></>)) {/*infloop*/while(<x/>) }");
tryItOut("L:if(((uneval( /x/g )))) { \"\" ;/*infloop*/for(__noSuchMethod__; [,]; ) {} } else  if (<x/>) yield [,];");
tryItOut("(({a2:z2})).apply");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(const constructor in __proto__) null;");
tryItOut("/*infloop*/do let (({ constructor: __parent__ }), __parent__) { return; } while(eval(\"((<y><z/></y>).__defineSetter__).call(__iterator__, undefined)\", __count__)[ '' ]);");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let constructor in <x><y/></x>) {export constructor;let constructor; }");
tryItOut("");
tryItOut("yield;");
tryItOut("this.zzz.zzz;");
tryItOut("yield\ngc()\f");
tryItOut("/*infloop*/for(let __proto__; __iterator__; window.@*) {yield;yield; }");
tryItOut("if(*) /*for..in*/for(let __proto__ in ((new  '' .yoyo(window)())(__proto__ = (let (constructor = <y><z/></y>, prop = <x><y/></x>) window))))export *\nreturn; else {gc(){do <x><y/></x>; while((<><x><y/></x></>) && 0); }\nreturn; }");
tryItOut("if((#1=__noSuchMethod__)) {export *; } else  if (let (yield) *++) return <>__parent__</>;");
tryItOut("{function  __proto__ (__iterator__, constructor)thisexport *; }");
tryItOut("if( /x/ ) gc() else  if (get.(<x><y/></x>)) {let prop = prototype, __noSuchMethod__; }");
tryItOut("(<x/>);");
