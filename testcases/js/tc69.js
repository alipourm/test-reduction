tryItOut(" /x/g ;");
tryItOut("export *;;");
tryItOut("{const constructor; }yield <x/>;");
tryItOut("/*infloop*/while(3/0);");
tryItOut("/*for..in*/for(var prop.__proto__ in this.__defineGetter__(\"__count__\", Math.pow)) if(((<x/>).__defineSetter__).call(<x><y/></x> *= <x/>, eval(\"return #3={a:#3#};\", <><x><y/></x></>), this)) {function(q) { return q; }throw window; } else  if (new  \"\" (, undefined)) const constructor;");
tryItOut("export *;");
tryItOut("M:if((new new Function())) {export *; } else  if ((__parent__)----) yield\nexport prop;");
tryItOut("return #1=[#1#] != undefined;");
tryItOut("/*for..in*/__parent__ = (<x/> >= -__parent__)");
tryItOut("/*infloop*/do {/*for..in*/for(prototype in (((false).__defineSetter__)(<x><y/></x>)))\n{this; } } while((<y><z/></y>.@foo));");
tryItOut("L:with(((\r__count__) = 033))let __proto__, __noSuchMethod__;");
tryItOut("if( '' ) {var __iterator__; } else  if (0/0) var prototype = undefined, __proto__ = true;");
tryItOut("if(+<x><y/></x> ? * : @foo for each (prop in <x><y/></x>) for (constructor in <x/>)) throw __iterator__; else throw __proto__;");
tryItOut("L: {{}window; }");
tryItOut("break M;\nyield;\n");
tryItOut("while(((this.zzz.zzz)) && 0){if(__iterator__) { if () export __count__;} else { }<><x><y/></x></>; const __proto__; }");
tryItOut("return [#0=undefined].filter(({}).__lookupGetter__);");
tryItOut("/*infloop*/for(this.yoyo(<><x><y/></x></>); constructor.prop setter= /a/gi\f; <><x><y/></x></>) throw __parent__;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__proto__ in -1.throw(\f /x/ --).hasOwnProperty(\"prop\")) if((#1=({prototype: <><x><y/></x></>}))) {__proto__, __count__ =  \"\" ; } else __parent__ getter: (__count__.__iterator__)");
tryItOut("if(__proto__) return true; else (__iterator__);");
tryItOut("do { /x/g ;; } while((({__parent__: <y><z/></y> })) && 0);");
tryItOut("if(<y><z/></y>(<><x><y/></x></>)) throw prop;");
tryItOut("/*infloop*/L:do {{} } while(__noSuchMethod__);");
tryItOut("M:if((uneval(__iterator__.constructor-=\t__count__ = <x/>))) /*infloop*/M:for(__parent__;  '' ; [])  '' ; else  if (<bbb xmlns=\"({__proto__: <><x><y/></x></> }\n)\"></bbb>) {{}(4.); } else {break M;function(y) { yield y; yield;; yield y; } }");
tryItOut("throw StopIteration;");
tryItOut("for(let y in []);");
tryItOut("({ __proto__: __count__ }) = new (Array(false) >> new (3.141592653589793)() .@ Function( /x/ , <y><z/></y>))(<><xxx>{prototype}</xxx></>)");
tryItOut("constructor = __count__;");
tryItOut("let (__count__) { const __parent__ = this, prototype = window; }\nL:switch([11,12,13,14].some) { prototype }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(__iterator__.__noSuchMethod__ in (this.zzz.zzz).__defineGetter__(\"constructor\", Math.pow)) {L:if((uneval(<y><z/></y>.hasOwnProperty(\"__parent__\")))) {function (__count__) { return  /x/g  }  } else {return <><x><y/></x></>; }yield __iterator__ =  /x/ (); }");
tryItOut("return;\nFunction\n");
tryItOut("{if(<></>.(#0=[new (function(y) { yield y; ( '' );; yield y; })(true, <x/>)])) {<><x><y/></x></>; }L:if(<x><y/></x>) { if (__noSuchMethod__) {return; }} else ; }");
tryItOut("/*infloop*/while(void eval(\"\", window)((null .@ prop)))/*for..in*/for(__proto__ in ((function(q) { return q; })( \"\" )))gc();");
tryItOut("if(([1,2,3,4].slice)) { if (__iterator__ = (-0)) { '' ; }} else {}");
tryItOut("L:if(window) {function () { yield  ''  } \t }");
tryItOut("do /*infloop*/M:while( '' ){ } while(((.@foo)) && 0);");
tryItOut("while((undefined[window]) && 0)throw ([,,] * <x><y/></x\t>);");
tryItOut("{export *; }");
tryItOut("L:if(this -= __noSuchMethod__) export *; else <><x><y/></x></>;");
tryItOut("{if(<><x><y/></x></>.__parent__) { if ((1e81 &=  /x/g )) let constructor = 0.1, __proto__;} else false }");
tryItOut("if(({__iterator__: #1=[#1#]})) { if (this.propertyIsEnumerable(\"prototype\"))  else {if(false) <x><y/></x>; }}");
tryItOut("L:switch(delete __parent__) { case 8: /*for..in*/M:for(prototype = <y><z/></y> >> undefined in false) {let __noSuchMethod__ = 0, __count__ = __proto__; }default: break;  }");
tryItOut("return;");
tryItOut("do {[]let prop = 0.1; } while(((<><x><y/></x></> != null).__proto__ = \t(void window)) && 0);");
tryItOut("if(({ get __noSuchMethod__ prop (constructor)prototype,  get __noSuchMethod__()<y><z/></y>.__defineSetter__(\"__parent__\", function(y) { yield y; yield window;; yield y; }) }) > (yield prototype.prop = this.zzz.zzz)) /*for..in*/for\t(const __noSuchMethod__ = 'fafafa'.replace(/a/g, function  __count__ (__iterator__) { [[1]];\t } ) in [z1,,]) {{}({}).__lookupGetter__ } else  if ((\n#2=[[function(id) { return id } for each (__proto__ in <y><z/></y>)]])) {{{}continue ; } }");
tryItOut("if((*)) {if( /x/g ) yield *::*; else  if (window) var __parent__ = undefined;let prop; } else M:with((({ __parent__: __parent__ }) = ((__noSuchMethod__ for (__parent__ in <><x><y/></x></>))))){/*infloop*/for(let __noSuchMethod__; <x/>; <y><z/></y>) {continue ;gc() } }");
tryItOut("M:switch([1,2,3,4].map()) { case  /* Comment */this.__defineSetter__(\"__proto__\", gc): case 4: var __count__ = <><x><y\f/></x></>;; }");
tryItOut("return [,]; const constructor;");
tryItOut("switch(<x><y/></x>) { default: break;  }");
tryItOut("L: {do  while(((( '' \n) << <x><y/></x>.(this)[__proto__ = __count__])) && 0); }");
tryItOut("/*infloop*/M:for( /x/ ; <x/>; null) Function");
tryItOut("/*infloop*/M:for(const __iterator__ = (false)(*::*).*; new (function(y) { yield y; (<><x><y/></x></>);; yield y; })( /x/ , true); eval(\"*.__noSuchMethod__\", <y><z/></y>)) {yield true; }");
tryItOut("if({}) { if ((__iterator__ = <x><y/></x>.watch(\"prop\", [1,2,3,4].map).__lookupSetter__(\"__parent__\")).throw((function ([y]) { })())) {yield ({}); } else {const __iterator__;/*infloop*/do export __count__; while(new (-0)( (__parent__ = <x/>)['__count__']/*)); }}");
tryItOut("/*infloop*/while(__proto__ =  \"\" );");
tryItOut("/*for..in*/for(const __proto__ in ((function(q) { return q; })(__iterator__.__lookupGetter__(\"prop\"))))export prototype;");
tryItOut("let(({ prop: ({ __count__: ({ __iterator__: ({ prop: {t } }), __noSuchMethod__: [__iterator__, , __noSuchMethod__, , ] }), __iterator__: ({ prototype: [, , ], __count__: ({ prototype: __proto__ }) }) }), __parent__: __proto__ })) ((function(){let(prototype, null = ( ''  > <y><z/></y>)) ((function(){for(let y in []);})());})());");
tryItOut("let (({ __count__: ({ __noSuchMethod__: __iterator__, __proto__: __count__ })\t }) = @foo instanceof __count__ = [1,,]) { /*for..in*/for(__iterator__.__parent__ in *::*) {return  /x/ ;prop = true; } }");
tryItOut("L:if(<x/> ^= this) L:withthis.eval(this))Math.pow else  if ((constructor.__noSuchMethod__ setter= eval)) {let (<x><y/></x>, constructor) { U } }");
tryItOut("for(let y in [5,6,7,8]) for(let y in [5,6,7,8]) yield (-0);");
tryItOut("break M");
tryItOut("/*infloop*/for(let ({ prop: [__noSuchMethod__], __noSuchMethod__: prototype }) =  ''  .@x:: <y><z/></y>.yoyo(#1=[this]); [window].filter(().watch); (export *)) yield;");
tryItOut("with({__parent__: void function  __parent__ (__iterator__, let __proto__ = __proto__, __iterator__ = <x><y/></x>;) {  } (({}))}){/*for..in*/M:for(let [__iterator__, prop] = 1e4 in __parent__) {} }");
tryItOut("L:with({__count__: true}){<><x><y/></x></>;throw *; }\n");
tryItOut("throw window;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(constructor in (function(id) { return id } ? @foo : this--.__lookupSetter__(\"__parent__\"))) {{/*infloop*/do {/*for..in*/for(__count__ in false) {return; }\f } while((eval(\"L: return;\",  '' )).__iterator__ = [[]]);[1,2,3,4].map } }");
tryItOut("/*infloop*/do break L; while(function(id) { return id });");
tryItOut("if(window) { if () {yield; }} else {return this; }");
tryItOut("");
tryItOut("for(let y in []);");
tryItOut("prop = -3/0;gc()");
tryItOut("M:while(( /x/g ) && 0){{}throw *::*; }");
tryItOut(";");
tryItOut("/*for..in*/for(let [prototype, __iterator__] = <y><z/></y> in <x><y/></x>) yield;");
tryItOut("switch(true) { default: __count__; }");
tryItOut("/*for..in*/for(var prop = constructor in false) {( /x/ );export __parent__; }");
tryItOut("{yield null;gc() }");
tryItOut("return new this()\n");
tryItOut("while(( /x/ ) && 0){yield <x/>; }\n({}).__lookupGetter__");
tryItOut("return <x><y/></x>;continue \ngc()\nthrow __noSuchMethod__;\ncontinue ;\n");
tryItOut("if(eval(\"let __proto__ = 3/0;\", __proto__ = [].prop)) var __proto__; else M:switch(([ /x/ ].some( \"\" ))) { case 7: break;  }");
tryItOut("/*infloop*/M:while((@foo)[0.1] %= __count__ = function::__proto__){{} }");
tryItOut("M:if( /x/ ) throw 1e81;");
tryItOut("M:with({}[[,]]){L:with(<x><y/></x>){return;gc() }yield <y><z/></y>; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */L: for  each(const prototype in (let (constructor) (<><x><y/></x></>--))) {if(\nthis >>= (1e+81--)) { if (({ prop: __iterator__ }) = <x><y/></x>) {;throw *::*; } else {throw <><x><y/></x></>;\treturn prop; }}\n }");
tryItOut("M:if(<!--yy-->) {\twith({0/0:  /x/ }){continue M; } } else  if (<><x><y/></x></> /= window) ({ __count__: __iterator__ })");
tryItOut("with({__proto__: this.__defineGetter__(\"__iterator__\", <y><z/></y>)});");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let constructor in (window %= <x/>)) {while(( '' ) && 0)(<x/>);const __parent__ = false, __proto__ = true; }");
tryItOut("(*);with({}) { yield *; }  const prototype;");
tryItOut("L: { for (prototype in window)/*for..in*/for(let constructor in window) <><x><y/></x></>;return; }");
tryItOut("var __noSuchMethod__, __proto__;\n/*infloop*/for(__noSuchMethod__; this; q) ;\n");
tryItOut("L:if(__iterator__) yield; else ");
tryItOut("with([[]].hasOwnProperty(\"__proto__\").propertyIsEnumerable(\"__count__\")){if((({__proto__: <x><y/></x> }))) {throw [,]; } else  if (({__proto__: 033 })) return; }");
tryItOut("var __count__, prototype;");
tryItOut("if( /x/g ) { if (<x><y/></x>) yield;} else gc()");
tryItOut("/*infloop*/M:do { } while(new (-1 >>> <x/>)());");
tryItOut("throw StopIteration;");
tryItOut("const __count__, prop = 1e+81;");
tryItOut("__proto__");
tryItOut("if(<\fx><y/></x>) 1e4;");
tryItOut("if((uneval(((<x/>)[false])))) { if ((<><{__iterator__}><!--yy--></{__iterator__}></> , ({}).__lookupGetter__())++) {throw @foo; } else { '' return prop; }}");
tryItOut("return;");
tryItOut("with({prototype: ((this.zzz.zzz) && eval(\"yield true;\",  /x/ ))}){/*infloop*/for(let prop; __parent__ .@*:: (-1); eval(\"(-1)\", function ([y]) { })) ; }");
tryItOut("prop = [], __iterator__\nM:if(this) gc() else  if ( '' ) gc()");
tryItOut("/*for..in*/for(prop in false) {(<y><z/></y>);export __proto__; }");
tryItOut("M:if(('fafafa'.replace(/a/g, *))) {gc()with({__parent__: @foo})export __parent__; }");
tryItOut("L:if([Date(<><x><y/></x></>)].map(function(y) { yield y; continue L;; yield y; })) return @foo; else  if (<!--yy-->.((yield __noSuchMethod__))) {gc() } else var __noSuchMethod__ = {}, __proto__ = true;");
tryItOut("return");
tryItOut("{export *; }");
tryItOut("if(({ __iterator__: __parent__ }) = ({__noSuchMethod__: ([<x><y/></x> if (constructor\f)]), __proto__: this.__defineGetter__(\"prop\", function ([y]) { }) })) { if (__parent__.let setter= (1 for (x in []))) (__parent__); else {(<x><y/></x>); }}");
tryItOut("do {do {(5.0000000000000000000000); } while((<x><y/></x>) && 0);yield <><x><y/></x></>; } while((__proto__.prop = __iterator__ /= {yield;let __noSuchMethod__, __noSuchMethod__; }) && 0);");
tryItOut("/*infloop*/while(@foo instanceof prop){export prop; }");
tryItOut("break M;");
tryItOut("/*for..in*/for(var {yield; } in ((({}).__lookupGetter__)(<y><z/></y>))){const __iterator__ = undefined; }");
tryItOut("while((({}).hasOwnProperty(false).__lookupSetter__(\"prop\")) && 0){.2;\nyield true;\n }");
tryItOut("/*for..in*/for(let prototype(__iterator__(*::*) = ({ constructor: ({ constructor: __proto__ }) })) in ({__noSuchMethod__: <><x><y/></x></> })) {{/*infloop*/for(true; window; ({a1:1})) {export __count__;function  __count__ () { yield false }  }throw this; }{} }");
tryItOut("/*for..in*/for(const __noSuchMethod__ = ( /x/  << ({a1:1})).unwatch(\"__noSuchMethod__\") in [<><x><y/></x></> / [z1] if ((p={}, (p.z = <x/>)()))]) {L:switch(this.__defineGetter__(\"__noSuchMethod__\", Function)) { default: break; case 5: gc()break; break; case (<x><y/></x>.__defineSetter__(\"constructor\", #1=[#1#])) <<= (yield (prototype = @foo)): case 7: if(constructor) {<><x><y/></x></>; } else  if (<><x><y/></x></>)   {yield false;window; }__proto__  else gc()break; case ([11,12,13,14].sort): export *;<><x><y/></x></>;break; yield;break;  } }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var __proto__ in (@foo)[(p={}, (p.z = <y><z/></y>)())]) (<><x><y/></x></>);");
tryItOut("yield this.__defineGetter__(\"__parent__\", [[]]);");
tryItOut("yield <x/>;");
tryItOut("\n");
tryItOut("let (x::__iterator__) { var prototype; }");
tryItOut("var __noSuchMethod__, prototype\n");
tryItOut("/*infloop*/for(const __proto__ = *.@*; !this.__defineGetter__(\"__proto__\", /a/gi); @foo) {continue ;return; }");
tryItOut("if(<x><y/></x>.hasOwnProperty(\"__parent__\")) { if ((new (<y><z/></y>)().__defineSetter__(\"__count__\", ( \"\" ).__defineSetter__))) var __proto__;function::prop;} else {return; }");
tryItOut("/*for..in*/for(const prop in 4..propertyIsEnumerable(\"prototype\")) gc()");
tryItOut("yield;");
tryItOut("if((.2\n)) __parent__, prop;");
tryItOut("/*for..in*/for(const constructor\f = (this.__defineGetter__(\"prop\", ({}).__defineSetter__)) in ({prop: this ?  \"\"  : *::* && (__iterator__.__count__ getter= gc) &= window[this], __count__ getter: function () { return () }  })) {L: yield <y><z/></y>;\nexport *;\nM:do __parent__, __proto__ while((let (constructor = (1 for (x in [])), [__noSuchMethod__, ])  /x/ ) && 0); }");
tryItOut("throw __noSuchMethod__;");
tryItOut("if(<><x><y/></x></>) { if (*) yield; else export prototype;}");
tryItOut("yield;");
tryItOut("{break L; }\ncontinue M;");
tryItOut("M:if(<><x><y/></x></>.__noSuchMethod__) {yield;let prototype =  '' ; } else  if ([true].filter(eval)) {yield case 4: yield;;throw @foo; }");
tryItOut("do ([11,12,13,14].some); while((<xxx>{__iterator__}</xxx>.watch(\"__iterator__\", Function)) && 0);");
tryItOut("\nexport *;");
tryItOut("with([[]]){return <x><y/></x>;//h\n }");
tryItOut("/*infloop*/for( /* Comment */<><x><y/></x></>.__defineGetter__(\"__proto__\", new Function); ({ get __iterator__ __iterator__ (__iterator__) { (false); }  }); [11,12,13,14].some) {}");
tryItOut("/*infloop*/for(const ({ constructor: ({ __iterator__: ({ constructor: ({ __proto__: ({ prototype: __count__ }), __noSuchMethod__: ({ __noSuchMethod__: __parent__ }) }), prop: constructor }), __noSuchMethod__: [({ __parent__: [__proto__, ] }), , ] }), __iterator__: \n({ return;: prototype }) }) = *;  /x/ ; [11,12,13,14].sort) {prototype; }");
tryItOut("return;{set = <><x><y/></x></>, __proto__ = <><x><y/></x></>;; }");
tryItOut("do {var __noSuchMethod__;throw false; } while(([[]]) && 0);");
tryItOut("if(yield window) { if ('fafafa'.replace(/a/g, <{constructor}><x><y/></x> </{constructor}>).__defineSetter__(\"prototype\", (new Function(\"let __parent__ = ({a1:1});\")))) /*for..in*//* nogeckoex bug 349964 */ for  each(const prototype.prototype in [z1])  else {/*infloop*/for(var ({ prototype: set }) = [z1]; (new Iterator(<><x><y/></x></>, <><x><y/></x></>)); (this);) {export *; } }}");
tryItOut("do {/*infloop*/while(*::*)gc() } while(() && 0);");
tryItOut("return; const __proto__;");
tryItOut("L: {/*infloop*/for(<employee id=\"1\"><name>Joe</name><age>20</age></employee>; new (gc)(( /* Comment */function(id) { return id })); undefined += this >> (yield true)) {yield -1;export *; } }");
tryItOut("{{} const prototype;__noSuchMethod__ }");
tryItOut("if((p={}, (p.z = this)())) { if (.2.unwatch(\"__iterator__\").watch(\"__parent__\", function (__proto__, __iterator__) { yield undefined } )) {const prop = <><x><y/></x></>, __parent__ = <><x><y/></x></>; } else {export __parent__; }}");
tryItOut("if(new ({ get __parent__ __iterator__ () { yield undefined } ,  get __noSuchMethod__(throw 3;, __iterator__) { return <><x><y/></x></> }  })(( '' .propertyIsEnumerable(\"__noSuchMethod__\")) , __count__)) return  /x/ ;");
tryItOut("/*infloop*/for(__parent__.__noSuchMethod__; ([(1e-81.*)].filter((new Function(\"(*::*);\"))))(<><x><y/></x></> instanceof <><x><y/></x></>, (new [1,2,3,4].map(<x><y/></x>\f, <x><y/></x>))); <><zzz>__parent__.__iterator__ =  \"\" </zzz></>) <x><y/></x>;");
tryItOut("if(this) let __parent__ =  \"\" , prop =  /x/ ; else  if (<x/>) ;");
tryItOut("let (({ __parent__: [] }) = (eval)(constructor.__iterator__ getter= (1 for (x in [])))) { /*for..in*/M:for(const __count__ = [z1] in #3={a:#3#}) {} }");
tryItOut("/*infloop*/for(((yield @foo)); <x><y/></x>.unwatch(\"__count__\"); __noSuchMethod__) {[]; }");
tryItOut("\tvar __iterator__ = <x><y/></x>;let __proto__;");
tryItOut("/*for..in*/for//h\n(let constructor = [,] in <><x><y/></x></>) {gc() }");
tryItOut("L:while((constructor) && 0){yield *::*; }");
tryItOut("let (prototype, prototype = true) { <y><z/></y>; }");
tryItOut("if((/*\n*/<><x><y/></x></>)( /x/g )-=(<x/> - <><x><y/></x></>)) { if (<x><y/></x>.unwatch(\"__parent__\")) var Math.pow, __count__ = null} else let (__iterator__ = window, (new Function(\"__parent__ = <x><y/>'</x>;\"))) { (({a2:z2})); }");
tryItOut("continue \n");
tryItOut("yield <x/>;");
tryItOut("/*for..in*/for(var __proto__ = true < <><bbb xmlns:ccc=\"<><x><y/></x></>\"><ccc:eee></ccc:eee></bbb></>.valueOf(\"number\")/*\n*/.isPrototypeOf((0/0.__defineGetter__(\"__count__\", (arguments).watch))[constructor.throw(<x><y/></x>)]) in ((this)(__proto__, __noSuchMethod__))){let constructor; }");
tryItOut("{<x><y/></x> }");
tryItOut("/*infloop*/while(\n<x/>){L: {<><x><y/></x></>; }yield; }\nyield this.*;\n");
tryItOut("L:while((__noSuchMethod__) && 0)yyy");
tryItOut("/*for..in*/for(var [__parent__, constructor] = getter = __noSuchMethod__ = <x><y/></x> in [ /x/  if (this)]) yield <x/>(true, this).@foo;");
tryItOut("{/*infloop*/for(__noSuchMethod__ = <y><z/></y>; <y><z/></y>;  /x/ ) {{}{} } }");
tryItOut("M:if(window) { if ( /x/ .watch(\"constructor\", undefined)) {throw null; } else yield <x/>;}");
tryItOut("if(let (__proto__) (uneval(<x><y/></x>))) { if ((this.__defineGetter__(\"__noSuchMethod__\", gc))) {throw *; } else return\n}");
tryItOut("break \n\n");
tryItOut("/*for..in*/for(const __count__ in ()) {<x><y/></x>; const constructor; }");
tryItOut("throw StopIteration;");
tryItOut("do export x::x::__parent__;/*\n*/ while((({ set prototype x::this (__iterator__, #1=[#1#]\t)@foo || [1], prototype setter: (new Function(\"with({prototype: window})export __noSuchMethod__;\")) })) && 0);");
tryItOut("/*infloop*/do M:if(((<><x><y/></x></>)())) { if (#1=window) export constructor; else }\t while((({a1:1}) & window).throw(null));");
tryItOut("M:if(__parent__ = (prototype = <xxx {__iterator__}={<><x><y/></x></>} />)) gc()");
tryItOut("/*infloop*/while((!true = <y><z/></y>)){Math.pow }");
tryItOut("/*infloop*/do { } while((__count__ = false));");
tryItOut("export *;\nif(this.__defineSetter__(\"prototype\", function  prop (__parent__, function::__parent__) { throw ; } )) export *;\n");
tryItOut("/*for..in*/M:for(let prop =  ''  in ([11,12,13,14].sort)) {if(<x/>) yield; else  if (-0.unwatch(\"__noSuchMethod__\")) {} else {export __noSuchMethod__;return constructor; }function(q) { return q; } }");
tryItOut("with({}) return;");
tryItOut("let (__noSuchMethod__ = 1.3[null]) { {let \tprop, __noSuchMethod__ = <><x><y/></x></>;gc() } }");
tryItOut("if(<><zzz><x><y/></x></zzz></>) { if ((((/a/gi).call(__parent__, false)) .@x:: <><x><y/></x></>)) {continue ;return undefined; } else throw constructor;}");
tryItOut("if(*::*) {{} }");
tryItOut("/*for..in*/L:for(const __parent__ in ((new Function)((this.__defineSetter__(\"__count__\", [1,2,3,4].map).yoyo(new (([this]))(({each getter: @foo })))))))/*infloop*/L:do yield\n while(((uneval(window))));");
tryItOut("yield ( \"\"  <= [[]]);");
tryItOut("L:do let __iterator__ = <><x><y/></x></>; while((true <= __parent__) && 0);");
tryItOut("/*infloop*/for(__parent__; [z1]; null) continue ;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(let (this.zzz.zzz) in [[11,12,13,14].sort].map(function(q) { return q; })) {; }");
tryItOut("break \nthrow window; const prop;");
tryItOut("if(<><x><y/></x></>) export prototype; else {var prototype = 3/0; }");
tryItOut("continue \n(<><x>\f<y/></x></>);");
tryItOut("break L;");
tryItOut("/*for..in*/M:for(var __proto__.__count__ in <><x><y/></x></>.valueOf(\"number\")) {throw false;(@foo); }");
tryItOut("/*infloop*/M:for(var constructor; <y><z/></y>; constructor = (__noSuchMethod__.__parent__)) ;");
tryItOut("do if(this.zzz.zzz) {/*infloop*/for(var __parent__ = false; prop; prop) {gc() } } while((Math.pow()) && 0);");
tryItOut("M:if((({ constructor: __noSuchMethod__, prototype: __count__ }) = (new ((-1))()))) {{} } else {export *; }");
tryItOut("L:if((function(q) { return q; }).call((p={}, (p.z = 1.2e3)()), /*for..in*/M:for(var __count__ in ((/a/gi)(*))){return; }).__lookupSetter__(\"__proto__\")) let __proto__ =  \"\" , __noSuchMethod__; else  if ((p={}, (p.z = @foo)())) {(true);<x><y/></x>; } else do <><x><y/></x></>; while(('fafafa'.replace(/a/g, [1,2,3,4].map)) && 0);");
tryItOut("with(033.@*){export prop; }");
tryItOut("/*for..in*/for(var __parent__ in ((true)(<x/>))){let <x><y/></x> =  /x/ , __iterator__; }");
tryItOut("/*infloop*/L:for(<x/>; (yield __iterator__)++; *::*) {/*infloop*/\fwhile(null\n)return;__proto__ = prop; }");
tryItOut("M:with({__noSuchMethod__: *}){yield constructor;; }");
tryItOut("switch(<x/>) { default:  }");
tryItOut("L:with({__parent__: new Function()})if(([11,12,13,14].sort)) return null;");
