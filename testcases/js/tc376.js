tryItOut("L: {const __count__, prototype; }");
tryItOut("/*infloop*/for(const [] = (__noSuchMethod__: (<x><y/></x> !== q)).__defineSetter__(); prototype = this.hasOwnProperty(\"__noSuchMethod__\") ? new new Function(prop = function::__iterator__, <><x><y/></x></>) << ({__count__ setter: (<y><z/></y>).watch }) : (__proto__.__count__);  /x/g ) {yield; const __noSuchMethod__; }");
tryItOut("M:do {return;{return;/*infloop*/while(({a2:z2}))1e4 } } while((eval(\" '' .prototype = [].__iterator__.hasOwnProperty(\\\"__parent__\\\").__lookupGetter__(\\\"prototype\\\")\", (<><x><y/></x></>.propertyIsEnumerable(\"prop\")).__noSuchMethod__ = prototype = [[]])) && 0);");
tryItOut("let(__noSuchMethod__ = false, __iterator__ = (__proto__ = <x><y/></x>)\n) { __parent__ = [,,z1];");
tryItOut("if(this.__lookupGetter__(\"constructor\")) if(prototype =  /x/ ) { if ((<x><y/></x>.(<x><y/></x>))) yield __count__;} else {prototype = <x><y/></x> } else  if (((null).__defineSetter__).call( '' , .2,  '' ) > /*infloop*/L:for(__parent__; *; [[1]]) {new Function{} }let __proto__ = <x/>;) {/*for..in*/M:for(let __count__ =  in window) yield;L: {[,,z1];; } } else {switch(-3/0 if (<><x><y/></x></>)) { try { ; } finally { Math.sin }  } }");
tryItOut("L:do {do {constructor = <x><y/></x>; } while((5.0000000000000000000000) && 0); } while((new (/a/gi)(false( /x/g , __count__), this.yoyo(*))) && 0);");
tryItOut("L: if((<x><y/></x> ? <x/> : true)) ; else {export __iterator__;yield [,,]; }");
tryItOut("/*for..in*/for(const [__count__, prop] = (({__count__: 1e-81})) in constructor.throw(1e+81) ? #1#++ instanceof (null.yoyo(false)) : @foo) const prop;\ntry { var __parent__, prototype; } finally { gc() } \n");
tryItOut("if(yield <><x><y/></x></>.valueOf(\"number\").@*.__defineSetter__(\"__noSuchMethod__\", (uneval((3++[(0(this))]).unwatch(\"prop\"))))) { if ((yield Math.sin(({})))) {return;gc() }} else {/*for..in*/M:for(let __proto__ = <x><y/></x>.(__noSuchMethod__) in 1e81) {(window); } }");
tryItOut("if(__count__-- for (({__proto__: <x/>})['__noSuchMethod__'] in *) for (__proto__ in <x/>) for each (__proto__ in window).unwatch(\"__parent__\")) {return; } else false;");
tryItOut("return;");
tryItOut("/*for..in*/for(var prop = ((new Boolean(({}),  '' )))[undefined++] in (* = <><x><y/></x></>.isPrototypeOf(<x/>.__lookupGetter__(\"__noSuchMethod__\")))) {gc() }");
tryItOut("({ prototype: prop }) = (@foo.eval( /x/g ))if(null *= []) { if ((-3/0 << <><x><y/></x></>.throw(({}).hasOwnProperty))) throw <><x><y/></x\f></>;} else {{}(window); }");
tryItOut("this.zzz.zzz;");
tryItOut("let ([__proto__]) { /*for..in*/for(prop in <y><z/></y>) __noSuchMethod__; }");
tryItOut("");
tryItOut("let(({ prop: __count__ }) = prototype for each (__iterator__ in false), getter = (function ([y]) { })()) ((function(){try { for(let y in [5,6,7,8]) return; } catch(prop if (function(){__parent__, prop = 0/0})()) { with({}) return (( '' ).__defineSetter__); } catch(constructor if (function(){__count__ = __count__;})()) { throw StopIteration; } finally { yield <><xxx {function::prototype}={<x><y/></x>} /></>.yoyo((#1#.watch(\"__parent__\", function(y) { yield y; ; yield y; }))); } })());");
tryItOut("this.zzz.zzz\nexport __noSuchMethod__;");
tryItOut("return (prototype = \fconstructor = constructor);");
tryItOut("if(@foo & *) {var __count__, __iterator__;M:if(((uneval(function::__count__))).@foo) { if ([[1]] %= 0x99 = <x><y/></x>)  else {return  /x/ ;__iterator__; }} }");
tryItOut("if(<y><z/></y>) {yield; } else {; }");
tryItOut("with({}) { with({}) { if((<><x><y/></x></> ? <y><z/></y> :  '' )) { if ({}) {export *; } else {__noSuchMethod__; }} }  } ");
tryItOut("/*infloop*/do for(let y in [5,6,7,8]) throw StopIteration; while(const prop);");
tryItOut("let(prop = __parent__.(constructor), ({ __count__: prop, constructor: ({  \"\" : <><x><y/></x></>.__noSuchMethod__ }) })) { <!--yy-->");
tryItOut("var __iterator__ = this;\nexport function::__iterator__;\n\f");
tryItOut("/*for..in*/for(var constructor in ((( '' ).call)(this))){throw undefined;{} }");
tryItOut("M:with({__noSuchMethod__: <y><z/></y>}){export __proto__; }");
tryItOut("/*infloop*/L:for(let prop = this @ false; ('fafafa'.replace(/a/g, <x/>)); default: function  __noSuchMethod__ (__noSuchMethod__, prop) { throw <x><y/></x>; } ) {yield\nMath.sin }");
tryItOut("\nL:if(*) const __iterator__, __parent__; else  if (window) {} else export prop;\n");
tryItOut("return; const __proto__;");
tryItOut("throw <x><y/>\f</x>;");
tryItOut("throw StopIteration;");
tryItOut("/*infloop*/M:do (prop); while((\n<><x><y/></x></> .@ __parent__ = true));");
tryItOut("/*for..in*/for(var [].__parent__ in prop.__parent__) with({__iterator__: (__iterator__.(let (__noSuchMethod__, prop = <><x><y/></x></>) <y><z/></y>).eval(true))}){return *;return <y><z/></y>; }");
tryItOut("with({prototype: window.*})(*);");
tryItOut("L:if(window.yoyo(function::__parent__)) yield; else  if ((this.__proto__ = null)) return;");
tryItOut("if(this.__defineGetter__(\"x::prop\", <y><z/></y>) << <x><y/></x> instanceof [,]) { if ((uneval((\n__count__ getter: [1,2,3,4].map)))) {/*for..in*/for(var __parent__ in ((function () {  /x/g  } )(( /x/ .yoyo(({a2:z2})))))){gc() } } else {if(1.2e3 .@x:: 0x99) {{/*\n*/}yield window; } else  if (this) {return <x/>; } else gc()L: {export *;__parent__ } }}");
tryItOut("with((<x><y/></x>)(window) =  <= window)yield window;");
tryItOut("with(new  \"\" );");
tryItOut("/*infloop*/for(constructor; 6; (let (prop = <><x><y/></x></>, prop = <><x><y/></x></>) window)) {(<><x><y/></x></>);const __noSuchMethod__, __proto__ = <x/>; }");
tryItOut("__noSuchMethod__, __parent__ = [z1]");
tryItOut("{throw  '' ;/*infloop*/L:for(__parent__; <><x><y/></x></>;  /x/g ) {(1 for (x in []))return; } }");
tryItOut("while((constructor ? prop : <x><y/></x>) && 0){break L; } const prop;");
tryItOut("let (prop = new (<x><y/></x>)()) { (1 for (x in [])) }");
tryItOut("throw *;");
tryItOut("/*for..in*/for(let constructor = (new <><xxx {__iterator__}={false} /></>((( '' )(__proto__, true)))) in (this)) (@foo <<= <><x><y/></x></>);");
tryItOut("<><x><y/></x></>");
tryItOut("/*for..in*/for(var __proto__ = (yield this[<x><y/></x>]) in prop.(prototype)) {gc()const __count__ = <><x><y/></x></>, __iterator__ = <><x><y/></x></>; }");
tryItOut("/*infloop*/do throw constructor\n while(@foo);");
tryItOut("/*infloop*/while(new gc(Function(\n__iterator__ = [z1,,]))){for(let y in []); }");
tryItOut("if((this / this).@*) {<><x>//h\n<y/></x></>; } else  if ((#0=*::*).__lookupSetter__(\"prop\")) ( /x/ ); else return");
tryItOut("return (* ? <y><z/></y> : [[]]);");
tryItOut("if(((p={}, (p.z = null)()))) { if ((uneval(__iterator__ = (-1)))) yield this;} else {let __count__, constructor;return <x><y/></x>; }");
tryItOut("prototype = {}, constructor;");
tryItOut("with({__noSuchMethod__: 'fafafa'.replace(/a/g, function  constructor (__noSuchMethod__) { yield window } )}/*\n*/){L: yield; }");
tryItOut("/*for..in*/M:for(\n<x><y/></x>.__defineSetter__(\"function::__noSuchMethod__\", [1,2,3,4].slice) in __count__ = <><x><y/></x></>) {/*infloop*/M:for(const __count__; window.valueOf(\"number\"); (new (*)( '' ))) ;constructor }");
tryItOut("/*infloop*/L:while(window)yield;");
tryItOut("/*infloop*/for(var __proto__; <bbb xmlns=\"(0.1)(window,  '' )\"><!--yy--></bbb>; [15,16,17,18].filter(function  __parent__ (__iterator__) { return  \"\" .yoyo(this) } , __noSuchMethod__ = <x><y/></x>.@*)) continue M;");
tryItOut("M:if((export *)) { if (prop = prototype = @foo\t) continue M;} else prototype;");
tryItOut("/a/giyield;");
tryItOut("switch(({a2:z2})) { case <><x><y/></x></>: (true);break; default:  \"\" ;break; case this: this;break; case this: export *;case 0: break; gc()case 9: return <><x><y/></x></>;break; break; throw  /x/g ;case ({a2:z2}): ([1]).watchbreak; case this: let __proto__ = prop;case 7: break; break;  }");
tryItOut("while((<x><y/></x>.( /x/ )) && 0){M:while(([(function ([y]) { })()]) && 0)throw @foo; }");
tryItOut("/*for..in*/for(var [constructor, setter] = ([1,2,3,4].slice).call(3, <x><y/></x>) ,  \"\"  in __noSuchMethod__ = (__proto__) = __count__) {__proto__ = prototype;if(033) {;yield <><x><y/></x></>; } else  if ((-1)) gc() else let __iterator__, __count__ = function ([y]) { }; }");
tryItOut("/*for..in*/M:for(let __proto__ = window in (yield 0)) yield <x/>;");
tryItOut("do {yield;yield; } while((5.0000000000000000000000) && 0);");
tryItOut("yield undefined > <><x><y/></x></>;");
tryItOut("L: break M;");
tryItOut("switch(*) { default:  }");
tryItOut("if(__parent__ = new Function(<x/>)) { if ((Function).call(<x><y/></x>.( '' ), (-3/0 .@x:: 033))) yield; else M:if(<x><y/></x>) throw <x><y/></x>; else  if (window) let prototype = __parent__, prototype = <><x><y/></x></>; else {let __iterator__ = *::*; }}");
tryItOut("this.zzz.zzz");
tryItOut("this.zzz.zzz;");
tryItOut("if( \"\" ) { if (<>this.__defineGetter__(\"function::prototype\", function  __noSuchMethod__ (__proto__) { yield prototype } )</>) export prototype; else return;};");
tryItOut("{}");
tryItOut("with({__iterator__: (yield __iterator__) if (__parent__)})let (({ constructor: __iterator__, __proto__: <x><y/></x> }) = ({__count__:  /x/g })) { /*infloop*/do {let constructor = <x/>, __iterator__; } while(1e-81); }\nprototype = __noSuchMethod__;");
tryItOut("/*for..in*/for(let __count__ in <x/>) {export *;var prototype = <><x><y/></x></>; }");
tryItOut("/*for..in*//* nogeckoex bug 349964 */ for  each(var \tprop in #1#.eval(<x><y/></x\n>)) export prop;");
tryItOut("return [z1];");
tryItOut("let(__noSuchMethod__ = <y><z/></y>.@*.@foo, [, prop, , ({ __iterator__: , ] })] = [false.@*]) { break L;");
tryItOut("/*infloop*/for((prototype.__iterator__ setter= ({}).hasOwnProperty); new <x><y/></x>(<y><z/></y>); [11,12,13,14].some) /*for..in*/for(var constructor = <><x><y/></x></> in *::*) {const __noSuchMethod__;gc() }");
tryItOut("yield");
tryItOut("M:with({function::__noSuchMethod__: this.__defineSetter__(\"constructor\", function () { yield 0x99 } )}){(arguments);/*infloop*/M:while([ /x/  if (__count__)]){this;function (constructor) { yield __parent__ }  } }");
tryItOut("/*for..in*/for(let [prototype, __count__] = (*::*.__lookupGetter__(\"constructor\")) in prototype = (this.__defineSetter__(\"__parent__\", function () { return -- } )).*) export this;");
tryItOut("/*for..in*/for(const __noSuchMethod__ in ((({}).hasOwnProperty)(((eval(\"/*infloop*/L:for(const __proto__; this.__defineGetter__(\\\"__count__\\\", ((1 for (x in []))).call) for each (__count__ in false) for each (__proto__ in <><x><y/></x></>); (<x><y/></x> - <x><y/></x>)) {{} }\", <><></></>)).__defineSetter__(\"__count__\", new <><x><y/></x></>())))))with({}) gc()");
tryItOut("L: export *;");
tryItOut("/*for..in*/L:for(__iterator__ = [15,16,17,18].map([1,2,3,4].slice, .2) in -3/0) return window;");
tryItOut("gc()\n");
tryItOut("( /x/g ).__defineSetter__\n<y><z/></y>;\n");
tryItOut("with({}) const __parent__;");
tryItOut("/*infloop*/for(let __iterator__ = (function ([y]) { })(); ({a1:1}); __parent__) {let set = window; }");
tryItOut("/*infloop*/for(var __iterator__; __parent__ = ((<y><z/></y>).__defineSetter__).call(x::__count__, prop); undefined) ;");
tryItOut("/*infloop*/for(__proto__;  '' ; new \n<y><z/></y>(yield -3/0, this)({} :: [1,,], 'fafafa'.replace(/a/g, (window).watch))) {/*for..in*//* nogeckoex bug 349964 */M: for  each(var __noSuchMethod__ in <><x><y/></x></>) (<><x><y/></x></>); }");
tryItOut("/*for..in*/;");
tryItOut("/*for..in*//* nogeckoex bug 349964 */M: for  each(let ({ __proto__: ({ __parent__: ({ prototype: prop, prop: prop }), prop: constructor }), constructor: ({ __iterator__: ({ __parent__: __noSuchMethod__, __iterator__: constructor }) }) }) in (uneval( '' ))) ");
tryItOut("export *\n\n");
tryItOut("/*for..in*/for(var __parent__ in this) yield null;");
tryItOut("throw __proto__;");
tryItOut("yield;export prototype;");
tryItOut("/*infloop*/do {__count__ = prop; } while(([15,16,17,18].some(function (__parent__) { yield  /x/  } , <x><y/></x>)));");
tryItOut("let(constructor = *) ((function(){export prop;})());");
tryItOut("if(([__parent__].sort([])) *= __iterator__ = #3={a:#3#}) {return null; } else  if (prototype) <zzz>#1=({__noSuchMethod__: this})</zzz> else {\nlet (__noSuchMethod__ = function::prototype, __noSuchMethod__ = this) { yield; } }");
tryItOut("switch(yield <><x><y/></x></> % 1.3) { case 9: break; break ;break; case new 1e+81(<x><y/></x>): ( /x/ );default: break;  }");
tryItOut("/*for..in*/for([__parent__, __parent__] = window in  /x/ ) yield;");
tryItOut("/*for..in*/for(var __iterator__ = (break ) in 033) {return;yield; }");
tryItOut("with({}) return  \"\" ;");
tryItOut("return (prop.prop = (constructor = __iterator__));");
tryItOut("var constructor = <x><y/></x>;");
tryItOut("for(let y in []);");
tryItOut("for(let y in [5,6,7,8]) throw -1\t;");
tryItOut("with(new __parent__(true, <><x><y/></x></>)){let constructor =  \"\" , __iterator__ =  \"\" ; }");
tryItOut("return;");
tryItOut("function::constructor");
tryItOut("return;");
tryItOut("{if(__noSuchMethod__.__parent__ setter= ( '' ).__defineSetter__) {export *;continue ; } else  if (delete #3={a:#3#}) \texport *; }");
tryItOut("{/*infloop*/L:for(<x><y/></x>; (prop = <!--yy-->); <x/>) {return; } }");
tryItOut("if((return;.__lookupGetter__(\"__parent__\"))) { if ([15,16,17,18].filter(eval, 0/0(__count__, undefined))) {/*for..in*/M:for(var constructor in (((new Function(\"(<><x><y/></x></>);\")))([15,16,17,18].sort((<x/>).watch, -1)))){yield; } }} else {gc()if(yield <><x><y/></x></>) break ; else  if (this.__defineSetter__(\"function::__noSuchMethod__\", (<y><z/></y>).watch)) gc() }");
tryItOut("if(yield <y><z/></y>) { if ( '' .watch(\"__iterator__\", <x><y/></x>)) {yield; } else {return; }}");
tryItOut("if(033) { /x/  } else  if (<x><y/></x>) {return; } else (<x><y/></x>);");
tryItOut("with({}) { let(__parent__ = new (((1 for (x in []))).apply)()) ((function(){__count__ = constructor;})()); } ");
tryItOut("M:if((-1)) { if (<y><z/></y> |  /x/g ) case (<x><y/></x>.([[1]])): break;  else return window;}");
tryItOut("/*infloop*/for(var __count__; (__iterator__ = @foo); <y><z/></y>) throw  /x/ ;");
tryItOut("L:if(/a/gi(window)) function  __parent__ (prop, prop) { return  ''  }  else  if (prototype.(prototype = prototype.propertyIsEnumerable(\"__parent__\"))) if(<><x><y/></x></>.__noSuchMethod__) {yield 1e+81; } else  if ( /x/g .throw(<><x><y/></x></>)) {{} } else  else {/*infloop*/M:for((<x><y/></x>.@foo);  '' ; <y><z/></y>) {continue L;(<y><z/></y>); } const __count__; }");
tryItOut("for(let y in [5,6,7,8]) this.zzz.zzz;");
tryItOut("\nbreak M;");
tryItOut("export __iterator__;");
tryItOut("/*for..in*/for(let ({}).__iterator__ in ((Function)(__proto__.__iterator__ = (<x><y/>\t</x>)[@foo])))yield [[1]];");
tryItOut("throw __noSuchMethod__;");
tryItOut("try { yield <><x><y/></x></>; } finally { yield; } ");
tryItOut("if(eval(\"<><x><y/></x></>;\",  /x/ ).__iterator__) {false }");
tryItOut("if([15,16,17,18].sort(({}).__lookupGetter__, <><x><y/></x></>)) {let __count__ = false;return *; }");
tryItOut("return;");
tryItOut("yield ");
tryItOut("switch(window) { case 7: L:if(this.__defineGetter__(\"__iterator__\", function(q) { return q; })) { if (#3={a:#3#}.unwatch(\"constructor\")) {(<y><z/></y>);{} }} else ;break; default: break;  }");
tryItOut("for(let y in [5,6,7,8]) throw StopIteration;");
tryItOut("if((p={}, (p.z = --(constructor-=undefined))())) M:if(<><x><y/></x></>) {{} } else const __proto__, __parent__; else  if ((<x><y/></x>++)) export *\n;");
tryItOut("if('fafafa'.replace(/a/g, <x><y/></x> for (__iterator__ in <><x><y/></x></>))) \n(*);\n else  if (function(id) { return id }) throw <><x><y/></x></>;");
tryItOut("/*infloop*/while(-1){/*for..in*/for(var __iterator__ in *::*) gc()\nconst __noSuchMethod__, __noSuchMethod__ = __proto__;var constructor; }");
tryItOut("with({}) \fconstructor = constructor;");
tryItOut("M:if(<x><y/></x>) export *; else  if (<x/>) {return  /x/ ; } else continue L;");
tryItOut("with({constructor: new 5.0000000000000000000000()}){return *;undefined; }");
tryItOut("if(({}).__lookupGetter__(([<><x><y/></x></>]))) { if (([this for each (__proto__ in  /x/  = this) for each (__proto__ in (<x)> try { yield [,]; } catch(constructor) { throw __count__; } finally { export prototype; } <y/</x>) for each (constructor in 1.3)]).unwatch(\"__parent__\"))  get __count__ __parent__ (__count__, __count__) { yield #1=({__noSuchMethod__: window})\f }  else {while((<><x><y/></x></>) && 0){var __proto__ = <><x><y/></x></>, get; } }}");
tryItOut("gc()");
tryItOut("with({__iterator__:  ''  + constructor}){export prop;throw false; }");
tryItOut("with({}) { for(let y in [5,6,7,8]) gc() } ");
tryItOut("if(( /* Comment */ \"\"  !== ({prop: <y><z/></y>, __iterator__: this }))) { if ([z1]) {(<><//h\nx><y/></x></>);throw <x><y/></x>; }} else {/*for..in*//* nogeckoex bug 349964 */L: for  each(__proto__ in window)  }\nif(prop) continue L; else  if (this) yield; else function(q) { return q; }");
tryItOut("<!--yy-->");
tryItOut("/*for..in*/L:for([prototype, __iterator__] =  /x/g  in null) <y><z/></y>\nnew Function\n");
tryItOut("/*for..in*/L:for(* in 1e+81) {{} }");
tryItOut("\fM:with([15,16,17,18].some(function(q) { return q; }, true))continue ;");
tryItOut("throw ( /x/g )([,,]);");
tryItOut("{if((gc).__defineGetter__(\"__parent__\", (Math.pow).call)) { if (#1=[#1#].__lookupGetter__(\"\")) continue ;} else (*); }");
tryItOut("/*for..in*/for(var [__proto__, __noSuchMethod__] = (-3/0.hasOwnProperty(\"__proto__\")) in false) function  prototype (prototype, constructor) { yield __noSuchMethod__ } \n");
tryItOut("switch((yield  '' \n)) { default: return\ncase 7: ;break; case (__proto__)[<x/>]: break; break; case 8: break; break; case 'fafafa'.replace(/a/g, <><x><y/></x></>): case 6: __proto__;break;  }");
tryItOut("{return  /x/g ;yield; }");
tryItOut("if(this.__defineSetter__(\"__iterator__\", Function)) {yield <><x><y/></x></>; } else  if ([11,12,13,14].filter) {L:if(this.__defineGetter__(\"__noSuchMethod__\", <y><z/></y>)) (@foo); else  if (([[1]].sort((@foo).watch))) {} }");
tryItOut("if((<y><z/></y>.unwatch(\"prototype\"))) { if (({ get __count__()<x/> })) const __parent__, each;} else {return prop;<y><z/></y>; }var let = *, constructor = undefined;");
tryItOut("/*infloop*/M:for(let ({ function::__parent__: ({ prop: ({ __proto__: prop }) }) }) = ((__iterator__.__noSuchMethod__).unwatch(\"this.eval((-0))\")); 'fafafa'.replace(/a/g, eval( \"\" .__lookupGetter__(\"__noSuchMethod__\") >>= true.hasOwnProperty(\"__proto__\"))); Math.sin().isPrototypeOf((this.zzz.zzz))) ({ __proto__: [constructor, ], __parent__: prop });");
tryItOut("(-0)\n__iterator__;");
tryItOut("{/*for..in*//* nogeckoex bug 349964 */ for  each(let __count__ in ((uneval(__parent__ = undefined)))) {return <x><y/></x>;do ; while(([,]) && 0); } }");
tryItOut("/*for..in*/for(__parent__ = [[15,16,17,18].sort(gc,  \"\" )] in (prototype)) return <x><y/></x>;");
tryItOut("if((false.prototype for (constructor in <x/>) for ((__iterator__) in <><x><y/></x></>) for (__proto__ in <x/>))) /*infloop*/for(const __noSuchMethod__; 5.0000000000000000000000; __proto__) __iterator__\n else {/*infloop*/L:for(<x><y/></x>; <y><z/></y>\n;  /x/g ) {export __proto__;[1,,]; } }");
tryItOut("/*infloop*/do return; while([,,] *= <x/> .@x:: -1);");
tryItOut("do var constructor, prototype; while(([]) && 0);");
tryItOut("function  __iterator__ (constructor) { yield [1,,] } ");
tryItOut("yield prototype.__proto__;");
tryItOut("for(let y in [5,6,7,8]) __iterator__.__parent__ = prototype;");
tryItOut("return *::*.__lookupSetter__(\"prototype\"); const __iterator__;");
tryItOut("let(__noSuchMethod__ = [({ prop: ({ __count__: constructor }) }), ({ __parent__: [] })] = ({ prototype: ({ __noSuchMethod__: ({ __proto__: __parent__, setter: __noSuchMethod__ }) }) }), __iterator__) ((function(){this.zzz.zzz;})());");
tryItOut("/*infloop*/do {export prop; } while(__parent__);");
tryItOut("L:with({__iterator__: <x/>}){/*infloop*/do L:if(*::*) { if (<x><y/></x>) {throw __count__;const constructor; } else gc()} while((<><x><y/></x></>.__noSuchMethod__ !== (yield ({a2:z2}))));gc()\nyield  '' ;\n }");
tryItOut("M:with((new .2(<x><y/></x>, this)).__defineSetter__(\"__noSuchMethod__\", (1 for (x in [])))){{}return <x><y/></x>; }");
tryItOut("L:if(<x><y/></x> :: constructor) { if (undefined.eval(<x/>)) return  /x/ ;\nbreak L;\n else {switch(({ __parent__: [] }), prop) { default: break;  }this.zzz.zzz; }}");
tryItOut("switch((window.eval( \"\" )) | (-0 .@ prototype)) { case new Array(<x/>): constructor = __count__;break; default: yield (false.__lookupSetter__(\"prototype\"));break;  }");
tryItOut("L: {const __count__ = <x/>;@foo; }");
tryItOut("( /x/g )\n");
tryItOut("L:do \f{const __parent__ = <><x><y/></x></>;[, __parent__, ({ __noSuchMethod__: __noSuchMethod__ })] = __noSuchMethod__; } while(((1e+81 = ({__parent__ getter: ([1,2,3,4].slice).apply,  get constructor __parent__ (__proto__, __noSuchMethod__) { yield  /x/g  }  }))) && 0);");
tryItOut("M:do return; while(((({ set __count__() { <y><z/></y> } , __parent__: window }))) && 0);\nreturn\n/*for..in*//* nogeckoex bug 349964 */ for  each(var __iterator__ in window) yield  '' ; const __parent__;\n");
tryItOut("let (prop, []) { let (({ constructor: ({ __iterator__: __iterator__ }), __count__: __iterator__ }) = -1()) { const __iterator__; } }");
tryItOut("{{}export __iterator__; }\n");
tryItOut("");
tryItOut("if(-0 ^ 0/0) {throw false; } else yield null;");
tryItOut("{with({__noSuchMethod__: constructor = -1}){ }/*infloop*/while(@foo){do export prop; while(((prototype.constructor = 4.)) && 0); } }");
tryItOut("with({__count__: (this.__defineSetter__(\"<y><z/></y>\", ( ''  /= #3={a:#3#}))).valueOf(\"number\")}){do return; while((<y><z/></y>) && 0);gc() }");
tryItOut("with({__iterator__: ( \"\"  |= @foo + (__proto__))})throw *::*;");
tryItOut("(false);gc()\n{}\n");
tryItOut("let(__parent__) ((function(){})());");
tryItOut("L:if(function::__proto__) { if (1e4) (null); else {prop, constructorexport *; }}");
tryItOut("with({arguments.prototype: ([1,2,3,4].slice).call(<x><y/></x>, __parent__)}){continue M; }");
tryItOut("/*infloop*/L:for(var prototype; ((<x><y/></x>.unwatch(\"prop\") for ((__parent__) in [,,]) for each (__noSuchMethod__ in <><x><y/></x></>))); this.__defineSetter__(\"__parent__\", 'haha'.split).__lookupSetter__(\"__iterator__\")) {}");
tryItOut(" this ");
tryItOut("if(__iterator__.@foo) /*infloop*/for(const prop; *::*; <x><y/></x>) yield *::*;");
tryItOut("/*infloop*/L:for(let ({ __noSuchMethod__: ({ prototype: ( '' )(__noSuchMethod__) }), prototype: ({ delete: __parent__, __iterator__: prototype }) }); ({ prop: [, , ({ prop: __count__ }), [__noSuchMethod__]] }) = __proto__; *::*.__defineGetter__(\"__noSuchMethod__\", (eval).call).__noSuchMethod__ = ('fafafa'.replace(/a/g, function  __noSuchMethod__ (prototype, constructor) '' ) %  == __count__)) export let;");
tryItOut("(0);");
tryItOut("/*infloop*/while(*::* ^ false)return [z1];");
tryItOut("/*infloop*/while(window){gc() }");
tryItOut("M:if((__iterator__ = [15,16,17,18].sort((<x><y/></x> >> [1,,]), ({ __proto__: constructor, __noSuchMethod__: prototype }) = __noSuchMethod__ ^ [,]).__lookupGetter__(\"constructor\"))) <x><y/></x>; else  if (function::__iterator__.__parent__) __proto__;");
tryItOut("M:switch((({prop: prototype}))) { default: <y><z/></y>; }\n");
tryItOut("if((<x><y/></x> <= <x/>) >> [,]) gc() else  if (undefined) const __count__;");
tryItOut("with({}) for(let y in []);");
tryItOut("if(eval(\"throw <><x><y/></x></>;\", <x><y/></x>)) {export __parent__ }");
tryItOut("if(3.141592653589793 , #1=[#1#]) let __proto__ = @foo, __count__\nexport *; else  if (<x/>.unwatch ([11,12,13,14].some)<!--yy--> (\"prototype\")) throw <x><y/></x>; else {return <y><z/></y>;throw  '' ; }");
